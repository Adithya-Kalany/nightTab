/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 4017:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --theme-accent-preset-preview-space: 5;\n}\n\n.theme-accent-preset {\n  display: grid;\n  grid-gap: calc((var(--theme-accent-preset-preview-space) / 8) * 1em);\n  grid-template-columns: repeat(7, auto);\n  grid-auto-flow: row;\n  justify-items: center;\n  width: fit-content;\n}\n\n@media (min-width: 550px) {\n  .theme-accent-preset {\n    grid-template-rows: repeat(7, auto);\n    grid-auto-flow: column;\n  }\n}\n\n.theme-accent-preset-button {\n  padding: 0;\n  width: calc((var(--theme-accent-preset-preview-space) / 4) * 1em);\n  height: calc((var(--theme-accent-preset-preview-space) / 4) * 1em);\n  min-width: initial;\n  min-height: initial;\n  overflow: hidden;\n}\n\n.theme-accent-preset-preview {\n  background-color: hsl(var(--theme-accent-preset-color-hsl-h), calc(var(--theme-accent-preset-color-hsl-s) * 1%), calc(var(--theme-accent-preset-color-hsl-l) * 1%));\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n\n/* @media (min-width: 550px) {\n  :root {\n    --theme-accent-preset-preview-space: 5;\n  }\n}\n\n@media (min-width: 700px) {\n  :root {\n    --theme-accent-preset-preview-space: 5;\n  }\n}\n\n@media (min-width: 900px) {\n  :root {\n    --theme-accent-preset-preview-space: 5;\n  }\n}\n\n@media (min-width: 1100px) {\n  :root {\n    --theme-accent-preset-preview-space: 5;\n  }\n} */\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 7208:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@keyframes appear {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes shake {\n  0% {\n    transform: translate3d(0, 0, 0);\n  }\n\n  10% {\n    transform: translate3d(-1.2em, 0, 0);\n  }\n\n  20% {\n    transform: translate3d(1.2em, 0, 0);\n  }\n\n  30% {\n    transform: translate3d(-1em, 0, 0);\n  }\n\n  40% {\n    transform: translate3d(1em, 0, 0);\n  }\n\n  50% {\n    transform: translate3d(-0.8em, 0, 0);\n  }\n\n  60% {\n    transform: translate3d(0.8em, 0, 0);\n  }\n\n  70% {\n    transform: translate3d(-0.3em, 0, 0);\n  }\n\n  80% {\n    transform: translate3d(0.3em, 0, 0);\n  }\n\n  90% {\n    transform: translate3d(-0.1em, 0, 0);\n  }\n\n  100% {\n    transform: translate3d(0, 0, 0);\n  }\n}\n\n@keyframes pop {\n  0% {\n    transform: scale(1);\n  }\n\n  25% {\n    transform: scale(1.1);\n  }\n\n  50% {\n    transform: scale(0.9);\n  }\n\n  75% {\n    transform: scale(1.1);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes jello {\n  0% {\n    transform: scale3d(1, 1, 1);\n  }\n\n  30% {\n    transform: scale3d(1.25, 0.75, 1);\n  }\n\n  40% {\n    transform: scale3d(0.75, 1.25, 1);\n  }\n\n  50% {\n    transform: scale3d(1.15, 0.85, 1);\n  }\n\n  65% {\n    transform: scale3d(0.95, 1.05, 1);\n  }\n\n  75% {\n    transform: scale3d(1.05, 0.95, 1);\n  }\n\n  100% {\n    transform: scale3d(1, 1, 1);\n  }\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8179:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --base-size: 16;\n  --font-size: calc(var(--base-size) * 1px);\n}\n\n/* @media (min-width: 900px) {\n  :root {\n    --base-size: 16;\n  }\n} */\n\n::selection {\n  background-color: rgb(var(--theme-accent));\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\nhtml,\nbody {\n  background-color: hsl(var(--theme-primary-010));\n  font-size: var(--font-size);\n  line-height: 1.6;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  color: hsl(var(--theme-primary-text-010));\n  transition: background-color var(--layout-transition-extra-fast);\n}\n\nbody {\n  min-width: 100vw;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nhtml.is-theme-style-dark,\n.is-theme-style-dark body,\nhtml.is-theme-style-light,\n.is-theme-style-light body {\n  background-color: hsl(var(--theme-primary-010));\n  color: hsl(var(--theme-primary-text-010));\n}\n\n@media (prefers-color-scheme: light) {\n\n  html.is-theme-style-system,\n  .is-theme-style-system body {\n    background-color: hsl(var(--theme-primary-010));\n    color: hsl(var(--theme-primary-text-010));\n  }\n}\n\n@media (prefers-color-scheme: dark) {\n\n  html.is-theme-style-system,\n  .is-theme-style-system body {\n    background-color: hsl(var(--theme-primary-010));\n    color: hsl(var(--theme-primary-text-010));\n  }\n}\n\nhtml.is-theme-background-type-theme,\n.is-theme-background-type-theme body {\n  background-color: hsl(var(--theme-background-theme));\n}\n\nhtml.is-theme-background-type-accent,\n.is-theme-background-type-accent body {\n  background-color: rgb(var(--theme-background-accent));\n}\n\nhtml.is-theme-background-type-color,\n.is-theme-background-type-color body {\n  background-color: rgb(var(--theme-background-color));\n}\n\n.is-layout-alignment-top-left body {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.is-layout-alignment-top-center body {\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.is-layout-alignment-top-right body {\n  justify-content: flex-start;\n  align-items: flex-end;\n}\n\n.is-layout-alignment-center-left body {\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.is-layout-alignment-center-center body {\n  justify-content: center;\n  align-items: center;\n}\n\n.is-layout-alignment-center-right body {\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.is-layout-alignment-bottom-left body {\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n.is-layout-alignment-bottom-center body {\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.is-layout-alignment-bottom-right body {\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4548:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1667);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _font_open_sans_open_sans_300_woff__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(257);
/* harmony import */ var _font_open_sans_open_sans_300_woff2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(314);
/* harmony import */ var _font_open_sans_open_sans_300_ttf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7462);
/* harmony import */ var _font_open_sans_open_sans_400_woff__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(5557);
/* harmony import */ var _font_open_sans_open_sans_400_woff2__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(10);
/* harmony import */ var _font_open_sans_open_sans_400_ttf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(2565);
/* harmony import */ var _font_open_sans_open_sans_600_woff__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2223);
/* harmony import */ var _font_open_sans_open_sans_600_woff2__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(5578);
/* harmony import */ var _font_open_sans_open_sans_600_ttf__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(4221);
/* harmony import */ var _font_open_sans_open_sans_700_woff__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(1807);
/* harmony import */ var _font_open_sans_open_sans_700_woff2__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(875);
/* harmony import */ var _font_open_sans_open_sans_700_ttf__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(2292);
/* harmony import */ var _font_open_sans_open_sans_800_woff__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(5358);
/* harmony import */ var _font_open_sans_open_sans_800_woff2__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(8741);
/* harmony import */ var _font_open_sans_open_sans_800_ttf__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(7046);
/* harmony import */ var _font_open_sans_open_sans_italic_300_woff__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(6900);
/* harmony import */ var _font_open_sans_open_sans_italic_300_woff2__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(1743);
/* harmony import */ var _font_open_sans_open_sans_italic_300_ttf__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(4756);
/* harmony import */ var _font_open_sans_open_sans_italic_400_woff__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(3835);
/* harmony import */ var _font_open_sans_open_sans_italic_400_woff2__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(9938);
/* harmony import */ var _font_open_sans_open_sans_italic_400_ttf__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(2253);
/* harmony import */ var _font_open_sans_open_sans_italic_600_woff__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(5944);
/* harmony import */ var _font_open_sans_open_sans_italic_600_woff2__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(4628);
/* harmony import */ var _font_open_sans_open_sans_italic_600_ttf__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(7002);
/* harmony import */ var _font_open_sans_open_sans_italic_700_woff__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(3272);
/* harmony import */ var _font_open_sans_open_sans_italic_700_woff2__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(9567);
/* harmony import */ var _font_open_sans_open_sans_italic_700_ttf__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(4186);
/* harmony import */ var _font_open_sans_open_sans_italic_800_woff__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(3447);
/* harmony import */ var _font_open_sans_open_sans_italic_800_woff2__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(5308);
/* harmony import */ var _font_open_sans_open_sans_italic_800_ttf__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(6146);
/* harmony import */ var _font_fjalla_one_fjalla_one_400_woff__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(2901);
/* harmony import */ var _font_fjalla_one_fjalla_one_400_woff2__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(2108);
/* harmony import */ var _font_fjalla_one_fjalla_one_400_ttf__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(8282);
// Imports



































var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_300_woff__WEBPACK_IMPORTED_MODULE_2__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_300_woff2__WEBPACK_IMPORTED_MODULE_3__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_300_ttf__WEBPACK_IMPORTED_MODULE_4__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_400_woff__WEBPACK_IMPORTED_MODULE_5__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_400_woff2__WEBPACK_IMPORTED_MODULE_6__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_400_ttf__WEBPACK_IMPORTED_MODULE_7__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_600_woff__WEBPACK_IMPORTED_MODULE_8__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_600_woff2__WEBPACK_IMPORTED_MODULE_9__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_600_ttf__WEBPACK_IMPORTED_MODULE_10__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_9___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_700_woff__WEBPACK_IMPORTED_MODULE_11__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_10___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_700_woff2__WEBPACK_IMPORTED_MODULE_12__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_11___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_700_ttf__WEBPACK_IMPORTED_MODULE_13__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_12___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_800_woff__WEBPACK_IMPORTED_MODULE_14__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_13___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_800_woff2__WEBPACK_IMPORTED_MODULE_15__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_14___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_800_ttf__WEBPACK_IMPORTED_MODULE_16__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_15___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_300_woff__WEBPACK_IMPORTED_MODULE_17__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_16___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_300_woff2__WEBPACK_IMPORTED_MODULE_18__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_17___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_300_ttf__WEBPACK_IMPORTED_MODULE_19__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_18___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_400_woff__WEBPACK_IMPORTED_MODULE_20__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_19___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_400_woff2__WEBPACK_IMPORTED_MODULE_21__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_20___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_400_ttf__WEBPACK_IMPORTED_MODULE_22__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_21___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_600_woff__WEBPACK_IMPORTED_MODULE_23__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_22___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_600_woff2__WEBPACK_IMPORTED_MODULE_24__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_23___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_600_ttf__WEBPACK_IMPORTED_MODULE_25__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_24___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_700_woff__WEBPACK_IMPORTED_MODULE_26__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_25___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_700_woff2__WEBPACK_IMPORTED_MODULE_27__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_26___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_700_ttf__WEBPACK_IMPORTED_MODULE_28__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_27___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_800_woff__WEBPACK_IMPORTED_MODULE_29__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_28___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_800_woff2__WEBPACK_IMPORTED_MODULE_30__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_29___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_open_sans_open_sans_italic_800_ttf__WEBPACK_IMPORTED_MODULE_31__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_30___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fjalla_one_fjalla_one_400_woff__WEBPACK_IMPORTED_MODULE_32__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_31___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fjalla_one_fjalla_one_400_woff2__WEBPACK_IMPORTED_MODULE_33__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_32___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fjalla_one_fjalla_one_400_ttf__WEBPACK_IMPORTED_MODULE_34__/* .default */ .Z);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/* open sans */\n/* normal */\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n  src:\n    local(\"Open Sans Light\"),\n    local(\"OpenSans-Light\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n  src:\n    local(\"Open Sans Regular\"),\n    local(\"OpenSans-Regular\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 600;\n  font-style: normal;\n  font-display: swap;\n  src:\n    local(\"Open Sans SemiBold\"),\n    local(\"OpenSans-SemiBold\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_6___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_8___ + ") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap;\n  src:\n    local(\"Open Sans Bold\"),\n    local(\"OpenSans-Bold\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_9___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_10___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_11___ + ") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 800;\n  font-style: normal;\n  font-display: swap;\n  src:\n    local(\"Open Sans ExtraBold\"),\n    local(\"OpenSans-ExtraBold\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_12___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_13___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_14___ + ") format(\"truetype\");\n}\n\n/* italic */\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 300;\n  font-style: italic;\n  font-display: swap;\n  src:\n    local(\"Open Sans Light Italic\"),\n    local(\"OpenSans-LightItalic\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_15___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_16___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_17___ + ") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 400;\n  font-style: italic;\n  font-display: swap;\n  src:\n    local(\"Open Sans Italic\"),\n    local(\"OpenSans-Italic\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_18___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_19___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_20___ + ") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 600;\n  font-style: italic;\n  font-display: swap;\n  src:\n    local(\"Open Sans SemiBold Italic\"),\n    local(\"OpenSans-SemiBoldItalic\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_21___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_22___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_23___ + ") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 700;\n  font-style: italic;\n  font-display: swap;\n  src:\n    local(\"Open Sans Bold Italic\"),\n    local(\"OpenSans-BoldItalic\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_24___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_25___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_26___ + ") format(\"truetype\");\n}\n\n@font-face {\n  font-family: \"Open Sans\";\n  font-weight: 800;\n  font-style: italic;\n  font-display: swap;\n  src:\n    local(\"Open Sans ExtraBold Italic\"),\n    local(\"OpenSans-ExtraBoldItalic\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_27___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_28___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_29___ + ") format(\"truetype\");\n}\n\n/* fjalla one */\n/* normal */\n@font-face {\n  font-family: \"Fjalla One\";\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n  src:\n    local(\"Fjalla One\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_30___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_31___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_32___ + ") format(\"truetype\");\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4325:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".mt-0,\n.my-0 {\n  margin-top: 0 !important;\n}\n\n.mr-0,\n.mx-0 {\n  margin-right: 0 !important;\n}\n\n.mb-0,\n.my-0 {\n  margin-bottom: 0 !important;\n}\n\n.ml-0,\n.mx-0 {\n  margin-left: 0 !important;\n}\n\n.m-1 {\n  margin: 0.25rem !important;\n}\n\n.mt-1,\n.my-1 {\n  margin-top: 0.25rem !important;\n}\n\n.mr-1,\n.mx-1 {\n  margin-right: 0.25rem !important;\n}\n\n.mb-1,\n.my-1 {\n  margin-bottom: 0.25rem !important;\n}\n\n.ml-1,\n.mx-1 {\n  margin-left: 0.25rem !important;\n}\n\n.m-2 {\n  margin: 0.5rem !important;\n}\n\n.mt-2,\n.my-2 {\n  margin-top: 0.5rem !important;\n}\n\n.mr-2,\n.mx-2 {\n  margin-right: 0.5rem !important;\n}\n\n.mb-2,\n.my-2 {\n  margin-bottom: 0.5rem !important;\n}\n\n.ml-2,\n.mx-2 {\n  margin-left: 0.5rem !important;\n}\n\n.m-3 {\n  margin: 1rem !important;\n}\n\n.mt-3,\n.my-3 {\n  margin-top: 1rem !important;\n}\n\n.mr-3,\n.mx-3 {\n  margin-right: 1rem !important;\n}\n\n.mb-3,\n.my-3 {\n  margin-bottom: 1rem !important;\n}\n\n.ml-3,\n.mx-3 {\n  margin-left: 1rem !important;\n}\n\n.m-4 {\n  margin: 1.5rem !important;\n}\n\n.mt-4,\n.my-4 {\n  margin-top: 1.5rem !important;\n}\n\n.mr-4,\n.mx-4 {\n  margin-right: 1.5rem !important;\n}\n\n.mb-4,\n.my-4 {\n  margin-bottom: 1.5rem !important;\n}\n\n.ml-4,\n.mx-4 {\n  margin-left: 1.5rem !important;\n}\n\n.m-5 {\n  margin: 3rem !important;\n}\n\n.mt-5,\n.my-5 {\n  margin-top: 3rem !important;\n}\n\n.mr-5,\n.mx-5 {\n  margin-right: 3rem !important;\n}\n\n.mb-5,\n.my-5 {\n  margin-bottom: 3rem !important;\n}\n\n.ml-5,\n.mx-5 {\n  margin-left: 3rem !important;\n}\n\n.p-0 {\n  padding: 0 !important;\n}\n\n.pt-0,\n.py-0 {\n  padding-top: 0 !important;\n}\n\n.pr-0,\n.px-0 {\n  padding-right: 0 !important;\n}\n\n.pb-0,\n.py-0 {\n  padding-bottom: 0 !important;\n}\n\n.pl-0,\n.px-0 {\n  padding-left: 0 !important;\n}\n\n.p-1 {\n  padding: 0.25rem !important;\n}\n\n.pt-1,\n.py-1 {\n  padding-top: 0.25rem !important;\n}\n\n.pr-1,\n.px-1 {\n  padding-right: 0.25rem !important;\n}\n\n.pb-1,\n.py-1 {\n  padding-bottom: 0.25rem !important;\n}\n\n.pl-1,\n.px-1 {\n  padding-left: 0.25rem !important;\n}\n\n.p-2 {\n  padding: 0.5rem !important;\n}\n\n.pt-2,\n.py-2 {\n  padding-top: 0.5rem !important;\n}\n\n.pr-2,\n.px-2 {\n  padding-right: 0.5rem !important;\n}\n\n.pb-2,\n.py-2 {\n  padding-bottom: 0.5rem !important;\n}\n\n.pl-2,\n.px-2 {\n  padding-left: 0.5rem !important;\n}\n\n.p-3 {\n  padding: 1rem !important;\n}\n\n.pt-3,\n.py-3 {\n  padding-top: 1rem !important;\n}\n\n.pr-3,\n.px-3 {\n  padding-right: 1rem !important;\n}\n\n.pb-3,\n.py-3 {\n  padding-bottom: 1rem !important;\n}\n\n.pl-3,\n.px-3 {\n  padding-left: 1rem !important;\n}\n\n.p-4 {\n  padding: 1.5rem !important;\n}\n\n.pt-4,\n.py-4 {\n  padding-top: 1.5rem !important;\n}\n\n.pr-4,\n.px-4 {\n  padding-right: 1.5rem !important;\n}\n\n.pb-4,\n.py-4 {\n  padding-bottom: 1.5rem !important;\n}\n\n.pl-4,\n.px-4 {\n  padding-left: 1.5rem !important;\n}\n\n.p-5 {\n  padding: 3rem !important;\n}\n\n.pt-5,\n.py-5 {\n  padding-top: 3rem !important;\n}\n\n.pr-5,\n.px-5 {\n  padding-right: 3rem !important;\n}\n\n.pb-5,\n.py-5 {\n  padding-bottom: 3rem !important;\n}\n\n.pl-5,\n.px-5 {\n  padding-left: 3rem !important;\n}\n\n.m-auto {\n  margin: auto !important;\n}\n\n.mt-auto,\n.my-auto {\n  margin-top: auto !important;\n}\n\n.mr-auto,\n.mx-auto {\n  margin-right: auto !important;\n}\n\n.mb-auto,\n.my-auto {\n  margin-bottom: auto !important;\n}\n\n.ml-auto,\n.mx-auto {\n  margin-left: auto !important;\n}\n\n@media (min-width: 550px) {\n  .m-sm-0 {\n    margin: 0 !important;\n  }\n\n  .mt-sm-0,\n  .my-sm-0 {\n    margin-top: 0 !important;\n  }\n\n  .mr-sm-0,\n  .mx-sm-0 {\n    margin-right: 0 !important;\n  }\n\n  .mb-sm-0,\n  .my-sm-0 {\n    margin-bottom: 0 !important;\n  }\n\n  .ml-sm-0,\n  .mx-sm-0 {\n    margin-left: 0 !important;\n  }\n\n  .m-sm-1 {\n    margin: 0.25rem !important;\n  }\n\n  .mt-sm-1,\n  .my-sm-1 {\n    margin-top: 0.25rem !important;\n  }\n\n  .mr-sm-1,\n  .mx-sm-1 {\n    margin-right: 0.25rem !important;\n  }\n\n  .mb-sm-1,\n  .my-sm-1 {\n    margin-bottom: 0.25rem !important;\n  }\n\n  .ml-sm-1,\n  .mx-sm-1 {\n    margin-left: 0.25rem !important;\n  }\n\n  .m-sm-2 {\n    margin: 0.5rem !important;\n  }\n\n  .mt-sm-2,\n  .my-sm-2 {\n    margin-top: 0.5rem !important;\n  }\n\n  .mr-sm-2,\n  .mx-sm-2 {\n    margin-right: 0.5rem !important;\n  }\n\n  .mb-sm-2,\n  .my-sm-2 {\n    margin-bottom: 0.5rem !important;\n  }\n\n  .ml-sm-2,\n  .mx-sm-2 {\n    margin-left: 0.5rem !important;\n  }\n\n  .m-sm-3 {\n    margin: 1rem !important;\n  }\n\n  .mt-sm-3,\n  .my-sm-3 {\n    margin-top: 1rem !important;\n  }\n\n  .mr-sm-3,\n  .mx-sm-3 {\n    margin-right: 1rem !important;\n  }\n\n  .mb-sm-3,\n  .my-sm-3 {\n    margin-bottom: 1rem !important;\n  }\n\n  .ml-sm-3,\n  .mx-sm-3 {\n    margin-left: 1rem !important;\n  }\n\n  .m-sm-4 {\n    margin: 1.5rem !important;\n  }\n\n  .mt-sm-4,\n  .my-sm-4 {\n    margin-top: 1.5rem !important;\n  }\n\n  .mr-sm-4,\n  .mx-sm-4 {\n    margin-right: 1.5rem !important;\n  }\n\n  .mb-sm-4,\n  .my-sm-4 {\n    margin-bottom: 1.5rem !important;\n  }\n\n  .ml-sm-4,\n  .mx-sm-4 {\n    margin-left: 1.5rem !important;\n  }\n\n  .m-sm-5 {\n    margin: 3rem !important;\n  }\n\n  .mt-sm-5,\n  .my-sm-5 {\n    margin-top: 3rem !important;\n  }\n\n  .mr-sm-5,\n  .mx-sm-5 {\n    margin-right: 3rem !important;\n  }\n\n  .mb-sm-5,\n  .my-sm-5 {\n    margin-bottom: 3rem !important;\n  }\n\n  .ml-sm-5,\n  .mx-sm-5 {\n    margin-left: 3rem !important;\n  }\n\n  .p-sm-0 {\n    padding: 0 !important;\n  }\n\n  .pt-sm-0,\n  .py-sm-0 {\n    padding-top: 0 !important;\n  }\n\n  .pr-sm-0,\n  .px-sm-0 {\n    padding-right: 0 !important;\n  }\n\n  .pb-sm-0,\n  .py-sm-0 {\n    padding-bottom: 0 !important;\n  }\n\n  .pl-sm-0,\n  .px-sm-0 {\n    padding-left: 0 !important;\n  }\n\n  .p-sm-1 {\n    padding: 0.25rem !important;\n  }\n\n  .pt-sm-1,\n  .py-sm-1 {\n    padding-top: 0.25rem !important;\n  }\n\n  .pr-sm-1,\n  .px-sm-1 {\n    padding-right: 0.25rem !important;\n  }\n\n  .pb-sm-1,\n  .py-sm-1 {\n    padding-bottom: 0.25rem !important;\n  }\n\n  .pl-sm-1,\n  .px-sm-1 {\n    padding-left: 0.25rem !important;\n  }\n\n  .p-sm-2 {\n    padding: 0.5rem !important;\n  }\n\n  .pt-sm-2,\n  .py-sm-2 {\n    padding-top: 0.5rem !important;\n  }\n\n  .pr-sm-2,\n  .px-sm-2 {\n    padding-right: 0.5rem !important;\n  }\n\n  .pb-sm-2,\n  .py-sm-2 {\n    padding-bottom: 0.5rem !important;\n  }\n\n  .pl-sm-2,\n  .px-sm-2 {\n    padding-left: 0.5rem !important;\n  }\n\n  .p-sm-3 {\n    padding: 1rem !important;\n  }\n\n  .pt-sm-3,\n  .py-sm-3 {\n    padding-top: 1rem !important;\n  }\n\n  .pr-sm-3,\n  .px-sm-3 {\n    padding-right: 1rem !important;\n  }\n\n  .pb-sm-3,\n  .py-sm-3 {\n    padding-bottom: 1rem !important;\n  }\n\n  .pl-sm-3,\n  .px-sm-3 {\n    padding-left: 1rem !important;\n  }\n\n  .p-sm-4 {\n    padding: 1.5rem !important;\n  }\n\n  .pt-sm-4,\n  .py-sm-4 {\n    padding-top: 1.5rem !important;\n  }\n\n  .pr-sm-4,\n  .px-sm-4 {\n    padding-right: 1.5rem !important;\n  }\n\n  .pb-sm-4,\n  .py-sm-4 {\n    padding-bottom: 1.5rem !important;\n  }\n\n  .pl-sm-4,\n  .px-sm-4 {\n    padding-left: 1.5rem !important;\n  }\n\n  .p-sm-5 {\n    padding: 3rem !important;\n  }\n\n  .pt-sm-5,\n  .py-sm-5 {\n    padding-top: 3rem !important;\n  }\n\n  .pr-sm-5,\n  .px-sm-5 {\n    padding-right: 3rem !important;\n  }\n\n  .pb-sm-5,\n  .py-sm-5 {\n    padding-bottom: 3rem !important;\n  }\n\n  .pl-sm-5,\n  .px-sm-5 {\n    padding-left: 3rem !important;\n  }\n\n  .m-sm-auto {\n    margin: auto !important;\n  }\n\n  .mt-sm-auto,\n  .my-sm-auto {\n    margin-top: auto !important;\n  }\n\n  .mr-sm-auto,\n  .mx-sm-auto {\n    margin-right: auto !important;\n  }\n\n  .mb-sm-auto,\n  .my-sm-auto {\n    margin-bottom: auto !important;\n  }\n\n  .ml-sm-auto,\n  .mx-sm-auto {\n    margin-left: auto !important;\n  }\n}\n\n@media (min-width: 700px) {\n  .m-md-0 {\n    margin: 0 !important;\n  }\n\n  .mt-md-0,\n  .my-md-0 {\n    margin-top: 0 !important;\n  }\n\n  .mr-md-0,\n  .mx-md-0 {\n    margin-right: 0 !important;\n  }\n\n  .mb-md-0,\n  .my-md-0 {\n    margin-bottom: 0 !important;\n  }\n\n  .ml-md-0,\n  .mx-md-0 {\n    margin-left: 0 !important;\n  }\n\n  .m-md-1 {\n    margin: 0.25rem !important;\n  }\n\n  .mt-md-1,\n  .my-md-1 {\n    margin-top: 0.25rem !important;\n  }\n\n  .mr-md-1,\n  .mx-md-1 {\n    margin-right: 0.25rem !important;\n  }\n\n  .mb-md-1,\n  .my-md-1 {\n    margin-bottom: 0.25rem !important;\n  }\n\n  .ml-md-1,\n  .mx-md-1 {\n    margin-left: 0.25rem !important;\n  }\n\n  .m-md-2 {\n    margin: 0.5rem !important;\n  }\n\n  .mt-md-2,\n  .my-md-2 {\n    margin-top: 0.5rem !important;\n  }\n\n  .mr-md-2,\n  .mx-md-2 {\n    margin-right: 0.5rem !important;\n  }\n\n  .mb-md-2,\n  .my-md-2 {\n    margin-bottom: 0.5rem !important;\n  }\n\n  .ml-md-2,\n  .mx-md-2 {\n    margin-left: 0.5rem !important;\n  }\n\n  .m-md-3 {\n    margin: 1rem !important;\n  }\n\n  .mt-md-3,\n  .my-md-3 {\n    margin-top: 1rem !important;\n  }\n\n  .mr-md-3,\n  .mx-md-3 {\n    margin-right: 1rem !important;\n  }\n\n  .mb-md-3,\n  .my-md-3 {\n    margin-bottom: 1rem !important;\n  }\n\n  .ml-md-3,\n  .mx-md-3 {\n    margin-left: 1rem !important;\n  }\n\n  .m-md-4 {\n    margin: 1.5rem !important;\n  }\n\n  .mt-md-4,\n  .my-md-4 {\n    margin-top: 1.5rem !important;\n  }\n\n  .mr-md-4,\n  .mx-md-4 {\n    margin-right: 1.5rem !important;\n  }\n\n  .mb-md-4,\n  .my-md-4 {\n    margin-bottom: 1.5rem !important;\n  }\n\n  .ml-md-4,\n  .mx-md-4 {\n    margin-left: 1.5rem !important;\n  }\n\n  .m-md-5 {\n    margin: 3rem !important;\n  }\n\n  .mt-md-5,\n  .my-md-5 {\n    margin-top: 3rem !important;\n  }\n\n  .mr-md-5,\n  .mx-md-5 {\n    margin-right: 3rem !important;\n  }\n\n  .mb-md-5,\n  .my-md-5 {\n    margin-bottom: 3rem !important;\n  }\n\n  .ml-md-5,\n  .mx-md-5 {\n    margin-left: 3rem !important;\n  }\n\n  .p-md-0 {\n    padding: 0 !important;\n  }\n\n  .pt-md-0,\n  .py-md-0 {\n    padding-top: 0 !important;\n  }\n\n  .pr-md-0,\n  .px-md-0 {\n    padding-right: 0 !important;\n  }\n\n  .pb-md-0,\n  .py-md-0 {\n    padding-bottom: 0 !important;\n  }\n\n  .pl-md-0,\n  .px-md-0 {\n    padding-left: 0 !important;\n  }\n\n  .p-md-1 {\n    padding: 0.25rem !important;\n  }\n\n  .pt-md-1,\n  .py-md-1 {\n    padding-top: 0.25rem !important;\n  }\n\n  .pr-md-1,\n  .px-md-1 {\n    padding-right: 0.25rem !important;\n  }\n\n  .pb-md-1,\n  .py-md-1 {\n    padding-bottom: 0.25rem !important;\n  }\n\n  .pl-md-1,\n  .px-md-1 {\n    padding-left: 0.25rem !important;\n  }\n\n  .p-md-2 {\n    padding: 0.5rem !important;\n  }\n\n  .pt-md-2,\n  .py-md-2 {\n    padding-top: 0.5rem !important;\n  }\n\n  .pr-md-2,\n  .px-md-2 {\n    padding-right: 0.5rem !important;\n  }\n\n  .pb-md-2,\n  .py-md-2 {\n    padding-bottom: 0.5rem !important;\n  }\n\n  .pl-md-2,\n  .px-md-2 {\n    padding-left: 0.5rem !important;\n  }\n\n  .p-md-3 {\n    padding: 1rem !important;\n  }\n\n  .pt-md-3,\n  .py-md-3 {\n    padding-top: 1rem !important;\n  }\n\n  .pr-md-3,\n  .px-md-3 {\n    padding-right: 1rem !important;\n  }\n\n  .pb-md-3,\n  .py-md-3 {\n    padding-bottom: 1rem !important;\n  }\n\n  .pl-md-3,\n  .px-md-3 {\n    padding-left: 1rem !important;\n  }\n\n  .p-md-4 {\n    padding: 1.5rem !important;\n  }\n\n  .pt-md-4,\n  .py-md-4 {\n    padding-top: 1.5rem !important;\n  }\n\n  .pr-md-4,\n  .px-md-4 {\n    padding-right: 1.5rem !important;\n  }\n\n  .pb-md-4,\n  .py-md-4 {\n    padding-bottom: 1.5rem !important;\n  }\n\n  .pl-md-4,\n  .px-md-4 {\n    padding-left: 1.5rem !important;\n  }\n\n  .p-md-5 {\n    padding: 3rem !important;\n  }\n\n  .pt-md-5,\n  .py-md-5 {\n    padding-top: 3rem !important;\n  }\n\n  .pr-md-5,\n  .px-md-5 {\n    padding-right: 3rem !important;\n  }\n\n  .pb-md-5,\n  .py-md-5 {\n    padding-bottom: 3rem !important;\n  }\n\n  .pl-md-5,\n  .px-md-5 {\n    padding-left: 3rem !important;\n  }\n\n  .m-md-auto {\n    margin: auto !important;\n  }\n\n  .mt-md-auto,\n  .my-md-auto {\n    margin-top: auto !important;\n  }\n\n  .mr-md-auto,\n  .mx-md-auto {\n    margin-right: auto !important;\n  }\n\n  .mb-md-auto,\n  .my-md-auto {\n    margin-bottom: auto !important;\n  }\n\n  .ml-md-auto,\n  .mx-md-auto {\n    margin-left: auto !important;\n  }\n}\n\n@media (min-width: 900px) {\n  .m-lg-0 {\n    margin: 0 !important;\n  }\n\n  .mt-lg-0,\n  .my-lg-0 {\n    margin-top: 0 !important;\n  }\n\n  .mr-lg-0,\n  .mx-lg-0 {\n    margin-right: 0 !important;\n  }\n\n  .mb-lg-0,\n  .my-lg-0 {\n    margin-bottom: 0 !important;\n  }\n\n  .ml-lg-0,\n  .mx-lg-0 {\n    margin-left: 0 !important;\n  }\n\n  .m-lg-1 {\n    margin: 0.25rem !important;\n  }\n\n  .mt-lg-1,\n  .my-lg-1 {\n    margin-top: 0.25rem !important;\n  }\n\n  .mr-lg-1,\n  .mx-lg-1 {\n    margin-right: 0.25rem !important;\n  }\n\n  .mb-lg-1,\n  .my-lg-1 {\n    margin-bottom: 0.25rem !important;\n  }\n\n  .ml-lg-1,\n  .mx-lg-1 {\n    margin-left: 0.25rem !important;\n  }\n\n  .m-lg-2 {\n    margin: 0.5rem !important;\n  }\n\n  .mt-lg-2,\n  .my-lg-2 {\n    margin-top: 0.5rem !important;\n  }\n\n  .mr-lg-2,\n  .mx-lg-2 {\n    margin-right: 0.5rem !important;\n  }\n\n  .mb-lg-2,\n  .my-lg-2 {\n    margin-bottom: 0.5rem !important;\n  }\n\n  .ml-lg-2,\n  .mx-lg-2 {\n    margin-left: 0.5rem !important;\n  }\n\n  .m-lg-3 {\n    margin: 1rem !important;\n  }\n\n  .mt-lg-3,\n  .my-lg-3 {\n    margin-top: 1rem !important;\n  }\n\n  .mr-lg-3,\n  .mx-lg-3 {\n    margin-right: 1rem !important;\n  }\n\n  .mb-lg-3,\n  .my-lg-3 {\n    margin-bottom: 1rem !important;\n  }\n\n  .ml-lg-3,\n  .mx-lg-3 {\n    margin-left: 1rem !important;\n  }\n\n  .m-lg-4 {\n    margin: 1.5rem !important;\n  }\n\n  .mt-lg-4,\n  .my-lg-4 {\n    margin-top: 1.5rem !important;\n  }\n\n  .mr-lg-4,\n  .mx-lg-4 {\n    margin-right: 1.5rem !important;\n  }\n\n  .mb-lg-4,\n  .my-lg-4 {\n    margin-bottom: 1.5rem !important;\n  }\n\n  .ml-lg-4,\n  .mx-lg-4 {\n    margin-left: 1.5rem !important;\n  }\n\n  .m-lg-5 {\n    margin: 3rem !important;\n  }\n\n  .mt-lg-5,\n  .my-lg-5 {\n    margin-top: 3rem !important;\n  }\n\n  .mr-lg-5,\n  .mx-lg-5 {\n    margin-right: 3rem !important;\n  }\n\n  .mb-lg-5,\n  .my-lg-5 {\n    margin-bottom: 3rem !important;\n  }\n\n  .ml-lg-5,\n  .mx-lg-5 {\n    margin-left: 3rem !important;\n  }\n\n  .p-lg-0 {\n    padding: 0 !important;\n  }\n\n  .pt-lg-0,\n  .py-lg-0 {\n    padding-top: 0 !important;\n  }\n\n  .pr-lg-0,\n  .px-lg-0 {\n    padding-right: 0 !important;\n  }\n\n  .pb-lg-0,\n  .py-lg-0 {\n    padding-bottom: 0 !important;\n  }\n\n  .pl-lg-0,\n  .px-lg-0 {\n    padding-left: 0 !important;\n  }\n\n  .p-lg-1 {\n    padding: 0.25rem !important;\n  }\n\n  .pt-lg-1,\n  .py-lg-1 {\n    padding-top: 0.25rem !important;\n  }\n\n  .pr-lg-1,\n  .px-lg-1 {\n    padding-right: 0.25rem !important;\n  }\n\n  .pb-lg-1,\n  .py-lg-1 {\n    padding-bottom: 0.25rem !important;\n  }\n\n  .pl-lg-1,\n  .px-lg-1 {\n    padding-left: 0.25rem !important;\n  }\n\n  .p-lg-2 {\n    padding: 0.5rem !important;\n  }\n\n  .pt-lg-2,\n  .py-lg-2 {\n    padding-top: 0.5rem !important;\n  }\n\n  .pr-lg-2,\n  .px-lg-2 {\n    padding-right: 0.5rem !important;\n  }\n\n  .pb-lg-2,\n  .py-lg-2 {\n    padding-bottom: 0.5rem !important;\n  }\n\n  .pl-lg-2,\n  .px-lg-2 {\n    padding-left: 0.5rem !important;\n  }\n\n  .p-lg-3 {\n    padding: 1rem !important;\n  }\n\n  .pt-lg-3,\n  .py-lg-3 {\n    padding-top: 1rem !important;\n  }\n\n  .pr-lg-3,\n  .px-lg-3 {\n    padding-right: 1rem !important;\n  }\n\n  .pb-lg-3,\n  .py-lg-3 {\n    padding-bottom: 1rem !important;\n  }\n\n  .pl-lg-3,\n  .px-lg-3 {\n    padding-left: 1rem !important;\n  }\n\n  .p-lg-4 {\n    padding: 1.5rem !important;\n  }\n\n  .pt-lg-4,\n  .py-lg-4 {\n    padding-top: 1.5rem !important;\n  }\n\n  .pr-lg-4,\n  .px-lg-4 {\n    padding-right: 1.5rem !important;\n  }\n\n  .pb-lg-4,\n  .py-lg-4 {\n    padding-bottom: 1.5rem !important;\n  }\n\n  .pl-lg-4,\n  .px-lg-4 {\n    padding-left: 1.5rem !important;\n  }\n\n  .p-lg-5 {\n    padding: 3rem !important;\n  }\n\n  .pt-lg-5,\n  .py-lg-5 {\n    padding-top: 3rem !important;\n  }\n\n  .pr-lg-5,\n  .px-lg-5 {\n    padding-right: 3rem !important;\n  }\n\n  .pb-lg-5,\n  .py-lg-5 {\n    padding-bottom: 3rem !important;\n  }\n\n  .pl-lg-5,\n  .px-lg-5 {\n    padding-left: 3rem !important;\n  }\n\n  .m-lg-auto {\n    margin: auto !important;\n  }\n\n  .mt-lg-auto,\n  .my-lg-auto {\n    margin-top: auto !important;\n  }\n\n  .mr-lg-auto,\n  .mx-lg-auto {\n    margin-right: auto !important;\n  }\n\n  .mb-lg-auto,\n  .my-lg-auto {\n    margin-bottom: auto !important;\n  }\n\n  .ml-lg-auto,\n  .mx-lg-auto {\n    margin-left: auto !important;\n  }\n}\n\n@media (min-width: 1100px) {\n  .m-xl-0 {\n    margin: 0 !important;\n  }\n\n  .mt-xl-0,\n  .my-xl-0 {\n    margin-top: 0 !important;\n  }\n\n  .mr-xl-0,\n  .mx-xl-0 {\n    margin-right: 0 !important;\n  }\n\n  .mb-xl-0,\n  .my-xl-0 {\n    margin-bottom: 0 !important;\n  }\n\n  .ml-xl-0,\n  .mx-xl-0 {\n    margin-left: 0 !important;\n  }\n\n  .m-xl-1 {\n    margin: 0.25rem !important;\n  }\n\n  .mt-xl-1,\n  .my-xl-1 {\n    margin-top: 0.25rem !important;\n  }\n\n  .mr-xl-1,\n  .mx-xl-1 {\n    margin-right: 0.25rem !important;\n  }\n\n  .mb-xl-1,\n  .my-xl-1 {\n    margin-bottom: 0.25rem !important;\n  }\n\n  .ml-xl-1,\n  .mx-xl-1 {\n    margin-left: 0.25rem !important;\n  }\n\n  .m-xl-2 {\n    margin: 0.5rem !important;\n  }\n\n  .mt-xl-2,\n  .my-xl-2 {\n    margin-top: 0.5rem !important;\n  }\n\n  .mr-xl-2,\n  .mx-xl-2 {\n    margin-right: 0.5rem !important;\n  }\n\n  .mb-xl-2,\n  .my-xl-2 {\n    margin-bottom: 0.5rem !important;\n  }\n\n  .ml-xl-2,\n  .mx-xl-2 {\n    margin-left: 0.5rem !important;\n  }\n\n  .m-xl-3 {\n    margin: 1rem !important;\n  }\n\n  .mt-xl-3,\n  .my-xl-3 {\n    margin-top: 1rem !important;\n  }\n\n  .mr-xl-3,\n  .mx-xl-3 {\n    margin-right: 1rem !important;\n  }\n\n  .mb-xl-3,\n  .my-xl-3 {\n    margin-bottom: 1rem !important;\n  }\n\n  .ml-xl-3,\n  .mx-xl-3 {\n    margin-left: 1rem !important;\n  }\n\n  .m-xl-4 {\n    margin: 1.5rem !important;\n  }\n\n  .mt-xl-4,\n  .my-xl-4 {\n    margin-top: 1.5rem !important;\n  }\n\n  .mr-xl-4,\n  .mx-xl-4 {\n    margin-right: 1.5rem !important;\n  }\n\n  .mb-xl-4,\n  .my-xl-4 {\n    margin-bottom: 1.5rem !important;\n  }\n\n  .ml-xl-4,\n  .mx-xl-4 {\n    margin-left: 1.5rem !important;\n  }\n\n  .m-xl-5 {\n    margin: 3rem !important;\n  }\n\n  .mt-xl-5,\n  .my-xl-5 {\n    margin-top: 3rem !important;\n  }\n\n  .mr-xl-5,\n  .mx-xl-5 {\n    margin-right: 3rem !important;\n  }\n\n  .mb-xl-5,\n  .my-xl-5 {\n    margin-bottom: 3rem !important;\n  }\n\n  .ml-xl-5,\n  .mx-xl-5 {\n    margin-left: 3rem !important;\n  }\n\n  .p-xl-0 {\n    padding: 0 !important;\n  }\n\n  .pt-xl-0,\n  .py-xl-0 {\n    padding-top: 0 !important;\n  }\n\n  .pr-xl-0,\n  .px-xl-0 {\n    padding-right: 0 !important;\n  }\n\n  .pb-xl-0,\n  .py-xl-0 {\n    padding-bottom: 0 !important;\n  }\n\n  .pl-xl-0,\n  .px-xl-0 {\n    padding-left: 0 !important;\n  }\n\n  .p-xl-1 {\n    padding: 0.25rem !important;\n  }\n\n  .pt-xl-1,\n  .py-xl-1 {\n    padding-top: 0.25rem !important;\n  }\n\n  .pr-xl-1,\n  .px-xl-1 {\n    padding-right: 0.25rem !important;\n  }\n\n  .pb-xl-1,\n  .py-xl-1 {\n    padding-bottom: 0.25rem !important;\n  }\n\n  .pl-xl-1,\n  .px-xl-1 {\n    padding-left: 0.25rem !important;\n  }\n\n  .p-xl-2 {\n    padding: 0.5rem !important;\n  }\n\n  .pt-xl-2,\n  .py-xl-2 {\n    padding-top: 0.5rem !important;\n  }\n\n  .pr-xl-2,\n  .px-xl-2 {\n    padding-right: 0.5rem !important;\n  }\n\n  .pb-xl-2,\n  .py-xl-2 {\n    padding-bottom: 0.5rem !important;\n  }\n\n  .pl-xl-2,\n  .px-xl-2 {\n    padding-left: 0.5rem !important;\n  }\n\n  .p-xl-3 {\n    padding: 1rem !important;\n  }\n\n  .pt-xl-3,\n  .py-xl-3 {\n    padding-top: 1rem !important;\n  }\n\n  .pr-xl-3,\n  .px-xl-3 {\n    padding-right: 1rem !important;\n  }\n\n  .pb-xl-3,\n  .py-xl-3 {\n    padding-bottom: 1rem !important;\n  }\n\n  .pl-xl-3,\n  .px-xl-3 {\n    padding-left: 1rem !important;\n  }\n\n  .p-xl-4 {\n    padding: 1.5rem !important;\n  }\n\n  .pt-xl-4,\n  .py-xl-4 {\n    padding-top: 1.5rem !important;\n  }\n\n  .pr-xl-4,\n  .px-xl-4 {\n    padding-right: 1.5rem !important;\n  }\n\n  .pb-xl-4,\n  .py-xl-4 {\n    padding-bottom: 1.5rem !important;\n  }\n\n  .pl-xl-4,\n  .px-xl-4 {\n    padding-left: 1.5rem !important;\n  }\n\n  .p-xl-5 {\n    padding: 3rem !important;\n  }\n\n  .pt-xl-5,\n  .py-xl-5 {\n    padding-top: 3rem !important;\n  }\n\n  .pr-xl-5,\n  .px-xl-5 {\n    padding-right: 3rem !important;\n  }\n\n  .pb-xl-5,\n  .py-xl-5 {\n    padding-bottom: 3rem !important;\n  }\n\n  .pl-xl-5,\n  .px-xl-5 {\n    padding-left: 3rem !important;\n  }\n\n  .m-xl-auto {\n    margin: auto !important;\n  }\n\n  .mt-xl-auto,\n  .my-xl-auto {\n    margin-top: auto !important;\n  }\n\n  .mr-xl-auto,\n  .mx-xl-auto {\n    margin-right: auto !important;\n  }\n\n  .mb-xl-auto,\n  .my-xl-auto {\n    margin-bottom: auto !important;\n  }\n\n  .ml-xl-auto,\n  .mx-xl-auto {\n    margin-left: auto !important;\n  }\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5000:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".is-hidden {\n  display: none !important;\n}\n\n.is-inline-block {\n  display: inline-block !important;\n}\n\n.is-block {\n  display: block !important;\n}\n\n.is-transparent {\n  opacity: 0 !important;\n}\n\n.is-opaque {\n  opacity: 1 !important;\n}\n\n.is-invisible {\n  visibility: hidden !important;\n}\n\n.is-visible {\n  visibility: visible !important;\n}\n\n.is-small {\n  transform: scale(0.5) !important;\n}\n\n.is-large {\n  transform: scale(1.5) !important;\n}\n\n.is-scroll-disabled {\n  overflow: hidden !important;\n}\n\n.is-scroll-x-disabled {\n  overflow-x: hidden !important;\n}\n\n.is-scroll-y-disabled {\n  overflow-y: hidden !important;\n}\n\n.is-appear {\n  animation: appear var(--layout-transition-medium) 1;\n}\n\n.is-shake {\n  animation: shake var(--layout-transition-slow) 1;\n}\n\n.is-pop {\n  animation: pop var(--layout-transition-medium) 1;\n}\n\n.is-jello {\n  animation: jello var(--layout-transition-slow) 1;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5327:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "h1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin: 0 0 1em 0;\n  font-weight: normal;\n  line-height: 1.6;\n  color: hsl(var(--theme-primary-text-010));\n}\n\nh1 {\n  font-size: 1.5em;\n  font-family: var(--theme-font-display-name);\n  font-weight: var(--theme-font-display-weight);\n  font-style: var(--theme-font-display-style);\n}\n\nh2 {\n  font-size: 1.3em;\n  font-family: var(--theme-font-display-name);\n  font-weight: var(--theme-font-display-weight);\n  font-style: var(--theme-font-display-style);\n}\n\nh3 {\n  font-size: 1.1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n}\n\nh4 {\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n}\n\nh5 {\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  font-weight: bold;\n}\n\nh6 {\n  font-size: 0.75em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  font-weight: bold;\n}\n\np {\n  color: hsl(var(--theme-primary-text-010));\n  margin: 0;\n  line-height: 1.6;\n}\n\np:not(:last-child) {\n  margin-bottom: 0.5em;\n}\n\nhr {\n  border: 0;\n  border-top: var(--layout-horizontal-rule-small);\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  margin: calc(var(--wrap-space) * 2) 0;\n  clear: both;\n  transition: border-color var(--layout-transition-extra-fast);\n}\n\nb,\ncaption,\nstrong {\n  color: hsl(var(--theme-primary-text-010));\n  font-family: var(--theme-font-ui-name);\n  font-weight: 600;\n}\n\ni {\n  font-style: italic;\n}\n\na {\n  color: hsl(var(--theme-primary-text-010));\n  text-decoration: underline;\n  transition: text-decoration var(--layout-transition-extra-fast);\n}\n\na:link,\na:visited {\n  color: hsl(var(--theme-primary-text-010));\n}\n\na:focus {\n  text-decoration-color: hsl(var(--theme-primary-text-010));\n  outline: none;\n}\n\na:hover {\n  color: hsl(var(--theme-primary-text-010));\n  text-decoration-color: rgb(var(--theme-accent));\n}\n\na:active {\n  color: hsl(var(--theme-primary-text-010));\n  text-decoration-color: hsl(var(--theme-primary-text-010));\n}\n\nol,\nul {\n  margin: 0;\n  padding: 0 0 0 1.5em;\n}\n\nol:not(:last-child),\nul:not(:last-child) {\n  margin-bottom: 1em;\n}\n\nli {\n  margin: 0;\n}\n\nli>ul,\nli>ol {\n  margin: 0;\n}\n\nli:not(:last-child) {\n  margin-bottom: 0.5em;\n}\n\nli>ul:not(:last-child),\nli>ol:not(:last-child) {\n  margin-bottom: 0.5em;\n}\n\ntable {\n  border: 0;\n  margin: 0 0 1em;\n  padding: 0;\n  width: 100%;\n  border-spacing: 0;\n}\n\ntable thead tr td,\ntable thead tr th {\n  background-color: hsl(var(--theme-primary-030));\n  border: 0;\n  border-bottom: 1px solid hsl(var(--theme-primary-040));\n  padding: 0.5em;\n  margin: 0;\n  text-align: left;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  font-weight: bold;\n  box-sizing: border-box;\n}\n\ntable tr:nth-child(odd) {\n  background-color: hsl(var(--theme-primary-020));\n}\n\ntable tbody tr td,\ntable tbody tr th {\n  padding: 0.25em 0.5em;\n  margin: 0;\n  border: 0;\n  text-align: left;\n  box-sizing: border-box;\n}\n\ncode {\n  background-color: hsl(var(--theme-primary-040));\n  padding: 0.2em 0.5em;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 6368:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --utility-muted: var(--theme-primary-140);\n  --utility-muted-hover: var(--theme-primary-140);\n  --utility-muted-focus-active: var(--theme-primary-140);\n  --utility-muted-checked: var(--theme-primary-140);\n  --utility-muted-disabled: var(--theme-primary-030);\n}\n\n.list-unstyled {\n  padding-left: 0;\n  margin-bottom: 0;\n}\n\n.list-unstyled li {\n  list-style-type: none;\n}\n\n.list-unstyled li:not(:last-child) {\n  margin-bottom: 0;\n}\n\n.list-inline li {\n  display: inline-block;\n}\n\n.small {\n  font-size: 0.8em;\n}\n\n.muted {\n  color: hsl(var(--utility-muted));\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n.color-demo {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n}\n\n.baseline-alignment-icon-character {\n  width: 0;\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n  padding: 0;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4975:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --version-icon-size: 22;\n  --version-icon: calc((var(--version-icon-size) / 4) * 1em);\n}\n\n.version {\n  font-size: 1rem;\n  display: inline-grid;\n  grid-template-columns: auto auto;\n  grid-gap: var(--wrap-space);\n  align-items: center;\n  justify-items: start;\n}\n\n.version-app-name {\n  margin-bottom: 0;\n}\n\n.version-number:not(:last-child),\n.version-name:not(:last-child) {\n  margin-bottom: 0;\n}\n\n.version-number {\n  background-color: rgb(var(--theme-accent));\n  color: hsl(var(--theme-accent-rgb-text));\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  padding: 0 0.5em;\n}\n\n.version-icon {\n  width: var(--version-icon);\n}\n\n.version-details {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 0.25em;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 710:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --z-index-background: 1000;\n  --z-index-layout: 2000;\n  --z-index-toolbar: 3000;\n  --z-index-edge: 4000;\n  --z-index-dropdown: 5000;\n  --z-index-shade: 6000;\n  --z-index-menu: 7000;\n  --z-index-modal: 8000;\n  --z-index-suggest: 9000;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5125:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --bookmark-color: var(--theme-primary-020);\n  --bookmark-color-focus-hover: var(--theme-primary-030);\n  --bookmark-display-visual-color: var(--theme-accent);\n  --bookmark-display-visual-color-focus-hover: var(--theme-accent-rgb-text);\n  --bookmark-display-name-color: var(--theme-primary-text-020);\n  --bookmark-display-name-color-focus-hover: var(--theme-primary-text-030);\n}\n\n.is-bookmark-style-block {\n  --bookmark-edit-height-tall: 5em;\n  --bookmark-edit-height-short: calc(var(--bookmark-edit-height-tall) / 2);\n  --bookmark-edit-height: var(--bookmark-edit-height-tall);\n  --bookmark-url-height: 2.25em;\n}\n\n.is-bookmark-style-list {\n  --bookmark-edit-height-tall: 5em;\n  --bookmark-edit-height-short: 2em;\n  --bookmark-edit-height: var(--bookmark-edit-height-short);\n  --bookmark-url-height: 1.5em;\n}\n\n.is-bookmark-style-block {\n  --bookmark-url-height: 2.25em;\n}\n\n.is-bookmark-style-list {\n  --bookmark-url-height: 1.5em;\n}\n\n:root {\n  --bookmark-padding: 10;\n  --bookmark-clip-padding: 1;\n}\n\n.bookmark-area {\n  flex-grow: 1;\n  padding: calc(var(--layout-space) * var(--layout-padding));\n  width: 100%;\n}\n\n.is-theme-bookmark-color-by-custom .bookmark-area {\n  background-color: hsla(var(--theme-bookmark-color-hsl-h), calc(var(--theme-bookmark-color-hsl-s) * 1%), calc(var(--theme-bookmark-color-hsl-l) * 1%), calc(var(--theme-bookmark-color-opacity) / 100));\n}\n\n.bookmark-group {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: calc(var(--layout-space) * var(--layout-padding));\n  align-items: stretch;\n  justify-content: stretch;\n}\n\n.bookmark {\n  font-size: 1em;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: block;\n  z-index: 1;\n}\n\n.bookmark:focus,\n.bookmark:hover,\n.bookmark:focus-within {\n  z-index: 2;\n}\n\n.is-bookmark-hoverscale-show:not(.is-bookmark-edit) .bookmark {\n  transform: scale(1);\n  transition: transform var(--layout-transition-extra-fast);\n}\n\n.is-bookmark-hoverscale-show:not(.is-bookmark-edit) .bookmark:focus-within,\n.is-bookmark-hoverscale-show:not(.is-bookmark-edit) .bookmark:focus,\n.is-bookmark-hoverscale-show:not(.is-bookmark-edit) .bookmark:hover {\n  transform: scale(1.05);\n}\n\n.is-bookmark-hoverscale-show:not(.is-bookmark-edit) .bookmark:active {\n  transform: scale(1.04);\n  transition: none;\n}\n\n@media (min-width: 900px) {\n\n  .is-layout-breakpoint-md.is-bookmark-style-list .bookmark-wide,\n  .is-layout-breakpoint-lg.is-bookmark-style-list .bookmark-wide,\n  .is-layout-breakpoint-xl.is-bookmark-style-list .bookmark-wide,\n  .is-layout-breakpoint-xxl.is-bookmark-style-list .bookmark-wide {\n    grid-column: span 2;\n  }\n\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide {\n    grid-column: span 2;\n  }\n\n  .is-layout-breakpoint-md .bookmark-tall,\n  .is-layout-breakpoint-lg .bookmark-tall,\n  .is-layout-breakpoint-xl .bookmark-tall,\n  .is-layout-breakpoint-xxl .bookmark-tall {\n    grid-row: span 2;\n  }\n}\n\n@media (min-width: 900px) {\n\n  .is-layout-breakpoint-md.is-bookmark-orientation-top .bookmark-wide,\n  .is-layout-breakpoint-lg.is-bookmark-orientation-top .bookmark-wide,\n  .is-layout-breakpoint-xl.is-bookmark-orientation-top .bookmark-wide,\n  .is-layout-breakpoint-xxl.is-bookmark-orientation-top .bookmark-wide,\n  .is-layout-breakpoint-md.is-bookmark-orientation-bottom .bookmark-wide,\n  .is-layout-breakpoint-lg.is-bookmark-orientation-bottom .bookmark-wide,\n  .is-layout-breakpoint-xl.is-bookmark-orientation-bottom .bookmark-wide,\n  .is-layout-breakpoint-xxl.is-bookmark-orientation-bottom .bookmark-wide {\n    --bookmark-edit-height: var(--bookmark-edit-height-short);\n  }\n}\n\n.bookmark-front {\n  background-color: hsla(var(--bookmark-color), calc(var(--theme-bookmark-item-opacity) / 100));\n  border: calc(var(--bookmark-border) * var(--layout-line-width)) solid rgb(var(--theme-accent));\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  position: absolute;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  z-index: 3;\n  overflow: hidden;\n  text-decoration: none;\n  outline: none;\n  user-select: none;\n  transition: background-color var(--layout-transition-extra-fast), border-radius var(--layout-transition-extra-fast), height var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n}\n\n.bookmark:focus-within .bookmark-front,\n.bookmark:focus .bookmark-front,\n.bookmark:hover .bookmark-front,\n.bookmark-front:focus,\n.bookmark-front:hover {\n  background-color: hsla(var(--bookmark-color-focus-hover), calc(var(--theme-bookmark-item-opacity) / 100));\n}\n\n.is-bookmark-edit .bookmark-front {\n  height: calc(100% - var(--bookmark-edit-height));\n  transition-delay: calc(var(--bookmark-transition-delay) * 0.03s);\n}\n\n.is-bookmark-line-show:not(.is-bookmark-edit) .bookmark-front {\n  height: calc(100% - var(--layout-line-width));\n}\n\n.is-bookmark-orientation-top .bookmark-front {\n  top: inherit;\n  bottom: 0;\n}\n\n.is-bookmark-orientation-bottom .bookmark-front {\n  top: 0;\n  bottom: inherit;\n}\n\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark:focus .bookmark-front,\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark:focus-within .bookmark-front,\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark:hover .bookmark-front {\n  border-top-left-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n  border-top-right-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n}\n\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark:focus .bookmark-front,\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark:focus-within .bookmark-front,\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark:hover .bookmark-front {\n  border-bottom-left-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n  border-bottom-right-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark .bookmark-front,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark:hover .bookmark-front,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark:focus .bookmark-front {\n  border-top-left-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n  border-top-right-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark .bookmark-front,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark:hover .bookmark-front,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark:focus .bookmark-front {\n  border-bottom-left-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n  border-bottom-right-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n}\n\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom .bookmark:focus .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom .bookmark:focus-within .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom .bookmark:hover .bookmark-front {\n  box-shadow: var(--theme-shadow-bottom-large);\n}\n\n.is-bookmark-shadow-show.is-bookmark-orientation-top .bookmark:focus .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top .bookmark:focus-within .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top .bookmark:hover .bookmark-front {\n  box-shadow: var(--theme-shadow-top-large);\n}\n\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark:hover .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark:focus .bookmark-front {\n  box-shadow: var(--theme-shadow-bottom-medium);\n}\n\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark:hover .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark:focus .bookmark-front {\n  box-shadow: var(--theme-shadow-top-medium);\n}\n\n.bookmark-link {\n  background-color: transparent;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  pointer-events: all;\n  overflow: hidden;\n  text-decoration: none;\n}\n\n.is-bookmark-style-block .bookmark-link {\n  padding: calc(var(--bookmark-padding) * 0.1em);\n}\n\n.is-bookmark-style-list .bookmark-link {\n  padding: calc((var(--bookmark-padding) * 0.5) * 0.1em) calc((var(--bookmark-padding) * 1.25) * 0.1em);\n}\n\n.bookmark-link:focus,\n.bookmark-link:hover,\n.bookmark-link:active {\n  text-decoration: none;\n}\n\n.bookmark-display-wrap {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: var(--bookmark-display-justify);\n  align-items: var(--bookmark-display-align);\n  pointer-events: all;\n  z-index: 2;\n}\n\n.bookmark-display {\n  display: flex;\n  gap: calc(var(--bookmark-display-gutter) * 0.025em);\n  font-size: 1em;\n  transition: font-size var(--layout-transition-extra-fast);\n  transform: translateX(calc(var(--bookmark-display-translate-x) * 0.1em)) translateY(calc(var(--bookmark-display-translate-y) * 0.1em)) rotate(calc(var(--bookmark-display-rotate) * 1deg));\n}\n\n.is-bookmark-edit .bookmark-display {\n  font-size: 0.5em;\n  transition-delay: calc(var(--bookmark-transition-delay) * 0.03s);\n}\n\n.is-bookmark-alignment-top-left .bookmark-display-wrap {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.is-bookmark-alignment-top-center .bookmark-display-wrap {\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.is-bookmark-alignment-top-right .bookmark-display-wrap {\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n.is-bookmark-alignment-center-left .bookmark-display-wrap {\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.is-bookmark-alignment-center-center .bookmark-display-wrap {\n  justify-content: center;\n  align-items: center;\n}\n\n.is-bookmark-alignment-center-right .bookmark-display-wrap {\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.is-bookmark-alignment-bottom-left .bookmark-display-wrap {\n  justify-content: flex-start;\n  align-items: flex-end;\n}\n\n.is-bookmark-alignment-bottom-center .bookmark-display-wrap {\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.is-bookmark-alignment-bottom-right .bookmark-display-wrap {\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name .bookmark-display {\n  flex-direction: row;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual .bookmark-display {\n  flex-direction: row-reverse;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name .bookmark-display {\n  flex-direction: column;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual .bookmark-display {\n  flex-direction: column-reverse;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-top-left .bookmark-display {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-top-center .bookmark-display {\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-top-right .bookmark-display {\n  justify-content: flex-start;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-center-left .bookmark-display {\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-center-center .bookmark-display {\n  justify-content: center;\n  align-items: center;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-center-right .bookmark-display {\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-bottom-left .bookmark-display {\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-bottom-center .bookmark-display {\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-visual-name.is-bookmark-alignment-bottom-right .bookmark-display {\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-top-left .bookmark-display {\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-top-center .bookmark-display {\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-top-right .bookmark-display {\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-center-left .bookmark-display {\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-center-center .bookmark-display {\n  justify-content: center;\n  align-items: center;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-center-right .bookmark-display {\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-bottom-left .bookmark-display {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-bottom-center .bookmark-display {\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.is-bookmark-direction-vertical.is-bookmark-order-name-visual.is-bookmark-alignment-bottom-right .bookmark-display {\n  justify-content: flex-start;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-top-left .bookmark-display {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-top-center .bookmark-display {\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-top-right .bookmark-display {\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-center-left .bookmark-display {\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-center-center .bookmark-display {\n  justify-content: center;\n  align-items: center;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-center-right .bookmark-display {\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-bottom-left .bookmark-display {\n  justify-content: flex-start;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-bottom-center .bookmark-display {\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-visual-name.is-bookmark-alignment-bottom-right .bookmark-display {\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-top-left .bookmark-display {\n  justify-content: flex-end;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-top-center .bookmark-display {\n  justify-content: center;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-top-right .bookmark-display {\n  justify-content: flex-start;\n  align-items: flex-start;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-center-left .bookmark-display {\n  justify-content: flex-end;\n  align-items: center;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-center-center .bookmark-display {\n  justify-content: center;\n  align-items: center;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-center-right .bookmark-display {\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-bottom-left .bookmark-display {\n  justify-content: flex-end;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-bottom-center .bookmark-display {\n  justify-content: center;\n  align-items: flex-end;\n}\n\n.is-bookmark-direction-horizontal.is-bookmark-order-name-visual.is-bookmark-alignment-bottom-right .bookmark-display {\n  justify-content: flex-start;\n  align-items: flex-end;\n}\n\n.bookmark-display-visual {\n  color: rgb(var(--bookmark-display-visual-color));\n  line-height: 1;\n  display: flex;\n  justify-content: center;\n  transition: color var(--layout-transition-extra-fast);\n  text-shadow: var(--bookmark-display-visual-shadow);\n}\n\n.bookmark:focus .bookmark-display-visual,\n.bookmark:hover .bookmark-display-visual,\n.bookmark:focus-within .bookmark-display-visual {\n  color: rgb(var(--bookmark-display-visual-color-focus-hover));\n}\n\n.bookmark-display-visual-letter {\n  font-family: var(--theme-font-display-name);\n  font-weight: var(--theme-font-display-weight);\n  font-style: var(--theme-font-display-style);\n  font-size: calc(var(--bookmark-display-visual-size) * 0.1em);\n}\n\n.bookmark-display-visual-icon {\n  font-size: calc(var(--bookmark-display-visual-size) * 0.1em);\n}\n\n.bookmark-display-visual-image {\n  background-image: var(--bookmark-display-visual-image-url);\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  width: 1em;\n  height: 1em;\n  font-size: calc(var(--bookmark-display-visual-size) * 0.1em);\n}\n\n.bookmark-display-name {\n  color: hsl(var(--bookmark-display-name-color));\n  font-size: calc(var(--bookmark-display-name-size) * 0.1em);\n  display: flex;\n  justify-content: center;\n  transition: color var(--layout-transition-extra-fast);\n}\n\n.is-bookmark-opacity-low .bookmark-display-name {\n  --bookmark-display-name-color: var(--theme-primary-text-010);\n  --bookmark-display-name-color-focus-hover: var(--theme-primary-text-010);\n}\n\n.is-theme-background-type-accent .is-bookmark-opacity-low .bookmark-display-name {\n  --bookmark-display-name-color: var(--theme-accent-rgb-text);\n  --bookmark-display-name-color-focus-hover: var(--theme-accent-rgb-text);\n}\n\n.is-theme-background-type-color .is-bookmark-opacity-low .bookmark-display-name {\n  --bookmark-display-name-color: var(--theme-background-color-rgb-text);\n  --bookmark-display-name-color-focus-hover: var(--theme-background-color-rgb-text);\n}\n\n.bookmark:focus .bookmark-display-name,\n.bookmark:hover .bookmark-display-name,\n.bookmark:focus-within .bookmark-display-name {\n  color: hsl(var(--bookmark-display-name-color-focus-hover));\n}\n\n.is-bookmark-alignment-top-left .bookmark-display-name-text,\n.is-bookmark-alignment-center-left .bookmark-display-name-text,\n.is-bookmark-alignment-bottom-left .bookmark-display-name-text {\n  text-align: left;\n}\n\n.is-bookmark-alignment-top-center .bookmark-display-name-text,\n.is-bookmark-alignment-center-center .bookmark-display-name-text,\n.is-bookmark-alignment-bottom-center .bookmark-display-name-text {\n  text-align: center;\n}\n\n.is-bookmark-alignment-top-right .bookmark-display-name-text,\n.is-bookmark-alignment-center-right .bookmark-display-name-text,\n.is-bookmark-alignment-bottom-right .bookmark-display-name-text {\n  text-align: right;\n}\n\n.bookmark-back {\n  background-color: rgb(var(--theme-accent));\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  width: calc(100% - calc(var(--layout-line-width) * 2));\n  height: calc(100% - calc(var(--layout-line-width) * 2));\n  position: absolute;\n  top: var(--layout-line-width);\n  left: var(--layout-line-width);\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n  transition: height var(--layout-transition-extra-fast), border-radius var(--layout-transition-extra-fast), top var(--layout-transition-extra-fast), clip-path var(--layout-transition-extra-fast);\n}\n\n.is-bookmark-edit .bookmark-back {\n  height: 100%;\n  top: 0;\n  transition-delay: calc(var(--bookmark-transition-delay) * 0.03s);\n}\n\n.is-bookmark-line-show .bookmark-back {\n  height: calc(100% - var(--layout-line-width));\n}\n\n.is-bookmark-line-show.is-bookmark-orientation-top .bookmark-back {\n  top: 0;\n}\n\n.is-bookmark-line-show.is-bookmark-orientation-bottom .bookmark-back {\n  top: var(--layout-line-width);\n}\n\n.is-bookmark-edit.is-bookmark-line-show .bookmark-back {\n  height: 100%;\n}\n\n.is-bookmark-edit.is-bookmark-line-show.is-bookmark-orientation-top .bookmark-back,\n.is-bookmark-edit.is-bookmark-line-show.is-bookmark-orientation-bottom .bookmark-back {\n  top: 0;\n}\n\n.is-bookmark-orientation-top .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(0% + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(0% + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-orientation-bottom .bookmark-back {\n  clip-path: polygon(0 calc(100% - calc(var(--bookmark-clip-padding) * 1em)), 100% calc(100% - calc(var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.is-bookmark-orientation-top.is-bookmark-line-show .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(var(--layout-line-width) + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(var(--layout-line-width) + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-orientation-bottom.is-bookmark-line-show .bookmark-back {\n  clip-path: polygon(0 calc(100% - var(--layout-line-width) - calc(var(--bookmark-clip-padding) * 1em)), 100% calc(100% - var(--layout-line-width) - calc(var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.is-bookmark-orientation-top .bookmark:focus .bookmark-back,\n.is-bookmark-orientation-top .bookmark:focus-within .bookmark-back,\n.is-bookmark-orientation-top .bookmark:hover .bookmark-back,\n.is-bookmark-orientation-bottom .bookmark:focus .bookmark-back,\n.is-bookmark-orientation-bottom .bookmark:focus-within .bookmark-back,\n.is-bookmark-orientation-bottom .bookmark:hover .bookmark-back {\n  top: 0;\n  height: 100%;\n}\n\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark:focus .bookmark-back,\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark:focus-within .bookmark-back,\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark:hover .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(var(--bookmark-url-height) + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(var(--bookmark-url-height) + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark:focus .bookmark-back,\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark:focus-within .bookmark-back,\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark:hover .bookmark-back {\n  clip-path: polygon(0 calc(100% - calc(var(--bookmark-url-height) + calc(var(--bookmark-clip-padding) * 1em))), 100% calc(100% - calc(var(--bookmark-url-height) + calc(var(--bookmark-clip-padding) * 1em))), 100% 100%, 0 100%);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark:hover .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(var(--bookmark-edit-height) + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(var(--bookmark-edit-height) + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark:hover .bookmark-back {\n  clip-path: polygon(0 calc(100% - var(--bookmark-edit-height) - calc(var(--bookmark-clip-padding) * 1em)), 100% calc(100% - var(--bookmark-edit-height) - calc(var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.bookmark-background-wrap {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: calc(var(--bookmark-background-opacity) / 100);\n  pointer-events: none;\n  z-index: 1;\n}\n\n.bookmark-background-image {\n  background-image: var(--bookmark-background-image-url);\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n  pointer-events: none;\n}\n\n.bookmark-background-video {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  overflow: hidden;\n  z-index: 1;\n  pointer-events: none;\n}\n\n.bookmark-background-video video {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  pointer-events: none;\n}\n\n.bookmark-control {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  height: var(--bookmark-edit-height);\n  z-index: 3;\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  overflow: hidden;\n  pointer-events: none;\n  transition: top var(--layout-transition-extra-fast), bottom var(--layout-transition-extra-fast);\n}\n\n.is-bookmark-style-block .bookmark-control {\n  grid-template-columns: repeat(6, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n}\n\n.is-bookmark-style-list .bookmark-control {\n  grid-template-columns: repeat(5, 1fr);\n  grid-template-rows: 1fr;\n}\n\n@media (min-width: 900px) {\n\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control {\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: 1fr;\n  }\n}\n\n.is-bookmark-orientation-top .bookmark-control {\n  top: calc(-1 * var(--bookmark-edit-height));\n}\n\n.is-bookmark-orientation-bottom .bookmark-control {\n  bottom: calc(-1 * var(--bookmark-edit-height));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark-control {\n  top: 0;\n  transition: top var(--layout-duration-04) var(--layout-timing-bounce);\n  transition-delay: calc(var(--bookmark-transition-delay) * 0.03s);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark-control {\n  bottom: 0;\n  transition: bottom var(--layout-duration-04) var(--layout-timing-bounce) var(--layout-duration-01);\n  transition-delay: calc(var(--bookmark-transition-delay) * 0.03s);\n}\n\n.bookmark-control-button {\n  padding: 0;\n  border-radius: 0;\n  min-height: initial;\n  position: relative;\n  color: hsl(var(--theme-accent-rgb-text));\n  transition: background-color var(--layout-transition-fast), border-color var(--layout-transition-fast), color var(--layout-transition-fast), top var(--layout-transition-fast), right var(--layout-transition-fast), bottom var(--layout-transition-fast), left var(--layout-transition-fast);\n}\n\n.bookmark-control-button:hover,\n.bookmark-control-button:focus {\n  background-color: hsla(var(--theme-accent-rgb-text), 0.1);\n}\n\n.bookmark-control-button:disabled {\n  opacity: 0.25;\n}\n\n.is-bookmark-style-block .bookmark-control-left {\n  grid-column: 1 / span 2;\n  grid-row: 1;\n}\n\n.is-bookmark-style-block .bookmark-control-sort {\n  grid-column: 3 / span 2;\n  grid-row: 1;\n}\n\n.is-bookmark-style-block .bookmark-control-right {\n  grid-column: 5 / span 2;\n  grid-row: 1;\n}\n\n.is-bookmark-style-block .bookmark-control-edit {\n  grid-column: 1 / span 3;\n  grid-row: 2;\n}\n\n.is-bookmark-style-block .bookmark-control-remove {\n  grid-column: 4 / span 3;\n  grid-row: 2;\n}\n\n.is-bookmark-style-list .bookmark-control-left {\n  grid-column: 1;\n}\n\n.is-bookmark-style-list .bookmark-control-sort {\n  grid-column: 2;\n}\n\n.is-bookmark-style-list .bookmark-control-right {\n  grid-column: 3;\n}\n\n.is-bookmark-style-list .bookmark-control-edit {\n  grid-column: 4;\n}\n\n.is-bookmark-style-list .bookmark-control-remove {\n  grid-column: 5;\n}\n\n@media (min-width: 900px) {\n\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-left,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-left,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-left,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-left,\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-sort,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-sort,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-sort,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-sort,\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-right,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-right,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-right,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-right,\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-edit,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-edit,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-edit,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-edit,\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-remove,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-remove,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-remove,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-remove {\n    grid-row: 1;\n  }\n\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-left,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-left,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-left,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-left {\n    grid-column: 1;\n  }\n\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-sort,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-sort,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-sort,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-sort {\n    grid-column: 2;\n  }\n\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-right,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-right,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-right,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-right {\n    grid-column: 3;\n  }\n\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-edit,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-edit,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-edit,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-edit {\n    grid-column: 4;\n  }\n\n  .is-layout-breakpoint-md.is-bookmark-style-block .bookmark-wide .bookmark-control-remove,\n  .is-layout-breakpoint-lg.is-bookmark-style-block .bookmark-wide .bookmark-control-remove,\n  .is-layout-breakpoint-xl.is-bookmark-style-block .bookmark-wide .bookmark-control-remove,\n  .is-layout-breakpoint-xxl.is-bookmark-style-block .bookmark-wide .bookmark-control-remove {\n    grid-column: 5;\n  }\n}\n\n.is-bookmark-edit .bookmark-control .bookmark-control-button {\n  pointer-events: all;\n}\n\n.bookmark-url {\n  height: var(--bookmark-url-height);\n  width: 100%;\n  position: absolute;\n  overflow: hidden;\n  display: none;\n  justify-content: var(--bookmark-display-justify);\n  align-items: center;\n  transition: top var(--layout-duration-04) var(--layout-timing-bounce), bottom var(--layout-duration-04) var(--layout-timing-bounce);\n}\n\n.is-bookmark-url-show .bookmark-url {\n  display: flex;\n}\n\n.is-bookmark-alignment-top-left .bookmark-url,\n.is-bookmark-alignment-center-left .bookmark-url,\n.is-bookmark-alignment-bottom-left .bookmark-url {\n  justify-content: flex-start;\n}\n\n.is-bookmark-alignment-top-center .bookmark-url,\n.is-bookmark-alignment-center-center .bookmark-url,\n.is-bookmark-alignment-bottom-center .bookmark-url {\n  justify-content: center;\n}\n\n.is-bookmark-alignment-top-right .bookmark-url,\n.is-bookmark-alignment-center-right .bookmark-url,\n.is-bookmark-alignment-bottom-right .bookmark-url {\n  justify-content: flex-end;\n}\n\n.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:focus .bookmark-front,\n.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:focus-within .bookmark-front,\n.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:hover .bookmark-front {\n  height: calc(100% - var(--bookmark-url-height));\n}\n\n.is-bookmark-orientation-top .bookmark-url {\n  top: calc(-1 * var(--bookmark-url-height));\n}\n\n.is-bookmark-orientation-bottom .bookmark-url {\n  bottom: calc(-1 * var(--bookmark-url-height));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show .bookmark:focus-within .bookmark-url,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show .bookmark:focus .bookmark-url,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show .bookmark:hover .bookmark-url,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark:focus-within .bookmark-url,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark:focus .bookmark-url,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark:hover .bookmark-url {\n  transition-delay: calc(var(--bookmark-transition-delay) * 0.03s);\n}\n\n.is-bookmark-orientation-top.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:focus-within .bookmark-url,\n.is-bookmark-orientation-top.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:focus .bookmark-url,\n.is-bookmark-orientation-top.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:hover .bookmark-url {\n  top: 0;\n}\n\n.is-bookmark-orientation-bottom.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:focus-within .bookmark-url,\n.is-bookmark-orientation-bottom.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:focus .bookmark-url,\n.is-bookmark-orientation-bottom.is-bookmark-url-show:not(.is-bookmark-edit) .bookmark:hover .bookmark-url {\n  bottom: 0;\n}\n\n.bookmark-url-text {\n  margin: 0 1em;\n  font-size: 0.75em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.bookmark-sort-placeholder {\n  box-shadow: var(--edge);\n  border-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.bookmark-sort-placeholder.bookmark .bookmark-front,\n.bookmark-sort-placeholder.bookmark .bookmark-back {\n  visibility: hidden;\n}\n\n.is-theme-background-type-accent .bookmark-sort-placeholder {\n  box-shadow: var(--edge-on-accent);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 7753:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".bookmark-empty {\n  background-color: hsla(var(--theme-primary-040), 0.2);\n  padding: 2em 3em;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  height: inherit;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 1em;\n}\n\n.bookmark-empty-string:not(:last-child) {\n  margin-bottom: 0;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9675:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --bookmark-form-space: calc((var(--form-space) / 4) * 1em);\n}\n\n.bookmark-form {\n  display: block;\n}\n\n@media (min-width: 900px) {\n  .bookmark-form {\n    display: grid;\n    grid-template-columns: 6fr 2fr;\n    gap: var(--bookmark-form-space);\n    align-items: stretch;\n    min-height: 60vh;\n  }\n}\n\n.bookmark-form-main {\n  padding-bottom: var(--bookmark-form-space);\n}\n\n.bookmark-form-aside {\n  display: none;\n}\n\n@media (min-width: 900px) {\n  .bookmark-form-aside {\n    display: block;\n  }\n}\n\n.bookmark-form-text-icon {\n  position: relative;\n}\n\n.bookmark-form-text-icon:empty:before {\n  content: \"\";\n  background-color: hsl(var(--theme-primary-040));\n  top: 50%;\n  left: 50%;\n  position: absolute;\n  width: 0.5em;\n  height: 0.5em;\n  border-radius: 50%;\n  display: block;\n  transform: translate(-50%, -50%);\n}\n\n.bookmark-form-text-icon .bookmark-form-icon {\n  transform: scale(1) rotate(0deg);\n  transition: transform var(--layout-transition-extra-fast);\n}\n\n.bookmark-form-text-icon:not(.disabled):hover .bookmark-form-icon {\n  transform: scale(2) rotate(360deg);\n  z-index: 1;\n}\n\n.bookmark-form-text-icon:not(.disabled):active .bookmark-form-icon {\n  transform: scale(4) rotate(360deg);\n}\n\n.bookmark-form-icon {\n  font-size: 1.5em;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2491:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".bookmark-preview-area {\n  position: sticky;\n  top: 50%;\n  transform: translateY(-50%);\n  display: grid;\n  justify-items: center;\n  gap: 1em;\n  grid-template-rows: auto auto;\n}\n\n.bookmark-preview-grid {\n  display: grid;\n  grid-auto-rows: var(--group-cell-height);\n  grid-template-columns: repeat(auto-fill, minmax(var(--group-cell-width), 1fr));\n  grid-auto-flow: dense;\n}\n\n.bookmark-preview-grid-wide {\n  grid-template-columns: repeat(2, var(--group-cell-width));\n}\n\n.bookmark-preview-grid-tall {\n  grid-template-rows: repeat(2, var(--group-cell-height));\n}\n\n.bookmark-preview-grid-tall,\n.bookmark-preview-grid-wide {\n  font-size: 0.5em;\n}\n\n.bookmark.bookmark-preview.bookmark-wide {\n  grid-column: span 2;\n}\n\n.bookmark.bookmark-preview.bookmark-tall {\n  grid-row: span 2;\n}\n\n.is-bookmark-edit .bookmark.bookmark-preview .bookmark-front {\n  height: 100%;\n}\n\n.is-bookmark-line-show .bookmark.bookmark-preview .bookmark-front {\n  height: calc(100% - var(--layout-line-width));\n}\n\n.is-bookmark-url-show .bookmark.bookmark-preview:focus .bookmark-front,\n.is-bookmark-url-show .bookmark.bookmark-preview:focus-within .bookmark-front,\n.is-bookmark-url-show .bookmark.bookmark-preview:hover .bookmark-front {\n  height: calc(100% - var(--bookmark-url-height));\n}\n\n.bookmark.bookmark-preview .bookmark-control {\n  display: none;\n}\n\n.is-bookmark-edit .bookmark.bookmark-preview .bookmark-display {\n  font-size: 1em;\n}\n\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark.bookmark-preview .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark.bookmark-preview:hover .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark.bookmark-preview:focus .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark.bookmark-preview .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark.bookmark-preview:hover .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark.bookmark-preview:focus .bookmark-front {\n  box-shadow: none;\n}\n\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom .bookmark.bookmark-preview:focus .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom .bookmark.bookmark-preview:focus-within .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom .bookmark.bookmark-preview:hover .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark.bookmark-preview:focus .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark.bookmark-preview:focus-within .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-bottom.is-bookmark-edit .bookmark.bookmark-preview:hover .bookmark-front {\n  box-shadow: var(--theme-shadow-bottom-large);\n}\n\n.is-bookmark-shadow-show.is-bookmark-orientation-top .bookmark.bookmark-preview:focus .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top .bookmark.bookmark-preview:focus-within .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top .bookmark.bookmark-preview:hover .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark.bookmark-preview:focus .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark.bookmark-preview:focus-within .bookmark-front,\n.is-bookmark-shadow-show.is-bookmark-orientation-top.is-bookmark-edit .bookmark.bookmark-preview:hover .bookmark-front {\n  box-shadow: var(--theme-shadow-top-large);\n}\n\n.is-bookmark-orientation-top.is-bookmark-url-show .bookmark.bookmark-preview:focus-within .bookmark-url,\n.is-bookmark-orientation-top.is-bookmark-url-show .bookmark.bookmark-preview:focus .bookmark-url,\n.is-bookmark-orientation-top.is-bookmark-url-show .bookmark.bookmark-preview:hover .bookmark-url {\n  top: 0;\n}\n\n.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark.bookmark-preview:focus-within .bookmark-url,\n.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark.bookmark-preview:focus .bookmark-url,\n.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark.bookmark-preview:hover .bookmark-url {\n  bottom: 0;\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark.bookmark-preview .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark.bookmark-preview:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark.bookmark-preview:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark.bookmark-preview:hover .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(0% + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(0% + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark.bookmark-preview .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark.bookmark-preview:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark.bookmark-preview:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark.bookmark-preview:hover .bookmark-back {\n  clip-path: polygon(0 calc(100% - calc(var(--bookmark-clip-padding) * 1em)), 100% calc(100% - calc(var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-line-show .bookmark.bookmark-preview .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-line-show .bookmark.bookmark-preview:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-line-show .bookmark.bookmark-preview:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-line-show .bookmark.bookmark-preview:hover .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(0% + var(--layout-line-width) + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(0% + var(--layout-line-width) + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-line-show .bookmark.bookmark-preview .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-line-show .bookmark.bookmark-preview:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-line-show .bookmark.bookmark-preview:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-line-show .bookmark.bookmark-preview:hover .bookmark-back {\n  clip-path: polygon(0 calc(100% - calc(var(--layout-line-width) + var(--bookmark-clip-padding) * 1em)), 100% calc(100% - calc(var(--layout-line-width) + var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show .bookmark.bookmark-preview .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(0% + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(0% + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show .bookmark.bookmark-preview:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show .bookmark.bookmark-preview:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show .bookmark.bookmark-preview:hover .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(0% + var(--bookmark-url-height) + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(0% + var(--bookmark-url-height) + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark.bookmark-preview .bookmark-back {\n  clip-path: polygon(0 calc(100% - calc(var(--bookmark-clip-padding) * 1em)), 100% calc(100% - calc(var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark.bookmark-preview:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark.bookmark-preview:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show .bookmark.bookmark-preview:hover .bookmark-back {\n  clip-path: polygon(0 calc(100% - calc(var(--bookmark-url-height) + var(--bookmark-clip-padding) * 1em)), 100% calc(100% - calc(var(--bookmark-url-height) + var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show.is-bookmark-line-show .bookmark.bookmark-preview .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(0% + var(--layout-line-width) + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(0% + var(--layout-line-width) + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show.is-bookmark-line-show .bookmark.bookmark-preview:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show.is-bookmark-line-show .bookmark.bookmark-preview:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-top.is-bookmark-url-show.is-bookmark-line-show .bookmark.bookmark-preview:hover .bookmark-back {\n  clip-path: polygon(0 0, 100% 0, 100% calc(0% + var(--bookmark-url-height) + calc(var(--bookmark-clip-padding) * 1em)), 0 calc(0% + var(--bookmark-url-height) + calc(var(--bookmark-clip-padding) * 1em)));\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show.is-bookmark-line-show .bookmark.bookmark-preview .bookmark-back {\n  clip-path: polygon(0 calc(100% - calc(var(--layout-line-width) + var(--bookmark-clip-padding) * 1em)), 100% calc(100% - calc(var(--layout-line-width) + var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show.is-bookmark-line-show .bookmark.bookmark-preview:focus .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show.is-bookmark-line-show .bookmark.bookmark-preview:focus-within .bookmark-back,\n.is-bookmark-edit.is-bookmark-orientation-bottom.is-bookmark-url-show.is-bookmark-line-show .bookmark.bookmark-preview:hover .bookmark-back {\n  clip-path: polygon(0 calc(100% - calc(var(--bookmark-url-height) + var(--bookmark-clip-padding) * 1em)), 100% calc(100% - calc(var(--bookmark-url-height) + var(--bookmark-clip-padding) * 1em)), 100% 100%, 0 100%);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark.bookmark-preview .bookmark-front,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark.bookmark-preview:hover .bookmark-front,\n.is-bookmark-edit.is-bookmark-orientation-top .bookmark.bookmark-preview:focus .bookmark-front {\n  border-top-left-radius: calc(var(--theme-radius) * 0.01em);\n  border-top-right-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark.bookmark-preview .bookmark-front,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark.bookmark-preview:hover .bookmark-front,\n.is-bookmark-edit.is-bookmark-orientation-bottom .bookmark.bookmark-preview:focus .bookmark-front {\n  border-bottom-left-radius: calc(var(--theme-radius) * 0.01em);\n  border-bottom-right-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark.bookmark-preview:focus .bookmark-front,\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark.bookmark-preview:focus-within .bookmark-front,\n.is-bookmark-url-show.is-bookmark-orientation-top .bookmark.bookmark-preview:hover .bookmark-front {\n  border-top-left-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n  border-top-right-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n}\n\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark.bookmark-preview:focus .bookmark-front,\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark.bookmark-preview:focus-within .bookmark-front,\n.is-bookmark-url-show.is-bookmark-orientation-bottom .bookmark.bookmark-preview:hover .bookmark-front {\n  border-bottom-left-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n  border-bottom-right-radius: calc((var(--theme-radius) * 0.25) * 0.01em);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8509:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --button-background: var(--theme-primary-020);\n  --button-background-focus-hover: var(--theme-primary-030);\n  --button-background-active: var(--theme-primary-040);\n  --button-background-disabled: var(--theme-primary-010);\n}\n\n:root {\n  --button-border: var(--theme-primary-030);\n  --button-border-focus-hover: var(--theme-primary-050);\n  --button-border-active: var(--theme-accent);\n  --button-border-disabled: var(--theme-primary-010);\n}\n\n:root {\n  --button-text: var(--theme-primary-text-020);\n  --button-text-focus-hover: var(--theme-primary-text-030);\n  --button-text-active: var(--theme-primary-text-030);\n  --button-text-disabled: var(--theme-primary-030);\n}\n\n:root {\n  --button-link-text: var(--theme-primary-text-010);\n  --button-link-text-focus-hover: var(--theme-primary-text-010);\n  --button-link-text-active: var(--theme-primary-text-010);\n  --button-link-text-disabled: var(--theme-primary-030);\n}\n\nbutton,\n.button,\ninput[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  background-color: hsl(var(--button-background));\n  padding: 0.25em 1.25em;\n  margin: 0;\n  color: hsl(var(--button-text));\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  min-height: 2.5em;\n  line-height: 1;\n  border: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  white-space: nowrap;\n  cursor: pointer;\n  display: inline-flex;\n  gap: 0.5em;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast);\n}\n\nbutton:focus,\nbutton:hover,\n.button:focus,\n.button:hover,\ninput[type=\"button\"]:focus,\ninput[type=\"button\"]:hover,\ninput[type=\"reset\"]:focus,\ninput[type=\"reset\"]:hover,\ninput[type=\"submit\"]:focus,\ninput[type=\"submit\"]:hover {\n  background-color: hsl(var(--button-background-focus-hover));\n  color: hsl(var(--button-text-focus-hover));\n  outline: none;\n  text-decoration: none;\n}\n\nbutton:active,\n.button:active,\ninput[type=\"button\"]:active,\ninput[type=\"reset\"]:active,\ninput[type=\"submit\"]:active {\n  background-color: hsl(var(--button-background-active));\n  color: hsl(var(--button-text-active));\n  outline: none;\n  text-decoration: none;\n  transition: none;\n}\n\nbutton.active,\n.button.active {\n  background-color: hsl(var(--button-background-active));\n  color: hsl(var(--button-text-active));\n}\n\nbutton.disabled,\nbutton.disabled:hover,\nbutton.disabled:focus,\nbutton.disabled:active,\n.button.disabled,\n.button.disabled:hover,\n.button.disabled:focus,\n.button.disabled:active,\nbutton:disabled,\nbutton:disabled:hover,\nbutton:disabled:focus,\nbutton:disabled:active,\n.button:disabled,\n.button:disabled:hover,\n.button:disabled:focus,\n.button:disabled:active {\n  background-color: hsl(var(--button-background-disabled));\n  color: hsl(var(--button-text-disabled));\n  cursor: default;\n  text-decoration: none;\n}\n\n.button-line:after {\n  content: \"\";\n  background: transparent;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  clip-path: polygon(0 calc(100% - var(--layout-line-width)), 100% calc(100% - var(--layout-line-width)), 100% 100%, 0% 100%);\n  transition: background-color var(--layout-transition-extra-fast);\n  pointer-events: none;\n}\n\n.button-line:focus:after,\n.button-line:hover:after {\n  background-color: hsl(var(--button-border-focus-hover));\n}\n\n.button-line:active:after,\n.button-line.active:after {\n  background-color: rgb(var(--button-border-active));\n  transition: none;\n}\n\n.button-line.disabled:after,\n.button-line.disabled:hover:after,\n.button-line.disabled:focus:after,\n.button-line.disabled:active:after,\n.button-line:disabled:after,\n.button-line:disabled:hover:after,\n.button-line:disabled:focus:after,\n.button-line:disabled:active:after {\n  background-color: hsl(var(--button-border-disabled));\n}\n\n.button-ring {\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n}\n\n.button-ring:focus,\n.button-ring:hover {\n  box-shadow: var(--form-ring-hover);\n}\n\n.button-ring:active,\n.button-ring.active {\n  box-shadow: var(--form-ring-accent);\n}\n\n.button-ring.disabled,\n.button-ring:disabled,\n.button-ring.disabled:focus,\n.button-ring:disabled:focus,\n.button-ring.disabled:hover,\n.button-ring:disabled:hover,\n.button-ring.disabled:active,\n.button-ring:disabled:active {\n  box-shadow: none;\n}\n\n.button-text {\n  pointer-events: none;\n}\n\nbutton .icon,\n.button .icon {\n  line-height: 1;\n  font-size: 1.5em;\n}\n\n.button-small {\n  font-size: 0.8em;\n}\n\n.button-large {\n  font-size: 1.2em;\n}\n\n.button-block {\n  display: flex;\n  width: 100%;\n}\n\nbutton [class^=\"button-\"],\nbutton [class*=\" button-\"],\n.button [class^=\"button-\"],\n.button [class*=\" button-\"] {\n  margin-left: 0.25em;\n  margin-right: 0.25em;\n}\n\nbutton [class^=\"button-\"]:first-child,\nbutton [class*=\" button-\"]:first-child,\n.button [class^=\"button-\"]:first-child,\n.button [class*=\" button-\"]:first-child {\n  margin-left: 0;\n}\n\nbutton [class^=\"button-\"]:last-child,\nbutton [class*=\" button-\"]:last-child,\n.button [class^=\"button-\"]:last-child,\n.button [class*=\" button-\"]:last-child {\n  margin-right: 0;\n}\n\n.button-link {\n  background-color: transparent;\n  border: 0;\n  color: hsl(var(--button-link-text));\n}\n\n.button-link:hover,\n.button-link:focus {\n  background-color: transparent;\n  color: hsl(var(--button-link-text-focus-hover));\n}\n\n.button-link.active,\n.button-link:active {\n  background-color: transparent;\n  color: hsl(var(--button-link-text-active));\n}\n\n.button-link.disabled,\n.button-link:disabled {\n  background-color: transparent;\n  pointer-events: none;\n}\n\n.button-link.disabled:hover,\n.button-link.disabled:focus,\n.button-link:hover:disabled,\n.button-link:focus:disabled {\n  background-color: transparent;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3816:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".clock {\n  margin: 0;\n  padding: 0;\n  font-size: 1em;\n  font-family: var(--theme-font-display-name);\n  font-weight: var(--theme-font-display-weight);\n  font-style: var(--theme-font-display-style);\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 0.25em;\n  line-height: 1.2;\n}\n\n.clock-hour,\n.clock-separator,\n.clock-minute,\n.clock-second,\n.clock-meridiem {\n  font-size: 1.5em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  white-space: nowrap;\n}\n\n.clock-separator {\n  justify-content: center;\n  color: rgb(var(--theme-accent));\n}\n\n.is-theme-background-type-accent .clock-separator {\n  justify-content: center;\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.clock-hour,\n.clock-minute,\n.clock-second,\n.clock-meridiem {\n  justify-content: center;\n}\n\n.is-theme-background-type-accent .clock-hour,\n.is-theme-background-type-accent .clock-minute,\n.is-theme-background-type-accent .clock-second,\n.is-theme-background-type-accent .clock-meridiem {\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.is-theme-background-type-color .clock-hour,\n.is-theme-background-type-color .clock-minute,\n.is-theme-background-type-color .clock-second,\n.is-theme-background-type-color .clock-meridiem {\n  color: hsl(var(--theme-background-color-rgb-text));\n}\n\n.is-header-item-justify-left .clock {\n  justify-content: flex-start;\n  text-align: left;\n}\n\n.is-header-item-justify-center .clock {\n  justify-content: center;\n  text-align: center;\n}\n\n.is-header-item-justify-right .clock {\n  justify-content: flex-end;\n  text-align: right;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5655:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".collapse {\n  margin-top: calc(var(--wrap-space) * -1);\n  position: relative;\n  display: grid;\n  transition: margin var(--layout-transition-fast);\n  pointer-events: none;\n}\n\n.collapse-area {\n  margin-top: calc(var(--wrap-space) - 1em);\n  margin-right: -1em;\n  margin-bottom: -1em;\n  margin-left: -1em;\n  position: relative;\n  display: block;\n  overflow: hidden;\n  transition: margin var(--layout-transition-fast);\n}\n\n.collapse-area.is-collapsed {\n  margin: 0;\n}\n\n.collapse-spacer {\n  padding: 1em;\n  transition: margin var(--layout-transition-fast);\n}\n\n.collapse-spacer>* {\n  pointer-events: all;\n}\n\n.collapse-area.is-collapsed .collapse-spacer {\n  margin-bottom: -200vh;\n  position: relative;\n}\n\n.collapse-toggle .icon {\n  transition: transform var(--layout-transition-fast);\n}\n\n.collapse-toggle.is-collapsed .icon {\n  transform: rotate(180deg);\n}\n\n.collapse-spacer hr:first-child {\n  margin-top: var(--wrap-space);\n}\n\n/* debug */\n/* .collapse {\n  outline: 1px dotted blue;\n}\n\n.collapse-area {\n  outline: 1px solid red;\n} */\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5151:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --theme-custom-size: 14;\n}\n\n@media (min-width: 1100px) {\n  :root {\n    --theme-custom-size: 18;\n  }\n}\n\n:root {\n  --theme-custom-columns: 3;\n  --theme-custom-preview-shift: 8;\n  --theme-custom-preview-gap: 8;\n  --theme-custom-preview-circle: 28;\n  --theme-custom-edit-height: 10;\n}\n\n.theme-custom {\n  display: grid;\n  grid-template-columns: repeat(var(--theme-custom-columns), 1fr);\n  grid-auto-rows: calc((var(--theme-custom-size) / 4) * 1em);\n  grid-gap: calc((var(--form-space) / 8) * 1em);\n}\n\n.theme-custom-tile {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: block;\n}\n\n.theme-custom-tile-front,\n.theme-custom-tile-back {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transition: background-color var(--layout-transition-extra-fast), height var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast), border-radius var(--layout-transition-extra-fast);\n}\n\n.theme-custom-tile-front {\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  z-index: 2;\n}\n\n.is-theme-custom-edit .theme-custom-tile-front {\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.is-theme-custom-edit .theme-custom-tile-front {\n  height: calc(((var(--theme-custom-size) - var(--theme-custom-edit-height)) / 4) * 1em);\n  box-shadow: var(--theme-shadow-bottom-medium);\n}\n\n.theme-custom-tile-back {\n  background-color: hsl(var(--button-background));\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  overflow: hidden;\n  z-index: 1;\n}\n\n.theme-custom-button {\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  min-height: initial;\n  line-height: 1.6;\n  display: block;\n  overflow: hidden;\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast), height var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast), border-radius var(--layout-transition-extra-fast);\n}\n\n.is-theme-custom-edit .theme-custom-button {\n  border-bottom-left-radius: 0;\n  border-bottom-right-radius: 0;\n}\n\n.theme-custom-control {\n  position: absolute;\n  left: 0;\n  bottom: calc(((var(--theme-custom-edit-height) / 4) * 1em) * -1);\n  width: 100%;\n  height: calc((var(--theme-custom-edit-height) / 4) * 1em);\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: 1fr;\n  overflow: hidden;\n  transition: bottom var(--layout-transition-extra-fast);\n}\n\n.is-theme-custom-edit .theme-custom-control {\n  bottom: 0;\n}\n\n.theme-custom-control-button {\n  padding: 0;\n  border-radius: 0;\n  min-height: initial;\n  position: relative;\n}\n\n.theme-custom-control-button:hover,\n.theme-custom-control-button:focus {\n  background-color: hsla(var(--theme-accent-rgb-text), 0.1);\n}\n\n.theme-custom-control-edit .icon,\n.theme-custom-control-remove .icon {\n  position: relative;\n}\n\n.theme-custom-control-edit .icon {\n  bottom: calc((var(--theme-radius) / 32) * 0.01em);\n  left: calc((var(--theme-radius) / 16) * 0.01em);\n}\n\n.theme-custom-control-remove .icon {\n  bottom: calc((var(--theme-radius) / 32) * 0.01em);\n  right: calc((var(--theme-radius) / 16) * 0.01em);\n}\n\n.theme-custom-preview {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n\n.theme-custom-background-01,\n.theme-custom-background-02,\n.theme-custom-background-03,\n.theme-custom-background-04,\n.theme-custom-accent {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: block;\n  transition: clip-path var(--layout-transition-extra-fast);\n}\n\n.theme-custom-background-01 {\n  background-color: rgb(var(--theme-custom-background-01));\n  z-index: 1;\n}\n\n.theme-custom-background-02 {\n  --theme-custom-preview-shift-02: calc((var(--theme-custom-preview-shift) / 4) + 2);\n  background-color: rgb(var(--theme-custom-background-02));\n  z-index: 2;\n  clip-path: polygon(100% calc(100% - (var(--theme-custom-preview-shift-02) * ((var(--theme-custom-preview-gap) / 4) * 1em))), 100% 100%, calc(100% - (var(--theme-custom-preview-shift-02) * ((var(--theme-custom-preview-gap) / 4) * 1em))) 100%);\n  transition-delay: var(--layout-duration-03);\n}\n\n.theme-custom-background-03 {\n  --theme-custom-preview-shift-03: calc((var(--theme-custom-preview-shift) / 4) + 1);\n  background-color: rgb(var(--theme-custom-background-03));\n  z-index: 3;\n  clip-path: polygon(100% calc(100% - (var(--theme-custom-preview-shift-03) * ((var(--theme-custom-preview-gap) / 4) * 1em))), 100% 100%, calc(100% - (var(--theme-custom-preview-shift-03) * ((var(--theme-custom-preview-gap) / 4) * 1em))) 100%);\n  transition-delay: var(--layout-duration-02);\n}\n\n.theme-custom-background-04 {\n  --theme-custom-preview-shift-04: calc(var(--theme-custom-preview-shift) / 4);\n  background-color: rgb(var(--theme-custom-background-04));\n  z-index: 4;\n  clip-path: polygon(100% calc(100% - (var(--theme-custom-preview-shift-04) * ((var(--theme-custom-preview-gap) / 4) * 1em))), 100% 100%, calc(100% - (var(--theme-custom-preview-shift-04) * ((var(--theme-custom-preview-gap) / 4) * 1em))) 100%);\n  transition-delay: var(--layout-duration-01);\n}\n\n.theme-custom-accent {\n  z-index: 5;\n  background-color: rgb(var(--theme-custom-accent));\n  clip-path: circle(calc(var(--theme-custom-preview-circle) * 1%) at 100% 100%);\n}\n\n.theme-custom-button:focus,\n.theme-custom-button:hover {\n  --theme-custom-preview-shift: 10;\n  --theme-custom-preview-circle: 34;\n}\n\n.theme-custom-name {\n  padding: calc(0.75em + ((var(--theme-radius) / 8) * 0.01em));\n  color: hsl(var(--theme-custom-text));\n  font-style: normal;\n  font-size: 0.75em;\n  text-align: left;\n  display: block;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 6;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: initial;\n  transform: scale(1);\n  transition: color var(--layout-transition-extra-fast), transform var(--layout-transition-extra-fast), max-width var(--layout-transition-extra-fast), max-height var(--layout-transition-extra-fast), top var(--layout-transition-extra-fast), left var(--layout-transition-extra-fast);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8154:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".date {\n  margin: 0;\n  padding: 0;\n  font-size: 1em;\n  font-family: var(--theme-font-display-name);\n  font-weight: var(--theme-font-display-weight);\n  font-style: var(--theme-font-display-style);\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  gap: 0.25em;\n  line-height: 1.2;\n}\n\n.date-separator,\n.date-date,\n.date-day,\n.date-month,\n.date-year {\n  font-size: 1.5em;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  white-space: nowrap;\n}\n\n.date-separator {\n  justify-content: center;\n  color: rgb(var(--theme-accent));\n}\n\n.is-theme-background-type-accent .date-separator {\n  justify-content: center;\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.date-date,\n.date-day,\n.date-month,\n.date-year {\n  justify-content: center;\n}\n\n.is-theme-background-type-accent .date-day,\n.is-theme-background-type-accent .date-date,\n.is-theme-background-type-accent .date-month,\n.is-theme-background-type-accent .date-year {\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.is-theme-background-type-color .date-day,\n.is-theme-background-type-color .date-date,\n.is-theme-background-type-color .date-month,\n.is-theme-background-type-color .date-year {\n  color: hsl(var(--theme-background-color-rgb-text));\n}\n\n.is-header-item-justify-left .date {\n  justify-content: flex-start;\n  text-align: left;\n}\n\n.is-header-item-justify-center .date {\n  justify-content: center;\n  text-align: center;\n}\n\n.is-header-item-justify-right .date {\n  justify-content: flex-end;\n  text-align: right;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4827:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --dropdown-background: var(--theme-primary-020);\n}\n\n.dropdown-menu {\n  padding: 0.5em;\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  top: calc(var(--dropdown-menu-top) * 1px);\n  left: calc(var(--dropdown-menu-left) * 1px);\n  z-index: var(--z-index-dropdown);\n}\n\n.dropdown-content {\n  background-color: hsl(var(--dropdown-background));\n  padding: 0.5em;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  display: flex;\n  flex-direction: column;\n  gap: 0.25em;\n  min-width: 15em;\n  box-shadow: var(--theme-shadow-bottom-large);\n  overflow: hidden;\n}\n\n.dropdown-menu-button {\n  padding: 0.25em 1em;\n  justify-content: flex-start;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 455:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --edge: inset 0 0 0 var(--layout-line-width) rgb(var(--theme-accent)),\n    inset 0 0 0 calc(var(--layout-line-width) * 4) rgba(var(--theme-accent), 0.1),\n    inset 0 0 0 calc(var(--layout-line-width) * 8) rgba(var(--theme-accent), 0.1);\n  --edge-on-accent: inset 0 0 0 var(--layout-line-width) hsl(var(--theme-accent-rgb-text)),\n    inset 0 0 0 calc(var(--layout-line-width) * 4) hsla(var(--theme-accent-rgb-text), 0.1),\n    inset 0 0 0 calc(var(--layout-line-width) * 8) hsla(var(--theme-accent-rgb-text), 0.1);\n}\n\n.edge,\n.edge-secondary {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  opacity: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  z-index: var(--z-index-edge);\n  pointer-events: none;\n  transition: opacity var(--layout-transition-fast);\n}\n\n.edge {\n  background-color: rgba(var(--theme-accent), 0.2);\n  box-shadow: var(--edge);\n}\n\n.edge-secondary {\n  border: var(--layout-line-width) solid rgba(var(--theme-accent), 0.5);\n}\n\n.edge.is-edge-opening,\n.edge-secondary.is-edge-opening {\n  transition:\n    opacity var(--layout-transition-fast),\n    top var(--layout-transition-fast),\n    left var(--layout-transition-fast),\n    width var(--layout-transition-fast),\n    height var(--layout-transition-fast);\n}\n\n.is-theme-background-type-accent .edge,\n.is-theme-background-type-accent .edge-secondary {\n  box-shadow: var(--edge-on-accent);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3831:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1667);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _font_fa_fa_brands_400_woff2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6096);
/* harmony import */ var _font_fa_fa_brands_400_woff__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7460);
/* harmony import */ var _font_fa_fa_brands_400_ttf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(1178);
/* harmony import */ var _font_fa_fa_regular_400_woff2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6360);
/* harmony import */ var _font_fa_fa_regular_400_woff__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(5374);
/* harmony import */ var _font_fa_fa_regular_400_ttf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(2875);
/* harmony import */ var _font_fa_fa_solid_900_woff2__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(1759);
/* harmony import */ var _font_fa_fa_solid_900_woff__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(9342);
/* harmony import */ var _font_fa_fa_solid_900_ttf__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(7959);
// Imports











var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_brands_400_woff2__WEBPACK_IMPORTED_MODULE_2__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_brands_400_woff__WEBPACK_IMPORTED_MODULE_3__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_brands_400_ttf__WEBPACK_IMPORTED_MODULE_4__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_regular_400_woff2__WEBPACK_IMPORTED_MODULE_5__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_regular_400_woff__WEBPACK_IMPORTED_MODULE_6__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_regular_400_ttf__WEBPACK_IMPORTED_MODULE_7__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_solid_900_woff2__WEBPACK_IMPORTED_MODULE_8__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_solid_900_woff__WEBPACK_IMPORTED_MODULE_9__/* .default */ .Z);
var ___CSS_LOADER_URL_REPLACEMENT_8___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_font_fa_fa_solid_900_ttf__WEBPACK_IMPORTED_MODULE_10__/* .default */ .Z);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/*!\n * Font Awesome Free 5.14.0 by @fontawesome - https://fontawesome.com\n * License - https://fontawesome.com/license/free (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)\n */\n.fa,\n.fas,\n.far,\n.fal,\n.fad,\n.fab {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: inline-block;\n  font-style: normal;\n  font-variant: normal;\n  text-rendering: auto;\n  line-height: 1;\n}\n\n.fa-lg {\n  font-size: 1.33333em;\n  line-height: 0.75em;\n  vertical-align: -.0667em;\n}\n\n.fa-xs {\n  font-size: .75em;\n}\n\n.fa-sm {\n  font-size: .875em;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: 2.5em;\n  padding-left: 0;\n}\n\n.fa-ul>li {\n  position: relative;\n}\n\n.fa-li {\n  left: -2em;\n  position: absolute;\n  text-align: center;\n  width: 2em;\n  line-height: inherit;\n}\n\n.fa-border {\n  border: solid 0.08em #eee;\n  border-radius: .1em;\n  padding: .2em .25em .15em;\n}\n\n.fa-pull-left {\n  float: left;\n}\n\n.fa-pull-right {\n  float: right;\n}\n\n.fa.fa-pull-left,\n.fas.fa-pull-left,\n.far.fa-pull-left,\n.fal.fa-pull-left,\n.fab.fa-pull-left {\n  margin-right: .3em;\n}\n\n.fa.fa-pull-right,\n.fas.fa-pull-right,\n.far.fa-pull-right,\n.fal.fa-pull-right,\n.fab.fa-pull-right {\n  margin-left: .3em;\n}\n\n.fa-spin {\n  -webkit-animation: fa-spin 2s infinite linear;\n  animation: fa-spin 2s infinite linear;\n}\n\n.fa-pulse {\n  -webkit-animation: fa-spin 1s infinite steps(8);\n  animation: fa-spin 1s infinite steps(8);\n}\n\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n.fa-rotate-90 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=1)\";\n  -webkit-transform: rotate(90deg);\n  transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2)\";\n  -webkit-transform: rotate(180deg);\n  transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=3)\";\n  -webkit-transform: rotate(270deg);\n  transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1)\";\n  -webkit-transform: scale(-1, 1);\n  transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(1, -1);\n  transform: scale(1, -1);\n}\n\n.fa-flip-both, .fa-flip-horizontal.fa-flip-vertical {\n  -ms-filter: \"progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1)\";\n  -webkit-transform: scale(-1, -1);\n  transform: scale(-1, -1);\n}\n\n:root .fa-rotate-90,\n:root .fa-rotate-180,\n:root .fa-rotate-270,\n:root .fa-flip-horizontal,\n:root .fa-flip-vertical,\n:root .fa-flip-both {\n  -webkit-filter: none;\n  filter: none;\n}\n\n.fa-stack {\n  display: inline-block;\n  height: 2em;\n  line-height: 2em;\n  position: relative;\n  vertical-align: middle;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  left: 0;\n  position: absolute;\n  text-align: center;\n  width: 100%;\n}\n\n.fa-stack-1x {\n  line-height: inherit;\n}\n\n.fa-stack-2x {\n  font-size: 2em;\n}\n\n.fa-inverse {\n  color: #fff;\n}\n\n/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen\nreaders do not read off random characters that represent icons */\n.fa-500px:before {\n  content: \"\\f26e\";\n}\n\n.fa-accessible-icon:before {\n  content: \"\\f368\";\n}\n\n.fa-accusoft:before {\n  content: \"\\f369\";\n}\n\n.fa-acquisitions-incorporated:before {\n  content: \"\\f6af\";\n}\n\n.fa-ad:before {\n  content: \"\\f641\";\n}\n\n.fa-address-book:before {\n  content: \"\\f2b9\";\n}\n\n.fa-address-card:before {\n  content: \"\\f2bb\";\n}\n\n.fa-adjust:before {\n  content: \"\\f042\";\n}\n\n.fa-adn:before {\n  content: \"\\f170\";\n}\n\n.fa-adobe:before {\n  content: \"\\f778\";\n}\n\n.fa-adversal:before {\n  content: \"\\f36a\";\n}\n\n.fa-affiliatetheme:before {\n  content: \"\\f36b\";\n}\n\n.fa-air-freshener:before {\n  content: \"\\f5d0\";\n}\n\n.fa-airbnb:before {\n  content: \"\\f834\";\n}\n\n.fa-algolia:before {\n  content: \"\\f36c\";\n}\n\n.fa-align-center:before {\n  content: \"\\f037\";\n}\n\n.fa-align-justify:before {\n  content: \"\\f039\";\n}\n\n.fa-align-left:before {\n  content: \"\\f036\";\n}\n\n.fa-align-right:before {\n  content: \"\\f038\";\n}\n\n.fa-alipay:before {\n  content: \"\\f642\";\n}\n\n.fa-allergies:before {\n  content: \"\\f461\";\n}\n\n.fa-amazon:before {\n  content: \"\\f270\";\n}\n\n.fa-amazon-pay:before {\n  content: \"\\f42c\";\n}\n\n.fa-ambulance:before {\n  content: \"\\f0f9\";\n}\n\n.fa-american-sign-language-interpreting:before {\n  content: \"\\f2a3\";\n}\n\n.fa-amilia:before {\n  content: \"\\f36d\";\n}\n\n.fa-anchor:before {\n  content: \"\\f13d\";\n}\n\n.fa-android:before {\n  content: \"\\f17b\";\n}\n\n.fa-angellist:before {\n  content: \"\\f209\";\n}\n\n.fa-angle-double-down:before {\n  content: \"\\f103\";\n}\n\n.fa-angle-double-left:before {\n  content: \"\\f100\";\n}\n\n.fa-angle-double-right:before {\n  content: \"\\f101\";\n}\n\n.fa-angle-double-up:before {\n  content: \"\\f102\";\n}\n\n.fa-angle-down:before {\n  content: \"\\f107\";\n}\n\n.fa-angle-left:before {\n  content: \"\\f104\";\n}\n\n.fa-angle-right:before {\n  content: \"\\f105\";\n}\n\n.fa-angle-up:before {\n  content: \"\\f106\";\n}\n\n.fa-angry:before {\n  content: \"\\f556\";\n}\n\n.fa-angrycreative:before {\n  content: \"\\f36e\";\n}\n\n.fa-angular:before {\n  content: \"\\f420\";\n}\n\n.fa-ankh:before {\n  content: \"\\f644\";\n}\n\n.fa-app-store:before {\n  content: \"\\f36f\";\n}\n\n.fa-app-store-ios:before {\n  content: \"\\f370\";\n}\n\n.fa-apper:before {\n  content: \"\\f371\";\n}\n\n.fa-apple:before {\n  content: \"\\f179\";\n}\n\n.fa-apple-alt:before {\n  content: \"\\f5d1\";\n}\n\n.fa-apple-pay:before {\n  content: \"\\f415\";\n}\n\n.fa-archive:before {\n  content: \"\\f187\";\n}\n\n.fa-archway:before {\n  content: \"\\f557\";\n}\n\n.fa-arrow-alt-circle-down:before {\n  content: \"\\f358\";\n}\n\n.fa-arrow-alt-circle-left:before {\n  content: \"\\f359\";\n}\n\n.fa-arrow-alt-circle-right:before {\n  content: \"\\f35a\";\n}\n\n.fa-arrow-alt-circle-up:before {\n  content: \"\\f35b\";\n}\n\n.fa-arrow-circle-down:before {\n  content: \"\\f0ab\";\n}\n\n.fa-arrow-circle-left:before {\n  content: \"\\f0a8\";\n}\n\n.fa-arrow-circle-right:before {\n  content: \"\\f0a9\";\n}\n\n.fa-arrow-circle-up:before {\n  content: \"\\f0aa\";\n}\n\n.fa-arrow-down:before {\n  content: \"\\f063\";\n}\n\n.fa-arrow-left:before {\n  content: \"\\f060\";\n}\n\n.fa-arrow-right:before {\n  content: \"\\f061\";\n}\n\n.fa-arrow-up:before {\n  content: \"\\f062\";\n}\n\n.fa-arrows-alt:before {\n  content: \"\\f0b2\";\n}\n\n.fa-arrows-alt-h:before {\n  content: \"\\f337\";\n}\n\n.fa-arrows-alt-v:before {\n  content: \"\\f338\";\n}\n\n.fa-artstation:before {\n  content: \"\\f77a\";\n}\n\n.fa-assistive-listening-systems:before {\n  content: \"\\f2a2\";\n}\n\n.fa-asterisk:before {\n  content: \"\\f069\";\n}\n\n.fa-asymmetrik:before {\n  content: \"\\f372\";\n}\n\n.fa-at:before {\n  content: \"\\f1fa\";\n}\n\n.fa-atlas:before {\n  content: \"\\f558\";\n}\n\n.fa-atlassian:before {\n  content: \"\\f77b\";\n}\n\n.fa-atom:before {\n  content: \"\\f5d2\";\n}\n\n.fa-audible:before {\n  content: \"\\f373\";\n}\n\n.fa-audio-description:before {\n  content: \"\\f29e\";\n}\n\n.fa-autoprefixer:before {\n  content: \"\\f41c\";\n}\n\n.fa-avianex:before {\n  content: \"\\f374\";\n}\n\n.fa-aviato:before {\n  content: \"\\f421\";\n}\n\n.fa-award:before {\n  content: \"\\f559\";\n}\n\n.fa-aws:before {\n  content: \"\\f375\";\n}\n\n.fa-baby:before {\n  content: \"\\f77c\";\n}\n\n.fa-baby-carriage:before {\n  content: \"\\f77d\";\n}\n\n.fa-backspace:before {\n  content: \"\\f55a\";\n}\n\n.fa-backward:before {\n  content: \"\\f04a\";\n}\n\n.fa-bacon:before {\n  content: \"\\f7e5\";\n}\n\n.fa-bacteria:before {\n  content: \"\\e059\";\n}\n\n.fa-bacterium:before {\n  content: \"\\e05a\";\n}\n\n.fa-bahai:before {\n  content: \"\\f666\";\n}\n\n.fa-balance-scale:before {\n  content: \"\\f24e\";\n}\n\n.fa-balance-scale-left:before {\n  content: \"\\f515\";\n}\n\n.fa-balance-scale-right:before {\n  content: \"\\f516\";\n}\n\n.fa-ban:before {\n  content: \"\\f05e\";\n}\n\n.fa-band-aid:before {\n  content: \"\\f462\";\n}\n\n.fa-bandcamp:before {\n  content: \"\\f2d5\";\n}\n\n.fa-barcode:before {\n  content: \"\\f02a\";\n}\n\n.fa-bars:before {\n  content: \"\\f0c9\";\n}\n\n.fa-baseball-ball:before {\n  content: \"\\f433\";\n}\n\n.fa-basketball-ball:before {\n  content: \"\\f434\";\n}\n\n.fa-bath:before {\n  content: \"\\f2cd\";\n}\n\n.fa-battery-empty:before {\n  content: \"\\f244\";\n}\n\n.fa-battery-full:before {\n  content: \"\\f240\";\n}\n\n.fa-battery-half:before {\n  content: \"\\f242\";\n}\n\n.fa-battery-quarter:before {\n  content: \"\\f243\";\n}\n\n.fa-battery-three-quarters:before {\n  content: \"\\f241\";\n}\n\n.fa-battle-net:before {\n  content: \"\\f835\";\n}\n\n.fa-bed:before {\n  content: \"\\f236\";\n}\n\n.fa-beer:before {\n  content: \"\\f0fc\";\n}\n\n.fa-behance:before {\n  content: \"\\f1b4\";\n}\n\n.fa-behance-square:before {\n  content: \"\\f1b5\";\n}\n\n.fa-bell:before {\n  content: \"\\f0f3\";\n}\n\n.fa-bell-slash:before {\n  content: \"\\f1f6\";\n}\n\n.fa-bezier-curve:before {\n  content: \"\\f55b\";\n}\n\n.fa-bible:before {\n  content: \"\\f647\";\n}\n\n.fa-bicycle:before {\n  content: \"\\f206\";\n}\n\n.fa-biking:before {\n  content: \"\\f84a\";\n}\n\n.fa-bimobject:before {\n  content: \"\\f378\";\n}\n\n.fa-binoculars:before {\n  content: \"\\f1e5\";\n}\n\n.fa-biohazard:before {\n  content: \"\\f780\";\n}\n\n.fa-birthday-cake:before {\n  content: \"\\f1fd\";\n}\n\n.fa-bitbucket:before {\n  content: \"\\f171\";\n}\n\n.fa-bitcoin:before {\n  content: \"\\f379\";\n}\n\n.fa-bity:before {\n  content: \"\\f37a\";\n}\n\n.fa-black-tie:before {\n  content: \"\\f27e\";\n}\n\n.fa-blackberry:before {\n  content: \"\\f37b\";\n}\n\n.fa-blender:before {\n  content: \"\\f517\";\n}\n\n.fa-blender-phone:before {\n  content: \"\\f6b6\";\n}\n\n.fa-blind:before {\n  content: \"\\f29d\";\n}\n\n.fa-blog:before {\n  content: \"\\f781\";\n}\n\n.fa-blogger:before {\n  content: \"\\f37c\";\n}\n\n.fa-blogger-b:before {\n  content: \"\\f37d\";\n}\n\n.fa-bluetooth:before {\n  content: \"\\f293\";\n}\n\n.fa-bluetooth-b:before {\n  content: \"\\f294\";\n}\n\n.fa-bold:before {\n  content: \"\\f032\";\n}\n\n.fa-bolt:before {\n  content: \"\\f0e7\";\n}\n\n.fa-bomb:before {\n  content: \"\\f1e2\";\n}\n\n.fa-bone:before {\n  content: \"\\f5d7\";\n}\n\n.fa-bong:before {\n  content: \"\\f55c\";\n}\n\n.fa-book:before {\n  content: \"\\f02d\";\n}\n\n.fa-book-dead:before {\n  content: \"\\f6b7\";\n}\n\n.fa-book-medical:before {\n  content: \"\\f7e6\";\n}\n\n.fa-book-open:before {\n  content: \"\\f518\";\n}\n\n.fa-book-reader:before {\n  content: \"\\f5da\";\n}\n\n.fa-bookmark:before {\n  content: \"\\f02e\";\n}\n\n.fa-bootstrap:before {\n  content: \"\\f836\";\n}\n\n.fa-border-all:before {\n  content: \"\\f84c\";\n}\n\n.fa-border-none:before {\n  content: \"\\f850\";\n}\n\n.fa-border-style:before {\n  content: \"\\f853\";\n}\n\n.fa-bowling-ball:before {\n  content: \"\\f436\";\n}\n\n.fa-box:before {\n  content: \"\\f466\";\n}\n\n.fa-box-open:before {\n  content: \"\\f49e\";\n}\n\n.fa-box-tissue:before {\n  content: \"\\e05b\";\n}\n\n.fa-boxes:before {\n  content: \"\\f468\";\n}\n\n.fa-braille:before {\n  content: \"\\f2a1\";\n}\n\n.fa-brain:before {\n  content: \"\\f5dc\";\n}\n\n.fa-bread-slice:before {\n  content: \"\\f7ec\";\n}\n\n.fa-briefcase:before {\n  content: \"\\f0b1\";\n}\n\n.fa-briefcase-medical:before {\n  content: \"\\f469\";\n}\n\n.fa-broadcast-tower:before {\n  content: \"\\f519\";\n}\n\n.fa-broom:before {\n  content: \"\\f51a\";\n}\n\n.fa-brush:before {\n  content: \"\\f55d\";\n}\n\n.fa-btc:before {\n  content: \"\\f15a\";\n}\n\n.fa-buffer:before {\n  content: \"\\f837\";\n}\n\n.fa-bug:before {\n  content: \"\\f188\";\n}\n\n.fa-building:before {\n  content: \"\\f1ad\";\n}\n\n.fa-bullhorn:before {\n  content: \"\\f0a1\";\n}\n\n.fa-bullseye:before {\n  content: \"\\f140\";\n}\n\n.fa-burn:before {\n  content: \"\\f46a\";\n}\n\n.fa-buromobelexperte:before {\n  content: \"\\f37f\";\n}\n\n.fa-bus:before {\n  content: \"\\f207\";\n}\n\n.fa-bus-alt:before {\n  content: \"\\f55e\";\n}\n\n.fa-business-time:before {\n  content: \"\\f64a\";\n}\n\n.fa-buy-n-large:before {\n  content: \"\\f8a6\";\n}\n\n.fa-buysellads:before {\n  content: \"\\f20d\";\n}\n\n.fa-calculator:before {\n  content: \"\\f1ec\";\n}\n\n.fa-calendar:before {\n  content: \"\\f133\";\n}\n\n.fa-calendar-alt:before {\n  content: \"\\f073\";\n}\n\n.fa-calendar-check:before {\n  content: \"\\f274\";\n}\n\n.fa-calendar-day:before {\n  content: \"\\f783\";\n}\n\n.fa-calendar-minus:before {\n  content: \"\\f272\";\n}\n\n.fa-calendar-plus:before {\n  content: \"\\f271\";\n}\n\n.fa-calendar-times:before {\n  content: \"\\f273\";\n}\n\n.fa-calendar-week:before {\n  content: \"\\f784\";\n}\n\n.fa-camera:before {\n  content: \"\\f030\";\n}\n\n.fa-camera-retro:before {\n  content: \"\\f083\";\n}\n\n.fa-campground:before {\n  content: \"\\f6bb\";\n}\n\n.fa-canadian-maple-leaf:before {\n  content: \"\\f785\";\n}\n\n.fa-candy-cane:before {\n  content: \"\\f786\";\n}\n\n.fa-cannabis:before {\n  content: \"\\f55f\";\n}\n\n.fa-capsules:before {\n  content: \"\\f46b\";\n}\n\n.fa-car:before {\n  content: \"\\f1b9\";\n}\n\n.fa-car-alt:before {\n  content: \"\\f5de\";\n}\n\n.fa-car-battery:before {\n  content: \"\\f5df\";\n}\n\n.fa-car-crash:before {\n  content: \"\\f5e1\";\n}\n\n.fa-car-side:before {\n  content: \"\\f5e4\";\n}\n\n.fa-caravan:before {\n  content: \"\\f8ff\";\n}\n\n.fa-caret-down:before {\n  content: \"\\f0d7\";\n}\n\n.fa-caret-left:before {\n  content: \"\\f0d9\";\n}\n\n.fa-caret-right:before {\n  content: \"\\f0da\";\n}\n\n.fa-caret-square-down:before {\n  content: \"\\f150\";\n}\n\n.fa-caret-square-left:before {\n  content: \"\\f191\";\n}\n\n.fa-caret-square-right:before {\n  content: \"\\f152\";\n}\n\n.fa-caret-square-up:before {\n  content: \"\\f151\";\n}\n\n.fa-caret-up:before {\n  content: \"\\f0d8\";\n}\n\n.fa-carrot:before {\n  content: \"\\f787\";\n}\n\n.fa-cart-arrow-down:before {\n  content: \"\\f218\";\n}\n\n.fa-cart-plus:before {\n  content: \"\\f217\";\n}\n\n.fa-cash-register:before {\n  content: \"\\f788\";\n}\n\n.fa-cat:before {\n  content: \"\\f6be\";\n}\n\n.fa-cc-amazon-pay:before {\n  content: \"\\f42d\";\n}\n\n.fa-cc-amex:before {\n  content: \"\\f1f3\";\n}\n\n.fa-cc-apple-pay:before {\n  content: \"\\f416\";\n}\n\n.fa-cc-diners-club:before {\n  content: \"\\f24c\";\n}\n\n.fa-cc-discover:before {\n  content: \"\\f1f2\";\n}\n\n.fa-cc-jcb:before {\n  content: \"\\f24b\";\n}\n\n.fa-cc-mastercard:before {\n  content: \"\\f1f1\";\n}\n\n.fa-cc-paypal:before {\n  content: \"\\f1f4\";\n}\n\n.fa-cc-stripe:before {\n  content: \"\\f1f5\";\n}\n\n.fa-cc-visa:before {\n  content: \"\\f1f0\";\n}\n\n.fa-centercode:before {\n  content: \"\\f380\";\n}\n\n.fa-centos:before {\n  content: \"\\f789\";\n}\n\n.fa-certificate:before {\n  content: \"\\f0a3\";\n}\n\n.fa-chair:before {\n  content: \"\\f6c0\";\n}\n\n.fa-chalkboard:before {\n  content: \"\\f51b\";\n}\n\n.fa-chalkboard-teacher:before {\n  content: \"\\f51c\";\n}\n\n.fa-charging-station:before {\n  content: \"\\f5e7\";\n}\n\n.fa-chart-area:before {\n  content: \"\\f1fe\";\n}\n\n.fa-chart-bar:before {\n  content: \"\\f080\";\n}\n\n.fa-chart-line:before {\n  content: \"\\f201\";\n}\n\n.fa-chart-pie:before {\n  content: \"\\f200\";\n}\n\n.fa-check:before {\n  content: \"\\f00c\";\n}\n\n.fa-check-circle:before {\n  content: \"\\f058\";\n}\n\n.fa-check-double:before {\n  content: \"\\f560\";\n}\n\n.fa-check-square:before {\n  content: \"\\f14a\";\n}\n\n.fa-cheese:before {\n  content: \"\\f7ef\";\n}\n\n.fa-chess:before {\n  content: \"\\f439\";\n}\n\n.fa-chess-bishop:before {\n  content: \"\\f43a\";\n}\n\n.fa-chess-board:before {\n  content: \"\\f43c\";\n}\n\n.fa-chess-king:before {\n  content: \"\\f43f\";\n}\n\n.fa-chess-knight:before {\n  content: \"\\f441\";\n}\n\n.fa-chess-pawn:before {\n  content: \"\\f443\";\n}\n\n.fa-chess-queen:before {\n  content: \"\\f445\";\n}\n\n.fa-chess-rook:before {\n  content: \"\\f447\";\n}\n\n.fa-chevron-circle-down:before {\n  content: \"\\f13a\";\n}\n\n.fa-chevron-circle-left:before {\n  content: \"\\f137\";\n}\n\n.fa-chevron-circle-right:before {\n  content: \"\\f138\";\n}\n\n.fa-chevron-circle-up:before {\n  content: \"\\f139\";\n}\n\n.fa-chevron-down:before {\n  content: \"\\f078\";\n}\n\n.fa-chevron-left:before {\n  content: \"\\f053\";\n}\n\n.fa-chevron-right:before {\n  content: \"\\f054\";\n}\n\n.fa-chevron-up:before {\n  content: \"\\f077\";\n}\n\n.fa-child:before {\n  content: \"\\f1ae\";\n}\n\n.fa-chrome:before {\n  content: \"\\f268\";\n}\n\n.fa-chromecast:before {\n  content: \"\\f838\";\n}\n\n.fa-church:before {\n  content: \"\\f51d\";\n}\n\n.fa-circle:before {\n  content: \"\\f111\";\n}\n\n.fa-circle-notch:before {\n  content: \"\\f1ce\";\n}\n\n.fa-city:before {\n  content: \"\\f64f\";\n}\n\n.fa-clinic-medical:before {\n  content: \"\\f7f2\";\n}\n\n.fa-clipboard:before {\n  content: \"\\f328\";\n}\n\n.fa-clipboard-check:before {\n  content: \"\\f46c\";\n}\n\n.fa-clipboard-list:before {\n  content: \"\\f46d\";\n}\n\n.fa-clock:before {\n  content: \"\\f017\";\n}\n\n.fa-clone:before {\n  content: \"\\f24d\";\n}\n\n.fa-closed-captioning:before {\n  content: \"\\f20a\";\n}\n\n.fa-cloud:before {\n  content: \"\\f0c2\";\n}\n\n.fa-cloud-download-alt:before {\n  content: \"\\f381\";\n}\n\n.fa-cloud-meatball:before {\n  content: \"\\f73b\";\n}\n\n.fa-cloud-moon:before {\n  content: \"\\f6c3\";\n}\n\n.fa-cloud-moon-rain:before {\n  content: \"\\f73c\";\n}\n\n.fa-cloud-rain:before {\n  content: \"\\f73d\";\n}\n\n.fa-cloud-showers-heavy:before {\n  content: \"\\f740\";\n}\n\n.fa-cloud-sun:before {\n  content: \"\\f6c4\";\n}\n\n.fa-cloud-sun-rain:before {\n  content: \"\\f743\";\n}\n\n.fa-cloud-upload-alt:before {\n  content: \"\\f382\";\n}\n\n.fa-cloudscale:before {\n  content: \"\\f383\";\n}\n\n.fa-cloudsmith:before {\n  content: \"\\f384\";\n}\n\n.fa-cloudversify:before {\n  content: \"\\f385\";\n}\n\n.fa-cocktail:before {\n  content: \"\\f561\";\n}\n\n.fa-code:before {\n  content: \"\\f121\";\n}\n\n.fa-code-branch:before {\n  content: \"\\f126\";\n}\n\n.fa-codepen:before {\n  content: \"\\f1cb\";\n}\n\n.fa-codiepie:before {\n  content: \"\\f284\";\n}\n\n.fa-coffee:before {\n  content: \"\\f0f4\";\n}\n\n.fa-cog:before {\n  content: \"\\f013\";\n}\n\n.fa-cogs:before {\n  content: \"\\f085\";\n}\n\n.fa-coins:before {\n  content: \"\\f51e\";\n}\n\n.fa-columns:before {\n  content: \"\\f0db\";\n}\n\n.fa-comment:before {\n  content: \"\\f075\";\n}\n\n.fa-comment-alt:before {\n  content: \"\\f27a\";\n}\n\n.fa-comment-dollar:before {\n  content: \"\\f651\";\n}\n\n.fa-comment-dots:before {\n  content: \"\\f4ad\";\n}\n\n.fa-comment-medical:before {\n  content: \"\\f7f5\";\n}\n\n.fa-comment-slash:before {\n  content: \"\\f4b3\";\n}\n\n.fa-comments:before {\n  content: \"\\f086\";\n}\n\n.fa-comments-dollar:before {\n  content: \"\\f653\";\n}\n\n.fa-compact-disc:before {\n  content: \"\\f51f\";\n}\n\n.fa-compass:before {\n  content: \"\\f14e\";\n}\n\n.fa-compress:before {\n  content: \"\\f066\";\n}\n\n.fa-compress-alt:before {\n  content: \"\\f422\";\n}\n\n.fa-compress-arrows-alt:before {\n  content: \"\\f78c\";\n}\n\n.fa-concierge-bell:before {\n  content: \"\\f562\";\n}\n\n.fa-confluence:before {\n  content: \"\\f78d\";\n}\n\n.fa-connectdevelop:before {\n  content: \"\\f20e\";\n}\n\n.fa-contao:before {\n  content: \"\\f26d\";\n}\n\n.fa-cookie:before {\n  content: \"\\f563\";\n}\n\n.fa-cookie-bite:before {\n  content: \"\\f564\";\n}\n\n.fa-copy:before {\n  content: \"\\f0c5\";\n}\n\n.fa-copyright:before {\n  content: \"\\f1f9\";\n}\n\n.fa-cotton-bureau:before {\n  content: \"\\f89e\";\n}\n\n.fa-couch:before {\n  content: \"\\f4b8\";\n}\n\n.fa-cpanel:before {\n  content: \"\\f388\";\n}\n\n.fa-creative-commons:before {\n  content: \"\\f25e\";\n}\n\n.fa-creative-commons-by:before {\n  content: \"\\f4e7\";\n}\n\n.fa-creative-commons-nc:before {\n  content: \"\\f4e8\";\n}\n\n.fa-creative-commons-nc-eu:before {\n  content: \"\\f4e9\";\n}\n\n.fa-creative-commons-nc-jp:before {\n  content: \"\\f4ea\";\n}\n\n.fa-creative-commons-nd:before {\n  content: \"\\f4eb\";\n}\n\n.fa-creative-commons-pd:before {\n  content: \"\\f4ec\";\n}\n\n.fa-creative-commons-pd-alt:before {\n  content: \"\\f4ed\";\n}\n\n.fa-creative-commons-remix:before {\n  content: \"\\f4ee\";\n}\n\n.fa-creative-commons-sa:before {\n  content: \"\\f4ef\";\n}\n\n.fa-creative-commons-sampling:before {\n  content: \"\\f4f0\";\n}\n\n.fa-creative-commons-sampling-plus:before {\n  content: \"\\f4f1\";\n}\n\n.fa-creative-commons-share:before {\n  content: \"\\f4f2\";\n}\n\n.fa-creative-commons-zero:before {\n  content: \"\\f4f3\";\n}\n\n.fa-credit-card:before {\n  content: \"\\f09d\";\n}\n\n.fa-critical-role:before {\n  content: \"\\f6c9\";\n}\n\n.fa-crop:before {\n  content: \"\\f125\";\n}\n\n.fa-crop-alt:before {\n  content: \"\\f565\";\n}\n\n.fa-cross:before {\n  content: \"\\f654\";\n}\n\n.fa-crosshairs:before {\n  content: \"\\f05b\";\n}\n\n.fa-crow:before {\n  content: \"\\f520\";\n}\n\n.fa-crown:before {\n  content: \"\\f521\";\n}\n\n.fa-crutch:before {\n  content: \"\\f7f7\";\n}\n\n.fa-css3:before {\n  content: \"\\f13c\";\n}\n\n.fa-css3-alt:before {\n  content: \"\\f38b\";\n}\n\n.fa-cube:before {\n  content: \"\\f1b2\";\n}\n\n.fa-cubes:before {\n  content: \"\\f1b3\";\n}\n\n.fa-cut:before {\n  content: \"\\f0c4\";\n}\n\n.fa-cuttlefish:before {\n  content: \"\\f38c\";\n}\n\n.fa-d-and-d:before {\n  content: \"\\f38d\";\n}\n\n.fa-d-and-d-beyond:before {\n  content: \"\\f6ca\";\n}\n\n.fa-dailymotion:before {\n  content: \"\\e052\";\n}\n\n.fa-dashcube:before {\n  content: \"\\f210\";\n}\n\n.fa-database:before {\n  content: \"\\f1c0\";\n}\n\n.fa-deaf:before {\n  content: \"\\f2a4\";\n}\n\n.fa-deezer:before {\n  content: \"\\e077\";\n}\n\n.fa-delicious:before {\n  content: \"\\f1a5\";\n}\n\n.fa-democrat:before {\n  content: \"\\f747\";\n}\n\n.fa-deploydog:before {\n  content: \"\\f38e\";\n}\n\n.fa-deskpro:before {\n  content: \"\\f38f\";\n}\n\n.fa-desktop:before {\n  content: \"\\f108\";\n}\n\n.fa-dev:before {\n  content: \"\\f6cc\";\n}\n\n.fa-deviantart:before {\n  content: \"\\f1bd\";\n}\n\n.fa-dharmachakra:before {\n  content: \"\\f655\";\n}\n\n.fa-dhl:before {\n  content: \"\\f790\";\n}\n\n.fa-diagnoses:before {\n  content: \"\\f470\";\n}\n\n.fa-diaspora:before {\n  content: \"\\f791\";\n}\n\n.fa-dice:before {\n  content: \"\\f522\";\n}\n\n.fa-dice-d20:before {\n  content: \"\\f6cf\";\n}\n\n.fa-dice-d6:before {\n  content: \"\\f6d1\";\n}\n\n.fa-dice-five:before {\n  content: \"\\f523\";\n}\n\n.fa-dice-four:before {\n  content: \"\\f524\";\n}\n\n.fa-dice-one:before {\n  content: \"\\f525\";\n}\n\n.fa-dice-six:before {\n  content: \"\\f526\";\n}\n\n.fa-dice-three:before {\n  content: \"\\f527\";\n}\n\n.fa-dice-two:before {\n  content: \"\\f528\";\n}\n\n.fa-digg:before {\n  content: \"\\f1a6\";\n}\n\n.fa-digital-ocean:before {\n  content: \"\\f391\";\n}\n\n.fa-digital-tachograph:before {\n  content: \"\\f566\";\n}\n\n.fa-directions:before {\n  content: \"\\f5eb\";\n}\n\n.fa-discord:before {\n  content: \"\\f392\";\n}\n\n.fa-discourse:before {\n  content: \"\\f393\";\n}\n\n.fa-disease:before {\n  content: \"\\f7fa\";\n}\n\n.fa-divide:before {\n  content: \"\\f529\";\n}\n\n.fa-dizzy:before {\n  content: \"\\f567\";\n}\n\n.fa-dna:before {\n  content: \"\\f471\";\n}\n\n.fa-dochub:before {\n  content: \"\\f394\";\n}\n\n.fa-docker:before {\n  content: \"\\f395\";\n}\n\n.fa-dog:before {\n  content: \"\\f6d3\";\n}\n\n.fa-dollar-sign:before {\n  content: \"\\f155\";\n}\n\n.fa-dolly:before {\n  content: \"\\f472\";\n}\n\n.fa-dolly-flatbed:before {\n  content: \"\\f474\";\n}\n\n.fa-donate:before {\n  content: \"\\f4b9\";\n}\n\n.fa-door-closed:before {\n  content: \"\\f52a\";\n}\n\n.fa-door-open:before {\n  content: \"\\f52b\";\n}\n\n.fa-dot-circle:before {\n  content: \"\\f192\";\n}\n\n.fa-dove:before {\n  content: \"\\f4ba\";\n}\n\n.fa-download:before {\n  content: \"\\f019\";\n}\n\n.fa-draft2digital:before {\n  content: \"\\f396\";\n}\n\n.fa-drafting-compass:before {\n  content: \"\\f568\";\n}\n\n.fa-dragon:before {\n  content: \"\\f6d5\";\n}\n\n.fa-draw-polygon:before {\n  content: \"\\f5ee\";\n}\n\n.fa-dribbble:before {\n  content: \"\\f17d\";\n}\n\n.fa-dribbble-square:before {\n  content: \"\\f397\";\n}\n\n.fa-dropbox:before {\n  content: \"\\f16b\";\n}\n\n.fa-drum:before {\n  content: \"\\f569\";\n}\n\n.fa-drum-steelpan:before {\n  content: \"\\f56a\";\n}\n\n.fa-drumstick-bite:before {\n  content: \"\\f6d7\";\n}\n\n.fa-drupal:before {\n  content: \"\\f1a9\";\n}\n\n.fa-dumbbell:before {\n  content: \"\\f44b\";\n}\n\n.fa-dumpster:before {\n  content: \"\\f793\";\n}\n\n.fa-dumpster-fire:before {\n  content: \"\\f794\";\n}\n\n.fa-dungeon:before {\n  content: \"\\f6d9\";\n}\n\n.fa-dyalog:before {\n  content: \"\\f399\";\n}\n\n.fa-earlybirds:before {\n  content: \"\\f39a\";\n}\n\n.fa-ebay:before {\n  content: \"\\f4f4\";\n}\n\n.fa-edge:before {\n  content: \"\\f282\";\n}\n\n.fa-edge-legacy:before {\n  content: \"\\e078\";\n}\n\n.fa-edit:before {\n  content: \"\\f044\";\n}\n\n.fa-egg:before {\n  content: \"\\f7fb\";\n}\n\n.fa-eject:before {\n  content: \"\\f052\";\n}\n\n.fa-elementor:before {\n  content: \"\\f430\";\n}\n\n.fa-ellipsis-h:before {\n  content: \"\\f141\";\n}\n\n.fa-ellipsis-v:before {\n  content: \"\\f142\";\n}\n\n.fa-ello:before {\n  content: \"\\f5f1\";\n}\n\n.fa-ember:before {\n  content: \"\\f423\";\n}\n\n.fa-empire:before {\n  content: \"\\f1d1\";\n}\n\n.fa-envelope:before {\n  content: \"\\f0e0\";\n}\n\n.fa-envelope-open:before {\n  content: \"\\f2b6\";\n}\n\n.fa-envelope-open-text:before {\n  content: \"\\f658\";\n}\n\n.fa-envelope-square:before {\n  content: \"\\f199\";\n}\n\n.fa-envira:before {\n  content: \"\\f299\";\n}\n\n.fa-equals:before {\n  content: \"\\f52c\";\n}\n\n.fa-eraser:before {\n  content: \"\\f12d\";\n}\n\n.fa-erlang:before {\n  content: \"\\f39d\";\n}\n\n.fa-ethereum:before {\n  content: \"\\f42e\";\n}\n\n.fa-ethernet:before {\n  content: \"\\f796\";\n}\n\n.fa-etsy:before {\n  content: \"\\f2d7\";\n}\n\n.fa-euro-sign:before {\n  content: \"\\f153\";\n}\n\n.fa-evernote:before {\n  content: \"\\f839\";\n}\n\n.fa-exchange-alt:before {\n  content: \"\\f362\";\n}\n\n.fa-exclamation:before {\n  content: \"\\f12a\";\n}\n\n.fa-exclamation-circle:before {\n  content: \"\\f06a\";\n}\n\n.fa-exclamation-triangle:before {\n  content: \"\\f071\";\n}\n\n.fa-expand:before {\n  content: \"\\f065\";\n}\n\n.fa-expand-alt:before {\n  content: \"\\f424\";\n}\n\n.fa-expand-arrows-alt:before {\n  content: \"\\f31e\";\n}\n\n.fa-expeditedssl:before {\n  content: \"\\f23e\";\n}\n\n.fa-external-link-alt:before {\n  content: \"\\f35d\";\n}\n\n.fa-external-link-square-alt:before {\n  content: \"\\f360\";\n}\n\n.fa-eye:before {\n  content: \"\\f06e\";\n}\n\n.fa-eye-dropper:before {\n  content: \"\\f1fb\";\n}\n\n.fa-eye-slash:before {\n  content: \"\\f070\";\n}\n\n.fa-facebook:before {\n  content: \"\\f09a\";\n}\n\n.fa-facebook-f:before {\n  content: \"\\f39e\";\n}\n\n.fa-facebook-messenger:before {\n  content: \"\\f39f\";\n}\n\n.fa-facebook-square:before {\n  content: \"\\f082\";\n}\n\n.fa-fan:before {\n  content: \"\\f863\";\n}\n\n.fa-fantasy-flight-games:before {\n  content: \"\\f6dc\";\n}\n\n.fa-fast-backward:before {\n  content: \"\\f049\";\n}\n\n.fa-fast-forward:before {\n  content: \"\\f050\";\n}\n\n.fa-faucet:before {\n  content: \"\\e005\";\n}\n\n.fa-fax:before {\n  content: \"\\f1ac\";\n}\n\n.fa-feather:before {\n  content: \"\\f52d\";\n}\n\n.fa-feather-alt:before {\n  content: \"\\f56b\";\n}\n\n.fa-fedex:before {\n  content: \"\\f797\";\n}\n\n.fa-fedora:before {\n  content: \"\\f798\";\n}\n\n.fa-female:before {\n  content: \"\\f182\";\n}\n\n.fa-fighter-jet:before {\n  content: \"\\f0fb\";\n}\n\n.fa-figma:before {\n  content: \"\\f799\";\n}\n\n.fa-file:before {\n  content: \"\\f15b\";\n}\n\n.fa-file-alt:before {\n  content: \"\\f15c\";\n}\n\n.fa-file-archive:before {\n  content: \"\\f1c6\";\n}\n\n.fa-file-audio:before {\n  content: \"\\f1c7\";\n}\n\n.fa-file-code:before {\n  content: \"\\f1c9\";\n}\n\n.fa-file-contract:before {\n  content: \"\\f56c\";\n}\n\n.fa-file-csv:before {\n  content: \"\\f6dd\";\n}\n\n.fa-file-download:before {\n  content: \"\\f56d\";\n}\n\n.fa-file-excel:before {\n  content: \"\\f1c3\";\n}\n\n.fa-file-export:before {\n  content: \"\\f56e\";\n}\n\n.fa-file-image:before {\n  content: \"\\f1c5\";\n}\n\n.fa-file-import:before {\n  content: \"\\f56f\";\n}\n\n.fa-file-invoice:before {\n  content: \"\\f570\";\n}\n\n.fa-file-invoice-dollar:before {\n  content: \"\\f571\";\n}\n\n.fa-file-medical:before {\n  content: \"\\f477\";\n}\n\n.fa-file-medical-alt:before {\n  content: \"\\f478\";\n}\n\n.fa-file-pdf:before {\n  content: \"\\f1c1\";\n}\n\n.fa-file-powerpoint:before {\n  content: \"\\f1c4\";\n}\n\n.fa-file-prescription:before {\n  content: \"\\f572\";\n}\n\n.fa-file-signature:before {\n  content: \"\\f573\";\n}\n\n.fa-file-upload:before {\n  content: \"\\f574\";\n}\n\n.fa-file-video:before {\n  content: \"\\f1c8\";\n}\n\n.fa-file-word:before {\n  content: \"\\f1c2\";\n}\n\n.fa-fill:before {\n  content: \"\\f575\";\n}\n\n.fa-fill-drip:before {\n  content: \"\\f576\";\n}\n\n.fa-film:before {\n  content: \"\\f008\";\n}\n\n.fa-filter:before {\n  content: \"\\f0b0\";\n}\n\n.fa-fingerprint:before {\n  content: \"\\f577\";\n}\n\n.fa-fire:before {\n  content: \"\\f06d\";\n}\n\n.fa-fire-alt:before {\n  content: \"\\f7e4\";\n}\n\n.fa-fire-extinguisher:before {\n  content: \"\\f134\";\n}\n\n.fa-firefox:before {\n  content: \"\\f269\";\n}\n\n.fa-firefox-browser:before {\n  content: \"\\e007\";\n}\n\n.fa-first-aid:before {\n  content: \"\\f479\";\n}\n\n.fa-first-order:before {\n  content: \"\\f2b0\";\n}\n\n.fa-first-order-alt:before {\n  content: \"\\f50a\";\n}\n\n.fa-firstdraft:before {\n  content: \"\\f3a1\";\n}\n\n.fa-fish:before {\n  content: \"\\f578\";\n}\n\n.fa-fist-raised:before {\n  content: \"\\f6de\";\n}\n\n.fa-flag:before {\n  content: \"\\f024\";\n}\n\n.fa-flag-checkered:before {\n  content: \"\\f11e\";\n}\n\n.fa-flag-usa:before {\n  content: \"\\f74d\";\n}\n\n.fa-flask:before {\n  content: \"\\f0c3\";\n}\n\n.fa-flickr:before {\n  content: \"\\f16e\";\n}\n\n.fa-flipboard:before {\n  content: \"\\f44d\";\n}\n\n.fa-flushed:before {\n  content: \"\\f579\";\n}\n\n.fa-fly:before {\n  content: \"\\f417\";\n}\n\n.fa-folder:before {\n  content: \"\\f07b\";\n}\n\n.fa-folder-minus:before {\n  content: \"\\f65d\";\n}\n\n.fa-folder-open:before {\n  content: \"\\f07c\";\n}\n\n.fa-folder-plus:before {\n  content: \"\\f65e\";\n}\n\n.fa-font:before {\n  content: \"\\f031\";\n}\n\n.fa-font-awesome:before {\n  content: \"\\f2b4\";\n}\n\n.fa-font-awesome-alt:before {\n  content: \"\\f35c\";\n}\n\n.fa-font-awesome-flag:before {\n  content: \"\\f425\";\n}\n\n.fa-font-awesome-logo-full:before {\n  content: \"\\f4e6\";\n}\n\n.fa-fonticons:before {\n  content: \"\\f280\";\n}\n\n.fa-fonticons-fi:before {\n  content: \"\\f3a2\";\n}\n\n.fa-football-ball:before {\n  content: \"\\f44e\";\n}\n\n.fa-fort-awesome:before {\n  content: \"\\f286\";\n}\n\n.fa-fort-awesome-alt:before {\n  content: \"\\f3a3\";\n}\n\n.fa-forumbee:before {\n  content: \"\\f211\";\n}\n\n.fa-forward:before {\n  content: \"\\f04e\";\n}\n\n.fa-foursquare:before {\n  content: \"\\f180\";\n}\n\n.fa-free-code-camp:before {\n  content: \"\\f2c5\";\n}\n\n.fa-freebsd:before {\n  content: \"\\f3a4\";\n}\n\n.fa-frog:before {\n  content: \"\\f52e\";\n}\n\n.fa-frown:before {\n  content: \"\\f119\";\n}\n\n.fa-frown-open:before {\n  content: \"\\f57a\";\n}\n\n.fa-fulcrum:before {\n  content: \"\\f50b\";\n}\n\n.fa-funnel-dollar:before {\n  content: \"\\f662\";\n}\n\n.fa-futbol:before {\n  content: \"\\f1e3\";\n}\n\n.fa-galactic-republic:before {\n  content: \"\\f50c\";\n}\n\n.fa-galactic-senate:before {\n  content: \"\\f50d\";\n}\n\n.fa-gamepad:before {\n  content: \"\\f11b\";\n}\n\n.fa-gas-pump:before {\n  content: \"\\f52f\";\n}\n\n.fa-gavel:before {\n  content: \"\\f0e3\";\n}\n\n.fa-gem:before {\n  content: \"\\f3a5\";\n}\n\n.fa-genderless:before {\n  content: \"\\f22d\";\n}\n\n.fa-get-pocket:before {\n  content: \"\\f265\";\n}\n\n.fa-gg:before {\n  content: \"\\f260\";\n}\n\n.fa-gg-circle:before {\n  content: \"\\f261\";\n}\n\n.fa-ghost:before {\n  content: \"\\f6e2\";\n}\n\n.fa-gift:before {\n  content: \"\\f06b\";\n}\n\n.fa-gifts:before {\n  content: \"\\f79c\";\n}\n\n.fa-git:before {\n  content: \"\\f1d3\";\n}\n\n.fa-git-alt:before {\n  content: \"\\f841\";\n}\n\n.fa-git-square:before {\n  content: \"\\f1d2\";\n}\n\n.fa-github:before {\n  content: \"\\f09b\";\n}\n\n.fa-github-alt:before {\n  content: \"\\f113\";\n}\n\n.fa-github-square:before {\n  content: \"\\f092\";\n}\n\n.fa-gitkraken:before {\n  content: \"\\f3a6\";\n}\n\n.fa-gitlab:before {\n  content: \"\\f296\";\n}\n\n.fa-gitter:before {\n  content: \"\\f426\";\n}\n\n.fa-glass-cheers:before {\n  content: \"\\f79f\";\n}\n\n.fa-glass-martini:before {\n  content: \"\\f000\";\n}\n\n.fa-glass-martini-alt:before {\n  content: \"\\f57b\";\n}\n\n.fa-glass-whiskey:before {\n  content: \"\\f7a0\";\n}\n\n.fa-glasses:before {\n  content: \"\\f530\";\n}\n\n.fa-glide:before {\n  content: \"\\f2a5\";\n}\n\n.fa-glide-g:before {\n  content: \"\\f2a6\";\n}\n\n.fa-globe:before {\n  content: \"\\f0ac\";\n}\n\n.fa-globe-africa:before {\n  content: \"\\f57c\";\n}\n\n.fa-globe-americas:before {\n  content: \"\\f57d\";\n}\n\n.fa-globe-asia:before {\n  content: \"\\f57e\";\n}\n\n.fa-globe-europe:before {\n  content: \"\\f7a2\";\n}\n\n.fa-gofore:before {\n  content: \"\\f3a7\";\n}\n\n.fa-golf-ball:before {\n  content: \"\\f450\";\n}\n\n.fa-goodreads:before {\n  content: \"\\f3a8\";\n}\n\n.fa-goodreads-g:before {\n  content: \"\\f3a9\";\n}\n\n.fa-google:before {\n  content: \"\\f1a0\";\n}\n\n.fa-google-drive:before {\n  content: \"\\f3aa\";\n}\n\n.fa-google-pay:before {\n  content: \"\\e079\";\n}\n\n.fa-google-play:before {\n  content: \"\\f3ab\";\n}\n\n.fa-google-plus:before {\n  content: \"\\f2b3\";\n}\n\n.fa-google-plus-g:before {\n  content: \"\\f0d5\";\n}\n\n.fa-google-plus-square:before {\n  content: \"\\f0d4\";\n}\n\n.fa-google-wallet:before {\n  content: \"\\f1ee\";\n}\n\n.fa-gopuram:before {\n  content: \"\\f664\";\n}\n\n.fa-graduation-cap:before {\n  content: \"\\f19d\";\n}\n\n.fa-gratipay:before {\n  content: \"\\f184\";\n}\n\n.fa-grav:before {\n  content: \"\\f2d6\";\n}\n\n.fa-greater-than:before {\n  content: \"\\f531\";\n}\n\n.fa-greater-than-equal:before {\n  content: \"\\f532\";\n}\n\n.fa-grimace:before {\n  content: \"\\f57f\";\n}\n\n.fa-grin:before {\n  content: \"\\f580\";\n}\n\n.fa-grin-alt:before {\n  content: \"\\f581\";\n}\n\n.fa-grin-beam:before {\n  content: \"\\f582\";\n}\n\n.fa-grin-beam-sweat:before {\n  content: \"\\f583\";\n}\n\n.fa-grin-hearts:before {\n  content: \"\\f584\";\n}\n\n.fa-grin-squint:before {\n  content: \"\\f585\";\n}\n\n.fa-grin-squint-tears:before {\n  content: \"\\f586\";\n}\n\n.fa-grin-stars:before {\n  content: \"\\f587\";\n}\n\n.fa-grin-tears:before {\n  content: \"\\f588\";\n}\n\n.fa-grin-tongue:before {\n  content: \"\\f589\";\n}\n\n.fa-grin-tongue-squint:before {\n  content: \"\\f58a\";\n}\n\n.fa-grin-tongue-wink:before {\n  content: \"\\f58b\";\n}\n\n.fa-grin-wink:before {\n  content: \"\\f58c\";\n}\n\n.fa-grip-horizontal:before {\n  content: \"\\f58d\";\n}\n\n.fa-grip-lines:before {\n  content: \"\\f7a4\";\n}\n\n.fa-grip-lines-vertical:before {\n  content: \"\\f7a5\";\n}\n\n.fa-grip-vertical:before {\n  content: \"\\f58e\";\n}\n\n.fa-gripfire:before {\n  content: \"\\f3ac\";\n}\n\n.fa-grunt:before {\n  content: \"\\f3ad\";\n}\n\n.fa-guitar:before {\n  content: \"\\f7a6\";\n}\n\n.fa-gulp:before {\n  content: \"\\f3ae\";\n}\n\n.fa-h-square:before {\n  content: \"\\f0fd\";\n}\n\n.fa-hacker-news:before {\n  content: \"\\f1d4\";\n}\n\n.fa-hacker-news-square:before {\n  content: \"\\f3af\";\n}\n\n.fa-hackerrank:before {\n  content: \"\\f5f7\";\n}\n\n.fa-hamburger:before {\n  content: \"\\f805\";\n}\n\n.fa-hammer:before {\n  content: \"\\f6e3\";\n}\n\n.fa-hamsa:before {\n  content: \"\\f665\";\n}\n\n.fa-hand-holding:before {\n  content: \"\\f4bd\";\n}\n\n.fa-hand-holding-heart:before {\n  content: \"\\f4be\";\n}\n\n.fa-hand-holding-medical:before {\n  content: \"\\e05c\";\n}\n\n.fa-hand-holding-usd:before {\n  content: \"\\f4c0\";\n}\n\n.fa-hand-holding-water:before {\n  content: \"\\f4c1\";\n}\n\n.fa-hand-lizard:before {\n  content: \"\\f258\";\n}\n\n.fa-hand-middle-finger:before {\n  content: \"\\f806\";\n}\n\n.fa-hand-paper:before {\n  content: \"\\f256\";\n}\n\n.fa-hand-peace:before {\n  content: \"\\f25b\";\n}\n\n.fa-hand-point-down:before {\n  content: \"\\f0a7\";\n}\n\n.fa-hand-point-left:before {\n  content: \"\\f0a5\";\n}\n\n.fa-hand-point-right:before {\n  content: \"\\f0a4\";\n}\n\n.fa-hand-point-up:before {\n  content: \"\\f0a6\";\n}\n\n.fa-hand-pointer:before {\n  content: \"\\f25a\";\n}\n\n.fa-hand-rock:before {\n  content: \"\\f255\";\n}\n\n.fa-hand-scissors:before {\n  content: \"\\f257\";\n}\n\n.fa-hand-sparkles:before {\n  content: \"\\e05d\";\n}\n\n.fa-hand-spock:before {\n  content: \"\\f259\";\n}\n\n.fa-hands:before {\n  content: \"\\f4c2\";\n}\n\n.fa-hands-helping:before {\n  content: \"\\f4c4\";\n}\n\n.fa-hands-wash:before {\n  content: \"\\e05e\";\n}\n\n.fa-handshake:before {\n  content: \"\\f2b5\";\n}\n\n.fa-handshake-alt-slash:before {\n  content: \"\\e05f\";\n}\n\n.fa-handshake-slash:before {\n  content: \"\\e060\";\n}\n\n.fa-hanukiah:before {\n  content: \"\\f6e6\";\n}\n\n.fa-hard-hat:before {\n  content: \"\\f807\";\n}\n\n.fa-hashtag:before {\n  content: \"\\f292\";\n}\n\n.fa-hat-cowboy:before {\n  content: \"\\f8c0\";\n}\n\n.fa-hat-cowboy-side:before {\n  content: \"\\f8c1\";\n}\n\n.fa-hat-wizard:before {\n  content: \"\\f6e8\";\n}\n\n.fa-hdd:before {\n  content: \"\\f0a0\";\n}\n\n.fa-head-side-cough:before {\n  content: \"\\e061\";\n}\n\n.fa-head-side-cough-slash:before {\n  content: \"\\e062\";\n}\n\n.fa-head-side-mask:before {\n  content: \"\\e063\";\n}\n\n.fa-head-side-virus:before {\n  content: \"\\e064\";\n}\n\n.fa-heading:before {\n  content: \"\\f1dc\";\n}\n\n.fa-headphones:before {\n  content: \"\\f025\";\n}\n\n.fa-headphones-alt:before {\n  content: \"\\f58f\";\n}\n\n.fa-headset:before {\n  content: \"\\f590\";\n}\n\n.fa-heart:before {\n  content: \"\\f004\";\n}\n\n.fa-heart-broken:before {\n  content: \"\\f7a9\";\n}\n\n.fa-heartbeat:before {\n  content: \"\\f21e\";\n}\n\n.fa-helicopter:before {\n  content: \"\\f533\";\n}\n\n.fa-highlighter:before {\n  content: \"\\f591\";\n}\n\n.fa-hiking:before {\n  content: \"\\f6ec\";\n}\n\n.fa-hippo:before {\n  content: \"\\f6ed\";\n}\n\n.fa-hips:before {\n  content: \"\\f452\";\n}\n\n.fa-hire-a-helper:before {\n  content: \"\\f3b0\";\n}\n\n.fa-history:before {\n  content: \"\\f1da\";\n}\n\n.fa-hockey-puck:before {\n  content: \"\\f453\";\n}\n\n.fa-holly-berry:before {\n  content: \"\\f7aa\";\n}\n\n.fa-home:before {\n  content: \"\\f015\";\n}\n\n.fa-hooli:before {\n  content: \"\\f427\";\n}\n\n.fa-hornbill:before {\n  content: \"\\f592\";\n}\n\n.fa-horse:before {\n  content: \"\\f6f0\";\n}\n\n.fa-horse-head:before {\n  content: \"\\f7ab\";\n}\n\n.fa-hospital:before {\n  content: \"\\f0f8\";\n}\n\n.fa-hospital-alt:before {\n  content: \"\\f47d\";\n}\n\n.fa-hospital-symbol:before {\n  content: \"\\f47e\";\n}\n\n.fa-hospital-user:before {\n  content: \"\\f80d\";\n}\n\n.fa-hot-tub:before {\n  content: \"\\f593\";\n}\n\n.fa-hotdog:before {\n  content: \"\\f80f\";\n}\n\n.fa-hotel:before {\n  content: \"\\f594\";\n}\n\n.fa-hotjar:before {\n  content: \"\\f3b1\";\n}\n\n.fa-hourglass:before {\n  content: \"\\f254\";\n}\n\n.fa-hourglass-end:before {\n  content: \"\\f253\";\n}\n\n.fa-hourglass-half:before {\n  content: \"\\f252\";\n}\n\n.fa-hourglass-start:before {\n  content: \"\\f251\";\n}\n\n.fa-house-damage:before {\n  content: \"\\f6f1\";\n}\n\n.fa-house-user:before {\n  content: \"\\e065\";\n}\n\n.fa-houzz:before {\n  content: \"\\f27c\";\n}\n\n.fa-hryvnia:before {\n  content: \"\\f6f2\";\n}\n\n.fa-html5:before {\n  content: \"\\f13b\";\n}\n\n.fa-hubspot:before {\n  content: \"\\f3b2\";\n}\n\n.fa-i-cursor:before {\n  content: \"\\f246\";\n}\n\n.fa-ice-cream:before {\n  content: \"\\f810\";\n}\n\n.fa-icicles:before {\n  content: \"\\f7ad\";\n}\n\n.fa-icons:before {\n  content: \"\\f86d\";\n}\n\n.fa-id-badge:before {\n  content: \"\\f2c1\";\n}\n\n.fa-id-card:before {\n  content: \"\\f2c2\";\n}\n\n.fa-id-card-alt:before {\n  content: \"\\f47f\";\n}\n\n.fa-ideal:before {\n  content: \"\\e013\";\n}\n\n.fa-igloo:before {\n  content: \"\\f7ae\";\n}\n\n.fa-image:before {\n  content: \"\\f03e\";\n}\n\n.fa-images:before {\n  content: \"\\f302\";\n}\n\n.fa-imdb:before {\n  content: \"\\f2d8\";\n}\n\n.fa-inbox:before {\n  content: \"\\f01c\";\n}\n\n.fa-indent:before {\n  content: \"\\f03c\";\n}\n\n.fa-industry:before {\n  content: \"\\f275\";\n}\n\n.fa-infinity:before {\n  content: \"\\f534\";\n}\n\n.fa-info:before {\n  content: \"\\f129\";\n}\n\n.fa-info-circle:before {\n  content: \"\\f05a\";\n}\n\n.fa-instagram:before {\n  content: \"\\f16d\";\n}\n\n.fa-instagram-square:before {\n  content: \"\\e055\";\n}\n\n.fa-intercom:before {\n  content: \"\\f7af\";\n}\n\n.fa-internet-explorer:before {\n  content: \"\\f26b\";\n}\n\n.fa-invision:before {\n  content: \"\\f7b0\";\n}\n\n.fa-ioxhost:before {\n  content: \"\\f208\";\n}\n\n.fa-italic:before {\n  content: \"\\f033\";\n}\n\n.fa-itch-io:before {\n  content: \"\\f83a\";\n}\n\n.fa-itunes:before {\n  content: \"\\f3b4\";\n}\n\n.fa-itunes-note:before {\n  content: \"\\f3b5\";\n}\n\n.fa-java:before {\n  content: \"\\f4e4\";\n}\n\n.fa-jedi:before {\n  content: \"\\f669\";\n}\n\n.fa-jedi-order:before {\n  content: \"\\f50e\";\n}\n\n.fa-jenkins:before {\n  content: \"\\f3b6\";\n}\n\n.fa-jira:before {\n  content: \"\\f7b1\";\n}\n\n.fa-joget:before {\n  content: \"\\f3b7\";\n}\n\n.fa-joint:before {\n  content: \"\\f595\";\n}\n\n.fa-joomla:before {\n  content: \"\\f1aa\";\n}\n\n.fa-journal-whills:before {\n  content: \"\\f66a\";\n}\n\n.fa-js:before {\n  content: \"\\f3b8\";\n}\n\n.fa-js-square:before {\n  content: \"\\f3b9\";\n}\n\n.fa-jsfiddle:before {\n  content: \"\\f1cc\";\n}\n\n.fa-kaaba:before {\n  content: \"\\f66b\";\n}\n\n.fa-kaggle:before {\n  content: \"\\f5fa\";\n}\n\n.fa-key:before {\n  content: \"\\f084\";\n}\n\n.fa-keybase:before {\n  content: \"\\f4f5\";\n}\n\n.fa-keyboard:before {\n  content: \"\\f11c\";\n}\n\n.fa-keycdn:before {\n  content: \"\\f3ba\";\n}\n\n.fa-khanda:before {\n  content: \"\\f66d\";\n}\n\n.fa-kickstarter:before {\n  content: \"\\f3bb\";\n}\n\n.fa-kickstarter-k:before {\n  content: \"\\f3bc\";\n}\n\n.fa-kiss:before {\n  content: \"\\f596\";\n}\n\n.fa-kiss-beam:before {\n  content: \"\\f597\";\n}\n\n.fa-kiss-wink-heart:before {\n  content: \"\\f598\";\n}\n\n.fa-kiwi-bird:before {\n  content: \"\\f535\";\n}\n\n.fa-korvue:before {\n  content: \"\\f42f\";\n}\n\n.fa-landmark:before {\n  content: \"\\f66f\";\n}\n\n.fa-language:before {\n  content: \"\\f1ab\";\n}\n\n.fa-laptop:before {\n  content: \"\\f109\";\n}\n\n.fa-laptop-code:before {\n  content: \"\\f5fc\";\n}\n\n.fa-laptop-house:before {\n  content: \"\\e066\";\n}\n\n.fa-laptop-medical:before {\n  content: \"\\f812\";\n}\n\n.fa-laravel:before {\n  content: \"\\f3bd\";\n}\n\n.fa-lastfm:before {\n  content: \"\\f202\";\n}\n\n.fa-lastfm-square:before {\n  content: \"\\f203\";\n}\n\n.fa-laugh:before {\n  content: \"\\f599\";\n}\n\n.fa-laugh-beam:before {\n  content: \"\\f59a\";\n}\n\n.fa-laugh-squint:before {\n  content: \"\\f59b\";\n}\n\n.fa-laugh-wink:before {\n  content: \"\\f59c\";\n}\n\n.fa-layer-group:before {\n  content: \"\\f5fd\";\n}\n\n.fa-leaf:before {\n  content: \"\\f06c\";\n}\n\n.fa-leanpub:before {\n  content: \"\\f212\";\n}\n\n.fa-lemon:before {\n  content: \"\\f094\";\n}\n\n.fa-less:before {\n  content: \"\\f41d\";\n}\n\n.fa-less-than:before {\n  content: \"\\f536\";\n}\n\n.fa-less-than-equal:before {\n  content: \"\\f537\";\n}\n\n.fa-level-down-alt:before {\n  content: \"\\f3be\";\n}\n\n.fa-level-up-alt:before {\n  content: \"\\f3bf\";\n}\n\n.fa-life-ring:before {\n  content: \"\\f1cd\";\n}\n\n.fa-lightbulb:before {\n  content: \"\\f0eb\";\n}\n\n.fa-line:before {\n  content: \"\\f3c0\";\n}\n\n.fa-link:before {\n  content: \"\\f0c1\";\n}\n\n.fa-linkedin:before {\n  content: \"\\f08c\";\n}\n\n.fa-linkedin-in:before {\n  content: \"\\f0e1\";\n}\n\n.fa-linode:before {\n  content: \"\\f2b8\";\n}\n\n.fa-linux:before {\n  content: \"\\f17c\";\n}\n\n.fa-lira-sign:before {\n  content: \"\\f195\";\n}\n\n.fa-list:before {\n  content: \"\\f03a\";\n}\n\n.fa-list-alt:before {\n  content: \"\\f022\";\n}\n\n.fa-list-ol:before {\n  content: \"\\f0cb\";\n}\n\n.fa-list-ul:before {\n  content: \"\\f0ca\";\n}\n\n.fa-location-arrow:before {\n  content: \"\\f124\";\n}\n\n.fa-lock:before {\n  content: \"\\f023\";\n}\n\n.fa-lock-open:before {\n  content: \"\\f3c1\";\n}\n\n.fa-long-arrow-alt-down:before {\n  content: \"\\f309\";\n}\n\n.fa-long-arrow-alt-left:before {\n  content: \"\\f30a\";\n}\n\n.fa-long-arrow-alt-right:before {\n  content: \"\\f30b\";\n}\n\n.fa-long-arrow-alt-up:before {\n  content: \"\\f30c\";\n}\n\n.fa-low-vision:before {\n  content: \"\\f2a8\";\n}\n\n.fa-luggage-cart:before {\n  content: \"\\f59d\";\n}\n\n.fa-lungs:before {\n  content: \"\\f604\";\n}\n\n.fa-lungs-virus:before {\n  content: \"\\e067\";\n}\n\n.fa-lyft:before {\n  content: \"\\f3c3\";\n}\n\n.fa-magento:before {\n  content: \"\\f3c4\";\n}\n\n.fa-magic:before {\n  content: \"\\f0d0\";\n}\n\n.fa-magnet:before {\n  content: \"\\f076\";\n}\n\n.fa-mail-bulk:before {\n  content: \"\\f674\";\n}\n\n.fa-mailchimp:before {\n  content: \"\\f59e\";\n}\n\n.fa-male:before {\n  content: \"\\f183\";\n}\n\n.fa-mandalorian:before {\n  content: \"\\f50f\";\n}\n\n.fa-map:before {\n  content: \"\\f279\";\n}\n\n.fa-map-marked:before {\n  content: \"\\f59f\";\n}\n\n.fa-map-marked-alt:before {\n  content: \"\\f5a0\";\n}\n\n.fa-map-marker:before {\n  content: \"\\f041\";\n}\n\n.fa-map-marker-alt:before {\n  content: \"\\f3c5\";\n}\n\n.fa-map-pin:before {\n  content: \"\\f276\";\n}\n\n.fa-map-signs:before {\n  content: \"\\f277\";\n}\n\n.fa-markdown:before {\n  content: \"\\f60f\";\n}\n\n.fa-marker:before {\n  content: \"\\f5a1\";\n}\n\n.fa-mars:before {\n  content: \"\\f222\";\n}\n\n.fa-mars-double:before {\n  content: \"\\f227\";\n}\n\n.fa-mars-stroke:before {\n  content: \"\\f229\";\n}\n\n.fa-mars-stroke-h:before {\n  content: \"\\f22b\";\n}\n\n.fa-mars-stroke-v:before {\n  content: \"\\f22a\";\n}\n\n.fa-mask:before {\n  content: \"\\f6fa\";\n}\n\n.fa-mastodon:before {\n  content: \"\\f4f6\";\n}\n\n.fa-maxcdn:before {\n  content: \"\\f136\";\n}\n\n.fa-mdb:before {\n  content: \"\\f8ca\";\n}\n\n.fa-medal:before {\n  content: \"\\f5a2\";\n}\n\n.fa-medapps:before {\n  content: \"\\f3c6\";\n}\n\n.fa-medium:before {\n  content: \"\\f23a\";\n}\n\n.fa-medium-m:before {\n  content: \"\\f3c7\";\n}\n\n.fa-medkit:before {\n  content: \"\\f0fa\";\n}\n\n.fa-medrt:before {\n  content: \"\\f3c8\";\n}\n\n.fa-meetup:before {\n  content: \"\\f2e0\";\n}\n\n.fa-megaport:before {\n  content: \"\\f5a3\";\n}\n\n.fa-meh:before {\n  content: \"\\f11a\";\n}\n\n.fa-meh-blank:before {\n  content: \"\\f5a4\";\n}\n\n.fa-meh-rolling-eyes:before {\n  content: \"\\f5a5\";\n}\n\n.fa-memory:before {\n  content: \"\\f538\";\n}\n\n.fa-mendeley:before {\n  content: \"\\f7b3\";\n}\n\n.fa-menorah:before {\n  content: \"\\f676\";\n}\n\n.fa-mercury:before {\n  content: \"\\f223\";\n}\n\n.fa-meteor:before {\n  content: \"\\f753\";\n}\n\n.fa-microblog:before {\n  content: \"\\e01a\";\n}\n\n.fa-microchip:before {\n  content: \"\\f2db\";\n}\n\n.fa-microphone:before {\n  content: \"\\f130\";\n}\n\n.fa-microphone-alt:before {\n  content: \"\\f3c9\";\n}\n\n.fa-microphone-alt-slash:before {\n  content: \"\\f539\";\n}\n\n.fa-microphone-slash:before {\n  content: \"\\f131\";\n}\n\n.fa-microscope:before {\n  content: \"\\f610\";\n}\n\n.fa-microsoft:before {\n  content: \"\\f3ca\";\n}\n\n.fa-minus:before {\n  content: \"\\f068\";\n}\n\n.fa-minus-circle:before {\n  content: \"\\f056\";\n}\n\n.fa-minus-square:before {\n  content: \"\\f146\";\n}\n\n.fa-mitten:before {\n  content: \"\\f7b5\";\n}\n\n.fa-mix:before {\n  content: \"\\f3cb\";\n}\n\n.fa-mixcloud:before {\n  content: \"\\f289\";\n}\n\n.fa-mixer:before {\n  content: \"\\e056\";\n}\n\n.fa-mizuni:before {\n  content: \"\\f3cc\";\n}\n\n.fa-mobile:before {\n  content: \"\\f10b\";\n}\n\n.fa-mobile-alt:before {\n  content: \"\\f3cd\";\n}\n\n.fa-modx:before {\n  content: \"\\f285\";\n}\n\n.fa-monero:before {\n  content: \"\\f3d0\";\n}\n\n.fa-money-bill:before {\n  content: \"\\f0d6\";\n}\n\n.fa-money-bill-alt:before {\n  content: \"\\f3d1\";\n}\n\n.fa-money-bill-wave:before {\n  content: \"\\f53a\";\n}\n\n.fa-money-bill-wave-alt:before {\n  content: \"\\f53b\";\n}\n\n.fa-money-check:before {\n  content: \"\\f53c\";\n}\n\n.fa-money-check-alt:before {\n  content: \"\\f53d\";\n}\n\n.fa-monument:before {\n  content: \"\\f5a6\";\n}\n\n.fa-moon:before {\n  content: \"\\f186\";\n}\n\n.fa-mortar-pestle:before {\n  content: \"\\f5a7\";\n}\n\n.fa-mosque:before {\n  content: \"\\f678\";\n}\n\n.fa-motorcycle:before {\n  content: \"\\f21c\";\n}\n\n.fa-mountain:before {\n  content: \"\\f6fc\";\n}\n\n.fa-mouse:before {\n  content: \"\\f8cc\";\n}\n\n.fa-mouse-pointer:before {\n  content: \"\\f245\";\n}\n\n.fa-mug-hot:before {\n  content: \"\\f7b6\";\n}\n\n.fa-music:before {\n  content: \"\\f001\";\n}\n\n.fa-napster:before {\n  content: \"\\f3d2\";\n}\n\n.fa-neos:before {\n  content: \"\\f612\";\n}\n\n.fa-network-wired:before {\n  content: \"\\f6ff\";\n}\n\n.fa-neuter:before {\n  content: \"\\f22c\";\n}\n\n.fa-newspaper:before {\n  content: \"\\f1ea\";\n}\n\n.fa-nimblr:before {\n  content: \"\\f5a8\";\n}\n\n.fa-node:before {\n  content: \"\\f419\";\n}\n\n.fa-node-js:before {\n  content: \"\\f3d3\";\n}\n\n.fa-not-equal:before {\n  content: \"\\f53e\";\n}\n\n.fa-notes-medical:before {\n  content: \"\\f481\";\n}\n\n.fa-npm:before {\n  content: \"\\f3d4\";\n}\n\n.fa-ns8:before {\n  content: \"\\f3d5\";\n}\n\n.fa-nutritionix:before {\n  content: \"\\f3d6\";\n}\n\n.fa-object-group:before {\n  content: \"\\f247\";\n}\n\n.fa-object-ungroup:before {\n  content: \"\\f248\";\n}\n\n.fa-odnoklassniki:before {\n  content: \"\\f263\";\n}\n\n.fa-odnoklassniki-square:before {\n  content: \"\\f264\";\n}\n\n.fa-oil-can:before {\n  content: \"\\f613\";\n}\n\n.fa-old-republic:before {\n  content: \"\\f510\";\n}\n\n.fa-om:before {\n  content: \"\\f679\";\n}\n\n.fa-opencart:before {\n  content: \"\\f23d\";\n}\n\n.fa-openid:before {\n  content: \"\\f19b\";\n}\n\n.fa-opera:before {\n  content: \"\\f26a\";\n}\n\n.fa-optin-monster:before {\n  content: \"\\f23c\";\n}\n\n.fa-orcid:before {\n  content: \"\\f8d2\";\n}\n\n.fa-osi:before {\n  content: \"\\f41a\";\n}\n\n.fa-otter:before {\n  content: \"\\f700\";\n}\n\n.fa-outdent:before {\n  content: \"\\f03b\";\n}\n\n.fa-page4:before {\n  content: \"\\f3d7\";\n}\n\n.fa-pagelines:before {\n  content: \"\\f18c\";\n}\n\n.fa-pager:before {\n  content: \"\\f815\";\n}\n\n.fa-paint-brush:before {\n  content: \"\\f1fc\";\n}\n\n.fa-paint-roller:before {\n  content: \"\\f5aa\";\n}\n\n.fa-palette:before {\n  content: \"\\f53f\";\n}\n\n.fa-palfed:before {\n  content: \"\\f3d8\";\n}\n\n.fa-pallet:before {\n  content: \"\\f482\";\n}\n\n.fa-paper-plane:before {\n  content: \"\\f1d8\";\n}\n\n.fa-paperclip:before {\n  content: \"\\f0c6\";\n}\n\n.fa-parachute-box:before {\n  content: \"\\f4cd\";\n}\n\n.fa-paragraph:before {\n  content: \"\\f1dd\";\n}\n\n.fa-parking:before {\n  content: \"\\f540\";\n}\n\n.fa-passport:before {\n  content: \"\\f5ab\";\n}\n\n.fa-pastafarianism:before {\n  content: \"\\f67b\";\n}\n\n.fa-paste:before {\n  content: \"\\f0ea\";\n}\n\n.fa-patreon:before {\n  content: \"\\f3d9\";\n}\n\n.fa-pause:before {\n  content: \"\\f04c\";\n}\n\n.fa-pause-circle:before {\n  content: \"\\f28b\";\n}\n\n.fa-paw:before {\n  content: \"\\f1b0\";\n}\n\n.fa-paypal:before {\n  content: \"\\f1ed\";\n}\n\n.fa-peace:before {\n  content: \"\\f67c\";\n}\n\n.fa-pen:before {\n  content: \"\\f304\";\n}\n\n.fa-pen-alt:before {\n  content: \"\\f305\";\n}\n\n.fa-pen-fancy:before {\n  content: \"\\f5ac\";\n}\n\n.fa-pen-nib:before {\n  content: \"\\f5ad\";\n}\n\n.fa-pen-square:before {\n  content: \"\\f14b\";\n}\n\n.fa-pencil-alt:before {\n  content: \"\\f303\";\n}\n\n.fa-pencil-ruler:before {\n  content: \"\\f5ae\";\n}\n\n.fa-penny-arcade:before {\n  content: \"\\f704\";\n}\n\n.fa-people-arrows:before {\n  content: \"\\e068\";\n}\n\n.fa-people-carry:before {\n  content: \"\\f4ce\";\n}\n\n.fa-pepper-hot:before {\n  content: \"\\f816\";\n}\n\n.fa-percent:before {\n  content: \"\\f295\";\n}\n\n.fa-percentage:before {\n  content: \"\\f541\";\n}\n\n.fa-periscope:before {\n  content: \"\\f3da\";\n}\n\n.fa-person-booth:before {\n  content: \"\\f756\";\n}\n\n.fa-phabricator:before {\n  content: \"\\f3db\";\n}\n\n.fa-phoenix-framework:before {\n  content: \"\\f3dc\";\n}\n\n.fa-phoenix-squadron:before {\n  content: \"\\f511\";\n}\n\n.fa-phone:before {\n  content: \"\\f095\";\n}\n\n.fa-phone-alt:before {\n  content: \"\\f879\";\n}\n\n.fa-phone-slash:before {\n  content: \"\\f3dd\";\n}\n\n.fa-phone-square:before {\n  content: \"\\f098\";\n}\n\n.fa-phone-square-alt:before {\n  content: \"\\f87b\";\n}\n\n.fa-phone-volume:before {\n  content: \"\\f2a0\";\n}\n\n.fa-photo-video:before {\n  content: \"\\f87c\";\n}\n\n.fa-php:before {\n  content: \"\\f457\";\n}\n\n.fa-pied-piper:before {\n  content: \"\\f2ae\";\n}\n\n.fa-pied-piper-alt:before {\n  content: \"\\f1a8\";\n}\n\n.fa-pied-piper-hat:before {\n  content: \"\\f4e5\";\n}\n\n.fa-pied-piper-pp:before {\n  content: \"\\f1a7\";\n}\n\n.fa-pied-piper-square:before {\n  content: \"\\e01e\";\n}\n\n.fa-piggy-bank:before {\n  content: \"\\f4d3\";\n}\n\n.fa-pills:before {\n  content: \"\\f484\";\n}\n\n.fa-pinterest:before {\n  content: \"\\f0d2\";\n}\n\n.fa-pinterest-p:before {\n  content: \"\\f231\";\n}\n\n.fa-pinterest-square:before {\n  content: \"\\f0d3\";\n}\n\n.fa-pizza-slice:before {\n  content: \"\\f818\";\n}\n\n.fa-place-of-worship:before {\n  content: \"\\f67f\";\n}\n\n.fa-plane:before {\n  content: \"\\f072\";\n}\n\n.fa-plane-arrival:before {\n  content: \"\\f5af\";\n}\n\n.fa-plane-departure:before {\n  content: \"\\f5b0\";\n}\n\n.fa-plane-slash:before {\n  content: \"\\e069\";\n}\n\n.fa-play:before {\n  content: \"\\f04b\";\n}\n\n.fa-play-circle:before {\n  content: \"\\f144\";\n}\n\n.fa-playstation:before {\n  content: \"\\f3df\";\n}\n\n.fa-plug:before {\n  content: \"\\f1e6\";\n}\n\n.fa-plus:before {\n  content: \"\\f067\";\n}\n\n.fa-plus-circle:before {\n  content: \"\\f055\";\n}\n\n.fa-plus-square:before {\n  content: \"\\f0fe\";\n}\n\n.fa-podcast:before {\n  content: \"\\f2ce\";\n}\n\n.fa-poll:before {\n  content: \"\\f681\";\n}\n\n.fa-poll-h:before {\n  content: \"\\f682\";\n}\n\n.fa-poo:before {\n  content: \"\\f2fe\";\n}\n\n.fa-poo-storm:before {\n  content: \"\\f75a\";\n}\n\n.fa-poop:before {\n  content: \"\\f619\";\n}\n\n.fa-portrait:before {\n  content: \"\\f3e0\";\n}\n\n.fa-pound-sign:before {\n  content: \"\\f154\";\n}\n\n.fa-power-off:before {\n  content: \"\\f011\";\n}\n\n.fa-pray:before {\n  content: \"\\f683\";\n}\n\n.fa-praying-hands:before {\n  content: \"\\f684\";\n}\n\n.fa-prescription:before {\n  content: \"\\f5b1\";\n}\n\n.fa-prescription-bottle:before {\n  content: \"\\f485\";\n}\n\n.fa-prescription-bottle-alt:before {\n  content: \"\\f486\";\n}\n\n.fa-print:before {\n  content: \"\\f02f\";\n}\n\n.fa-procedures:before {\n  content: \"\\f487\";\n}\n\n.fa-product-hunt:before {\n  content: \"\\f288\";\n}\n\n.fa-project-diagram:before {\n  content: \"\\f542\";\n}\n\n.fa-pump-medical:before {\n  content: \"\\e06a\";\n}\n\n.fa-pump-soap:before {\n  content: \"\\e06b\";\n}\n\n.fa-pushed:before {\n  content: \"\\f3e1\";\n}\n\n.fa-puzzle-piece:before {\n  content: \"\\f12e\";\n}\n\n.fa-python:before {\n  content: \"\\f3e2\";\n}\n\n.fa-qq:before {\n  content: \"\\f1d6\";\n}\n\n.fa-qrcode:before {\n  content: \"\\f029\";\n}\n\n.fa-question:before {\n  content: \"\\f128\";\n}\n\n.fa-question-circle:before {\n  content: \"\\f059\";\n}\n\n.fa-quidditch:before {\n  content: \"\\f458\";\n}\n\n.fa-quinscape:before {\n  content: \"\\f459\";\n}\n\n.fa-quora:before {\n  content: \"\\f2c4\";\n}\n\n.fa-quote-left:before {\n  content: \"\\f10d\";\n}\n\n.fa-quote-right:before {\n  content: \"\\f10e\";\n}\n\n.fa-quran:before {\n  content: \"\\f687\";\n}\n\n.fa-r-project:before {\n  content: \"\\f4f7\";\n}\n\n.fa-radiation:before {\n  content: \"\\f7b9\";\n}\n\n.fa-radiation-alt:before {\n  content: \"\\f7ba\";\n}\n\n.fa-rainbow:before {\n  content: \"\\f75b\";\n}\n\n.fa-random:before {\n  content: \"\\f074\";\n}\n\n.fa-raspberry-pi:before {\n  content: \"\\f7bb\";\n}\n\n.fa-ravelry:before {\n  content: \"\\f2d9\";\n}\n\n.fa-react:before {\n  content: \"\\f41b\";\n}\n\n.fa-reacteurope:before {\n  content: \"\\f75d\";\n}\n\n.fa-readme:before {\n  content: \"\\f4d5\";\n}\n\n.fa-rebel:before {\n  content: \"\\f1d0\";\n}\n\n.fa-receipt:before {\n  content: \"\\f543\";\n}\n\n.fa-record-vinyl:before {\n  content: \"\\f8d9\";\n}\n\n.fa-recycle:before {\n  content: \"\\f1b8\";\n}\n\n.fa-red-river:before {\n  content: \"\\f3e3\";\n}\n\n.fa-reddit:before {\n  content: \"\\f1a1\";\n}\n\n.fa-reddit-alien:before {\n  content: \"\\f281\";\n}\n\n.fa-reddit-square:before {\n  content: \"\\f1a2\";\n}\n\n.fa-redhat:before {\n  content: \"\\f7bc\";\n}\n\n.fa-redo:before {\n  content: \"\\f01e\";\n}\n\n.fa-redo-alt:before {\n  content: \"\\f2f9\";\n}\n\n.fa-registered:before {\n  content: \"\\f25d\";\n}\n\n.fa-remove-format:before {\n  content: \"\\f87d\";\n}\n\n.fa-renren:before {\n  content: \"\\f18b\";\n}\n\n.fa-reply:before {\n  content: \"\\f3e5\";\n}\n\n.fa-reply-all:before {\n  content: \"\\f122\";\n}\n\n.fa-replyd:before {\n  content: \"\\f3e6\";\n}\n\n.fa-republican:before {\n  content: \"\\f75e\";\n}\n\n.fa-researchgate:before {\n  content: \"\\f4f8\";\n}\n\n.fa-resolving:before {\n  content: \"\\f3e7\";\n}\n\n.fa-restroom:before {\n  content: \"\\f7bd\";\n}\n\n.fa-retweet:before {\n  content: \"\\f079\";\n}\n\n.fa-rev:before {\n  content: \"\\f5b2\";\n}\n\n.fa-ribbon:before {\n  content: \"\\f4d6\";\n}\n\n.fa-ring:before {\n  content: \"\\f70b\";\n}\n\n.fa-road:before {\n  content: \"\\f018\";\n}\n\n.fa-robot:before {\n  content: \"\\f544\";\n}\n\n.fa-rocket:before {\n  content: \"\\f135\";\n}\n\n.fa-rocketchat:before {\n  content: \"\\f3e8\";\n}\n\n.fa-rockrms:before {\n  content: \"\\f3e9\";\n}\n\n.fa-route:before {\n  content: \"\\f4d7\";\n}\n\n.fa-rss:before {\n  content: \"\\f09e\";\n}\n\n.fa-rss-square:before {\n  content: \"\\f143\";\n}\n\n.fa-ruble-sign:before {\n  content: \"\\f158\";\n}\n\n.fa-ruler:before {\n  content: \"\\f545\";\n}\n\n.fa-ruler-combined:before {\n  content: \"\\f546\";\n}\n\n.fa-ruler-horizontal:before {\n  content: \"\\f547\";\n}\n\n.fa-ruler-vertical:before {\n  content: \"\\f548\";\n}\n\n.fa-running:before {\n  content: \"\\f70c\";\n}\n\n.fa-rupee-sign:before {\n  content: \"\\f156\";\n}\n\n.fa-rust:before {\n  content: \"\\e07a\";\n}\n\n.fa-sad-cry:before {\n  content: \"\\f5b3\";\n}\n\n.fa-sad-tear:before {\n  content: \"\\f5b4\";\n}\n\n.fa-safari:before {\n  content: \"\\f267\";\n}\n\n.fa-salesforce:before {\n  content: \"\\f83b\";\n}\n\n.fa-sass:before {\n  content: \"\\f41e\";\n}\n\n.fa-satellite:before {\n  content: \"\\f7bf\";\n}\n\n.fa-satellite-dish:before {\n  content: \"\\f7c0\";\n}\n\n.fa-save:before {\n  content: \"\\f0c7\";\n}\n\n.fa-schlix:before {\n  content: \"\\f3ea\";\n}\n\n.fa-school:before {\n  content: \"\\f549\";\n}\n\n.fa-screwdriver:before {\n  content: \"\\f54a\";\n}\n\n.fa-scribd:before {\n  content: \"\\f28a\";\n}\n\n.fa-scroll:before {\n  content: \"\\f70e\";\n}\n\n.fa-sd-card:before {\n  content: \"\\f7c2\";\n}\n\n.fa-search:before {\n  content: \"\\f002\";\n}\n\n.fa-search-dollar:before {\n  content: \"\\f688\";\n}\n\n.fa-search-location:before {\n  content: \"\\f689\";\n}\n\n.fa-search-minus:before {\n  content: \"\\f010\";\n}\n\n.fa-search-plus:before {\n  content: \"\\f00e\";\n}\n\n.fa-searchengin:before {\n  content: \"\\f3eb\";\n}\n\n.fa-seedling:before {\n  content: \"\\f4d8\";\n}\n\n.fa-sellcast:before {\n  content: \"\\f2da\";\n}\n\n.fa-sellsy:before {\n  content: \"\\f213\";\n}\n\n.fa-server:before {\n  content: \"\\f233\";\n}\n\n.fa-servicestack:before {\n  content: \"\\f3ec\";\n}\n\n.fa-shapes:before {\n  content: \"\\f61f\";\n}\n\n.fa-share:before {\n  content: \"\\f064\";\n}\n\n.fa-share-alt:before {\n  content: \"\\f1e0\";\n}\n\n.fa-share-alt-square:before {\n  content: \"\\f1e1\";\n}\n\n.fa-share-square:before {\n  content: \"\\f14d\";\n}\n\n.fa-shekel-sign:before {\n  content: \"\\f20b\";\n}\n\n.fa-shield-alt:before {\n  content: \"\\f3ed\";\n}\n\n.fa-shield-virus:before {\n  content: \"\\e06c\";\n}\n\n.fa-ship:before {\n  content: \"\\f21a\";\n}\n\n.fa-shipping-fast:before {\n  content: \"\\f48b\";\n}\n\n.fa-shirtsinbulk:before {\n  content: \"\\f214\";\n}\n\n.fa-shoe-prints:before {\n  content: \"\\f54b\";\n}\n\n.fa-shopify:before {\n  content: \"\\e057\";\n}\n\n.fa-shopping-bag:before {\n  content: \"\\f290\";\n}\n\n.fa-shopping-basket:before {\n  content: \"\\f291\";\n}\n\n.fa-shopping-cart:before {\n  content: \"\\f07a\";\n}\n\n.fa-shopware:before {\n  content: \"\\f5b5\";\n}\n\n.fa-shower:before {\n  content: \"\\f2cc\";\n}\n\n.fa-shuttle-van:before {\n  content: \"\\f5b6\";\n}\n\n.fa-sign:before {\n  content: \"\\f4d9\";\n}\n\n.fa-sign-in-alt:before {\n  content: \"\\f2f6\";\n}\n\n.fa-sign-language:before {\n  content: \"\\f2a7\";\n}\n\n.fa-sign-out-alt:before {\n  content: \"\\f2f5\";\n}\n\n.fa-signal:before {\n  content: \"\\f012\";\n}\n\n.fa-signature:before {\n  content: \"\\f5b7\";\n}\n\n.fa-sim-card:before {\n  content: \"\\f7c4\";\n}\n\n.fa-simplybuilt:before {\n  content: \"\\f215\";\n}\n\n.fa-sink:before {\n  content: \"\\e06d\";\n}\n\n.fa-sistrix:before {\n  content: \"\\f3ee\";\n}\n\n.fa-sitemap:before {\n  content: \"\\f0e8\";\n}\n\n.fa-sith:before {\n  content: \"\\f512\";\n}\n\n.fa-skating:before {\n  content: \"\\f7c5\";\n}\n\n.fa-sketch:before {\n  content: \"\\f7c6\";\n}\n\n.fa-skiing:before {\n  content: \"\\f7c9\";\n}\n\n.fa-skiing-nordic:before {\n  content: \"\\f7ca\";\n}\n\n.fa-skull:before {\n  content: \"\\f54c\";\n}\n\n.fa-skull-crossbones:before {\n  content: \"\\f714\";\n}\n\n.fa-skyatlas:before {\n  content: \"\\f216\";\n}\n\n.fa-skype:before {\n  content: \"\\f17e\";\n}\n\n.fa-slack:before {\n  content: \"\\f198\";\n}\n\n.fa-slack-hash:before {\n  content: \"\\f3ef\";\n}\n\n.fa-slash:before {\n  content: \"\\f715\";\n}\n\n.fa-sleigh:before {\n  content: \"\\f7cc\";\n}\n\n.fa-sliders-h:before {\n  content: \"\\f1de\";\n}\n\n.fa-slideshare:before {\n  content: \"\\f1e7\";\n}\n\n.fa-smile:before {\n  content: \"\\f118\";\n}\n\n.fa-smile-beam:before {\n  content: \"\\f5b8\";\n}\n\n.fa-smile-wink:before {\n  content: \"\\f4da\";\n}\n\n.fa-smog:before {\n  content: \"\\f75f\";\n}\n\n.fa-smoking:before {\n  content: \"\\f48d\";\n}\n\n.fa-smoking-ban:before {\n  content: \"\\f54d\";\n}\n\n.fa-sms:before {\n  content: \"\\f7cd\";\n}\n\n.fa-snapchat:before {\n  content: \"\\f2ab\";\n}\n\n.fa-snapchat-ghost:before {\n  content: \"\\f2ac\";\n}\n\n.fa-snapchat-square:before {\n  content: \"\\f2ad\";\n}\n\n.fa-snowboarding:before {\n  content: \"\\f7ce\";\n}\n\n.fa-snowflake:before {\n  content: \"\\f2dc\";\n}\n\n.fa-snowman:before {\n  content: \"\\f7d0\";\n}\n\n.fa-snowplow:before {\n  content: \"\\f7d2\";\n}\n\n.fa-soap:before {\n  content: \"\\e06e\";\n}\n\n.fa-socks:before {\n  content: \"\\f696\";\n}\n\n.fa-solar-panel:before {\n  content: \"\\f5ba\";\n}\n\n.fa-sort:before {\n  content: \"\\f0dc\";\n}\n\n.fa-sort-alpha-down:before {\n  content: \"\\f15d\";\n}\n\n.fa-sort-alpha-down-alt:before {\n  content: \"\\f881\";\n}\n\n.fa-sort-alpha-up:before {\n  content: \"\\f15e\";\n}\n\n.fa-sort-alpha-up-alt:before {\n  content: \"\\f882\";\n}\n\n.fa-sort-amount-down:before {\n  content: \"\\f160\";\n}\n\n.fa-sort-amount-down-alt:before {\n  content: \"\\f884\";\n}\n\n.fa-sort-amount-up:before {\n  content: \"\\f161\";\n}\n\n.fa-sort-amount-up-alt:before {\n  content: \"\\f885\";\n}\n\n.fa-sort-down:before {\n  content: \"\\f0dd\";\n}\n\n.fa-sort-numeric-down:before {\n  content: \"\\f162\";\n}\n\n.fa-sort-numeric-down-alt:before {\n  content: \"\\f886\";\n}\n\n.fa-sort-numeric-up:before {\n  content: \"\\f163\";\n}\n\n.fa-sort-numeric-up-alt:before {\n  content: \"\\f887\";\n}\n\n.fa-sort-up:before {\n  content: \"\\f0de\";\n}\n\n.fa-soundcloud:before {\n  content: \"\\f1be\";\n}\n\n.fa-sourcetree:before {\n  content: \"\\f7d3\";\n}\n\n.fa-spa:before {\n  content: \"\\f5bb\";\n}\n\n.fa-space-shuttle:before {\n  content: \"\\f197\";\n}\n\n.fa-speakap:before {\n  content: \"\\f3f3\";\n}\n\n.fa-speaker-deck:before {\n  content: \"\\f83c\";\n}\n\n.fa-spell-check:before {\n  content: \"\\f891\";\n}\n\n.fa-spider:before {\n  content: \"\\f717\";\n}\n\n.fa-spinner:before {\n  content: \"\\f110\";\n}\n\n.fa-splotch:before {\n  content: \"\\f5bc\";\n}\n\n.fa-spotify:before {\n  content: \"\\f1bc\";\n}\n\n.fa-spray-can:before {\n  content: \"\\f5bd\";\n}\n\n.fa-square:before {\n  content: \"\\f0c8\";\n}\n\n.fa-square-full:before {\n  content: \"\\f45c\";\n}\n\n.fa-square-root-alt:before {\n  content: \"\\f698\";\n}\n\n.fa-squarespace:before {\n  content: \"\\f5be\";\n}\n\n.fa-stack-exchange:before {\n  content: \"\\f18d\";\n}\n\n.fa-stack-overflow:before {\n  content: \"\\f16c\";\n}\n\n.fa-stackpath:before {\n  content: \"\\f842\";\n}\n\n.fa-stamp:before {\n  content: \"\\f5bf\";\n}\n\n.fa-star:before {\n  content: \"\\f005\";\n}\n\n.fa-star-and-crescent:before {\n  content: \"\\f699\";\n}\n\n.fa-star-half:before {\n  content: \"\\f089\";\n}\n\n.fa-star-half-alt:before {\n  content: \"\\f5c0\";\n}\n\n.fa-star-of-david:before {\n  content: \"\\f69a\";\n}\n\n.fa-star-of-life:before {\n  content: \"\\f621\";\n}\n\n.fa-staylinked:before {\n  content: \"\\f3f5\";\n}\n\n.fa-steam:before {\n  content: \"\\f1b6\";\n}\n\n.fa-steam-square:before {\n  content: \"\\f1b7\";\n}\n\n.fa-steam-symbol:before {\n  content: \"\\f3f6\";\n}\n\n.fa-step-backward:before {\n  content: \"\\f048\";\n}\n\n.fa-step-forward:before {\n  content: \"\\f051\";\n}\n\n.fa-stethoscope:before {\n  content: \"\\f0f1\";\n}\n\n.fa-sticker-mule:before {\n  content: \"\\f3f7\";\n}\n\n.fa-sticky-note:before {\n  content: \"\\f249\";\n}\n\n.fa-stop:before {\n  content: \"\\f04d\";\n}\n\n.fa-stop-circle:before {\n  content: \"\\f28d\";\n}\n\n.fa-stopwatch:before {\n  content: \"\\f2f2\";\n}\n\n.fa-stopwatch-20:before {\n  content: \"\\e06f\";\n}\n\n.fa-store:before {\n  content: \"\\f54e\";\n}\n\n.fa-store-alt:before {\n  content: \"\\f54f\";\n}\n\n.fa-store-alt-slash:before {\n  content: \"\\e070\";\n}\n\n.fa-store-slash:before {\n  content: \"\\e071\";\n}\n\n.fa-strava:before {\n  content: \"\\f428\";\n}\n\n.fa-stream:before {\n  content: \"\\f550\";\n}\n\n.fa-street-view:before {\n  content: \"\\f21d\";\n}\n\n.fa-strikethrough:before {\n  content: \"\\f0cc\";\n}\n\n.fa-stripe:before {\n  content: \"\\f429\";\n}\n\n.fa-stripe-s:before {\n  content: \"\\f42a\";\n}\n\n.fa-stroopwafel:before {\n  content: \"\\f551\";\n}\n\n.fa-studiovinari:before {\n  content: \"\\f3f8\";\n}\n\n.fa-stumbleupon:before {\n  content: \"\\f1a4\";\n}\n\n.fa-stumbleupon-circle:before {\n  content: \"\\f1a3\";\n}\n\n.fa-subscript:before {\n  content: \"\\f12c\";\n}\n\n.fa-subway:before {\n  content: \"\\f239\";\n}\n\n.fa-suitcase:before {\n  content: \"\\f0f2\";\n}\n\n.fa-suitcase-rolling:before {\n  content: \"\\f5c1\";\n}\n\n.fa-sun:before {\n  content: \"\\f185\";\n}\n\n.fa-superpowers:before {\n  content: \"\\f2dd\";\n}\n\n.fa-superscript:before {\n  content: \"\\f12b\";\n}\n\n.fa-supple:before {\n  content: \"\\f3f9\";\n}\n\n.fa-surprise:before {\n  content: \"\\f5c2\";\n}\n\n.fa-suse:before {\n  content: \"\\f7d6\";\n}\n\n.fa-swatchbook:before {\n  content: \"\\f5c3\";\n}\n\n.fa-swift:before {\n  content: \"\\f8e1\";\n}\n\n.fa-swimmer:before {\n  content: \"\\f5c4\";\n}\n\n.fa-swimming-pool:before {\n  content: \"\\f5c5\";\n}\n\n.fa-symfony:before {\n  content: \"\\f83d\";\n}\n\n.fa-synagogue:before {\n  content: \"\\f69b\";\n}\n\n.fa-sync:before {\n  content: \"\\f021\";\n}\n\n.fa-sync-alt:before {\n  content: \"\\f2f1\";\n}\n\n.fa-syringe:before {\n  content: \"\\f48e\";\n}\n\n.fa-table:before {\n  content: \"\\f0ce\";\n}\n\n.fa-table-tennis:before {\n  content: \"\\f45d\";\n}\n\n.fa-tablet:before {\n  content: \"\\f10a\";\n}\n\n.fa-tablet-alt:before {\n  content: \"\\f3fa\";\n}\n\n.fa-tablets:before {\n  content: \"\\f490\";\n}\n\n.fa-tachometer-alt:before {\n  content: \"\\f3fd\";\n}\n\n.fa-tag:before {\n  content: \"\\f02b\";\n}\n\n.fa-tags:before {\n  content: \"\\f02c\";\n}\n\n.fa-tape:before {\n  content: \"\\f4db\";\n}\n\n.fa-tasks:before {\n  content: \"\\f0ae\";\n}\n\n.fa-taxi:before {\n  content: \"\\f1ba\";\n}\n\n.fa-teamspeak:before {\n  content: \"\\f4f9\";\n}\n\n.fa-teeth:before {\n  content: \"\\f62e\";\n}\n\n.fa-teeth-open:before {\n  content: \"\\f62f\";\n}\n\n.fa-telegram:before {\n  content: \"\\f2c6\";\n}\n\n.fa-telegram-plane:before {\n  content: \"\\f3fe\";\n}\n\n.fa-temperature-high:before {\n  content: \"\\f769\";\n}\n\n.fa-temperature-low:before {\n  content: \"\\f76b\";\n}\n\n.fa-tencent-weibo:before {\n  content: \"\\f1d5\";\n}\n\n.fa-tenge:before {\n  content: \"\\f7d7\";\n}\n\n.fa-terminal:before {\n  content: \"\\f120\";\n}\n\n.fa-text-height:before {\n  content: \"\\f034\";\n}\n\n.fa-text-width:before {\n  content: \"\\f035\";\n}\n\n.fa-th:before {\n  content: \"\\f00a\";\n}\n\n.fa-th-large:before {\n  content: \"\\f009\";\n}\n\n.fa-th-list:before {\n  content: \"\\f00b\";\n}\n\n.fa-the-red-yeti:before {\n  content: \"\\f69d\";\n}\n\n.fa-theater-masks:before {\n  content: \"\\f630\";\n}\n\n.fa-themeco:before {\n  content: \"\\f5c6\";\n}\n\n.fa-themeisle:before {\n  content: \"\\f2b2\";\n}\n\n.fa-thermometer:before {\n  content: \"\\f491\";\n}\n\n.fa-thermometer-empty:before {\n  content: \"\\f2cb\";\n}\n\n.fa-thermometer-full:before {\n  content: \"\\f2c7\";\n}\n\n.fa-thermometer-half:before {\n  content: \"\\f2c9\";\n}\n\n.fa-thermometer-quarter:before {\n  content: \"\\f2ca\";\n}\n\n.fa-thermometer-three-quarters:before {\n  content: \"\\f2c8\";\n}\n\n.fa-think-peaks:before {\n  content: \"\\f731\";\n}\n\n.fa-thumbs-down:before {\n  content: \"\\f165\";\n}\n\n.fa-thumbs-up:before {\n  content: \"\\f164\";\n}\n\n.fa-thumbtack:before {\n  content: \"\\f08d\";\n}\n\n.fa-ticket-alt:before {\n  content: \"\\f3ff\";\n}\n\n.fa-tiktok:before {\n  content: \"\\e07b\";\n}\n\n.fa-times:before {\n  content: \"\\f00d\";\n}\n\n.fa-times-circle:before {\n  content: \"\\f057\";\n}\n\n.fa-tint:before {\n  content: \"\\f043\";\n}\n\n.fa-tint-slash:before {\n  content: \"\\f5c7\";\n}\n\n.fa-tired:before {\n  content: \"\\f5c8\";\n}\n\n.fa-toggle-off:before {\n  content: \"\\f204\";\n}\n\n.fa-toggle-on:before {\n  content: \"\\f205\";\n}\n\n.fa-toilet:before {\n  content: \"\\f7d8\";\n}\n\n.fa-toilet-paper:before {\n  content: \"\\f71e\";\n}\n\n.fa-toilet-paper-slash:before {\n  content: \"\\e072\";\n}\n\n.fa-toolbox:before {\n  content: \"\\f552\";\n}\n\n.fa-tools:before {\n  content: \"\\f7d9\";\n}\n\n.fa-tooth:before {\n  content: \"\\f5c9\";\n}\n\n.fa-torah:before {\n  content: \"\\f6a0\";\n}\n\n.fa-torii-gate:before {\n  content: \"\\f6a1\";\n}\n\n.fa-tractor:before {\n  content: \"\\f722\";\n}\n\n.fa-trade-federation:before {\n  content: \"\\f513\";\n}\n\n.fa-trademark:before {\n  content: \"\\f25c\";\n}\n\n.fa-traffic-light:before {\n  content: \"\\f637\";\n}\n\n.fa-trailer:before {\n  content: \"\\e041\";\n}\n\n.fa-train:before {\n  content: \"\\f238\";\n}\n\n.fa-tram:before {\n  content: \"\\f7da\";\n}\n\n.fa-transgender:before {\n  content: \"\\f224\";\n}\n\n.fa-transgender-alt:before {\n  content: \"\\f225\";\n}\n\n.fa-trash:before {\n  content: \"\\f1f8\";\n}\n\n.fa-trash-alt:before {\n  content: \"\\f2ed\";\n}\n\n.fa-trash-restore:before {\n  content: \"\\f829\";\n}\n\n.fa-trash-restore-alt:before {\n  content: \"\\f82a\";\n}\n\n.fa-tree:before {\n  content: \"\\f1bb\";\n}\n\n.fa-trello:before {\n  content: \"\\f181\";\n}\n\n.fa-tripadvisor:before {\n  content: \"\\f262\";\n}\n\n.fa-trophy:before {\n  content: \"\\f091\";\n}\n\n.fa-truck:before {\n  content: \"\\f0d1\";\n}\n\n.fa-truck-loading:before {\n  content: \"\\f4de\";\n}\n\n.fa-truck-monster:before {\n  content: \"\\f63b\";\n}\n\n.fa-truck-moving:before {\n  content: \"\\f4df\";\n}\n\n.fa-truck-pickup:before {\n  content: \"\\f63c\";\n}\n\n.fa-tshirt:before {\n  content: \"\\f553\";\n}\n\n.fa-tty:before {\n  content: \"\\f1e4\";\n}\n\n.fa-tumblr:before {\n  content: \"\\f173\";\n}\n\n.fa-tumblr-square:before {\n  content: \"\\f174\";\n}\n\n.fa-tv:before {\n  content: \"\\f26c\";\n}\n\n.fa-twitch:before {\n  content: \"\\f1e8\";\n}\n\n.fa-twitter:before {\n  content: \"\\f099\";\n}\n\n.fa-twitter-square:before {\n  content: \"\\f081\";\n}\n\n.fa-typo3:before {\n  content: \"\\f42b\";\n}\n\n.fa-uber:before {\n  content: \"\\f402\";\n}\n\n.fa-ubuntu:before {\n  content: \"\\f7df\";\n}\n\n.fa-uikit:before {\n  content: \"\\f403\";\n}\n\n.fa-umbraco:before {\n  content: \"\\f8e8\";\n}\n\n.fa-umbrella:before {\n  content: \"\\f0e9\";\n}\n\n.fa-umbrella-beach:before {\n  content: \"\\f5ca\";\n}\n\n.fa-underline:before {\n  content: \"\\f0cd\";\n}\n\n.fa-undo:before {\n  content: \"\\f0e2\";\n}\n\n.fa-undo-alt:before {\n  content: \"\\f2ea\";\n}\n\n.fa-uniregistry:before {\n  content: \"\\f404\";\n}\n\n.fa-unity:before {\n  content: \"\\e049\";\n}\n\n.fa-universal-access:before {\n  content: \"\\f29a\";\n}\n\n.fa-university:before {\n  content: \"\\f19c\";\n}\n\n.fa-unlink:before {\n  content: \"\\f127\";\n}\n\n.fa-unlock:before {\n  content: \"\\f09c\";\n}\n\n.fa-unlock-alt:before {\n  content: \"\\f13e\";\n}\n\n.fa-unsplash:before {\n  content: \"\\e07c\";\n}\n\n.fa-untappd:before {\n  content: \"\\f405\";\n}\n\n.fa-upload:before {\n  content: \"\\f093\";\n}\n\n.fa-ups:before {\n  content: \"\\f7e0\";\n}\n\n.fa-usb:before {\n  content: \"\\f287\";\n}\n\n.fa-user:before {\n  content: \"\\f007\";\n}\n\n.fa-user-alt:before {\n  content: \"\\f406\";\n}\n\n.fa-user-alt-slash:before {\n  content: \"\\f4fa\";\n}\n\n.fa-user-astronaut:before {\n  content: \"\\f4fb\";\n}\n\n.fa-user-check:before {\n  content: \"\\f4fc\";\n}\n\n.fa-user-circle:before {\n  content: \"\\f2bd\";\n}\n\n.fa-user-clock:before {\n  content: \"\\f4fd\";\n}\n\n.fa-user-cog:before {\n  content: \"\\f4fe\";\n}\n\n.fa-user-edit:before {\n  content: \"\\f4ff\";\n}\n\n.fa-user-friends:before {\n  content: \"\\f500\";\n}\n\n.fa-user-graduate:before {\n  content: \"\\f501\";\n}\n\n.fa-user-injured:before {\n  content: \"\\f728\";\n}\n\n.fa-user-lock:before {\n  content: \"\\f502\";\n}\n\n.fa-user-md:before {\n  content: \"\\f0f0\";\n}\n\n.fa-user-minus:before {\n  content: \"\\f503\";\n}\n\n.fa-user-ninja:before {\n  content: \"\\f504\";\n}\n\n.fa-user-nurse:before {\n  content: \"\\f82f\";\n}\n\n.fa-user-plus:before {\n  content: \"\\f234\";\n}\n\n.fa-user-secret:before {\n  content: \"\\f21b\";\n}\n\n.fa-user-shield:before {\n  content: \"\\f505\";\n}\n\n.fa-user-slash:before {\n  content: \"\\f506\";\n}\n\n.fa-user-tag:before {\n  content: \"\\f507\";\n}\n\n.fa-user-tie:before {\n  content: \"\\f508\";\n}\n\n.fa-user-times:before {\n  content: \"\\f235\";\n}\n\n.fa-users:before {\n  content: \"\\f0c0\";\n}\n\n.fa-users-cog:before {\n  content: \"\\f509\";\n}\n\n.fa-users-slash:before {\n  content: \"\\e073\";\n}\n\n.fa-usps:before {\n  content: \"\\f7e1\";\n}\n\n.fa-ussunnah:before {\n  content: \"\\f407\";\n}\n\n.fa-utensil-spoon:before {\n  content: \"\\f2e5\";\n}\n\n.fa-utensils:before {\n  content: \"\\f2e7\";\n}\n\n.fa-vaadin:before {\n  content: \"\\f408\";\n}\n\n.fa-vector-square:before {\n  content: \"\\f5cb\";\n}\n\n.fa-venus:before {\n  content: \"\\f221\";\n}\n\n.fa-venus-double:before {\n  content: \"\\f226\";\n}\n\n.fa-venus-mars:before {\n  content: \"\\f228\";\n}\n\n.fa-viacoin:before {\n  content: \"\\f237\";\n}\n\n.fa-viadeo:before {\n  content: \"\\f2a9\";\n}\n\n.fa-viadeo-square:before {\n  content: \"\\f2aa\";\n}\n\n.fa-vial:before {\n  content: \"\\f492\";\n}\n\n.fa-vials:before {\n  content: \"\\f493\";\n}\n\n.fa-viber:before {\n  content: \"\\f409\";\n}\n\n.fa-video:before {\n  content: \"\\f03d\";\n}\n\n.fa-video-slash:before {\n  content: \"\\f4e2\";\n}\n\n.fa-vihara:before {\n  content: \"\\f6a7\";\n}\n\n.fa-vimeo:before {\n  content: \"\\f40a\";\n}\n\n.fa-vimeo-square:before {\n  content: \"\\f194\";\n}\n\n.fa-vimeo-v:before {\n  content: \"\\f27d\";\n}\n\n.fa-vine:before {\n  content: \"\\f1ca\";\n}\n\n.fa-virus:before {\n  content: \"\\e074\";\n}\n\n.fa-virus-slash:before {\n  content: \"\\e075\";\n}\n\n.fa-viruses:before {\n  content: \"\\e076\";\n}\n\n.fa-vk:before {\n  content: \"\\f189\";\n}\n\n.fa-vnv:before {\n  content: \"\\f40b\";\n}\n\n.fa-voicemail:before {\n  content: \"\\f897\";\n}\n\n.fa-volleyball-ball:before {\n  content: \"\\f45f\";\n}\n\n.fa-volume-down:before {\n  content: \"\\f027\";\n}\n\n.fa-volume-mute:before {\n  content: \"\\f6a9\";\n}\n\n.fa-volume-off:before {\n  content: \"\\f026\";\n}\n\n.fa-volume-up:before {\n  content: \"\\f028\";\n}\n\n.fa-vote-yea:before {\n  content: \"\\f772\";\n}\n\n.fa-vr-cardboard:before {\n  content: \"\\f729\";\n}\n\n.fa-vuejs:before {\n  content: \"\\f41f\";\n}\n\n.fa-walking:before {\n  content: \"\\f554\";\n}\n\n.fa-wallet:before {\n  content: \"\\f555\";\n}\n\n.fa-warehouse:before {\n  content: \"\\f494\";\n}\n\n.fa-water:before {\n  content: \"\\f773\";\n}\n\n.fa-wave-square:before {\n  content: \"\\f83e\";\n}\n\n.fa-waze:before {\n  content: \"\\f83f\";\n}\n\n.fa-weebly:before {\n  content: \"\\f5cc\";\n}\n\n.fa-weibo:before {\n  content: \"\\f18a\";\n}\n\n.fa-weight:before {\n  content: \"\\f496\";\n}\n\n.fa-weight-hanging:before {\n  content: \"\\f5cd\";\n}\n\n.fa-weixin:before {\n  content: \"\\f1d7\";\n}\n\n.fa-whatsapp:before {\n  content: \"\\f232\";\n}\n\n.fa-whatsapp-square:before {\n  content: \"\\f40c\";\n}\n\n.fa-wheelchair:before {\n  content: \"\\f193\";\n}\n\n.fa-whmcs:before {\n  content: \"\\f40d\";\n}\n\n.fa-wifi:before {\n  content: \"\\f1eb\";\n}\n\n.fa-wikipedia-w:before {\n  content: \"\\f266\";\n}\n\n.fa-wind:before {\n  content: \"\\f72e\";\n}\n\n.fa-window-close:before {\n  content: \"\\f410\";\n}\n\n.fa-window-maximize:before {\n  content: \"\\f2d0\";\n}\n\n.fa-window-minimize:before {\n  content: \"\\f2d1\";\n}\n\n.fa-window-restore:before {\n  content: \"\\f2d2\";\n}\n\n.fa-windows:before {\n  content: \"\\f17a\";\n}\n\n.fa-wine-bottle:before {\n  content: \"\\f72f\";\n}\n\n.fa-wine-glass:before {\n  content: \"\\f4e3\";\n}\n\n.fa-wine-glass-alt:before {\n  content: \"\\f5ce\";\n}\n\n.fa-wix:before {\n  content: \"\\f5cf\";\n}\n\n.fa-wizards-of-the-coast:before {\n  content: \"\\f730\";\n}\n\n.fa-wolf-pack-battalion:before {\n  content: \"\\f514\";\n}\n\n.fa-won-sign:before {\n  content: \"\\f159\";\n}\n\n.fa-wordpress:before {\n  content: \"\\f19a\";\n}\n\n.fa-wordpress-simple:before {\n  content: \"\\f411\";\n}\n\n.fa-wpbeginner:before {\n  content: \"\\f297\";\n}\n\n.fa-wpexplorer:before {\n  content: \"\\f2de\";\n}\n\n.fa-wpforms:before {\n  content: \"\\f298\";\n}\n\n.fa-wpressr:before {\n  content: \"\\f3e4\";\n}\n\n.fa-wrench:before {\n  content: \"\\f0ad\";\n}\n\n.fa-x-ray:before {\n  content: \"\\f497\";\n}\n\n.fa-xbox:before {\n  content: \"\\f412\";\n}\n\n.fa-xing:before {\n  content: \"\\f168\";\n}\n\n.fa-xing-square:before {\n  content: \"\\f169\";\n}\n\n.fa-y-combinator:before {\n  content: \"\\f23b\";\n}\n\n.fa-yahoo:before {\n  content: \"\\f19e\";\n}\n\n.fa-yammer:before {\n  content: \"\\f840\";\n}\n\n.fa-yandex:before {\n  content: \"\\f413\";\n}\n\n.fa-yandex-international:before {\n  content: \"\\f414\";\n}\n\n.fa-yarn:before {\n  content: \"\\f7e3\";\n}\n\n.fa-yelp:before {\n  content: \"\\f1e9\";\n}\n\n.fa-yen-sign:before {\n  content: \"\\f157\";\n}\n\n.fa-yin-yang:before {\n  content: \"\\f6ad\";\n}\n\n.fa-yoast:before {\n  content: \"\\f2b1\";\n}\n\n.fa-youtube:before {\n  content: \"\\f167\";\n}\n\n.fa-youtube-square:before {\n  content: \"\\f431\";\n}\n\n.fa-zhihu:before {\n  content: \"\\f63f\";\n}\n\n.sr-only {\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n}\n\n.sr-only-focusable:active, .sr-only-focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto;\n}\n\n@font-face {\n  font-family: 'Font Awesome 5 Brands';\n  font-style: normal;\n  font-weight: 400;\n  font-display: block;\n  src:\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_1___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_2___ + ") format(\"truetype\");\n}\n\n.fab {\n  font-family: 'Font Awesome 5 Brands';\n  font-weight: 400;\n}\n\n@font-face {\n  font-family: 'Font Awesome 5 Free';\n  font-style: normal;\n  font-weight: 400;\n  font-display: block;\n  src:\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_3___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_4___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_5___ + ") format(\"truetype\");\n}\n\n.far {\n  font-family: 'Font Awesome 5 Free';\n  font-weight: 400;\n}\n\n@font-face {\n  font-family: 'Font Awesome 5 Free';\n  font-style: normal;\n  font-weight: 900;\n  font-display: block;\n  src:\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_6___ + ") format(\"woff2\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_7___ + ") format(\"woff\"),\n    url(" + ___CSS_LOADER_URL_REPLACEMENT_8___ + ") format(\"truetype\");\n}\n\n.fa,\n.fas {\n  font-family: 'Font Awesome 5 Free';\n  font-weight: 900;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2207:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-feedback-background: var(--theme-primary-020);\n  --form-feedback-background-disabled: var(--theme-primary-010);\n  --form-feedback-text: var(--theme-primary-text-020);\n  --form-feedback-text-muted: var(--theme-primary-070);\n  --form-feedback-text-disabled: var(--theme-primary-030);\n  --form-feedback-border: var(--theme-primary-030);\n  --form-feedback-border-disabled: var(--theme-primary-010);\n}\n\n.form-feedback {\n  padding: 0.75em 1.25em;\n  background-color: hsl(var(--form-feedback-background));\n  border: 0;\n  border-left-width: calc(var(--layout-line-width) * 2);\n  border-left-style: solid;\n  border-left-color: hsl(var(--form-feedback-border));\n  border-top-right-radius: calc(var(--theme-radius) * 0.01em);\n  border-bottom-right-radius: calc(var(--theme-radius) * 0.01em);\n  width: 100%;\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast);\n}\n\n.form-feedback p {\n  color: hsl(var(--form-feedback-text));\n}\n\n.form-feedback p.muted {\n  color: hsl(var(--form-feedback-text-muted));\n}\n\n.form-feedback.disabled {\n  background-color: hsl(var(--form-feedback-background-disabled));\n  border-color: hsl(var(--form-feedback-border-disabled));\n}\n\n.form-feedback.disabled p {\n  color: hsl(var(--form-feedback-text-disabled));\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3681:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".form-fieldset {\n  position: relative;\n  width: 100%;\n  display: block;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 7662:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-grid-background: var(--theme-primary-020);\n  --form-grid-background-hover: var(--theme-primary-020);\n  --form-grid-background-focus: var(--theme-primary-020);\n  --form-grid-background-disabled: var(--theme-primary-010);\n  --form-grid-border: var(--theme-primary-030);\n  --form-grid-border-hover-focus: var(--theme-primary-030);\n  --form-grid-border-active: var(--theme-accent);\n  --form-grid-border-checked: var(--theme-accent);\n  --form-grid-border-disabled: var(--theme-primary-010);\n}\n\n.form-grid {\n  background-color: hsl(var(--form-grid-background));\n  padding: calc((var(--form-thumb-size) / 4) * 1em);\n  display: inline-grid;\n  gap: calc((var(--form-thumb-size) / 4) * 1em);\n  overflow: hidden;\n  transition: background-color var(--layout-transition-extra-fast);\n}\n\n.form-grid:hover {\n  outline: none;\n  background-color: hsl(var(--form-grid-background-hover));\n}\n\n.form-grid:focus,\n.form-grid:focus-within {\n  outline: none;\n  background-color: hsl(var(--form-grid-background-focus));\n}\n\n.form-grid.disabled,\n.form-grid.disabled:focus,\n.form-grid.disabled:focus-within {\n  background-color: hsl(var(--form-grid-background-disabled));\n}\n\n.form-grid-2x2 {\n  grid-template-columns: repeat(2, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  grid-template-areas:\n    \"cell-1 cell-2\"\n    \"cell-3 cell-4\";\n}\n\n.form-grid-3x3 {\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  grid-template-areas:\n    \"cell-1 cell-2 cell-3\"\n    \"cell-4 cell-5 cell-6\"\n    \"cell-7 cell-8 cell-9\";\n}\n\n.form-grid-3x1 {\n  grid-template-columns: repeat(3, 1fr);\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  grid-template-areas:\n    \"cell-1 cell-2 cell-3\";\n}\n\n.form-grid-1x3 {\n  grid-template-rows: repeat(3, 1fr);\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  grid-template-areas:\n    \"cell-1\"\n    \"cell-2\"\n    \"cell-3\";\n}\n\n.form-grid-3x3>*,\n.form-grid-3x1>*,\n.form-grid-1x3>* {\n  grid-area: var(--form-grid-cell);\n}\n\n.form-grid .form-wrap {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.form-grid input[type=\"checkbox\"]+label,\n.form-grid input[type=\"radio\"]+label {\n  background-color: transparent;\n  padding: 0;\n  margin: 0;\n  display: block;\n  width: var(--form-thumb);\n  height: var(--form-thumb);\n  position: relative;\n  transition: none;\n  z-index: 1;\n}\n\n.form-grid input[type=\"checkbox\"]:hover+label,\n.form-grid input[type=\"checkbox\"]:focus+label,\n.form-grid input[type=\"radio\"]:hover+label,\n.form-grid input[type=\"radio\"]:focus+label {\n  box-shadow: none;\n}\n\n.form-grid input[type=\"checkbox\"]+label .label-icon,\n.form-grid input[type=\"radio\"]+label .label-icon {\n  margin-right: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n.form-grid-3x3 {\n  --grid-radius-offset: calc((var(--theme-radius) / 100) * 0.1em);\n  --grid-radius-positive: calc(var(--grid-radius-offset) + -50%);\n  --grid-radius-negative: calc((var(--grid-radius-offset) * -1) + -50%);\n}\n\n.form-grid-3x3 .form-wrap:nth-child(1) input[type=\"checkbox\"]+label .label-icon,\n.form-grid-3x3 .form-wrap:nth-child(1) input[type=\"radio\"]+label .label-icon {\n  transform: translate(var(--grid-radius-positive), var(--grid-radius-positive));\n}\n\n.form-grid-3x3 .form-wrap:nth-child(2) input[type=\"checkbox\"]+label .label-icon,\n.form-grid-3x3 .form-wrap:nth-child(2) input[type=\"radio\"]+label .label-icon {\n  transform: translate(-50%, var(--grid-radius-positive));\n}\n\n.form-grid-3x3 .form-wrap:nth-child(3) input[type=\"checkbox\"]+label .label-icon,\n.form-grid-3x3 .form-wrap:nth-child(3) input[type=\"radio\"]+label .label-icon {\n  transform: translate(var(--grid-radius-negative), var(--grid-radius-positive));\n}\n\n.form-grid-3x3 .form-wrap:nth-child(4) input[type=\"checkbox\"]+label .label-icon,\n.form-grid-3x3 .form-wrap:nth-child(4) input[type=\"radio\"]+label .label-icon {\n  transform: translate(var(--grid-radius-positive), -50%);\n}\n\n.form-grid-3x3 .form-wrap:nth-child(6) input[type=\"checkbox\"]+label .label-icon,\n.form-grid-3x3 .form-wrap:nth-child(6) input[type=\"radio\"]+label .label-icon {\n  transform: translate(var(--grid-radius-negative), -50%);\n}\n\n.form-grid-3x3 .form-wrap:nth-child(7) input[type=\"checkbox\"]+label .label-icon,\n.form-grid-3x3 .form-wrap:nth-child(7) input[type=\"radio\"]+label .label-icon {\n  transform: translate(var(--grid-radius-positive), var(--grid-radius-negative));\n}\n\n.form-grid-3x3 .form-wrap:nth-child(8) input[type=\"checkbox\"]+label .label-icon,\n.form-grid-3x3 .form-wrap:nth-child(8) input[type=\"radio\"]+label .label-icon {\n  transform: translate(-50%, var(--grid-radius-negative));\n}\n\n.form-grid-3x3 .form-wrap:nth-child(9) input[type=\"checkbox\"]+label .label-icon,\n.form-grid-3x3 .form-wrap:nth-child(9) input[type=\"radio\"]+label .label-icon {\n  transform: translate(var(--grid-radius-negative), var(--grid-radius-negative));\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 7039:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-group-border: var(--theme-primary-050);\n}\n\n.form-group {\n  position: relative;\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: stretch;\n}\n\n.form-group-horizontal {\n  flex-direction: row;\n}\n\n.form-group-vertical {\n  flex-direction: column;\n}\n\n.form-group-horizontal.form-group-reverse {\n  flex-direction: row-reverse;\n}\n\n.form-group-vertical.form-group-reverse {\n  flex-direction: column-reverse;\n}\n\n.form-group .form-wrap {\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-right: calc(var(--form-space) * 0.1em);\n  display: flex;\n  align-items: center;\n}\n\n.form-group-block {\n  display: flex;\n  width: 100%;\n}\n\n.form-group-justify-left {\n  justify-content: flex-start;\n}\n\n.form-group-justify-right {\n  justify-content: flex-end;\n}\n\n.form-group-justify-space-between {\n  justify-content: space-between;\n}\n\n.form-group .form-group-text,\n.form-group .button,\n.form-group .form-input-button input[type=\"checkbox\"]+label,\n.form-group .form-input-button input[type=\"radio\"]+label,\n.form-group .form-input-button input[type=\"color\"]+label,\n.form-group .form-input-button input[type=\"file\"]+label,\n.form-group>select,\n.form-group>input[type=\"email\"],\n.form-group>input[type=\"number\"],\n.form-group>input[type=\"password\"],\n.form-group>input[type=\"search\"],\n.form-group>input[type=\"tel\"],\n.form-group>input[type=\"text\"],\n.form-group>input[type=\"color\"],\n.form-group>input[type=\"range\"] {\n  margin: 0;\n  border-radius: 0;\n  height: inherit;\n  min-height: 2.5em;\n  flex-grow: 1;\n  flex-shrink: 1;\n  flex-basis: auto;\n  z-index: 1;\n}\n\n.form-group .form-group-text {\n  flex-shrink: 0;\n}\n\n.form-group .form-group-text:focus,\n.form-group .button:focus,\n.form-group .form-input-button input[type=\"checkbox\"]:focus+label,\n.form-group .form-input-button input[type=\"radio\"]:focus+label,\n.form-group .form-input-button input[type=\"color\"]:focus+label,\n.form-group .form-input-button input[type=\"file\"]:focus+label,\n.form-group>select:focus,\n.form-group>input[type=\"email\"]:focus,\n.form-group>input[type=\"number\"]:focus,\n.form-group>input[type=\"password\"]:focus,\n.form-group>input[type=\"search\"]:focus,\n.form-group>input[type=\"tel\"]:focus,\n.form-group>input[type=\"text\"]:focus,\n.form-group>input[type=\"color\"]:focus,\n.form-group>input[type=\"range\"]:focus {\n  z-index: 2;\n}\n\n.form-group .form-group-text:hover,\n.form-group .form-group-text:active,\n.form-group .button:hover,\n.form-group .button:active,\n.form-group .form-input-button input[type=\"checkbox\"]:hover+label,\n.form-group .form-input-button input[type=\"checkbox\"]:active+label,\n.form-group .form-input-button input[type=\"radio\"]:hover+label,\n.form-group .form-input-button input[type=\"radio\"]:active+label,\n.form-group .form-input-button input[type=\"color\"]:hover+label,\n.form-group .form-input-button input[type=\"color\"]:active+label,\n.form-group .form-input-button input[type=\"file\"]:hover+label,\n.form-group .form-input-button input[type=\"file\"]:active+label,\n.form-group>select:hover,\n.form-group>select:active,\n.form-group>input[type=\"email\"]:hover,\n.form-group>input[type=\"email\"]:active,\n.form-group>input[type=\"number\"]:hover,\n.form-group>input[type=\"number\"]:active,\n.form-group>input[type=\"password\"]:hover,\n.form-group>input[type=\"password\"]:active,\n.form-group>input[type=\"search\"]:hover,\n.form-group>input[type=\"search\"]:active,\n.form-group>input[type=\"tel\"]:hover,\n.form-group>input[type=\"tel\"]:active,\n.form-group>input[type=\"text\"]:hover,\n.form-group>input[type=\"text\"]:active,\n.form-group>input[type=\"color\"]:hover,\n.form-group>input[type=\"color\"]:active,\n.form-group>input[type=\"range\"]:hover,\n.form-group>input[type=\"range\"]:active {\n  z-index: 3;\n}\n\n.form-group .form-input-button input[type=\"checkbox\"]:checked+label,\n.form-group .form-input-button input[type=\"radio\"]:checked+label,\n.form-group .form-input-button input[type=\"color\"]:checked+label,\n.form-group .form-input-button input[type=\"file\"]:checked+label {\n  z-index: 3;\n}\n\n.form-group .button-line:after,\n.form-group .form-input-button-line input[type=\"checkbox\"]+label:after,\n.form-group .form-input-button-line input[type=\"radio\"]+label:after,\n.form-group .form-input-button-line input[type=\"color\"]+label:after,\n.form-group .form-input-button-line input[type=\"file\"]+label:after {\n  border-radius: 0;\n}\n\n.form-group.form-group-horizontal .form-group-text:first-child,\n.form-group.form-group-horizontal .button:first-child,\n.form-group.form-group-horizontal .button-line:first-child:after,\n.form-group.form-group-horizontal .form-input-button:first-child input[type=\"checkbox\"]+label,\n.form-group.form-group-horizontal .form-input-button:first-child input[type=\"radio\"]+label,\n.form-group.form-group-horizontal .form-input-button:first-child input[type=\"color\"]+label,\n.form-group.form-group-horizontal .form-input-button:first-child input[type=\"file\"]+label,\n.form-group.form-group-horizontal .form-input-button-line:first-child input[type=\"checkbox\"]+label:after,\n.form-group.form-group-horizontal .form-input-button-line:first-child input[type=\"radio\"]+label:after,\n.form-group.form-group-horizontal .form-input-button-line:first-child input[type=\"color\"]+label:after,\n.form-group.form-group-horizontal .form-input-button-line:first-child input[type=\"file\"]+label:after,\n.form-group.form-group-horizontal>select:first-child,\n.form-group.form-group-horizontal>input[type=\"email\"]:first-child,\n.form-group.form-group-horizontal>input[type=\"number\"]:first-child,\n.form-group.form-group-horizontal>input[type=\"password\"]:first-child,\n.form-group.form-group-horizontal>input[type=\"search\"]:first-child,\n.form-group.form-group-horizontal>input[type=\"tel\"]:first-child,\n.form-group.form-group-horizontal>input[type=\"text\"]:first-child,\n.form-group.form-group-horizontal>input[type=\"color\"]:first-child,\n.form-group.form-group-horizontal>input[type=\"range\"]:first-child {\n  border-radius: calc(var(--theme-radius) * 0.01em) 0 0 calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group.form-group-horizontal .form-group-text:last-child,\n.form-group.form-group-horizontal .button:last-child,\n.form-group.form-group-horizontal .button-line:last-child:after,\n.form-group.form-group-horizontal .form-input-button:last-child input[type=\"checkbox\"]+label,\n.form-group.form-group-horizontal .form-input-button:last-child input[type=\"radio\"]+label,\n.form-group.form-group-horizontal .form-input-button:last-child input[type=\"color\"]+label,\n.form-group.form-group-horizontal .form-input-button:last-child input[type=\"file\"]+label,\n.form-group.form-group-horizontal .form-input-button-line:last-child input[type=\"checkbox\"]+label:after,\n.form-group.form-group-horizontal .form-input-button-line:last-child input[type=\"radio\"]+label:after,\n.form-group.form-group-horizontal .form-input-button-line:last-child input[type=\"color\"]+label:after,\n.form-group.form-group-horizontal .form-input-button-line:last-child input[type=\"file\"]+label:after,\n.form-group.form-group-horizontal>select:last-child,\n.form-group.form-group-horizontal>input[type=\"email\"]:last-child,\n.form-group.form-group-horizontal>input[type=\"number\"]:last-child,\n.form-group.form-group-horizontal>input[type=\"password\"]:last-child,\n.form-group.form-group-horizontal>input[type=\"search\"]:last-child,\n.form-group.form-group-horizontal>input[type=\"tel\"]:last-child,\n.form-group.form-group-horizontal>input[type=\"text\"]:last-child,\n.form-group.form-group-horizontal>input[type=\"color\"]:last-child,\n.form-group.form-group-horizontal>input[type=\"range\"]:last-child {\n  border-radius: 0 calc(var(--theme-radius) * 0.01em) calc(var(--theme-radius) * 0.01em) 0;\n}\n\n.form-group.form-group-vertical .form-group-text:first-child,\n.form-group.form-group-vertical .button:first-child,\n.form-group.form-group-vertical .button-line:first-child:after,\n.form-group.form-group-vertical .form-input-button:first-child input[type=\"checkbox\"]+label,\n.form-group.form-group-vertical .form-input-button:first-child input[type=\"radio\"]+label,\n.form-group.form-group-vertical .form-input-button:first-child input[type=\"color\"]+label,\n.form-group.form-group-vertical .form-input-button:first-child input[type=\"file\"]+label,\n.form-group.form-group-vertical .form-input-button-line:first-child input[type=\"checkbox\"]+label:after,\n.form-group.form-group-vertical .form-input-button-line:first-child input[type=\"radio\"]+label:after,\n.form-group.form-group-vertical .form-input-button-line:first-child input[type=\"color\"]+label:after,\n.form-group.form-group-vertical .form-input-button-line:first-child input[type=\"file\"]+label:after,\n.form-group.form-group-vertical>select:first-child,\n.form-group.form-group-vertical>input[type=\"email\"]:first-child,\n.form-group.form-group-vertical>input[type=\"number\"]:first-child,\n.form-group.form-group-vertical>input[type=\"password\"]:first-child,\n.form-group.form-group-vertical>input[type=\"search\"]:first-child,\n.form-group.form-group-vertical>input[type=\"tel\"]:first-child,\n.form-group.form-group-vertical>input[type=\"text\"]:first-child,\n.form-group.form-group-vertical>input[type=\"color\"]:first-child,\n.form-group.form-group-vertical>input[type=\"range\"]:first-child {\n  border-radius: calc(var(--theme-radius) * 0.01em) calc(var(--theme-radius) * 0.01em) 0 0;\n}\n\n.form-group.form-group-vertical .form-group-text:last-child,\n.form-group.form-group-vertical .button:last-child,\n.form-group.form-group-vertical .button-line:last-child:after,\n.form-group.form-group-vertical .form-input-button:last-child input[type=\"checkbox\"]+label,\n.form-group.form-group-vertical .form-input-button:last-child input[type=\"radio\"]+label,\n.form-group.form-group-vertical .form-input-button:last-child input[type=\"color\"]+label,\n.form-group.form-group-vertical .form-input-button:last-child input[type=\"file\"]+label,\n.form-group.form-group-vertical .form-input-button-line:last-child input[type=\"checkbox\"]+label:after,\n.form-group.form-group-vertical .form-input-button-line:last-child input[type=\"radio\"]+label:after,\n.form-group.form-group-vertical .form-input-button-line:last-child input[type=\"color\"]+label:after,\n.form-group.form-group-vertical .form-input-button-line:last-child input[type=\"file\"]+label:after,\n.form-group.form-group-vertical>select:last-child,\n.form-group.form-group-vertical>input[type=\"email\"]:last-child,\n.form-group.form-group-vertical>input[type=\"number\"]:last-child,\n.form-group.form-group-vertical>input[type=\"password\"]:last-child,\n.form-group.form-group-vertical>input[type=\"search\"]:last-child,\n.form-group.form-group-vertical>input[type=\"tel\"]:last-child,\n.form-group.form-group-vertical>input[type=\"text\"]:last-child,\n.form-group.form-group-vertical>input[type=\"color\"]:last-child,\n.form-group.form-group-vertical>input[type=\"range\"]:last-child {\n  border-radius: 0 0 calc(var(--theme-radius) * 0.01em) calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group.form-group-horizontal .form-group-text:only-child,\n.form-group.form-group-horizontal .button:only-child,\n.form-group.form-group-horizontal .button-line:only-child:after,\n.form-group.form-group-horizontal>select:only-child,\n.form-group.form-group-horizontal>input[type=\"email\"]:only-child,\n.form-group.form-group-horizontal>input[type=\"number\"]:only-child,\n.form-group.form-group-horizontal>input[type=\"password\"]:only-child,\n.form-group.form-group-horizontal>input[type=\"search\"]:only-child,\n.form-group.form-group-horizontal>input[type=\"tel\"]:only-child,\n.form-group.form-group-horizontal>input[type=\"text\"]:only-child,\n.form-group.form-group-horizontal>input[type=\"color\"]:only-child,\n.form-group.form-group-horizontal>input[type=\"range\"]:only-child,\n.form-group.form-group-vertical .form-group-text:only-child,\n.form-group.form-group-vertical .button:only-child,\n.form-group.form-group-vertical .button-line:only-child:after,\n.form-group.form-group-vertical>select:only-child,\n.form-group.form-group-vertical>input[type=\"email\"]:only-child,\n.form-group.form-group-vertical>input[type=\"number\"]:only-child,\n.form-group.form-group-vertical>input[type=\"password\"]:only-child,\n.form-group.form-group-vertical>input[type=\"search\"]:only-child,\n.form-group.form-group-vertical>input[type=\"tel\"]:only-child,\n.form-group.form-group-vertical>input[type=\"text\"]:only-child,\n.form-group.form-group-vertical>input[type=\"color\"]:only-child,\n.form-group.form-group-vertical>input[type=\"range\"]:only-child {\n  border-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group.form-group-nested-button * .button,\n.form-group.form-group-nested-button * .button-line:after,\n.form-group.form-group-nested-button * input[type=\"checkbox\"]+label,\n.form-group.form-group-nested-button * input[type=\"radio\"]+label,\n.form-group.form-group-nested-button * input[type=\"color\"]+label {\n  border-radius: 0;\n}\n\n.form-group.form-group-nested-button *:first-child .button,\n.form-group.form-group-nested-button *:first-child .button-line:after,\n.form-group.form-group-nested-button *:first-child input[type=\"checkbox\"]+label,\n.form-group.form-group-nested-button *:first-child input[type=\"radio\"]+label,\n.form-group.form-group-nested-button *:first-child input[type=\"color\"]+label {\n  border-radius: calc(var(--theme-radius) * 0.01em) 0 0 calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group.form-group-nested-button *:last-child .button,\n.form-group.form-group-nested-button *:last-child .button-line:after,\n.form-group.form-group-nested-button *:last-child input[type=\"checkbox\"]+label,\n.form-group.form-group-nested-button *:last-child input[type=\"radio\"]+label,\n.form-group.form-group-nested-button *:last-child input[type=\"color\"]+label {\n  border-radius: 0 calc(var(--theme-radius) * 0.01em) calc(var(--theme-radius) * 0.01em) 0;\n}\n\n.form-group .form-group-radius-left.form-group-text,\n.form-group .form-group-radius-left.button,\n.form-group .form-group-radius-left.button-line:after,\n.form-group>select.form-group-radius-left,\n.form-group>input.form-group-radius-left[type=\"email\"],\n.form-group>input.form-group-radius-left[type=\"number\"],\n.form-group>input.form-group-radius-left[type=\"password\"],\n.form-group>input.form-group-radius-left[type=\"search\"],\n.form-group>input.form-group-radius-left[type=\"tel\"],\n.form-group>input.form-group-radius-left[type=\"text\"],\n.form-group>input.form-group-radius-left[type=\"color\"],\n.form-group>input.form-group-radius-left[type=\"range\"] {\n  border-top-left-radius: calc(var(--theme-radius) * 0.01em);\n  border-bottom-left-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group .form-group-radius-right.form-group-text,\n.form-group .form-group-radius-right.button,\n.form-group .form-group-radius-right.butbutton-lineton:after,\n.form-group>select.form-group-radius-right,\n.form-group>input.form-group-radius-right[type=\"email\"],\n.form-group>input.form-group-radius-right[type=\"number\"],\n.form-group>input.form-group-radius-right[type=\"password\"],\n.form-group>input.form-group-radius-right[type=\"search\"],\n.form-group>input.form-group-radius-right[type=\"tel\"],\n.form-group>input.form-group-radius-right[type=\"text\"],\n.form-group>input.form-group-radius-right[type=\"color\"],\n.form-group>input.form-group-radius-right[type=\"range\"] {\n  border-top-right-radius: calc(var(--theme-radius) * 0.01em);\n  border-bottom-right-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group.form-group-reverse .form-group-text:first-child,\n.form-group.form-group-reverse .button:first-child,\n.form-group.form-group-reverse .button-line:first-child:after,\n.form-group.form-group-reverse .form-input-button:first-child input[type=\"checkbox\"]+label,\n.form-group.form-group-reverse .form-input-button:first-child input[type=\"radio\"]+label,\n.form-group.form-group-reverse .form-input-button:first-child input[type=\"color\"]+label,\n.form-group.form-group-reverse .form-input-button:first-child input[type=\"file\"]+label,\n.form-group.form-group-reverse .form-input-button-line:first-child input[type=\"checkbox\"]+label:after,\n.form-group.form-group-reverse .form-input-button-line:first-child input[type=\"radio\"]+label:after,\n.form-group.form-group-reverse .form-input-button-line:first-child input[type=\"color\"]+label:after,\n.form-group.form-group-reverse .form-input-button-line:first-child input[type=\"file\"]+label:after,\n.form-group.form-group-reverse>select:first-child,\n.form-group.form-group-reverse>input[type=\"email\"]:first-child,\n.form-group.form-group-reverse>input[type=\"number\"]:first-child,\n.form-group.form-group-reverse>input[type=\"password\"]:first-child,\n.form-group.form-group-reverse>input[type=\"search\"]:first-child,\n.form-group.form-group-reverse>input[type=\"tel\"]:first-child,\n.form-group.form-group-reverse>input[type=\"text\"]:first-child,\n.form-group.form-group-reverse>input[type=\"color\"]:first-child,\n.form-group.form-group-reverse>input[type=\"range\"]:first-child {\n  border-radius: 0 calc(var(--theme-radius) * 0.01em) calc(var(--theme-radius) * 0.01em) 0;\n}\n\n.form-group.form-group-reverse .form-group-text:last-child,\n.form-group.form-group-reverse .button:last-child,\n.form-group.form-group-reverse .button-line:last-child:after,\n.form-group.form-group-reverse .form-input-button:last-child input[type=\"checkbox\"]+label,\n.form-group.form-group-reverse .form-input-button:last-child input[type=\"radio\"]+label,\n.form-group.form-group-reverse .form-input-button:last-child input[type=\"color\"]+label,\n.form-group.form-group-reverse .form-input-button:last-child input[type=\"file\"]+label,\n.form-group.form-group-reverse .form-input-button-line:last-child input[type=\"checkbox\"]+label:after,\n.form-group.form-group-reverse .form-input-button-line:last-child input[type=\"radio\"]+label:after,\n.form-group.form-group-reverse .form-input-button-line:last-child input[type=\"color\"]+label:after,\n.form-group.form-group-reverse .form-input-button-line:last-child input[type=\"file\"]+label:after,\n.form-group.form-group-reverse>select:last-child,\n.form-group.form-group-reverse>input[type=\"email\"]:last-child,\n.form-group.form-group-reverse>input[type=\"number\"]:last-child,\n.form-group.form-group-reverse>input[type=\"password\"]:last-child,\n.form-group.form-group-reverse>input[type=\"search\"]:last-child,\n.form-group.form-group-reverse>input[type=\"tel\"]:last-child,\n.form-group.form-group-reverse>input[type=\"text\"]:last-child,\n.form-group.form-group-reverse>input[type=\"color\"]:last-child,\n.form-group.form-group-reverse>input[type=\"range\"]:last-child {\n  border-radius: calc(var(--theme-radius) * 0.01em) 0 0 calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group.form-group-reverse .form-group-text:only-child,\n.form-group.form-group-reverse .button:only-child,\n.form-group.form-group-reverse .button-line:only-child:after,\n.form-group.form-group-reverse>select:only-child,\n.form-group.form-group-reverse>input[type=\"email\"]:only-child,\n.form-group.form-group-reverse>input[type=\"number\"]:only-child,\n.form-group.form-group-reverse>input[type=\"password\"]:only-child,\n.form-group.form-group-reverse>input[type=\"search\"]:only-child,\n.form-group.form-group-reverse>input[type=\"tel\"]:only-child,\n.form-group.form-group-reverse>input[type=\"text\"]:only-child,\n.form-group.form-group-reverse>input[type=\"color\"]:only-child,\n.form-group.form-group-reverse>input[type=\"range\"]:only-child {\n  border-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group.form-group-reverse.form-group-nested-button * .button,\n.form-group.form-group-reverse.form-group-nested-button * .button-line:after,\n.form-group.form-group-reverse.form-group-nested-button * input[type=\"checkbox\"]+label,\n.form-group.form-group-reverse.form-group-nested-button * input[type=\"radio\"]+label,\n.form-group.form-group-reverse.form-group-nested-button * input[type=\"color\"]+label {\n  border-radius: 0;\n}\n\n.form-group.form-group-reverse.form-group-nested-button *:first-child .button,\n.form-group.form-group-reverse.form-group-nested-button *:first-child .button-line:after,\n.form-group.form-group-reverse.form-group-nested-button *:first-child input[type=\"checkbox\"]+label,\n.form-group.form-group-reverse.form-group-nested-button *:first-child input[type=\"radio\"]+label,\n.form-group.form-group-reverse.form-group-nested-button *:first-child input[type=\"color\"]+label {\n  border-radius: 0 calc(var(--theme-radius) * 0.01em) calc(var(--theme-radius) * 0.01em) 0;\n}\n\n.form-group.form-group-reverse.form-group-nested-button *:last-child .button,\n.form-group.form-group-reverse.form-group-nested-button *:last-child .button-line:after,\n.form-group.form-group-reverse.form-group-nested-button *:last-child input[type=\"checkbox\"]+label,\n.form-group.form-group-reverse.form-group-nested-button *:last-child input[type=\"radio\"]+label,\n.form-group.form-group-reverse.form-group-nested-button *:last-child input[type=\"color\"]+label {\n  border-radius: calc(var(--theme-radius) * 0.01em) 0 0 calc(var(--theme-radius) * 0.01em);\n}\n\n.form-group-border {\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  border-width: var(--layout-line-width);\n  border-color: hsl(var(--form-group-border));\n  border-style: solid;\n  overflow: hidden;\n}\n\n.form-group-border-theme-color {\n  border-color: hsl(var(--theme-primary-050));\n}\n\n.form-group.form-group-border .form-group-text,\n.form-group.form-group-border .button,\n.form-group.form-group-border .button-line:after,\n.form-group.form-group-border>select,\n.form-group.form-group-border>input[type=\"email\"],\n.form-group.form-group-border>input[type=\"number\"],\n.form-group.form-group-border>input[type=\"password\"],\n.form-group.form-group-border>input[type=\"search\"],\n.form-group.form-group-border>input[type=\"tel\"],\n.form-group.form-group-border>input[type=\"text\"],\n.form-group.form-group-border>input[type=\"color\"],\n.form-group.form-group-border>input[type=\"range\"],\n.form-group.form-group-border.form-group-nested-button * .button,\n.form-group.form-group-border.form-group-nested-button * .button-line:after,\n.form-group.form-group-border.form-group-nested-button * input[type=\"checkbox\"]+label,\n.form-group.form-group-border.form-group-nested-button * input[type=\"radio\"]+label,\n.form-group.form-group-border.form-group-nested-button * input[type=\"file\"]+label,\n.form-group.form-group-border.form-group-nested-button * input[type=\"color\"]+label {\n  border-radius: 0;\n}\n\n.form-group-item-small,\n.form-group-item-medium,\n.form-group-item-large,\n.form-group>.button.form-group-item-small,\n.form-group>.button.form-group-item-medium,\n.form-group>.button.form-group-item-large,\n.form-group>select.form-group-item-small,\n.form-group>select.form-group-item-medium,\n.form-group>select.form-group-item-large,\n.form-group>input[type].form-group-item-small,\n.form-group>input[type].form-group-item-medium,\n.form-group>input[type].form-group-item-large {\n  padding-left: 0.5em;\n  padding-right: 0.5em;\n}\n\n.form-group-item-small,\n.form-group>.button.form-group-item-small,\n.form-group>select.form-group-item-small,\n.form-group>input[type].form-group-item-small {\n  width: 4em;\n  flex-shrink: 0;\n}\n\n.form-group-item-medium,\n.form-group>.button.form-group-item-medium,\n.form-group>select.form-group-item-medium,\n.form-group>input[type].form-group-item-medium {\n  width: 6em;\n  flex-shrink: 0;\n}\n\n.form-group-item-large,\n.form-group>.button.form-group-item-large,\n.form-group>select.form-group-item-large,\n.form-group>input[type].form-group-item-large {\n  width: 8em;\n  flex-shrink: 0;\n}\n\n.form-group-item-shrink,\n.form-group>.button.form-group-item-shrink,\n.form-group>select.form-group-item-shrink,\n.form-group>input[type].form-group-item-shrink {\n  flex-grow: 0;\n}\n\n.form-group-item-grow,\n.form-group>.button.form-group-item-grow,\n.form-group>select.form-group-item-grow,\n.form-group>input[type].form-group-item-grow {\n  flex-grow: 1;\n}\n\n.form-group-item-half,\n.form-group>.button.form-group-item-half,\n.form-group>select.form-group-item-half,\n.form-group>input[type].form-group-item-half {\n  flex-basis: 50%;\n}\n\n.form-group-item-equal,\n.form-group>.button.form-group-item-equal,\n.form-group>select.form-group-item-equal,\n.form-group>input[type].form-group-item-equal {\n  flex-basis: 0;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5516:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-group-text-background: var(--theme-primary-020);\n  --form-group-text-background-focus-hover: var(--theme-primary-020);\n  --form-group-text-background-active: var(--theme-primary-020);\n  --form-group-text-background-disabled: var(--theme-primary-010);\n  --form-group-text-border: var(--theme-primary-020);\n  --form-group-text-border-focus-hover: var(--theme-primary-020);\n  --form-group-text-border-active: var(--theme-primary-020);\n  --form-group-text-border-disabled: var(--theme-primary-010);\n}\n\n.form-group-text {\n  background-color: hsl(var(--form-group-text-background));\n  padding: 0 1.25em;\n  margin: 0;\n  color: hsl(var(--form-input-text));\n  min-width: 4em;\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 0;\n  border-width: var(--layout-line-width);\n  border-color: hsl(var(--form-group-text-border));\n  border-style: solid;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  white-space: nowrap;\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast);\n}\n\n.form-group-text:hover,\n.form-group-text:focus {\n  background-color: hsl(var(--form-group-text-background-focus-hover));\n  border-color: hsl(var(--form-group-text-border-focus-hover));\n  color: hsl(var(--form-input-text-hover));\n  outline: none;\n}\n\n.form-group-text:active {\n  background-color: hsl(var(--form-group-text-background-active));\n  border-color: hsl(var(--form-group-text-border-active));\n  color: hsl(var(--form-input-text-hover));\n  outline: none;\n}\n\n.form-group-text.disabled,\n.form-group-text.disabled:hover,\n.form-group-text.disabled:focus,\n.form-group-text.disable:active {\n  background-color: hsl(var(--form-group-text-background-disabled));\n  border-color: hsl(var(--form-group-text-border-disabled));\n  color: hsl(var(--form-input-text-disabled));\n  box-shadow: none;\n  cursor: default;\n}\n\n.form-group-text-left {\n  justify-content: flex-start;\n}\n\n.form-group-text-right {\n  justify-content: flex-end;\n}\n\n.form-group-text-borderless {\n  padding: 0;\n  border-width: 0;\n  min-width: inherit;\n}\n\n.form-group-text-transparent,\n.form-group-text-transparent:hover,\n.form-group-text-transparent:focus,\n.form-group-text-transparent:active {\n  background-color: transparent;\n}\n\n.form-group-text-transparent.disabled,\n.form-group-text-transparent.disabled:hover,\n.form-group-text-transparent.disabled:focus,\n.form-group-text-transparent.disable:active {\n  background-color: transparent;\n  color: hsl(var(--form-label-disabled));\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 214:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-helper: var(--theme-primary-140);\n  --form-helper-disabled: var(--theme-primary-030);\n}\n\n.form-helper-item {\n  font-size: 0.8em;\n  color: hsl(var(--form-helper));\n  transition: color var(--layout-transition-extra-fast);\n}\n\n.form-helper-item.disabled {\n  color: hsl(var(--form-helper-disabled));\n}\n\n.form-helper-item.disabled a,\n.form-helper-item.disabled a:link,\n.form-helper-item.disabled a:visited,\n.form-helper-item.disabled a:focus,\n.form-helper-item.disabled a:hover,\n.form-helper-item.disabled a:active {\n  color: hsl(var(--form-helper-disabled));\n  text-decoration: none;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 1400:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --indent-size: 5;\n  --indent-space: calc((var(--indent-size) / 2) * 1em);\n}\n\n.form-indent {\n  margin-left: var(--indent-space);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 1058:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-space: 8;\n}\n\n:root {\n  --form-placeholder: var(--theme-primary-040);\n  --form-placeholder-focus-hover: var(--theme-primary-040);\n  --form-placeholder-disabled: var(--theme-primary-020);\n}\n\n:root {\n  --form-ring-hover: 0 0 0 var(--layout-line-width) hsl(var(--theme-primary-080));\n  --form-ring-focus:\n    0 0 0 var(--layout-line-width) hsl(var(--theme-primary-090)),\n    0 0 0 calc(var(--layout-line-width) * 2) hsla(var(--theme-primary-090), 0.25);\n  --form-ring-accent: 0 0 0 var(--layout-line-width) rgb(var(--theme-accent)),\n    0 0 0 calc(var(--layout-line-width) * 2) rgba(var(--theme-accent), 0.25);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4046:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-inline-gap: 4;\n  --form-inline-gap-small: calc(var(--form-inline-gap) * 1);\n  --form-inline-gap-medium: calc(var(--form-inline-gap) * 2);\n  --form-inline-gap-large: calc(var(--form-inline-gap) * 4);\n}\n\n.form-inline {\n  position: relative;\n  display: inline-flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n\n.form-inline-horizontal {\n  flex-direction: row;\n}\n\n.form-inline-vertical {\n  flex-direction: column;\n}\n\n.form-inline-gap-small {\n  row-gap: calc((var(--form-inline-gap-small) / 12) * 1em);\n  column-gap: calc((var(--form-inline-gap-small) / 4) * 1em);\n}\n\n.form-inline-gap-medium {\n  row-gap: calc((var(--form-inline-gap-medium) / 12) * 1em);\n  column-gap: calc((var(--form-inline-gap-medium) / 4) * 1em);\n}\n\n.form-inline-gap-large {\n  row-gap: calc((var(--form-inline-gap-large) / 12) * 1em);\n  column-gap: calc((var(--form-inline-gap-large) / 4) * 1em);\n}\n\n.form-inline-gap-equal.form-inline-gap-small {\n  gap: calc((var(--form-inline-gap-small) / 4) * 1em);\n}\n\n.form-inline-gap-equal.form-inline-gap-medium {\n  gap: calc((var(--form-inline-gap-medium) / 4) * 1em);\n}\n\n.form-inline-gap-equal.form-inline-gap-large {\n  gap: calc((var(--form-inline-gap-large) / 4) * 1em);\n}\n\n.form-inline-wrap {\n  flex-wrap: wrap;\n}\n\n.form-inline-block {\n  display: flex;\n}\n\n.form-inline .form-wrap:not(:first-child),\n.form-inline .form-wrap:not(:last-child) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.form-inline .form-wrap {\n  flex-grow: 0;\n  flex-shrink: 1;\n  flex-basis: 0;\n}\n\n.form-inline .form-wrap label {\n  white-space: nowrap;\n}\n\n.form-inline label:not(:only-child):not(:last-child) {\n  padding-bottom: 0;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5875:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "input[type=\"checkbox\"] {\n  margin-bottom: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  display: block;\n  font-size: 1em;\n  line-height: 1;\n  cursor: pointer;\n  pointer-events: none;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  transition: color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"checkbox\"]+label {\n  padding: 0;\n  margin: 0;\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  color: hsl(var(--form-label));\n  cursor: pointer;\n  display: flex;\n  gap: var(--form-thumb);\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  transition: transform var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"checkbox\"]:hover+label,\ninput[type=\"checkbox\"]:focus+label {\n  color: hsl(var(--form-label-hover));\n}\n\ninput[type=\"checkbox\"]:active+label {\n  color: hsl(var(--form-label-focus-active));\n}\n\ninput[type=\"checkbox\"]:checked+label {\n  color: hsl(var(--form-label-checked));\n}\n\ninput[type=\"checkbox\"]:disabled+label,\ninput[type=\"checkbox\"]:disabled:hover+label,\ninput[type=\"checkbox\"]:disabled:focus+label {\n  color: hsl(var(--form-label-disabled));\n  cursor: default;\n}\n\ninput[type=\"checkbox\"]+label .label-icon {\n  background-color: hsl(var(--form-icon));\n  width: var(--form-thumb);\n  height: var(--form-thumb);\n  position: relative;\n  top: calc((-1 * (var(--form-thumb) * 0.5)) + (1em * 0.8));\n  display: block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  z-index: 1;\n  box-shadow: none;\n  transition: background-color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n}\n\ninput[type=\"checkbox\"]+label .label-icon {\n  border-radius: 0.25em;\n}\n\ninput[type=\"checkbox\"]:hover+label .label-icon,\ninput[type=\"checkbox\"]:focus+label .label-icon {\n  background-color: hsl(var(--form-icon-hover));\n  box-shadow: var(--form-ring-hover);\n}\n\ninput[type=\"checkbox\"]:active+label .label-icon {\n  background-color: hsl(var(--form-icon-active));\n  box-shadow: var(--form-ring-accent);\n  transition: none;\n}\n\ninput[type=\"checkbox\"]:checked+label .label-icon {\n  background-color: hsl(var(--form-icon-checked));\n}\n\ninput[type=\"checkbox\"]:checked:focus+label .label-icon,\ninput[type=\"checkbox\"]:checked:active+label .label-icon {\n  box-shadow: var(--form-ring-accent);\n}\n\ninput[type=\"checkbox\"]:disabled+label .label-icon,\ninput[type=\"checkbox\"]:disabled:hover+label .label-icon,\ninput[type=\"checkbox\"]:disabled:focus+label .label-icon,\ninput[type=\"checkbox\"]:checked:disabled+label .label-icon,\ninput[type=\"checkbox\"]:checked:disabled:hover+label .label-icon,\ninput[type=\"checkbox\"]:checked:disabled:focus+label .label-icon {\n  background-color: hsl(var(--form-icon-disabled));\n  box-shadow: none;\n}\n\ninput[type=\"checkbox\"]+label .label-icon:before {\n  content: \"\";\n  background-color: hsl(var(--form-icon-symbol));\n  width: 100%;\n  height: 100%;\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: scale(0.7);\n  transform-origin: center;\n  z-index: 2;\n  transition: background-color var(--layout-transition-extra-fast), border-radius var(--layout-transition-extra-fast), transform var(--layout-transition-extra-fast);\n}\n\ninput[type=\"checkbox\"]+label .label-icon:before {\n  border-radius: 0.1em;\n}\n\ninput[type=\"checkbox\"]:active+label .label-icon:before {\n  background-color: hsl(var(--form-icon-symbol-active));\n  transition: none;\n}\n\ninput[type=\"checkbox\"]:checked+label .label-icon:before {\n  background-color: hsl(var(--form-icon-symbol-active));\n  border-radius: 50%;\n}\n\ninput[type=\"checkbox\"]:checked+label .label-icon:before {\n  transform: scale(0);\n}\n\ninput[type=\"checkbox\"]:disabled+label .label-icon:before,\ninput[type=\"checkbox\"]:disabled:hover+label .label-icon:before,\ninput[type=\"checkbox\"]:disabled:focus+label .label-icon:before,\ninput[type=\"checkbox\"]:disabled:active+label .label-icon:before,\ninput[type=\"checkbox\"]:checked:disabled+label .label-icon:before,\ninput[type=\"checkbox\"]:checked:disabled:hover+label .label-icon:before,\ninput[type=\"checkbox\"]:checked:disabled:focus+label .label-icon:before,\ninput[type=\"checkbox\"]:checked:disabled:active+label .label-icon:before {\n  background-color: hsl(var(--form-icon-symbol-disabled));\n}\n\ninput[type=\"checkbox\"]+label .label-icon:after {\n  content: \"\";\n  background-color: hsl(var(--form-icon-symbol));\n  width: 100%;\n  height: 100%;\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: scale(0);\n  transform-origin: center;\n  z-index: 2;\n  transition: transform var(--layout-transition-extra-fast);\n  clip-path: polygon(7% 56%, 37% 86%, 95% 27%, 84% 16%, 37% 64%, 18% 45%);\n}\n\ninput[type=\"checkbox\"]:checked+label .label-icon:after {\n  background-color: hsl(var(--form-icon-symbol-active));\n  transform: scale(0.8);\n}\n\ninput[type=\"checkbox\"]:disabled+label .label-icon:after,\ninput[type=\"checkbox\"]:disabled:hover+label .label-icon:after,\ninput[type=\"checkbox\"]:disabled:focus+label .label-icon:after,\ninput[type=\"checkbox\"]:disabled:active+label .label-icon:after,\ninput[type=\"checkbox\"]:checked:disabled+label .label-icon:after,\ninput[type=\"checkbox\"]:checked:disabled:hover+label .label-icon:after,\ninput[type=\"checkbox\"]:checked:disabled:focus+label .label-icon:after,\ninput[type=\"checkbox\"]:checked:disabled:active+label .label-icon:after {\n  background-color: hsl(var(--form-icon-symbol-disabled));\n}\n\ninput[type=\"checkbox\"]+label .label-block-item {\n  color: hsl(var(--form-label));\n  transition: color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"checkbox\"]:hover+label .label-block-item,\ninput[type=\"checkbox\"]:focus+label .label-block-item {\n  color: hsl(var(--form-label-hover));\n}\n\ninput[type=\"checkbox\"]:active+label .label-block-item {\n  color: hsl(var(--form-label-focus-active));\n}\n\ninput[type=\"checkbox\"]:checked+label .label-block-item {\n  color: hsl(var(--form-label-checked));\n}\n\ninput[type=\"checkbox\"]:disabled+label .label-block-item,\ninput[type=\"checkbox\"]:disabled:hover+label .label-block-item,\ninput[type=\"checkbox\"]:disabled:focus+label .label-block-item {\n  color: hsl(var(--form-label-disabled));\n  cursor: default;\n}\n\ninput[type=\"checkbox\"]+label .label-block-item.muted {\n  color: hsl(var(--utility-muted));\n  transition: color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"checkbox\"]:hover+label .label-block-item.muted,\ninput[type=\"checkbox\"]:focus+label .label-block-item.muted {\n  color: hsl(var(--utility-muted-hover));\n}\n\ninput[type=\"checkbox\"]:active+label .label-block-item.muted {\n  color: hsl(var(--utility-muted-focus-active));\n}\n\ninput[type=\"checkbox\"]:checked+label .label-block-item.muted {\n  color: hsl(var(--utility-muted-checked));\n}\n\ninput[type=\"checkbox\"]:disabled+label .label-block-item.muted,\ninput[type=\"checkbox\"]:disabled:hover+label .label-block-item.muted,\ninput[type=\"checkbox\"]:disabled:focus+label .label-block-item.muted {\n  color: hsl(var(--utility-muted-disabled));\n  cursor: default;\n}\n\ninput[type=\"checkbox\"]:disabled+label .label-block-item,\ninput[type=\"checkbox\"]:disabled:hover+label .label-block-item,\ninput[type=\"checkbox\"]:disabled:focus+label .label-block-item {\n  color: hsl(var(--form-label-disabled));\n  cursor: default;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9755:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "input[type=\"color\"] {\n  background-color: transparent;\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  min-width: 4em;\n  height: 2.5em;\n  display: block;\n  border: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  overflow: hidden;\n  cursor: pointer;\n  opacity: 1;\n  transition: box-shadow var(--layout-transition-extra-fast), opacity var(--layout-transition-extra-fast);\n}\n\ninput[type=\"color\"]:hover {\n  outline: none;\n  box-shadow: var(--form-ring-hover);\n}\n\ninput[type=\"color\"]:focus {\n  outline: none;\n  box-shadow: var(--form-ring-focus);\n}\n\ninput[type=\"color\"]:disabled {\n  opacity: 0.25;\n  cursor: default;\n}\n\ninput[type=\"color\"]:disabled:hover,\ninput[type=\"color\"]:disabled:focus {\n  box-shadow: none;\n}\n\ninput[type=\"color\"]::-webkit-color-swatch-wrapper {\n  border: 0;\n  padding: 0;\n  outline: none;\n}\n\ninput[type=\"color\"]::-webkit-color-swatch {\n  border: 0;\n  padding: 0;\n  outline: none;\n}\n\ninput[type=\"color\"]::-moz-color-swatch-wrapper {\n  border: 0;\n  padding: 0;\n  outline: none;\n}\n\ninput[type=\"color\"]::-moz-color-swatch {\n  border: 0;\n  padding: 0;\n  outline: none;\n}\n\ninput[type=\"color\"]::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n  outline: none;\n}\n\n.input-color-dot input[type=\"color\"] {\n  margin: 0;\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  right: 1em;\n  width: var(--form-thumb);\n  height: var(--form-thumb);\n  min-width: inherit;\n  z-index: 4;\n  transform: translateY(-50%);\n  transition: none;\n}\n\n.input-color-dot input[type=\"color\"]:hover {\n  outline: none;\n  box-shadow: none;\n}\n\n.input-color-dot input[type=\"color\"]:focus {\n  outline: none;\n  box-shadow: none;\n}\n\n.input-color-dot input[type=\"color\"]+label {\n  padding-right: calc(var(--form-thumb) + 2em);\n  position: relative;\n}\n\n.input-color-dot.form-input-button-link input[type=\"color\"] {\n  box-shadow: 0 0 0 calc(var(--layout-line-width) * 0.75) hsl(var(--button-link-text));\n  transition: box-shadow var(--layout-transition-extra-fast);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 462:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 443:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-thumb-size: 5;\n  --form-thumb: calc((var(--form-thumb-size) / 4) * 1em);\n}\n\n:root {\n  --form-input-background: var(--theme-primary-020);\n  --form-input-background-hover: var(--theme-primary-020);\n  --form-input-background-focus-active: var(--theme-primary-010);\n  --form-input-background-disabled: var(--theme-primary-010);\n  --form-input-text: var(--theme-primary-text-020);\n  --form-input-text-hover: var(--theme-primary-text-020);\n  --form-input-text-focus-active: var(--theme-primary-text-010);\n  --form-input-text-disabled: var(--theme-primary-030);\n}\n\n:root {\n  --form-icon: var(--theme-primary-060);\n  --form-icon-hover: var(--theme-primary-040);\n  --form-icon-focus: var(--theme-primary-040);\n  --form-icon-active: var(--theme-primary-text-010);\n  --form-icon-checked: var(--theme-primary-text-010);\n  --form-icon-disabled: var(--theme-primary-020);\n}\n\n:root {\n  --form-icon-symbol: var(--theme-primary-010);\n  --form-icon-symbol-active: var(--theme-primary-010);\n  --form-icon-symbol-disabled: var(--theme-primary-010);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9606:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".form-input-button {\n  position: relative;\n  display: flex;\n}\n\n.form-input-button input[type=\"checkbox\"]+label,\n.form-input-button input[type=\"radio\"]+label,\n.form-input-button input[type=\"color\"]+label,\n.form-input-button input[type=\"file\"]+label {\n  background-color: hsl(var(--button-background));\n  padding: 0.25em 1.25em;\n  margin: 0;\n  color: hsl(var(--button-text));\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  min-height: 2.5em;\n  line-height: 1;\n  border: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  white-space: nowrap;\n  cursor: pointer;\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  box-shadow: none;\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast);\n}\n\n.form-input-button input[type=\"checkbox\"]:focus+label,\n.form-input-button input[type=\"checkbox\"]:hover+label,\n.form-input-button input[type=\"radio\"]:focus+label,\n.form-input-button input[type=\"radio\"]:hover+label,\n.form-input-button input[type=\"color\"]:focus+label,\n.form-input-button input[type=\"color\"]:hover+label,\n.form-input-button input[type=\"file\"]:focus+label,\n.form-input-button input[type=\"file\"]:hover+label {\n  background-color: hsl(var(--button-background-focus-hover));\n  color: hsl(var(--button-text-focus-hover));\n  outline: none;\n  text-decoration: none;\n}\n\n.form-input-button input[type=\"checkbox\"]:active+label,\n.form-input-button input[type=\"radio\"]:active+label,\n.form-input-button input[type=\"color\"]:active+label,\n.form-input-button input[type=\"file\"]:active+label {\n  background-color: hsl(var(--button-background-active));\n  color: hsl(var(--button-text-active));\n  outline: none;\n  text-decoration: none;\n  transition: none;\n}\n\n.form-input-button input[type=\"checkbox\"]:checked+label,\n.form-input-button input[type=\"radio\"]:checked+label,\n.form-input-button input[type=\"color\"]:checked+label,\n.form-input-button input[type=\"file\"]:checked+label {\n  background-color: hsl(var(--button-background-active));\n  color: hsl(var(--button-text-active));\n  outline: none;\n  text-decoration: none;\n}\n\n.form-input-button input[type=\"checkbox\"]:disabled+label,\n.form-input-button input[type=\"checkbox\"]:disabled:hover+label,\n.form-input-button input[type=\"checkbox\"]:disabled:focus+label,\n.form-input-button input[type=\"checkbox\"]:disabled:active+label,\n.form-input-button input[type=\"radio\"]:disabled+label,\n.form-input-button input[type=\"radio\"]:disabled:hover+label,\n.form-input-button input[type=\"radio\"]:disabled:focus+label,\n.form-input-button input[type=\"radio\"]:disabled:active+label,\n.form-input-button input[type=\"color\"]:disabled+label,\n.form-input-button input[type=\"color\"]:disabled:hover+label,\n.form-input-button input[type=\"color\"]:disabled:focus+label,\n.form-input-button input[type=\"color\"]:disabled:active+label,\n.form-input-button input[type=\"file\"]:disabled+label,\n.form-input-button input[type=\"file\"]:disabled:hover+label,\n.form-input-button input[type=\"file\"]:disabled:focus+label,\n.form-input-button input[type=\"file\"]:disabled:active+label {\n  background-color: hsl(var(--button-background-disabled));\n  color: hsl(var(--button-text-disabled));\n  cursor: default;\n  text-decoration: none;\n}\n\n.form-input-button input[type=\"checkbox\"]+label .label-icon,\n.form-input-button input[type=\"radio\"]+label .label-icon {\n  top: inherit;\n}\n\n.form-input-button-ring input[type=\"checkbox\"]+label,\n.form-input-button-ring input[type=\"radio\"]+label,\n.form-input-button-ring input[type=\"color\"]+label,\n.form-input-button-ring input[type=\"file\"]+label {\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n}\n\n.form-input-button-ring input[type=\"checkbox\"]:focus+label,\n.form-input-button-ring input[type=\"checkbox\"]:hover+label,\n.form-input-button-ring input[type=\"radio\"]:focus+label,\n.form-input-button-ring input[type=\"radio\"]:hover+label,\n.form-input-button-ring input[type=\"color\"]:focus+label,\n.form-input-button-ring input[type=\"color\"]:hover+label,\n.form-input-button-ring input[type=\"file\"]:focus+label,\n.form-input-button-ring input[type=\"file\"]:hover+label {\n  box-shadow: var(--form-ring-hover);\n}\n\n.form-input-button-ring input[type=\"checkbox\"]:active+label,\n.form-input-button-ring input[type=\"radio\"]:active+label,\n.form-input-button-ring input[type=\"color\"]:active+label,\n.form-input-button-ring input[type=\"file\"]:active+label {\n  box-shadow: var(--form-ring-accent);\n}\n\n.form-input-button-ring input[type=\"checkbox\"]:checked+label,\n.form-input-button-ring input[type=\"radio\"]:checked+label,\n.form-input-button-ring input[type=\"color\"]:checked+label,\n.form-input-button-ring input[type=\"file\"]:checked+label {\n  box-shadow: var(--form-ring-accent);\n}\n\n.form-input-button-ring input[type=\"checkbox\"]:disabled+label,\n.form-input-button-ring input[type=\"checkbox\"]:disabled:hover+label,\n.form-input-button-ring input[type=\"checkbox\"]:disabled:focus+label,\n.form-input-button-ring input[type=\"checkbox\"]:disabled:active+label,\n.form-input-button-ring input[type=\"radio\"]:disabled+label,\n.form-input-button-ring input[type=\"radio\"]:disabled:hover+label,\n.form-input-button-ring input[type=\"radio\"]:disabled:focus+label,\n.form-input-button-ring input[type=\"radio\"]:disabled:active+label,\n.form-input-button-ring input[type=\"color\"]:disabled+label,\n.form-input-button-ring input[type=\"color\"]:disabled:hover+label,\n.form-input-button-ring input[type=\"color\"]:disabled:focus+label,\n.form-input-button-ring input[type=\"color\"]:disabled:active+label,\n.form-input-button-ring input[type=\"file\"]:disabled+label,\n.form-input-button-ring input[type=\"file\"]:disabled:hover+label,\n.form-input-button-ring input[type=\"file\"]:disabled:focus+label,\n.form-input-button-ring input[type=\"file\"]:disabled:active+label {\n  box-shadow: none;\n}\n\n.form-input-button-line input[type=\"checkbox\"]+label:after,\n.form-input-button-line input[type=\"radio\"]+label:after,\n.form-input-button-line input[type=\"color\"]+label:after,\n.form-input-button-line input[type=\"file\"]+label:after {\n  content: \"\";\n  background: transparent;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  clip-path: polygon(0 calc(100% - var(--layout-line-width)), 100% calc(100% - var(--layout-line-width)), 100% 100%, 0% 100%);\n  transition: background-color var(--layout-transition-extra-fast);\n  pointer-events: none;\n}\n\n.form-input-button-line input[type=\"checkbox\"]:focus+label:after,\n.form-input-button-line input[type=\"checkbox\"]:hover+label:after,\n.form-input-button-line input[type=\"radio\"]:focus+label:after,\n.form-input-button-line input[type=\"radio\"]:hover+label:after,\n.form-input-button-line input[type=\"color\"]:focus+label:after,\n.form-input-button-line input[type=\"color\"]:hover+label:after,\n.form-input-button-line input[type=\"file\"]:focus+label:after,\n.form-input-button-line input[type=\"file\"]:hover+label:after {\n  background-color: hsl(var(--button-border-focus-hover));\n}\n\n.form-input-button-line input[type=\"checkbox\"]:active+label:after,\n.form-input-button-line input[type=\"radio\"]:active+label:after,\n.form-input-button-line input[type=\"color\"]:active+label:after,\n.form-input-button-line input[type=\"file\"]:active+label:after {\n  background-color: rgb(var(--button-border-active));\n  transition: none;\n}\n\n.form-input-button-line input[type=\"checkbox\"]:checked+label:after,\n.form-input-button-line input[type=\"radio\"]:checked+label:after,\n.form-input-button-line input[type=\"color\"]:checked+label:after,\n.form-input-button-line input[type=\"file\"]:checked+label:after {\n  background-color: rgb(var(--button-border-active));\n  transition: none;\n}\n\n.form-input-button-line input[type=\"checkbox\"]:disabled+label:after,\n.form-input-button-line input[type=\"checkbox\"]:disabled:hover+label:after,\n.form-input-button-line input[type=\"checkbox\"]:disabled:focus+label:after,\n.form-input-button-line input[type=\"checkbox\"]:disabled:active+label:after,\n.form-input-button-line input[type=\"radio\"]:disabled+label:after,\n.form-input-button-line input[type=\"radio\"]:disabled:hover+label:after,\n.form-input-button-line input[type=\"radio\"]:disabled:focus+label:after,\n.form-input-button-line input[type=\"radio\"]:disabled:active+label:after,\n.form-input-button-line input[type=\"color\"]:disabled+label:after,\n.form-input-button-line input[type=\"color\"]:disabled:hover+label:after,\n.form-input-button-line input[type=\"color\"]:disabled:focus+label:after,\n.form-input-button-line input[type=\"color\"]:disabled:active+label:after,\n.form-input-button-line input[type=\"file\"]:disabled+label:after,\n.form-input-button-line input[type=\"file\"]:disabled:hover+label:after,\n.form-input-button-line input[type=\"file\"]:disabled:focus+label:after,\n.form-input-button-line input[type=\"file\"]:disabled:active+label:after {\n  background-color: hsl(var(--button-border-disabled));\n}\n\n.form-input-button-link input[type=\"checkbox\"]+label,\n.form-input-button-link input[type=\"radio\"]+label,\n.form-input-button-link input[type=\"color\"]+label,\n.form-input-button-link input[type=\"file\"]+label {\n  background-color: transparent;\n}\n\n.form-input-button-link input[type=\"checkbox\"]:hover+label,\n.form-input-button-link input[type=\"checkbox\"]:focus+label,\n.form-input-button-link input[type=\"checkbox\"]:checked+label,\n.form-input-button-link input[type=\"radio\"]:hover+label,\n.form-input-button-link input[type=\"radio\"]:focus+label,\n.form-input-button-link input[type=\"radio\"]:checked+label,\n.form-input-button-link input[type=\"color\"]:hover+label,\n.form-input-button-link input[type=\"color\"]:focus+label,\n.form-input-button-link input[type=\"color\"]:checked+label,\n.form-input-button-link input[type=\"file\"]:hover+label,\n.form-input-button-link input[type=\"file\"]:focus+label,\n.form-input-button-link input[type=\"file\"]:checked+label {\n  background-color: transparent;\n}\n\n.form-input-button-link input[type=\"checkbox\"]:active+label,\n.form-input-button-link input[type=\"radio\"]:active+label,\n.form-input-button-link input[type=\"color\"]:active+label,\n.form-input-button-link input[type=\"file\"]:active+label {\n  background-color: transparent;\n}\n\n.form-input-button-link input:disabled[type=\"checkbox\"]+label,\n.form-input-button-link input:disabled[type=\"radio\"]+label,\n.form-input-button-link input:disabled[type=\"color\"]+label,\n.form-input-button-link input:disabled[type=\"file\"]+label {\n  background-color: transparent;\n  pointer-events: none;\n}\n\n.form-input-button-link input:disabled[type=\"checkbox\"]:hover+label,\n.form-input-button-link input:disabled[type=\"checkbox\"]:focus+label,\n.form-input-button-link input:disabled[type=\"radio\"]:hover+label,\n.form-input-button-link input:disabled[type=\"radio\"]:focus+label,\n.form-input-button-link input:disabled[type=\"color\"]:hover+label,\n.form-input-button-link input:disabled[type=\"color\"]:focus+label,\n.form-input-button-link input:disabled[type=\"file\"]:hover+label,\n.form-input-button-link input:disabled[type=\"file\"]:focus+label {\n  background-color: transparent;\n}\n\n.form-input-button-sr-only input[type=\"checkbox\"]+label,\n.form-input-button-sr-only input[type=\"radio\"]+label,\n.form-input-button-sr-only input[type=\"color\"]+label,\n.form-input-button-sr-only input[type=\"file\"]+label {\n  display: block;\n}\n\n.form-input-button-sr-only input[type=\"checkbox\"]+label .label-block,\n.form-input-button-sr-only input[type=\"radio\"]+label .label-block,\n.form-input-button-sr-only input[type=\"color\"]+label .label-block,\n.form-input-button-sr-only input[type=\"file\"]+label .label-block {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n.form-input-button-sr-only.input-color-dot input[type=\"color\"]+label {\n  padding: 0.25em 1.75em;\n  min-width: 4em;\n}\n\n.form-input-button-sr-only.input-color-dot input[type=\"color\"] {\n  top: 50%;\n  left: 50%;\n  right: initial;\n  transform: translate(-50%, -50%);\n}\n\n.form-input-hide input[type=\"checkbox\"]+label .label-icon,\n.form-input-hide input[type=\"checkbox\"]:checked+label .label-icon,\n.form-input-hide input[type=\"radio\"]+label .label-icon,\n.form-input-hide input[type=\"radio\"]:checked+label .label-icon,\n.form-input-hide input[type=\"file\"]+label .label-icon,\n.form-input-hide input[type=\"file\"]:checked+label .label-icon {\n  display: none;\n}\n\n.form-input-hide input[type=\"color\"],\n.form-input-hide input[type=\"file\"] {\n  margin: 0;\n  opacity: 0;\n  width: 1px;\n  height: 1px;\n  min-width: 1px;\n  min-height: 1px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  -webkit-appearance: none;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2725:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9610:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "input[type=\"radio\"] {\n  margin-bottom: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  display: block;\n  font-size: 1em;\n  line-height: 1;\n  cursor: pointer;\n  pointer-events: none;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  transition: color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"radio\"]+label {\n  padding: 0;\n  margin: 0;\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  color: hsl(var(--form-label));\n  cursor: pointer;\n  display: flex;\n  gap: var(--form-thumb);\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  transition: transform var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"radio\"]:hover+label,\ninput[type=\"radio\"]:focus+label {\n  color: hsl(var(--form-label-hover));\n}\n\ninput[type=\"radio\"]:active+label {\n  color: hsl(var(--form-label-focus-active));\n}\n\ninput[type=\"radio\"]:checked+label {\n  color: hsl(var(--form-label-checked));\n}\n\ninput[type=\"radio\"]:disabled+label,\ninput[type=\"radio\"]:disabled:hover+label,\ninput[type=\"radio\"]:disabled:focus+label {\n  color: hsl(var(--form-label-disabled));\n  cursor: default;\n}\n\ninput[type=\"radio\"]+label .label-icon {\n  background-color: hsl(var(--form-icon));\n  width: var(--form-thumb);\n  height: var(--form-thumb);\n  position: relative;\n  top: calc((-1 * (var(--form-thumb) * 0.5)) + (1em * 0.8));\n  display: block;\n  flex-grow: 0;\n  flex-shrink: 0;\n  z-index: 1;\n  box-shadow: none;\n  transition: background-color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n}\n\ninput[type=\"radio\"]+label .label-icon {\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:hover+label .label-icon,\ninput[type=\"radio\"]:focus+label .label-icon {\n  background-color: hsl(var(--form-icon-hover));\n  box-shadow: var(--form-ring-hover);\n}\n\ninput[type=\"radio\"]:active+label .label-icon {\n  background-color: hsl(var(--form-icon-active));\n  box-shadow: var(--form-ring-accent);\n  transition: none;\n}\n\ninput[type=\"radio\"]:checked+label .label-icon {\n  background-color: hsl(var(--form-icon-checked));\n}\n\ninput[type=\"radio\"]:checked:focus+label .label-icon,\ninput[type=\"radio\"]:checked:active+label .label-icon {\n  box-shadow: var(--form-ring-accent);\n}\n\ninput[type=\"radio\"]:disabled+label .label-icon,\ninput[type=\"radio\"]:disabled:hover+label .label-icon,\ninput[type=\"radio\"]:disabled:focus+label .label-icon,\ninput[type=\"radio\"]:checked:disabled+label .label-icon,\ninput[type=\"radio\"]:checked:disabled:hover+label .label-icon,\ninput[type=\"radio\"]:checked:disabled:focus+label .label-icon {\n  background-color: hsl(var(--form-icon-disabled));\n  box-shadow: none;\n}\n\ninput[type=\"radio\"]+label .label-icon:before {\n  content: \"\";\n  background-color: hsl(var(--form-icon-symbol));\n  width: 100%;\n  height: 100%;\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: scale(0.7);\n  transform-origin: center;\n  z-index: 2;\n  transition: background-color var(--layout-transition-extra-fast), border-radius var(--layout-transition-extra-fast), transform var(--layout-transition-extra-fast);\n}\n\ninput[type=\"radio\"]+label .label-icon:before {\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:active+label .label-icon:before {\n  background-color: hsl(var(--form-icon-symbol-active));\n  transition: none;\n}\n\ninput[type=\"radio\"]:checked+label .label-icon:before {\n  background-color: hsl(var(--form-icon-symbol-active));\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:checked+label .label-icon:before {\n  transform: scale(0.2);\n}\n\ninput[type=\"radio\"]:disabled+label .label-icon:before,\ninput[type=\"radio\"]:disabled:hover+label .label-icon:before,\ninput[type=\"radio\"]:disabled:focus+label .label-icon:before,\ninput[type=\"radio\"]:disabled:active+label .label-icon:before,\ninput[type=\"radio\"]:checked:disabled+label .label-icon:before,\ninput[type=\"radio\"]:checked:disabled:hover+label .label-icon:before,\ninput[type=\"radio\"]:checked:disabled:focus+label .label-icon:before,\ninput[type=\"radio\"]:checked:disabled:active+label .label-icon:before {\n  background-color: hsl(var(--form-icon-symbol-disabled));\n}\n\ninput[type=\"radio\"]+label .label-block-item {\n  color: hsl(var(--form-label));\n  transition: color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"radio\"]:hover+label .label-block-item,\ninput[type=\"radio\"]:focus+label .label-block-item {\n  color: hsl(var(--form-label-hover));\n}\n\ninput[type=\"radio\"]:active+label .label-block-item {\n  color: hsl(var(--form-label-focus-active));\n}\n\ninput[type=\"radio\"]:checked+label .label-block-item {\n  color: hsl(var(--form-label-checked));\n}\n\ninput[type=\"radio\"]:disabled+label .label-block-item,\ninput[type=\"radio\"]:disabled:hover+label .label-block-item,\ninput[type=\"radio\"]:disabled:focus+label .label-block-item {\n  color: hsl(var(--form-label-disabled));\n  cursor: default;\n}\n\ninput[type=\"radio\"]+label .label-block-item.muted {\n  color: hsl(var(--utility-muted));\n  transition: color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"radio\"]:hover+label .label-block-item.muted,\ninput[type=\"radio\"]:focus+label .label-block-item.muted {\n  color: hsl(var(--utility-muted-hover));\n}\n\ninput[type=\"radio\"]:active+label .label-block-item.muted {\n  color: hsl(var(--utility-muted-focus-active));\n}\n\ninput[type=\"radio\"]:checked+label .label-block-item.muted {\n  color: hsl(var(--utility-muted-checked));\n}\n\ninput[type=\"radio\"]:disabled+label .label-block-item.muted,\ninput[type=\"radio\"]:disabled:hover+label .label-block-item.muted,\ninput[type=\"radio\"]:disabled:focus+label .label-block-item.muted {\n  color: hsl(var(--utility-muted-disabled));\n  cursor: default;\n}\n\ninput[type=\"radio\"]:disabled+label .label-block-item,\ninput[type=\"radio\"]:disabled:hover+label .label-block-item,\ninput[type=\"radio\"]:disabled:focus+label .label-block-item {\n  color: hsl(var(--form-label-disabled));\n  cursor: default;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 349:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-range-track-background: var(--theme-primary-020);\n  --form-range-track-background-hover: var(--theme-primary-020);\n  --form-range-track-background-focus: var(--theme-primary-020);\n  --form-range-track-background-disabled: var(--theme-primary-010);\n}\n\n:root {\n  --form-range-thumb-background: var(--theme-primary-text-010);\n  --form-range-thumb-background-disabled: var(--theme-primary-030);\n  --form-range-thumb-border: var(--theme-primary-010);\n  --form-range-thumb-border-focus: var(--theme-primary-text-010);\n  --form-range-thumb-border-disabled: var(--theme-primary-010);\n}\n\n:root {\n  --form-range-hue: linear-gradient(to right,\n      hsl(0, 100%, 50%),\n      hsl(30, 100%, 50%),\n      hsl(60, 100%, 50%),\n      hsl(90, 100%, 50%),\n      hsl(120, 100%, 50%),\n      hsl(150, 100%, 50%),\n      hsl(180, 100%, 50%),\n      hsl(210, 100%, 50%),\n      hsl(240, 100%, 50%),\n      hsl(270, 100%, 50%),\n      hsl(300, 100%, 50%),\n      hsl(330, 100%, 50%),\n      hsl(360, 100%, 50%));\n}\n\ninput[type=\"range\"] {\n  background-color: transparent;\n  padding: 0;\n  margin: 0;\n  font-size: 1em;\n  display: block;\n  height: 2.5em;\n  width: 100%;\n  position: relative;\n  border: 0;\n  cursor: pointer;\n  touch-action: none;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  -webkit-appearance: none;\n}\n\ninput[type=\"range\"],\ninput[type=\"range\"]:hover,\ninput[type=\"range\"]:focus,\ninput[type=\"range\"]:active {\n  outline: 0;\n}\n\ninput[type=\"range\"]:disabled,\ninput[type=\"range\"]:disabled:hover,\ninput[type=\"range\"]:disabled:focus,\ninput[type=\"range\"]:disabled:active {\n  cursor: default;\n}\n\ninput[type=\"range\"]::-webkit-slider-runnable-track {\n  background-color: hsl(var(--form-range-track-background));\n  padding: 0;\n  margin: 0;\n  height: calc(var(--layout-line-width) * 4);\n  border: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  transition: background-color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"range\"]:hover::-webkit-slider-runnable-track {\n  background-color: hsl(var(--form-range-track-background-hover));\n}\n\ninput[type=\"range\"]:focus::-webkit-slider-runnable-track {\n  background-color: hsl(var(--form-range-track-background-focus));\n}\n\ninput[type=\"range\"]:disabled::-webkit-slider-runnable-track,\ninput[type=\"range\"]:disabled:hover::-webkit-slider-runnable-track,\ninput[type=\"range\"]:disabled:focus::-webkit-slider-runnable-track {\n  background-color: hsl(var(--form-range-track-background-disabled));\n}\n\ninput[type=\"range\"]::-webkit-slider-thumb {\n  background-color: hsl(var(--form-range-thumb-background));\n  border: 0;\n  margin: 0;\n  padding: 0;\n  border-radius: 100%;\n  width: var(--form-thumb);\n  height: var(--form-thumb);\n  top: 50%;\n  transform: translateY(-50%);\n  position: relative;\n  cursor: pointer;\n  box-sizing: border-box;\n  -webkit-appearance: none;\n  box-shadow: 0 0 0 calc(var(--layout-line-width) * 1.25) hsl(var(--form-range-thumb-border));\n  transition: background-color var(--layout-transition-extra-fast), border var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"range\"]:focus::-webkit-slider-thumb {\n  box-shadow: var(--form-ring-accent);\n  border-color: hsl(var(--form-range-thumb-border-focus));\n}\n\ninput[type=\"range\"]:disabled::-webkit-slider-thumb,\ninput[type=\"range\"]:disabled:hover::-webkit-slider-thumb,\ninput[type=\"range\"]:disabled:focus::-webkit-slider-thumb {\n  background-color: hsl(var(--form-range-thumb-background-disabled));\n  border-color: hsl(var(--form-range-thumb-border-disabled));\n  box-shadow: none;\n  cursor: default;\n}\n\ninput[type=\"range\"].input-range-hue-spectrum::-webkit-slider-runnable-track {\n  background-image: var(--form-range-hue);\n}\n\ninput[type=\"range\"]:disabled.input-range-hue-spectrum::-webkit-slider-runnable-track {\n  background-image: none;\n  background-color: hsl(var(--form-range-track-background-disabled));\n}\n\ninput[type=\"range\"]::-moz-range-track {\n  background-color: hsl(var(--form-range-track-background));\n  padding: 0;\n  margin: 0;\n  height: calc(var(--layout-line-width) * 4);\n  border: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  transition: background-color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"range\"]:hover::-moz-range-track {\n  background-color: hsl(var(--form-range-track-background-hover));\n}\n\ninput[type=\"range\"]:focus::-moz-range-track {\n  background-color: hsl(var(--form-range-track-background-focus));\n}\n\ninput[type=\"range\"]:disabled::-moz-range-track,\ninput[type=\"range\"]:disabled:hover::-moz-range-track,\ninput[type=\"range\"]:disabled:focus::-moz-range-track {\n  background-color: hsl(var(--form-range-track-background-disabled));\n}\n\ninput[type=\"range\"]::-moz-range-thumb {\n  background-color: hsl(var(--form-range-thumb-background));\n  border: 0;\n  margin: 0;\n  padding: 0;\n  border-radius: 100%;\n  width: var(--form-thumb);\n  height: var(--form-thumb);\n  position: relative;\n  cursor: pointer;\n  box-sizing: border-box;\n  -webkit-appearance: none;\n  box-shadow: 0 0 0 calc(var(--layout-line-width) * 1.25) hsl(var(--form-range-thumb-border));\n  transition: background-color var(--layout-transition-extra-fast), border var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"range\"]:focus::-moz-range-thumb {\n  box-shadow: var(--form-ring-accent);\n  border-color: hsl(var(--form-range-thumb-border-focus));\n}\n\ninput[type=\"range\"]:disabled::-moz-range-thumb,\ninput[type=\"range\"]:disabled:hover::-moz-range-thumb,\ninput[type=\"range\"]:disabled:focus::-moz-range-thumb {\n  background-color: hsl(var(--form-range-thumb-background-disabled));\n  border-color: hsl(var(--form-range-thumb-border-disabled));\n  box-shadow: none;\n  cursor: default;\n}\n\ninput[type=\"range\"].input-range-hue-spectrum::-moz-range-track {\n  background-image: var(--form-range-hue);\n}\n\ninput[type=\"range\"]:disabled.input-range-hue-spectrum::-moz-range-track {\n  background-image: none;\n  background-color: hsl(var(--form-range-track-background-disabled));\n}\n\n.slider-double {\n  flex-grow: 1;\n  position: relative;\n}\n\n.slider-double input[type=\"range\"]:first-child {\n  width: 100%;\n}\n\n.slider-double input[type=\"range\"]:last-child {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  pointer-events: none;\n}\n\n.slider-double input[type=\"range\"]:last-child::-webkit-slider-thumb {\n  pointer-events: all;\n}\n\n.slider-double input[type=\"range\"]:last-child::-moz-range-thumb {\n  pointer-events: all;\n}\n\n.slider-double input[type=\"range\"]:last-child::-webkit-slider-runnable-track,\n.slider-double input[type=\"range\"]:last-child:hover::-webkit-slider-runnable-track,\n.slider-double input[type=\"range\"]:last-child:focus::-webkit-slider-runnable-track,\n.slider-double input[type=\"range\"]:last-child:disabled::-webkit-slider-runnable-track,\n.slider-double input[type=\"range\"]:last-child:disabled:hover::-webkit-slider-runnable-track,\n.slider-double input[type=\"range\"]:last-child:disabled:focus::-webkit-slider-runnable-track {\n  background-color: transparent;\n}\n\n.slider-double input[type=\"range\"]:last-child::-moz-range-track,\n.slider-double input[type=\"range\"]:last-child:hover::-moz-range-track,\n.slider-double input[type=\"range\"]:last-child:focus::-moz-range-track,\n.slider-double input[type=\"range\"]:last-child:disabled::-moz-range-track,\n.slider-double input[type=\"range\"]:last-child:disabled:hover::-moz-range-track,\n.slider-double input[type=\"range\"]:last-child:disabled:focus::-moz-range-track {\n  background-color: transparent;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5819:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "select {\n  background-color: hsl(var(--form-input-background));\n  background-image:\n    linear-gradient(45deg, transparent 60%, hsl(var(--form-label)) 60%),\n    linear-gradient(135deg, hsl(var(--form-label)) 40%, transparent 40%);\n  background-position:\n    calc(100% - 1.5em) 50%,\n    calc(100% - 1em) 50%;\n  background-size:\n    0.5em 0.375em,\n    0.5em 0.375em;\n  background-repeat: no-repeat;\n  padding: 0 3em 0 1.25em;\n  margin: 0;\n  color: hsl(var(--form-input-text));\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  line-height: 2.5;\n  min-height: 2.5em;\n  min-width: 0;\n  width: 100%;\n  border-width: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  cursor: pointer;\n  transition: background-color var(--layout-transition-extra-fast), background-image var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  appearance: none;\n}\n\nselect:hover {\n  background-image:\n    linear-gradient(45deg, transparent 60%, hsl(var(--form-label-hover)) 60%),\n    linear-gradient(135deg, hsl(var(--form-label-hover)) 40%, transparent 40%);\n  background-color: hsl(var(--form-input-background-hover));\n  color: hsl(var(--form-label-hover));\n  outline: none;\n  box-shadow: var(--form-ring-hover);\n}\n\nselect:focus,\nselect:active {\n  background-image:\n    linear-gradient(45deg, transparent 60%, hsl(var(--form-label-focus-active)) 60%),\n    linear-gradient(135deg, hsl(var(--form-label-focus-active)) 40%, transparent 40%);\n  background-color: hsl(var(--form-input-background-border-focus-active));\n  color: hsl(var(--form-label-focus-active));\n  outline: none;\n  z-index: 2;\n  box-shadow: var(--form-ring-accent);\n}\n\nselect:disabled,\nselect:disabled:hover,\nselect:disabled:focus,\nselect:disabled:active {\n  background-color: hsl(var(--form-input-background-disabled));\n  background-image:\n    linear-gradient(45deg, transparent 60%, hsl(var(--form-input-text-disabled)) 60%),\n    linear-gradient(135deg, hsl(var(--form-input-text-disabled)) 40%, transparent 40%);\n  color: hsl(var(--form-input-text-disabled));\n  cursor: default;\n  box-shadow: none;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4224:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "input[type=\"email\"],\ninput[type=\"number\"],\ninput[type=\"password\"],\ninput[type=\"search\"],\ninput[type=\"tel\"],\ninput[type=\"text\"] {\n  background-color: hsl(var(--form-input-background));\n  padding: 0 1.25em;\n  margin: 0;\n  color: hsl(var(--form-input-text));\n  font-size: 1em;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  line-height: 1.6;\n  height: 2.5em;\n  min-width: 0;\n  width: 100%;\n  border-width: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  cursor: text;\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n  -moz-appearance: textfield;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration {\n  -webkit-appearance: none;\n}\n\ninput[type=\"number\"] {\n  text-align: center;\n}\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\ninput[type=\"email\"]:hover,\ninput[type=\"number\"]:hover,\ninput[type=\"password\"]:hover,\ninput[type=\"search\"]:hover,\ninput[type=\"tel\"]:hover,\ninput[type=\"text\"]:hover {\n  background-color: hsl(var(--form-input-background-hover));\n  color: hsl(var(--form-input-text-hover));\n  outline: none;\n  box-shadow: var(--form-ring-hover);\n}\n\ninput[type=\"email\"]:focus,\ninput[type=\"email\"]:active,\ninput[type=\"number\"]:focus,\ninput[type=\"number\"]:active,\ninput[type=\"password\"]:focus,\ninput[type=\"password\"]:active,\ninput[type=\"search\"]:focus,\ninput[type=\"search\"]:active,\ninput[type=\"tel\"]:focus,\ninput[type=\"tel\"]:active,\ninput[type=\"text\"]:focus,\ninput[type=\"text\"]:active {\n  background-color: hsl(var(--form-input-background-focus-active));\n  color: hsl(var(--form-input-text-focus-active));\n  outline: none;\n  z-index: 2;\n  box-shadow: var(--form-ring-accent);\n}\n\ninput[type=\"email\"]:disabled,\ninput[type=\"number\"]:disabled,\ninput[type=\"password\"]:disabled,\ninput[type=\"search\"]:disabled,\ninput[type=\"tel\"]:disabled,\ninput[type=\"text\"]:disabled {\n  background-color: hsl(var(--form-input-background-disabled));\n  color: hsl(var(--form-input-text-disabled));\n  cursor: default;\n  box-shadow: none;\n}\n\ninput[type=\"email\"]:disabled:hover,\ninput[type=\"email\"]:disabled:focus,\ninput[type=\"number\"]:disabled:hover,\ninput[type=\"number\"]:disabled:focus,\ninput[type=\"password\"]:disabled:hover,\ninput[type=\"password\"]:disabled:focus,\ninput[type=\"search\"]:disabled:hover,\ninput[type=\"search\"]:disabled:focus,\ninput[type=\"tel\"]:disabled:hover,\ninput[type=\"tel\"]:disabled:focus,\ninput[type=\"text\"]:disabled:hover,\ninput[type=\"text\"]:disabled:focus {\n  color: hsl(var(--form-input-text-disabled));\n}\n\ninput[type=\"email\"]::placeholder,\ninput[type=\"number\"]::placeholder,\ninput[type=\"password\"]::placeholder,\ninput[type=\"search\"]::placeholder,\ninput[type=\"tel\"]::placeholder,\ninput[type=\"text\"]::placeholder {\n  color: hsl(var(--form-placeholder));\n  transition: color var(--layout-transition-extra-fast);\n}\n\ninput[type=\"email\"]:hover::placeholder,\ninput[type=\"number\"]:hover::placeholder,\ninput[type=\"password\"]:hover::placeholder,\ninput[type=\"search\"]:hover::placeholder,\ninput[type=\"tel\"]:hover::placeholder,\ninput[type=\"text\"]:hover::placeholder {\n  color: hsl(var(--form-placeholder-focus-hover));\n}\n\ninput[type=\"email\"]:focus::placeholder,\ninput[type=\"number\"]:focus::placeholder,\ninput[type=\"password\"]:focus::placeholder,\ninput[type=\"search\"]:focus::placeholder,\ninput[type=\"tel\"]:focus::placeholder,\ninput[type=\"text\"]:focus::placeholder {\n  color: hsl(var(--form-placeholder-focus-hover));\n}\n\ninput[type=\"email\"]:disabled::placeholder,\ninput[type=\"email\"]:disabled:hover::placeholder,\ninput[type=\"email\"]:disabled:focus::placeholder,\ninput[type=\"number\"]:disabled::placeholder,\ninput[type=\"number\"]:disabled:hover::placeholder,\ninput[type=\"number\"]:disabled:focus::placeholder,\ninput[type=\"password\"]:disabled::placeholder,\ninput[type=\"password\"]:disabled:hover::placeholder,\ninput[type=\"password\"]:disabled:focus::placeholder,\ninput[type=\"search\"]:disabled::placeholder,\ninput[type=\"search\"]:disabled:hover::placeholder,\ninput[type=\"search\"]:disabled:focus::placeholder,\ninput[type=\"tel\"]:disabled::placeholder,\ninput[type=\"tel\"]:disabled:hover::placeholder,\ninput[type=\"tel\"]:disabled:focus::placeholder,\ninput[type=\"text\"]:disabled::placeholder,\ninput[type=\"text\"]:disabled:hover::placeholder,\ninput[type=\"text\"]:disabled:focus::placeholder {\n  color: hsl(var(--form-placeholder-disabled));\n}\n\n.input-clear[type=\"email\"],\n.input-clear[type=\"number\"],\n.input-clear[type=\"password\"],\n.input-clear[type=\"search\"],\n.input-clear[type=\"tel\"],\n.input-clear[type=\"text\"] {\n  background-color: transparent;\n}\n\n.input-clear[type=\"email\"]:hover,\n.input-clear[type=\"number\"]:hover,\n.input-clear[type=\"password\"]:hover,\n.input-clear[type=\"search\"]:hover,\n.input-clear[type=\"tel\"]:hover,\n.input-clear[type=\"text\"]:hover {\n  background-color: transparent;\n  box-shadow: none;\n}\n\n.input-clear[type=\"email\"]:focus,\n.input-clear[type=\"email\"]:active,\n.input-clear[type=\"number\"]:focus,\n.input-clear[type=\"number\"]:active,\n.input-clear[type=\"password\"]:focus,\n.input-clear[type=\"password\"]:active,\n.input-clear[type=\"search\"]:focus,\n.input-clear[type=\"search\"]:active,\n.input-clear[type=\"tel\"]:focus,\n.input-clear[type=\"tel\"]:active,\n.input-clear[type=\"text\"]:focus,\n.input-clear[type=\"text\"]:active {\n  background-color: transparent;\n  box-shadow: var(--form-ring-accent);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8843:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "textarea {\n  background-color: hsl(var(--form-input-background));\n  padding: 0.5em 1.25em;\n  margin: 0;\n  color: hsl(var(--form-input-text));\n  font-size: 1em;\n  line-height: 1.6;\n  font-family: var(--theme-font-ui-name);\n  font-weight: var(--theme-font-ui-weight);\n  font-style: var(--theme-font-ui-style);\n  height: 10em;\n  min-height: 2.5em;\n  min-width: 0;\n  width: 100%;\n  border-width: 0;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  cursor: text;\n  resize: vertical;\n  display: block;\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n  -moz-appearance: textfield;\n}\n\ntextarea:hover {\n  background-color: hsl(var(--form-input-background-hover));\n  color: hsl(var(--form-input-text-hover));\n  outline: none;\n  box-shadow: var(--form-ring-hover);\n}\n\ntextarea:focus,\ntextarea:active {\n  background-color: hsl(var(--form-input-background-focus-active));\n  color: hsl(var(--form-input-text-focus-active));\n  outline: none;\n  box-shadow: var(--form-ring-accent);\n}\n\ntextarea:disabled {\n  background-color: hsl(var(--form-input-background-disabled));\n  color: hsl(var(--form-input-text-disabled));\n  cursor: default;\n  box-shadow: none;\n  resize: none;\n}\n\ntextarea:disabled:hover,\ntextarea:disabled:focus {\n  color: hsl(var(--form-input-text-disabled));\n}\n\ntextarea::placeholder {\n  color: hsl(var(--form-placeholder));\n  transition: color var(--layout-transition-extra-fast);\n}\n\ntextarea:hover::placeholder {\n  color: hsl(var(--form-placeholder-focus-hover));\n}\n\ntextarea:focus::placeholder {\n  color: hsl(var(--form-placeholder-focus-hover));\n}\n\ntextarea:disabled::placeholder,\ntextarea:disabled:hover::placeholder,\ntextarea:disabled:focus::placeholder {\n  color: hsl(var(--form-placeholder-disabled));\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5071:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --form-label: var(--theme-primary-text-010);\n  --form-label-hover: var(--theme-primary-text-010);\n  --form-label-focus-active: var(--theme-primary-text-010);\n  --form-label-checked: var(--theme-primary-text-010);\n  --form-label-disabled: var(--theme-primary-030);\n}\n\nlabel {\n  padding: 0;\n  color: hsl(var(--form-label));\n  margin-bottom: 0;\n  font-size: 1em;\n  display: block;\n  transition: color var(--layout-transition-extra-fast);\n}\n\nlabel:not(.label-no-padding):not(:only-child):not(:last-child) {\n  padding-bottom: 1em;\n}\n\nlabel.disabled {\n  color: hsl(var(--form-label-disabled));\n}\n\n.label-block {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  gap: 0.25em;\n}\n\ninput:disabled+label .label-block-item,\ninput:disabled:hover+label .label-block-item,\ninput:disabled:focus+label .label-block-item {\n  color: hsl(var(--form-label-disabled));\n  cursor: default;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 460:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".form-sticky {\n  background-color: hsl(var(--theme-primary-010));\n  margin: -1em;\n  padding: 1em;\n  position: sticky;\n  top: 0;\n  z-index: 4;\n  transition: background-color var(--layout-transition-extra-fast);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 1879:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --wrap-size: 6;\n  --wrap-space: calc((var(--wrap-size) / 4) * 1em);\n}\n\n.form-wrap {\n  position: relative;\n  width: 100%;\n  display: block;\n}\n\n.form-wrap:not(:first-child) {\n  margin-top: var(--wrap-space);\n}\n\n.form-wrap:not(:last-child) {\n  margin-bottom: var(--wrap-space);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5379:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".greeting {\n  margin: 0;\n  padding: 0;\n  font-size: 1em;\n  font-family: var(--theme-font-display-name);\n  font-weight: var(--theme-font-display-weight);\n  font-style: var(--theme-font-display-style);\n  display: inline-flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  line-height: 1.2;\n}\n\n.greeting-item {\n  font-size: 1.5em;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.is-theme-background-type-accent .greeting-text {\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.is-theme-background-type-color .greeting-text {\n  color: hsl(var(--theme-background-color-rgb-text));\n}\n\n.is-header-item-justify-left .greeting {\n  justify-content: flex-start;\n  text-align: left;\n}\n\n.is-header-item-justify-center .greeting {\n  justify-content: center;\n  text-align: center;\n}\n\n.is-header-item-justify-right .greeting {\n  justify-content: flex-end;\n  text-align: right;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9525:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".is-bookmark-style-block {\n  --group-cell-width: 11em;\n  --group-cell-height: 10em;\n}\n\n.is-bookmark-style-list {\n  --group-cell-width: 20em;\n  --group-cell-height: 4em;\n}\n\n.group {\n  display: flex;\n  gap: 0;\n  width: 100%;\n  transition: gap var(--layout-transition-extra-fast) var(--layout-duration-04);\n}\n\n.is-group-order-header-body .group {\n  flex-direction: column;\n}\n\n.is-group-order-body-header .group {\n  flex-direction: column-reverse;\n}\n\n.is-edge .group {\n  transition: gap var(--layout-transition-extra-fast);\n}\n\n.group.is-group-header,\n.group.is-group-open-all {\n  gap: calc(var(--layout-space) * var(--layout-gutter));\n}\n\n.is-group-edit .group {\n  gap: calc(var(--layout-space) * var(--layout-gutter));\n  transition: gap var(--layout-transition-extra-fast);\n}\n\n.group-header {\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  gap: calc(var(--layout-space) * var(--layout-gutter));\n}\n\n.is-group-area-justify-left .group-header {\n  flex-direction: row;\n}\n\n.is-group-area-justify-center .group-header {\n  flex-direction: row;\n  justify-content: center;\n}\n\n.is-group-area-justify-right .group-header {\n  flex-direction: row-reverse;\n}\n\n.group-name {\n  font-size: calc(calc(var(--group-name-size) / 10) * 0.1em);\n  height: 2.5em;\n  display: flex;\n  align-items: center;\n  flex-shrink: 1;\n  overflow: hidden;\n}\n\n.group-name-text {\n  margin-bottom: 0;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n.is-theme-background-type-accent .group-name-text {\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.is-theme-background-type-color .group-name-text {\n  color: hsl(var(--theme-background-color-rgb-text));\n}\n\n.group-body {\n  position: relative;\n  font-size: calc(calc(var(--bookmark-size) / 10) * 0.1em);\n  min-height: var(--group-cell-height);\n  display: grid;\n  grid-auto-rows: var(--group-cell-height);\n  gap: calc(var(--layout-space) * var(--layout-gutter));\n  grid-template-columns: repeat(auto-fill, minmax(var(--group-cell-width), 1fr));\n  grid-auto-flow: dense;\n}\n\n.group-control {\n  margin-left: calc(calc(var(--layout-space) * var(--layout-gutter)) * -1);\n  height: 0;\n  transition: height var(--layout-transition-extra-fast) var(--layout-duration-04), margin var(--layout-transition-extra-fast);\n}\n\n.is-edge .group-control {\n  transition: height var(--layout-transition-extra-fast), margin var(--layout-transition-extra-fast);\n}\n\n.is-group-edit .group-control {\n  margin: 0;\n  height: 2.5em;\n  transition: height var(--layout-transition-extra-fast), margin var(--layout-transition-extra-fast) var(--layout-duration-04);\n}\n\n.is-edge.is-group-edit .group-control {\n  transition: height var(--layout-transition-extra-fast), margin var(--layout-transition-extra-fast);\n}\n\n.group-control-group {\n  width: 0;\n  overflow: hidden;\n  transition: width var(--layout-transition-extra-fast);\n}\n\n.is-group-edit .group-control-group {\n  width: 20em;\n  transition: width var(--layout-transition-extra-fast) var(--layout-duration-04);\n}\n\n.is-edge.is-group-edit .group-control-group {\n  transition: width var(--layout-transition-extra-fast);\n}\n\n.group-control-open-all {\n  font-size: calc(calc(var(--group-openall-size) / 10) * 0.1em);\n}\n\n.group-control-open-all {\n  background-color: hsl(var(--button-background), calc(var(--theme-group-openall-opacity) / 100));\n}\n\n.group-control-open-all:focus,\n.group-control-open-all:hover {\n  background-color: hsl(var(--button-background-focus-hover), calc(var(--theme-group-openall-opacity) / 100));\n}\n\n.group-control-open-all:active {\n  background-color: hsl(var(--button-background-active), calc(var(--theme-group-openall-opacity) / 100));\n}\n\n.group-sort-placeholder {\n  box-shadow: var(--edge);\n  border-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.group-sort-placeholder .group-header,\n.group-sort-placeholder .group-body {\n  visibility: hidden;\n}\n\n.is-theme-background-type-accent .group-sort-placeholder {\n  box-shadow: var(--edge-on-accent);\n}\n\n.is-group-open-all-opacity-low .group-control-open-all {\n  --button-text: var(--theme-primary-text-010);\n  --button-text-focus-hover: var(--theme-primary-text-010);\n  --button-text-active: var(--theme-primary-text-010);\n  --button-text-disabled: var(--theme-primary-010);\n}\n\n.is-group-open-all-opacity-low.is-theme-background-type-accent .group-control-open-all {\n  --button-text: var(--theme-accent-rgb-text);\n  --button-text-focus-hover: var(--theme-accent-rgb-text);\n  --button-text-active: var(--theme-accent-rgb-text);\n  --button-text-disabled: var(--theme-accent-rgb-text);\n}\n\n.is-group-open-all-opacity-low.is-theme-background-type-color .group-control-open-all {\n  --button-text: var(--theme-background-color-rgb-text);\n  --button-text-focus-hover: var(--theme-background-color-rgb-text);\n  --button-text-active: var(--theme-background-color-rgb-text);\n  --button-text-disabled: var(--theme-background-color-rgb-text);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8092:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".group-empty {\n  background-color: hsla(var(--theme-primary-040), 0.2);\n  padding: 0.5em 1em;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  height: inherit;\n  text-align: center;\n  display: flex;\n  grid-column-start: 1;\n  grid-column-end: -1;\n  gap: 1em;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.is-bookmark-style-block .group-empty {\n  flex-direction: column;\n}\n\n.is-bookmark-style-list .group-empty {\n  flex-direction: row;\n}\n\n.group-empty-headline:not(:last-child) {\n  margin-bottom: 0;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9599:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".group-form {\n  display: block;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 7428:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --header-item-opacity: 100;\n}\n\n.header-area {\n  flex-grow: 1;\n  padding: calc(var(--layout-space) * var(--layout-padding));\n  gap: calc(var(--layout-space) * var(--layout-padding));\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.is-theme-header-color-by-custom .header-area {\n  background-color: hsla(var(--theme-header-color-hsl-h), calc(var(--theme-header-color-hsl-s) * 1%), calc(var(--theme-header-color-hsl-l) * 1%), calc(var(--theme-header-color-opacity) / 100));\n}\n\n.header {\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  gap: calc(var(--layout-space) * var(--layout-gutter));\n}\n\n.is-header-item-justify-left .header {\n  justify-content: flex-start;\n}\n\n.is-header-item-justify-center .header {\n  justify-content: center;\n}\n\n.is-header-item-justify-right .header {\n  justify-content: flex-end;\n}\n\n.is-layout-direction-horizontal .header-area {\n  flex-grow: 0;\n  justify-self: center;\n}\n\n.is-layout-direction-horizontal .header {\n  flex-grow: 0;\n}\n\n.header-border-top,\n.header-border-bottom {\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  width: 100%;\n}\n\n.header-border-top {\n  border-top: calc(var(--layout-line-width) * var(--header-border-top)) solid rgb(var(--theme-accent));\n}\n\n.header-border-bottom {\n  border-bottom: calc(var(--layout-line-width) * var(--header-border-bottom)) solid rgb(var(--theme-accent));\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 6782:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".header-item {\n  min-height: 2.5em;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n}\n\n.header-item-content {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: calc(var(--layout-space) * var(--layout-gutter));\n  transition: gap var(--layout-transition-extra-fast) var(--layout-duration-04);\n}\n\n.is-layout-direction-horizontal.is-header-item-justify-right .header-item-content {\n  flex-direction: row-reverse;\n}\n\n.is-header-item-justify-left .header-item {\n  justify-content: flex-start;\n}\n\n.is-header-item-justify-center .header-item {\n  justify-content: center;\n}\n\n.is-header-item-justify-right .header-item {\n  justify-content: flex-end;\n}\n\n.is-edge .header-item {\n  transition: gap var(--layout-transition-extra-fast);\n}\n\n.is-header-edit .header-item {\n  transition: gap var(--layout-transition-extra-fast);\n}\n\n.header-sort-placeholder {\n  box-shadow: var(--edge);\n  border-radius: calc(var(--theme-radius) * 0.01em);\n}\n\n.is-theme-background-type-accent .header-sort-placeholder {\n  box-shadow: var(--edge-on-accent);\n}\n\n.header-sort-placeholder.header-item>* {\n  visibility: hidden;\n}\n\n.header-item-body {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: stretch;\n}\n\n.header-item-body>* {\n  flex-grow: 1;\n}\n\n.header-item-control {\n  margin-left: calc(calc(var(--layout-space) * var(--layout-gutter)) * -1);\n  height: 0;\n  flex-grow: 0;\n  transition: height var(--layout-transition-extra-fast) var(--layout-duration-04), margin var(--layout-transition-extra-fast);\n}\n\n.is-edge .header-item-control {\n  transition: height var(--layout-transition-extra-fast), margin var(--layout-transition-extra-fast);\n}\n\n.is-header-edit .header-item-control {\n  margin: 0;\n  height: 2.5em;\n  transition: height var(--layout-transition-extra-fast), margin var(--layout-transition-extra-fast) var(--layout-duration-04);\n}\n\n.is-edge.is-header-edit .header-item-control {\n  transition: height var(--layout-transition-extra-fast), margin var(--layout-transition-extra-fast);\n}\n\n.header-item-control-group {\n  width: 0;\n  overflow: hidden;\n  transition: width var(--layout-transition-extra-fast);\n}\n\n.is-header-edit .header-item-control-group {\n  width: 4em;\n  transition: width var(--layout-transition-extra-fast) var(--layout-duration-04);\n}\n\n.is-edge.is-header-edit .header-item-control-group {\n  transition: width var(--layout-transition-extra-fast);\n}\n\n.header-sort-placeholder.header-item>* {\n  visibility: hidden;\n}\n\n.is-header-greeting-newline .header-item-greeting {\n  flex-basis: 100%;\n}\n\n.is-header-transitional-newline .header-item-transitional {\n  flex-basis: 100%;\n}\n\n.is-header-clock-newline .header-item-clock {\n  flex-basis: 100%;\n}\n\n.is-header-date-newline .header-item-date {\n  flex-basis: 100%;\n}\n\n.is-header-search-newline .header-item-search {\n  flex-basis: 100%;\n}\n\n.is-toolbar-location-header.is-toolbar-newline .header-item-toolbar {\n  flex-basis: 100%;\n}\n\n.header-item-greeting .header-item-body {\n  font-size: calc(var(--header-greeting-size) * 0.01em);\n}\n\n.header-item-transitional .header-item-body {\n  font-size: calc(var(--header-transitional-size) * 0.01em);\n}\n\n.header-item-clock .header-item-body {\n  font-size: calc(var(--header-clock-size) * 0.01em);\n}\n\n.header-item-date .header-item-body {\n  font-size: calc(var(--header-date-size) * 0.01em);\n}\n\n.header-item-search .header-item-body {\n  font-size: calc(var(--header-search-size) * 0.01em);\n}\n\n.is-header-search-width-by-auto .header-item-search {\n  flex-grow: 1;\n}\n\n.is-header-search-width-by-auto .header-item-search .header-item-content,\n.is-header-search-width-by-auto .header-item-search .header-item-body {\n  flex-grow: 1;\n}\n\n.is-header-search-width-by-custom .header-item-search {\n  width: calc(var(--header-search-width-size) * 1%);\n  flex-grow: 0;\n}\n\n.is-header-search-width-by-custom .header-item-search .header-item-content {\n  flex-grow: 1;\n}\n\n.is-header-search-width-by-custom .header-item-search .header-item-body {\n  flex-grow: 1;\n}\n\n.is-header-search-newline.is-header-search-width-by-custom .header-item-search .header-item-content {\n  flex-grow: 0;\n  width: calc(var(--header-search-width-size) * 1%);\n}\n\n.is-header-item-justify-left.is-header-search-width-by-custom .header-item-search .header-item-content {\n  justify-content: flex-start;\n}\n\n.is-header-item-justify-center.is-header-search-width-by-custom .header-item-search .header-item-content {\n  justify-content: center;\n}\n\n.is-header-item-justify-right.is-header-search-width-by-custom .header-item-search .header-item-content {\n  justify-content: flex-end;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 2826:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".icon {\n  width: 1em;\n  height: 1em;\n  font-size: 1.5em;\n  display: flex;\n}\n\n.icon svg {\n  width: 100%;\n  height: 100%;\n  fill: currentColor;\n  vertical-align: middle;\n  overflow: hidden;\n  display: block;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9209:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --layout-size: 1;\n}\n\n:root {\n  --layout-space: 0.05em;\n  --layout-line-width: 0.2em;\n}\n\n:root {\n  --layout-duration-01: 0.1s;\n  --layout-duration-02: 0.2s;\n  --layout-duration-03: 0.3s;\n  --layout-duration-04: 0.4s;\n  --layout-duration-05: 0.5s;\n  --layout-duration-06: 0.6s;\n  --layout-duration-07: 0.7s;\n  --layout-duration-08: 0.8s;\n  --layout-duration-09: 0.9s;\n  --layout-duration-10: 1s;\n  --layout-timing-ease: ease-in-out;\n  --layout-timing-bounce: cubic-bezier(0.8, 0.8, 0.4, 1.4);\n  --layout-transition-extra-fast: var(--layout-duration-02) var(--layout-timing-ease);\n  --layout-transition-fast: var(--layout-duration-04) var(--layout-timing-ease);\n  --layout-transition-medium: var(--layout-duration-06) var(--layout-timing-ease);\n  --layout-transition-slow: var(--layout-duration-08) var(--layout-timing-ease);\n  --layout-transition-extra-slow: var(--layout-duration-10) var(--layout-timing-ease);\n}\n\n:root {\n  --layout-horizontal-rule-small: 1px solid hsl(var(--theme-primary-020));\n  --layout-horizontal-rule-large: 2px solid hsl(var(--theme-primary-020));\n}\n\n.layout {\n  width: calc(var(--layout-width) * 1%);\n  font-size: calc(var(--layout-size) * 0.01rem);\n  z-index: var(--z-index-layout);\n  display: flex;\n  position: relative;\n}\n\n.is-layout-order-header-bookmark.is-layout-direction-horizontal .layout {\n  flex-direction: row;\n  align-items: center;\n}\n\n.is-layout-order-bookmark-header.is-layout-direction-horizontal .layout {\n  flex-direction: row-reverse;\n  align-items: center;\n}\n\n.is-layout-direction-vertical.is-layout-order-header-bookmark .layout {\n  flex-direction: column;\n}\n\n.is-layout-direction-vertical.is-layout-order-bookmark-header .layout {\n  flex-direction: column-reverse;\n}\n\n.layout-header {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: stretch;\n  z-index: 2;\n}\n\n.layout-bookmark {\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  justify-content: stretch;\n  z-index: 1;\n}\n\n.layout-divider {\n  background-color: rgb(var(--theme-accent));\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  flex-shrink: 0;\n  flex-grow: 0;\n  align-self: stretch;\n  justify-self: stretch;\n}\n\n.is-theme-background-type-accent .layout-divider {\n  background-color: hsl(var(--theme-accent-rgb-text));\n}\n\n.is-layout-direction-horizontal .layout-divider {\n  width: calc(var(--layout-line-width) * var(--theme-layout-divider-size));\n}\n\n.is-layout-direction-vertical .layout-divider {\n  height: calc(var(--layout-line-width) * var(--theme-layout-divider-size));\n}\n\n.is-layout-direction-horizontal.is-bookmark-show .layout-header,\n.is-layout-direction-horizontal.is-header-show .layout-bookmark {\n  flex-grow: 1;\n}\n\n.is-layout-direction-horizontal .layout-header {\n  align-self: stretch;\n  max-height: 100vh;\n  position: sticky;\n  top: 0;\n  left: initial;\n  align-items: center;\n  justify-content: center;\n}\n\n.is-layout-direction-vertical.is-layout-area-header-justify-left .layout-header {\n  align-self: flex-start;\n}\n\n.is-layout-direction-vertical.is-layout-area-header-justify-center .layout-header {\n  align-self: center;\n}\n\n.is-layout-direction-vertical.is-layout-area-header-justify-right .layout-header {\n  align-self: flex-end;\n}\n\n.is-layout-direction-vertical.is-layout-area-bookmark-justify-left .layout-bookmark {\n  align-self: flex-start;\n}\n\n.is-layout-direction-vertical.is-layout-area-bookmark-justify-center .layout-bookmark {\n  align-self: center;\n}\n\n.is-layout-direction-vertical.is-layout-area-bookmark-justify-right .layout-bookmark {\n  align-self: flex-end;\n}\n\n.is-layout-direction-horizontal .layout-header {\n  width: calc(var(--layout-area-header-width) * 1%);\n}\n\n.is-layout-direction-horizontal .layout-bookmark {\n  width: calc(var(--layout-area-bookmark-width) * 1%);\n}\n\n.is-layout-direction-horizontal.is-bookmark-show .layout-header {\n  width: calc((var(--layout-area-header-width) - (var(--layout-area-bookmark-width) / 2)) * 1%);\n}\n\n.is-layout-direction-horizontal.is-header-show .layout-bookmark {\n  width: calc((var(--layout-area-bookmark-width) - (var(--layout-area-header-width) / 2)) * 1%);\n}\n\n.is-layout-direction-vertical .layout-header {\n  width: calc(var(--layout-area-header-width) * 1%);\n}\n\n.is-layout-direction-vertical .layout-bookmark {\n  width: calc(var(--layout-area-bookmark-width) * 1%);\n}\n\n:not(.is-theme-layout-divider-size).is-theme-header-color-by-theme.is-theme-bookmark-color-by-theme.is-bookmark-show.is-layout-direction-vertical.is-layout-order-bookmark-header .layout-header {\n  margin-top: calc((var(--layout-space) * var(--layout-padding)) * -1);\n}\n\n:not(.is-theme-layout-divider-size).is-theme-header-color-by-theme.is-theme-bookmark-color-by-theme.is-bookmark-show.is-layout-direction-vertical.is-layout-order-header-bookmark .layout-header {\n  margin-bottom: calc((var(--layout-space) * var(--layout-padding)) * -1);\n}\n\n:not(.is-theme-layout-divider-size).is-theme-header-color-by-theme.is-theme-bookmark-color-by-theme.is-bookmark-show.is-layout-direction-horizontal.is-layout-order-bookmark-header .layout-header {\n  margin-left: calc((var(--layout-space) * var(--layout-padding)) * -1);\n}\n\n:not(.is-theme-layout-divider-size).is-theme-header-color-by-theme.is-theme-bookmark-color-by-theme.is-bookmark-show.is-layout-direction-horizontal.is-layout-order-header-bookmark .layout-header {\n  margin-right: calc((var(--layout-space) * var(--layout-padding)) * -1);\n}\n\n.is-layout-overscroll body {\n  margin-bottom: 75vh;\n}\n\nhtml.is-layout-scrollbar-auto,\n.is-layout-scrollbar-auto body,\n.is-layout-scrollbar-auto * {\n  scrollbar-width: auto;\n}\n\nhtml.is-layout-scrollbar-thin,\n.is-layout-scrollbar-thin body,\n.is-layout-scrollbar-thin * {\n  scrollbar-width: thin;\n}\n\nhtml.is-layout-scrollbar-none,\n.is-layout-scrollbar-none body,\n.is-layout-scrollbar-none * {\n  scrollbar-width: none;\n}\n\n.is-layout-scrollbar-none ::-webkit-scrollbar {\n  display: none;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 448:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".logo {\n  transform: scale(1) rotate(0deg);\n  transition: transform var(--layout-transition-extra-fast);\n}\n\n.logo:hover {\n  transform: scale(1.2) rotate(180deg);\n}\n\n.logo:active {\n  transform: scale(1.4) rotate(180deg);\n}\n\n.logo,\n.logo-circle,\n.logo-cross-x,\n.logo-cross-y {\n  transform-origin: center;\n}\n\n.logo {\n  animation-name: shrink;\n  animation-duration: 0.4s;\n  animation-timing-function: var(--layout-timing-bounce);\n  animation-iteration-count: 1;\n  animation-delay: 1.2s;\n  animation-fill-mode: backwards;\n}\n\n.logo-circle {\n  animation-name: grow;\n  animation-duration: 0.4s;\n  animation-timing-function: var(--layout-timing-ease);\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n}\n\n.logo-cross-x {\n  animation-name: grow-x, spin;\n  animation-duration: 0.4s, 0.6s;\n  animation-timing-function: var(--layout-timing-bounce), var(--layout-timing-ease);\n  animation-iteration-count: 1, 1;\n  animation-delay: 0.4s, 0.8s;\n  animation-fill-mode: backwards, forwards;\n}\n\n.logo-cross-y {\n  animation-name: grow-y, spin;\n  animation-duration: 0.4s, 0.6s;\n  animation-timing-function: var(--layout-timing-bounce), var(--layout-timing-ease);\n  animation-iteration-count: 1, 1;\n  animation-delay: 0.2s, 0.8s;\n  animation-fill-mode: backwards, forwards;\n}\n\n.logo-circle {\n  fill: hsl(var(--theme-primary-120));\n}\n\n.logo-cross-x,\n.logo-cross-y {\n  fill: hsl(var(--theme-primary-010));\n}\n\n@keyframes grow {\n  0% {\n    transform: scale(0);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes grow-x {\n  0% {\n    transform: scaleX(0);\n  }\n\n  100% {\n    transform: scaleX(1);\n  }\n}\n\n@keyframes grow-y {\n  0% {\n    transform: scaleY(0);\n  }\n\n  100% {\n    transform: scaleY(1);\n  }\n}\n\n@keyframes shrink {\n  0% {\n    transform: scale(1.2);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(-360deg);\n  }\n\n  100% {\n    transform: rotate(0);\n  }\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 229:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --menu-close-size: 12;\n  --menu-close-space: calc((var(--menu-close-size) / 4) * 1em);\n}\n\n@media (min-width: 700px) {\n  :root {\n    --menu-close-size: 14;\n  }\n}\n\n.menu-close {\n  grid-column-start: 3;\n  grid-column-end: 4;\n  grid-row-start: 1;\n  grid-row-end: 2;\n  align-self: start;\n  z-index: 3;\n}\n\n.menu-close-button {\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  border-radius: 0;\n  line-height: 1;\n  position: relative;\n  top: calc((var(--theme-radius) * 0.25) * 0.01em);\n  right: calc((var(--theme-radius) * 0.25) * 0.01em);\n  height: var(--menu-close-space);\n  width: var(--menu-close-space);\n}\n\n@media (min-width: 700px) {\n  .menu-close-button {\n    border-radius: calc(var(--theme-radius) * 0.01em);\n  }\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 1290:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --menu-content-space: 12;\n}\n\n.menu-content {\n  grid-column-start: 1;\n  grid-column-end: 4;\n}\n\n@media (min-width: 700px) {\n  .menu-content {\n    grid-column-start: 2;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 1;\n    overflow-y: auto;\n  }\n}\n\n@media (min-width: 900px) {\n  :root {\n    --menu-content-space: 20;\n  }\n\n  .menu-content {\n    grid-column-start: 2;\n    grid-column-end: 4;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    scroll-behavior: smooth;\n    overflow-y: auto;\n    z-index: 2;\n  }\n}\n\n.menu-content-item {\n  padding-top: calc((var(--menu-content-space) / 4) * 1em);\n  padding-right: calc((var(--menu-content-space) / 4) * 1em);\n  padding-left: calc((var(--menu-content-space) / 4) * 1em);\n  position: relative;\n  z-index: 1;\n}\n\n.menu-content-item:last-child {\n  padding-bottom: calc((var(--menu-content-space) / 4) * 1em);\n}\n\n.menu-content-overscroll .menu-content-item:last-child {\n  padding-bottom: calc((var(--menu-content-space) * 2) * 1em);\n}\n\n.menu-item-header {\n  padding-bottom: calc((var(--menu-content-space) / 8) * 1em);\n}\n\n.menu-item-header-text {\n  margin-bottom: 0;\n}\n\n.menu-item-form {\n  z-index: 1;\n}\n\n.menu-item-form-indent {\n  margin-left: calc((var(--menu-content-space) / 8) * 1em);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9782:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --menu-background: var(--theme-primary-010);\n  --menu-text: var(--theme-primary-text-010);\n  --menu-edge-opacity: 20;\n}\n\n.menu {\n  padding: 1em;\n  position: fixed;\n  top: 0;\n  right: 0;\n  width: 100vw;\n  height: 90vh;\n  opacity: 0;\n  z-index: var(--z-index-menu);\n  pointer-events: none;\n  transition: opacity var(--layout-transition-extra-fast);\n}\n\n@media (min-width: 550px) {\n  .menu {\n    width: 90vw;\n  }\n}\n\n@media (min-width: 700px) {\n  .menu {\n    width: 100%;\n    height: 100%;\n    max-height: initial;\n  }\n}\n\n@media (min-width: 900px) {\n  .menu {\n    width: 90vw;\n  }\n}\n\n@media (min-width: 1100px) {\n  .menu {\n    width: 80vw;\n    max-width: 60em;\n  }\n}\n\n.menu-area {\n  background-color: hsl(var(--menu-background));\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  width: 100%;\n  max-height: 100%;\n  display: grid;\n  grid-template-rows: auto 1fr;\n  grid-template-columns: 1fr auto;\n  justify-items: stretch;\n  align-items: stretch;\n  overflow-y: auto;\n  pointer-events: all;\n  box-shadow: var(--theme-shadow-bottom-large);\n  transition: background-color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n}\n\n.is-edge .menu-area {\n  background-color: hsla(var(--menu-background), calc(var(--menu-edge-opacity) / 100));\n  /* backdrop-filter: blur(0.5em); */\n}\n\n@media (min-width: 700px) {\n  .menu-area {\n    max-height: 100%;\n    grid-template-rows: 1fr;\n    grid-template-columns: 4fr 10fr auto;\n    overflow: hidden;\n    position: relative;\n  }\n}\n\n.menu.is-transparent .menu-area {\n  pointer-events: none;\n}\n\n.menu-list {\n  display: none;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8765:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --menu-nav-space: 12;\n}\n\n.menu-nav {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n@media (min-width: 700px) {\n  .menu-nav {\n    background-color: hsla(var(--theme-primary-020), 0.75);\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 1;\n    grid-row-end: 2;\n    flex-direction: column;\n    align-items: stretch;\n    flex-wrap: nowrap;\n    overflow-y: auto;\n    z-index: 1;\n    transition: background-color var(--layout-transition-extra-fast);\n  }\n\n  .is-edge .menu-nav {\n    background-color: transparent;\n  }\n}\n\n.menu-nav-item {\n  flex-grow: 1;\n  flex-basis: 33.33333333%;\n}\n\n@media (min-width: 700px) {\n  .menu-nav-item {\n    flex-grow: 0;\n    flex-basis: auto;\n    position: relative;\n  }\n\n  .menu-nav-item:before {\n    content: \"\";\n    position: absolute;\n    background-color: transparent;\n    top: 0;\n    left: 0;\n    width: var(--layout-line-width);\n    height: 100%;\n    z-index: 1;\n    transition: background-color var(--layout-transition-extra-fast);\n  }\n\n  .menu-nav-item:hover:before,\n  .menu-nav-item.active:before {\n    background-color: rgb(var(--theme-accent));\n  }\n\n  .is-edge .menu-nav-item:before {\n    background-color: transparent;\n  }\n}\n\n.menu-nav-tab {\n  margin: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  border-radius: 0;\n  height: calc((var(--menu-nav-space) / 4) * 1em);\n  width: 100%;\n  line-height: 1;\n}\n\n.menu-nav-tab:focus,\n.menu-nav-tab:hover {\n  background-color: hsl(var(--theme-primary-020));\n}\n\n.menu-nav-tab:active {\n  background-color: hsl(var(--theme-primary-030));\n}\n\n.menu-nav-tab.active,\n.menu-nav-tab.active:hover,\n.menu-nav-tab.active:active {\n  background-color: rgb(var(--theme-accent));\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.menu-nav-tab:after {\n  border-radius: 0;\n}\n\n.is-edge .menu-nav-tab.active {\n  background-color: transparent;\n  color: hsl(var(--button-text));\n}\n\n@media (min-width: 700px) {\n  .menu-nav-tab {\n    padding-left: calc(((var(--menu-nav-space) / 8) + (var(--theme-radius) * 0.0025)) * 1em);\n    height: calc((var(--menu-nav-space) / 4) * 1em);\n    justify-content: flex-start;\n  }\n}\n\n.menu-subnav {\n  display: none;\n}\n\n@media (min-width: 700px) {\n  .menu-subnav {\n    background-color: hsl(var(--theme-primary-010));\n    display: flex;\n    flex-direction: column;\n    flex-wrap: nowrap;\n    overflow: hidden;\n    height: 0;\n    transition: background-color var(--layout-transition-extra-fast), height var(--layout-transition-extra-fast);\n  }\n\n  .is-edge .menu-subnav {\n    background-color: transparent;\n  }\n\n  .menu-subnav.active {\n    height: var(--menu-subnav-height);\n  }\n}\n\n.menu-nav-area-tab {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  flex-grow: 1;\n}\n\n@media (min-width: 700px) {\n  .menu-nav-sub {\n    background-color: transparent;\n    margin: 0;\n    padding-top: 0;\n    padding-bottom: 0;\n    padding-left: calc(((var(--menu-nav-space) / 4) + (var(--theme-radius) * 0.0025)) * 1em);\n    border-radius: 0;\n    height: calc((var(--menu-nav-space) / 4) * 1em);\n    min-height: 3em;\n    width: 100%;\n    line-height: 1;\n    justify-content: flex-start;\n  }\n\n  .menu-nav-sub:focus,\n  .menu-nav-sub:hover {\n    background-color: hsl(var(--theme-primary-020));\n  }\n\n  .menu-nav-sub:active {\n    background-color: hsl(var(--theme-primary-030));\n  }\n\n  .menu-nav-sub:after,\n  .menu-nav-sub:after {\n    border-radius: 0;\n  }\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4719:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --modal-space: 8;\n  --modal-width: calc(var(--modal-space) * 4);\n}\n\n.modal {\n  background-color: hsl(var(--theme-primary-010));\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  box-shadow: var(--theme-shadow-bottom-large);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  font-size: 1em;\n  max-height: calc(100vh - 2em);\n  width: calc(var(--modal-width) * 1em);\n  max-width: calc(100% - 2em);\n  min-width: 10em;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr auto;\n  transform: translate(-50%, -50%);\n  overflow: hidden;\n  pointer-events: all;\n  opacity: 0;\n  transition: background-color var(--layout-transition-extra-fast), opacity var(--layout-transition-extra-fast);\n  z-index: var(--z-index-modal);\n}\n\n.modal.is-transparent {\n  pointer-events: none;\n}\n\n.modal.modal-max-height {\n  min-height: calc(100vh - 2em);\n}\n\n.modal-content-wrapper {\n  padding: calc((var(--modal-space) / 2) * 0.75em) calc((var(--modal-space) / 2) * 1em);\n  position: relative;\n  overflow-y: auto;\n}\n\n.modal-content {\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr;\n  justify-items: stretch;\n  align-items: stretch;\n  gap: calc((var(--modal-space) / 4) * 1em);\n}\n\n.modal-body {\n  border-radius: calc(var(--theme-radius) * 0.01em) calc(var(--theme-radius) * 0.01em) 0 0;\n  position: relative;\n}\n\n.modal-heading {\n  overflow: hidden;\n}\n\n.modal-heading-text {\n  margin-bottom: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.modal-heading-text:focus {\n  outline: none;\n}\n\n.modal-container {\n  max-width: 100%;\n}\n\n.modal-container:focus {\n  outline: none;\n}\n\n.modal-control {\n  background-color: hsl(var(--theme-primary-010));\n  border-radius: 0 0 calc(var(--theme-radius) * 0.01em) calc(var(--theme-radius) * 0.01em);\n  position: relative;\n  z-index: 2;\n  display: flex;\n  transition: background-color var(--layout-transition-extra-fast);\n}\n\n.modal-control-button {\n  background-color: transparent;\n  margin: 0;\n  border-radius: 0;\n  padding-top: 1.5em;\n  padding-bottom: 1.5em;\n  flex-basis: 50%;\n}\n\n.modal-control .modal-control-button:first-child,\n.modal-control .modal-control-button:first-child:after {\n  border-radius: 0 0 0 calc(var(--theme-radius) * 0.01em);\n}\n\n.modal-control .modal-control-button:last-child,\n.modal-control .modal-control-button:last-child:after {\n  border-radius: 0 0 calc(var(--theme-radius) * 0.01em) 0\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --theme-preset-size: 14;\n}\n\n@media (min-width: 1100px) {\n  :root {\n    --theme-preset-size: 18;\n  }\n}\n\n:root {\n  --theme-preset-columns: 3;\n  --theme-preset-preview-shift: 8;\n  --theme-preset-preview-gap: 8;\n  --theme-preset-preview-circle: 28;\n}\n\n.theme-preset {\n  display: grid;\n  grid-template-columns: repeat(var(--theme-preset-columns), 1fr);\n  grid-auto-rows: calc((var(--theme-preset-size) / 4) * 1em);\n  grid-gap: calc((var(--form-space) / 8) * 1em);\n}\n\n.theme-preset-tile {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: block;\n}\n\n.theme-preset-tile-front,\n.theme-preset-tile-back {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transition: background-color var(--layout-transition-extra-fast), height var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast), border-radius var(--layout-transition-extra-fast);\n}\n\n.theme-preset-tile-front {\n  z-index: 2;\n}\n\n.theme-preset-tile-back {\n  background-color: hsl(var(--button-background));\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  overflow: hidden;\n  z-index: 1;\n}\n\n.theme-preset-button {\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  min-height: initial;\n  line-height: 1.6;\n  display: block;\n  overflow: hidden;\n  transition: background-color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast), height var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast), border-radius var(--layout-transition-extra-fast);\n}\n\n.theme-preset-preview {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: block;\n}\n\n.theme-preset-background-01,\n.theme-preset-background-02,\n.theme-preset-background-03,\n.theme-preset-background-04,\n.theme-preset-accent {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: block;\n  transition: clip-path var(--layout-transition-extra-fast);\n}\n\n.theme-preset-background-01 {\n  background-color: rgb(var(--theme-preset-background-01));\n  z-index: 1;\n}\n\n.theme-preset-background-02 {\n  --theme-preset-preview-shift-02: calc((var(--theme-preset-preview-shift) / 4) + 2);\n  background-color: rgb(var(--theme-preset-background-02));\n  z-index: 2;\n  clip-path: polygon(100% calc(100% - (var(--theme-preset-preview-shift-02) * ((var(--theme-preset-preview-gap) / 4) * 1em))), 100% 100%, calc(100% - (var(--theme-preset-preview-shift-02) * ((var(--theme-preset-preview-gap) / 4) * 1em))) 100%);\n  transition-delay: var(--layout-duration-03);\n}\n\n.theme-preset-background-03 {\n  --theme-preset-preview-shift-03: calc((var(--theme-preset-preview-shift) / 4) + 1);\n  background-color: rgb(var(--theme-preset-background-03));\n  z-index: 3;\n  clip-path: polygon(100% calc(100% - (var(--theme-preset-preview-shift-03) * ((var(--theme-preset-preview-gap) / 4) * 1em))), 100% 100%, calc(100% - (var(--theme-preset-preview-shift-03) * ((var(--theme-preset-preview-gap) / 4) * 1em))) 100%);\n  transition-delay: var(--layout-duration-02);\n}\n\n.theme-preset-background-04 {\n  --theme-preset-preview-shift-04: calc(var(--theme-preset-preview-shift) / 4);\n  background-color: rgb(var(--theme-preset-background-04));\n  z-index: 4;\n  clip-path: polygon(100% calc(100% - (var(--theme-preset-preview-shift-04) * ((var(--theme-preset-preview-gap) / 4) * 1em))), 100% 100%, calc(100% - (var(--theme-preset-preview-shift-04) * ((var(--theme-preset-preview-gap) / 4) * 1em))) 100%);\n  transition-delay: var(--layout-duration-01);\n}\n\n.theme-preset-accent {\n  z-index: 5;\n  background-color: rgb(var(--theme-preset-accent));\n  clip-path: circle(calc(var(--theme-preset-preview-circle) * 1%) at 100% 100%);\n}\n\n.theme-preset-button:focus,\n.theme-preset-button:hover {\n  --theme-preset-preview-shift: 10;\n  --theme-preset-preview-circle: 34;\n}\n\n.theme-preset-name {\n  padding: calc(0.75em + ((var(--theme-radius) / 8) * 0.01em));\n  color: hsl(var(--theme-preset-text));\n  font-style: normal;\n  font-size: 0.75em;\n  text-align: left;\n  display: block;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 6;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: initial;\n  transform: scale(1);\n  transition: color var(--layout-transition-extra-fast), transform var(--layout-transition-extra-fast), max-width var(--layout-transition-extra-fast), max-height var(--layout-transition-extra-fast), top var(--layout-transition-extra-fast), left var(--layout-transition-extra-fast);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9548:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, "*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: sans-serif;\n  line-height: 1.15;\n  -webkit-text-size-adjust: 100%;\n  -ms-overflow-style: scrollbar;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n\narticle, aside, figcaption, figure, footer, header, hgroup, main, nav, section {\n  display: block;\n}\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, Noto Sans, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #212529;\n  text-align: left;\n  background-color: #fff;\n}\n\n[tabindex=\"-1\"]:focus {\n  outline: none !important;\n}\n\nhr {\n  box-sizing: content-box;\n  height: 0;\n  overflow: visible;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  margin-top: 0;\n  margin-bottom: 0.5rem;\n}\n\np {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nabbr[title],\nabbr[data-original-title] {\n  text-decoration: underline;\n  -webkit-text-decoration: underline dotted;\n  text-decoration: underline dotted;\n  cursor: help;\n  border-bottom: 0;\n  text-decoration-skip-ink: none;\n}\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: 700;\n}\n\ndd {\n  margin-bottom: .5rem;\n  margin-left: 0;\n}\n\nblockquote {\n  margin: 0 0 1rem;\n}\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\nsmall {\n  font-size: 80%;\n}\n\nsub,\nsup {\n  position: relative;\n  font-size: 75%;\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -.25em;\n}\n\nsup {\n  top: -.5em;\n}\n\na {\n  color: #007bff;\n  text-decoration: none;\n  background-color: transparent;\n}\n\na:hover {\n  color: #0056b3;\n  text-decoration: underline;\n}\n\na:not([href]):not([tabindex]) {\n  color: inherit;\n  text-decoration: none;\n}\n\na:not([href]):not([tabindex]):hover, a:not([href]):not([tabindex]):focus {\n  color: inherit;\n  text-decoration: none;\n}\n\na:not([href]):not([tabindex]):focus {\n  outline: none;\n}\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n  font-size: 1em;\n}\n\npre {\n  margin-top: 0;\n  margin-bottom: 1rem;\n  overflow: auto;\n  -ms-overflow-style: scrollbar;\n}\n\nfigure {\n  margin: 0 0 1rem;\n}\n\nimg {\n  vertical-align: middle;\n  border-style: none;\n}\n\nsvg {\n  overflow: hidden;\n  vertical-align: middle;\n}\n\ntable {\n  border-collapse: collapse;\n}\n\ncaption {\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  color: #6c757d;\n  text-align: left;\n  caption-side: bottom;\n}\n\nth {\n  text-align: inherit;\n}\n\nlabel {\n  display: inline-block;\n  margin-bottom: 0;\n}\n\nbutton {\n  border-radius: 0;\n}\n\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\nbutton,\ninput {\n  overflow: visible;\n}\n\nbutton,\nselect {\n  text-transform: none;\n}\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  box-sizing: border-box;\n  padding: 0;\n}\n\ninput[type=\"date\"],\ninput[type=\"time\"],\ninput[type=\"datetime-local\"],\ninput[type=\"month\"] {\n  -webkit-appearance: listbox;\n}\n\ntextarea {\n  overflow: auto;\n  resize: vertical;\n}\n\nfieldset {\n  min-width: 0;\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n\nlegend {\n  display: block;\n  width: 100%;\n  max-width: 100%;\n  padding: 0;\n  margin-bottom: .5rem;\n  font-size: 1.5rem;\n  line-height: inherit;\n  color: inherit;\n  white-space: normal;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type=\"search\"] {\n  outline-offset: -2px;\n  -webkit-appearance: none;\n}\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n  font: inherit;\n  -webkit-appearance: button;\n}\n\noutput {\n  display: inline-block;\n}\n\nsummary {\n  display: list-item;\n  cursor: pointer;\n}\n\ntemplate {\n  display: none;\n}\n\n[hidden] {\n  display: none !important;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 5069:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".search {\n  font-size: 1em;\n  position: relative;\n}\n\n.search input[type=\"search\"] {\n  background-color: hsla(var(--button-background), calc(var(--theme-header-search-opacity) / 100));\n}\n\n.is-header-search-text-justify-left .search input[type=\"search\"] {\n  text-align: left;\n}\n\n.is-header-search-text-justify-center .search input[type=\"search\"] {\n  text-align: center;\n}\n\n.is-header-search-text-justify-right .search input[type=\"search\"] {\n  text-align: right;\n}\n\ninput[type=\"search\"]:hover {\n  background-color: hsla(var(--form-input-background-hover), calc(var(--theme-header-search-opacity) / 100));\n}\n\ninput[type=\"search\"]:focus,\ninput[type=\"search\"]:active {\n  background-color: hsla(var(--form-input-background-focus-active), calc(var(--theme-header-search-opacity) / 100));\n}\n\ninput[type=\"search\"]:disabled {\n  background-color: hsla(var(--form-input-background-disabled), calc(var(--theme-header-search-opacity) / 100));\n}\n\n.search-clear {\n  position: absolute;\n  top: 50%;\n  right: 0;\n  opacity: 0;\n  pointer-events: none;\n  transform: translate(0, -50%);\n  transition: opacity var(--layout-transition-extra-fast);\n}\n\n.is-search .search-clear {\n  opacity: 1;\n  pointer-events: all;\n}\n\n.is-search .search-input {\n  padding-right: 4em;\n}\n\n.is-header-search-opacity-low .search {\n  --form-placeholder: var(--theme-primary-text-010);\n  --form-placeholder-focus-hover: var(--theme-primary-text-010);\n  --form-placeholder-disabled: var(--theme-primary-text-010);\n}\n\n.is-header-search-opacity-low.is-theme-background-type-accent .search {\n  --form-placeholder: var(--theme-accent-rgb-text);\n  --form-placeholder-focus-hover: var(--theme-accent-rgb-text);\n  --form-placeholder-disabled: var(--theme-accent-rgb-text);\n}\n\n.is-header-search-opacity-low.is-theme-background-type-color .search {\n  --form-placeholder: var(--theme-background-color-rgb-text);\n  --form-placeholder-focus-hover: var(--theme-background-color-rgb-text);\n  --form-placeholder-disabled: var(--theme-background-color-rgb-text);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8485:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".search-empty {\n  background-color: hsla(var(--theme-primary-040), 0.2);\n  padding: 2em 3em;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  height: inherit;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 1em;\n}\n\n.search-empty-string {\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.search-empty-string:not(:last-child) {\n  margin-bottom: 0;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9888:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".shade {\n  background-color: rgba(var(--theme-accent), calc(var(--theme-shade-opacity) / 100));\n  position: fixed;\n  top: -1em;\n  left: -1em;\n  width: calc(100vw + 2em);\n  height: calc(100vh + 2em);\n  opacity: 0;\n  z-index: var(--z-index-shade);\n  pointer-events: all;\n  backdrop-filter: blur(calc(var(--theme-shade-blur) * 1px));\n  transition: background-color var(--layout-transition-extra-fast), opacity var(--layout-transition-extra-fast), backdrop-filter var(--layout-transition-extra-fast);\n}\n\n.shade.is-transparent {\n  pointer-events: none;\n}\n\n.is-edge .shade {\n  background-color: rgba(var(--theme-accent), calc(var(--theme-shade-opacity) / 500));\n  backdrop-filter: blur(0);\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 9531:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".suggest {\n  position: relative;\n  z-index: 1;\n  font-size: 1em;\n}\n\n.suggest {\n  background-color: hsl(var(--theme-primary-020));\n  margin-top: 0.5em;\n  padding: 1em;\n  position: absolute;\n  top: calc(var(--suggest-top) * 1px);\n  left: calc(var(--suggest-left) * 1px);\n  width: calc(var(--suggest-width) * 1px);\n  max-height: 40vh;\n  border-radius: calc(var(--theme-radius) * 0.01em);\n  overflow-y: auto;\n  z-index: var(--z-index-suggest);\n  box-shadow: var(--theme-shadow-bottom-large);\n  opacity: 0;\n  transition: opacity var(--layout-transition-extra-fast);\n}\n\n.suggest-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(6em, 1fr));\n  grid-gap: calc((var(--form-space) / 8) * 1em);\n}\n\n.suggest-item {\n  padding: 0.5em;\n  width: 100%;\n  height: 100%;\n  min-height: 6em;\n  display: flex;\n  position: relative;\n  white-space: inherit;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  transition: background-color var(--layout-transition-extra-fast), color var(--layout-transition-extra-fast), border-color var(--layout-transition-extra-fast), box-shadow var(--layout-transition-extra-fast);\n}\n\n.suggest-icon {\n  font-size: 2em;\n}\n\n.suggest-icon-text {\n  margin-top: 1em;\n  font-size: 0.6em;\n  text-align: center;\n  line-height: 1.6;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 4088:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --tab-space: calc((var(--form-space) / 4) * 1em);\n}\n\n.tab {\n  display: grid;\n  grid-template-rows: auto auto;\n  grid-template-areas:\n    \"nav\"\n    \"content\";\n  gap: var(--tab-space);\n  width: 100%;\n}\n\n.tab-nav {\n  grid-area: nav;\n  display: flex;\n}\n\n.tab-nav>* {\n  flex: 1 1 50%;\n}\n\n.tab-content {\n  grid-area: content;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 8776:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  /* calculates perceived lightness using the sRGB Luma method */\n  --theme-t: 0.55;\n  --theme-t-r: 0.2721;\n  --theme-t-g: 0.7152;\n  --theme-t-b: 0.1255;\n}\n\n:root {\n  --theme-accent: var(--theme-accent-rgb-r), var(--theme-accent-rgb-g), var(--theme-accent-rgb-b);\n  --theme-accent-rgb-text: 0, 0%, calc(((((var(--theme-accent-rgb-r) * var(--theme-t-r)) + (var(--theme-accent-rgb-g) * var(--theme-t-g)) + (var(--theme-accent-rgb-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n}\n\n:root {\n  --theme-font-display-name: \"Fjalla One\", sans-serif;\n  --theme-font-display-weight: 400;\n  --theme-font-display-style: \"normal\";\n  --theme-font-ui-name: \"Open Sans\", sans-serif;\n  --theme-font-ui-weight: 400;\n  --theme-font-ui-style: \"normal\";\n}\n\n:root {\n  --theme-background-accent: var(--theme-accent);\n}\n\n:root {\n  --theme-background-theme: var(--theme-primary-010);\n}\n\n:root {\n  --theme-background-gradient-start: var(--theme-background-gradient-start-rgb-r), var(--theme-background-gradient-start-rgb-g), var(--theme-background-gradient-start-rgb-b);\n  --theme-background-gradient-end: var(--theme-background-gradient-end-rgb-r), var(--theme-background-gradient-end-rgb-g), var(--theme-background-gradient-end-rgb-b);\n}\n\n:root {\n  --theme-background-color: var(--theme-background-color-rgb-r), var(--theme-background-color-rgb-g), var(--theme-background-color-rgb-b);\n  --theme-background-color-rgb-text: 0, 0%, calc(((((var(--theme-background-color-rgb-r) * var(--theme-t-r)) + (var(--theme-background-color-rgb-g) * var(--theme-t-g)) + (var(--theme-background-color-rgb-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n}\n\n.is-theme-style-light {\n  --theme-primary-010: var(--theme-primary-14);\n  --theme-primary-020: var(--theme-primary-13);\n  --theme-primary-030: var(--theme-primary-12);\n  --theme-primary-040: var(--theme-primary-11);\n  --theme-primary-050: var(--theme-primary-10);\n  --theme-primary-060: var(--theme-primary-9);\n  --theme-primary-070: var(--theme-primary-8);\n  --theme-primary-080: var(--theme-primary-7);\n  --theme-primary-090: var(--theme-primary-6);\n  --theme-primary-100: var(--theme-primary-5);\n  --theme-primary-110: var(--theme-primary-4);\n  --theme-primary-120: var(--theme-primary-3);\n  --theme-primary-130: var(--theme-primary-2);\n  --theme-primary-140: var(--theme-primary-1);\n}\n\n.is-theme-style-dark {\n  --theme-primary-010: var(--theme-primary-1);\n  --theme-primary-020: var(--theme-primary-2);\n  --theme-primary-030: var(--theme-primary-3);\n  --theme-primary-040: var(--theme-primary-4);\n  --theme-primary-050: var(--theme-primary-5);\n  --theme-primary-060: var(--theme-primary-6);\n  --theme-primary-070: var(--theme-primary-7);\n  --theme-primary-080: var(--theme-primary-8);\n  --theme-primary-090: var(--theme-primary-9);\n  --theme-primary-100: var(--theme-primary-10);\n  --theme-primary-110: var(--theme-primary-11);\n  --theme-primary-120: var(--theme-primary-12);\n  --theme-primary-130: var(--theme-primary-13);\n  --theme-primary-140: var(--theme-primary-14);\n}\n\n.is-theme-style-light {\n  --theme-primary-text-010: 0, 0%, calc(((((var(--theme-primary-14-r) * var(--theme-t-r)) + (var(--theme-primary-14-g) * var(--theme-t-g)) + (var(--theme-primary-14-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-020: 0, 0%, calc(((((var(--theme-primary-13-r) * var(--theme-t-r)) + (var(--theme-primary-13-g) * var(--theme-t-g)) + (var(--theme-primary-13-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-030: 0, 0%, calc(((((var(--theme-primary-12-r) * var(--theme-t-r)) + (var(--theme-primary-12-g) * var(--theme-t-g)) + (var(--theme-primary-12-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-040: 0, 0%, calc(((((var(--theme-primary-11-r) * var(--theme-t-r)) + (var(--theme-primary-11-g) * var(--theme-t-g)) + (var(--theme-primary-11-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-050: 0, 0%, calc(((((var(--theme-primary-10-r) * var(--theme-t-r)) + (var(--theme-primary-10-g) * var(--theme-t-g)) + (var(--theme-primary-10-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-060: 0, 0%, calc(((((var(--theme-primary-9-r) * var(--theme-t-r)) + (var(--theme-primary-9-g) * var(--theme-t-g)) + (var(--theme-primary-9-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-070: 0, 0%, calc(((((var(--theme-primary-8-r) * var(--theme-t-r)) + (var(--theme-primary-8-g) * var(--theme-t-g)) + (var(--theme-primary-8-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-080: 0, 0%, calc(((((var(--theme-primary-7-r) * var(--theme-t-r)) + (var(--theme-primary-7-g) * var(--theme-t-g)) + (var(--theme-primary-7-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-090: 0, 0%, calc(((((var(--theme-primary-6-r) * var(--theme-t-r)) + (var(--theme-primary-6-g) * var(--theme-t-g)) + (var(--theme-primary-6-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-100: 0, 0%, calc(((((var(--theme-primary-5-r) * var(--theme-t-r)) + (var(--theme-primary-5-g) * var(--theme-t-g)) + (var(--theme-primary-5-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-110: 0, 0%, calc(((((var(--theme-primary-4-r) * var(--theme-t-r)) + (var(--theme-primary-4-g) * var(--theme-t-g)) + (var(--theme-primary-4-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-120: 0, 0%, calc(((((var(--theme-primary-3-r) * var(--theme-t-r)) + (var(--theme-primary-3-g) * var(--theme-t-g)) + (var(--theme-primary-3-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-130: 0, 0%, calc(((((var(--theme-primary-2-r) * var(--theme-t-r)) + (var(--theme-primary-2-g) * var(--theme-t-g)) + (var(--theme-primary-2-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-140: 0, 0%, calc(((((var(--theme-primary-1-r) * var(--theme-t-r)) + (var(--theme-primary-1-g) * var(--theme-t-g)) + (var(--theme-primary-1-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n}\n\n.is-theme-style-dark {\n  --theme-primary-text-010: 0, 0%, calc(((((var(--theme-primary-1-r) * var(--theme-t-r)) + (var(--theme-primary-1-g) * var(--theme-t-g)) + (var(--theme-primary-1-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-020: 0, 0%, calc(((((var(--theme-primary-2-r) * var(--theme-t-r)) + (var(--theme-primary-2-g) * var(--theme-t-g)) + (var(--theme-primary-2-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-030: 0, 0%, calc(((((var(--theme-primary-3-r) * var(--theme-t-r)) + (var(--theme-primary-3-g) * var(--theme-t-g)) + (var(--theme-primary-3-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-040: 0, 0%, calc(((((var(--theme-primary-4-r) * var(--theme-t-r)) + (var(--theme-primary-4-g) * var(--theme-t-g)) + (var(--theme-primary-4-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-050: 0, 0%, calc(((((var(--theme-primary-5-r) * var(--theme-t-r)) + (var(--theme-primary-5-g) * var(--theme-t-g)) + (var(--theme-primary-5-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-060: 0, 0%, calc(((((var(--theme-primary-6-r) * var(--theme-t-r)) + (var(--theme-primary-6-g) * var(--theme-t-g)) + (var(--theme-primary-6-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-070: 0, 0%, calc(((((var(--theme-primary-7-r) * var(--theme-t-r)) + (var(--theme-primary-7-g) * var(--theme-t-g)) + (var(--theme-primary-7-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-080: 0, 0%, calc(((((var(--theme-primary-8-r) * var(--theme-t-r)) + (var(--theme-primary-8-g) * var(--theme-t-g)) + (var(--theme-primary-8-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-090: 0, 0%, calc(((((var(--theme-primary-9-r) * var(--theme-t-r)) + (var(--theme-primary-9-g) * var(--theme-t-g)) + (var(--theme-primary-9-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-100: 0, 0%, calc(((((var(--theme-primary-10-r) * var(--theme-t-r)) + (var(--theme-primary-10-g) * var(--theme-t-g)) + (var(--theme-primary-10-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-110: 0, 0%, calc(((((var(--theme-primary-11-r) * var(--theme-t-r)) + (var(--theme-primary-11-g) * var(--theme-t-g)) + (var(--theme-primary-11-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-120: 0, 0%, calc(((((var(--theme-primary-12-r) * var(--theme-t-r)) + (var(--theme-primary-12-g) * var(--theme-t-g)) + (var(--theme-primary-12-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-130: 0, 0%, calc(((((var(--theme-primary-13-r) * var(--theme-t-r)) + (var(--theme-primary-13-g) * var(--theme-t-g)) + (var(--theme-primary-13-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  --theme-primary-text-140: 0, 0%, calc(((((var(--theme-primary-14-r) * var(--theme-t-r)) + (var(--theme-primary-14-g) * var(--theme-t-g)) + (var(--theme-primary-14-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n}\n\n@media (prefers-color-scheme: light) {\n  .is-theme-style-system {\n    --theme-primary-010: var(--theme-primary-14);\n    --theme-primary-020: var(--theme-primary-13);\n    --theme-primary-030: var(--theme-primary-12);\n    --theme-primary-040: var(--theme-primary-11);\n    --theme-primary-050: var(--theme-primary-10);\n    --theme-primary-060: var(--theme-primary-9);\n    --theme-primary-070: var(--theme-primary-8);\n    --theme-primary-080: var(--theme-primary-7);\n    --theme-primary-090: var(--theme-primary-6);\n    --theme-primary-100: var(--theme-primary-5);\n    --theme-primary-110: var(--theme-primary-4);\n    --theme-primary-120: var(--theme-primary-3);\n    --theme-primary-130: var(--theme-primary-2);\n    --theme-primary-140: var(--theme-primary-1);\n  }\n\n  .is-theme-style-system {\n    --theme-primary-text-010: 0, 0%, calc(((((var(--theme-primary-14-r) * var(--theme-t-r)) + (var(--theme-primary-14-g) * var(--theme-t-g)) + (var(--theme-primary-14-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-020: 0, 0%, calc(((((var(--theme-primary-13-r) * var(--theme-t-r)) + (var(--theme-primary-13-g) * var(--theme-t-g)) + (var(--theme-primary-13-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-030: 0, 0%, calc(((((var(--theme-primary-12-r) * var(--theme-t-r)) + (var(--theme-primary-12-g) * var(--theme-t-g)) + (var(--theme-primary-12-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-040: 0, 0%, calc(((((var(--theme-primary-11-r) * var(--theme-t-r)) + (var(--theme-primary-11-g) * var(--theme-t-g)) + (var(--theme-primary-11-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-050: 0, 0%, calc(((((var(--theme-primary-10-r) * var(--theme-t-r)) + (var(--theme-primary-10-g) * var(--theme-t-g)) + (var(--theme-primary-10-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-060: 0, 0%, calc(((((var(--theme-primary-9-r) * var(--theme-t-r)) + (var(--theme-primary-9-g) * var(--theme-t-g)) + (var(--theme-primary-9-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-070: 0, 0%, calc(((((var(--theme-primary-8-r) * var(--theme-t-r)) + (var(--theme-primary-8-g) * var(--theme-t-g)) + (var(--theme-primary-8-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-080: 0, 0%, calc(((((var(--theme-primary-7-r) * var(--theme-t-r)) + (var(--theme-primary-7-g) * var(--theme-t-g)) + (var(--theme-primary-7-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-090: 0, 0%, calc(((((var(--theme-primary-6-r) * var(--theme-t-r)) + (var(--theme-primary-6-g) * var(--theme-t-g)) + (var(--theme-primary-6-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-100: 0, 0%, calc(((((var(--theme-primary-5-r) * var(--theme-t-r)) + (var(--theme-primary-5-g) * var(--theme-t-g)) + (var(--theme-primary-5-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-110: 0, 0%, calc(((((var(--theme-primary-4-r) * var(--theme-t-r)) + (var(--theme-primary-4-g) * var(--theme-t-g)) + (var(--theme-primary-4-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-120: 0, 0%, calc(((((var(--theme-primary-3-r) * var(--theme-t-r)) + (var(--theme-primary-3-g) * var(--theme-t-g)) + (var(--theme-primary-3-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-130: 0, 0%, calc(((((var(--theme-primary-2-r) * var(--theme-t-r)) + (var(--theme-primary-2-g) * var(--theme-t-g)) + (var(--theme-primary-2-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-140: 0, 0%, calc(((((var(--theme-primary-1-r) * var(--theme-t-r)) + (var(--theme-primary-1-g) * var(--theme-t-g)) + (var(--theme-primary-1-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  }\n}\n\n@media (prefers-color-scheme: dark) {\n  .is-theme-style-system {\n    --theme-primary-010: var(--theme-primary-1);\n    --theme-primary-020: var(--theme-primary-2);\n    --theme-primary-030: var(--theme-primary-3);\n    --theme-primary-040: var(--theme-primary-4);\n    --theme-primary-050: var(--theme-primary-5);\n    --theme-primary-060: var(--theme-primary-6);\n    --theme-primary-070: var(--theme-primary-7);\n    --theme-primary-080: var(--theme-primary-8);\n    --theme-primary-090: var(--theme-primary-9);\n    --theme-primary-100: var(--theme-primary-10);\n    --theme-primary-110: var(--theme-primary-11);\n    --theme-primary-120: var(--theme-primary-12);\n    --theme-primary-130: var(--theme-primary-13);\n    --theme-primary-140: var(--theme-primary-14);\n  }\n\n  .is-theme-style-system {\n    --theme-primary-text-010: 0, 0%, calc(((((var(--theme-primary-1-r) * var(--theme-t-r)) + (var(--theme-primary-1-g) * var(--theme-t-g)) + (var(--theme-primary-1-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-020: 0, 0%, calc(((((var(--theme-primary-2-r) * var(--theme-t-r)) + (var(--theme-primary-2-g) * var(--theme-t-g)) + (var(--theme-primary-2-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-030: 0, 0%, calc(((((var(--theme-primary-3-r) * var(--theme-t-r)) + (var(--theme-primary-3-g) * var(--theme-t-g)) + (var(--theme-primary-3-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-040: 0, 0%, calc(((((var(--theme-primary-4-r) * var(--theme-t-r)) + (var(--theme-primary-4-g) * var(--theme-t-g)) + (var(--theme-primary-4-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-050: 0, 0%, calc(((((var(--theme-primary-5-r) * var(--theme-t-r)) + (var(--theme-primary-5-g) * var(--theme-t-g)) + (var(--theme-primary-5-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-060: 0, 0%, calc(((((var(--theme-primary-6-r) * var(--theme-t-r)) + (var(--theme-primary-6-g) * var(--theme-t-g)) + (var(--theme-primary-6-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-070: 0, 0%, calc(((((var(--theme-primary-7-r) * var(--theme-t-r)) + (var(--theme-primary-7-g) * var(--theme-t-g)) + (var(--theme-primary-7-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-080: 0, 0%, calc(((((var(--theme-primary-8-r) * var(--theme-t-r)) + (var(--theme-primary-8-g) * var(--theme-t-g)) + (var(--theme-primary-8-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-090: 0, 0%, calc(((((var(--theme-primary-9-r) * var(--theme-t-r)) + (var(--theme-primary-9-g) * var(--theme-t-g)) + (var(--theme-primary-9-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-100: 0, 0%, calc(((((var(--theme-primary-10-r) * var(--theme-t-r)) + (var(--theme-primary-10-g) * var(--theme-t-g)) + (var(--theme-primary-10-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-110: 0, 0%, calc(((((var(--theme-primary-11-r) * var(--theme-t-r)) + (var(--theme-primary-11-g) * var(--theme-t-g)) + (var(--theme-primary-11-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-120: 0, 0%, calc(((((var(--theme-primary-12-r) * var(--theme-t-r)) + (var(--theme-primary-12-g) * var(--theme-t-g)) + (var(--theme-primary-12-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-130: 0, 0%, calc(((((var(--theme-primary-13-r) * var(--theme-t-r)) + (var(--theme-primary-13-g) * var(--theme-t-g)) + (var(--theme-primary-13-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n    --theme-primary-text-140: 0, 0%, calc(((((var(--theme-primary-14-r) * var(--theme-t-r)) + (var(--theme-primary-14-g) * var(--theme-t-g)) + (var(--theme-primary-14-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%);\n  }\n}\n\n:root {\n  --theme-shadow: 1;\n  --theme-shadow-size-small: calc(calc(var(--theme-shadow) / 100) * 1);\n  --theme-shadow-size-medium: calc(calc(var(--theme-shadow) / 100) * 2);\n  --theme-shadow-size-large: calc(calc(var(--theme-shadow) / 100) * 3);\n  --theme-shadow-offset-base: 20;\n  --theme-shadow-offset-y: calc(calc(var(--theme-shadow-offset-base) / 1000) * 1em);\n  --theme-shadow-blur-base: 30;\n  --theme-shadow-blur: calc(calc(var(--theme-shadow-blur-base) / 1000) * 1em);\n  --theme-shadow-opacity-base: 20;\n  --theme-shadow-opacity: calc(var(--theme-shadow-opacity-base) / 1000);\n  --theme-shadow-bottom-small:\n    0 calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-offset-y) * 2)) calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-blur) * 4)) rgba(0, 0, 0, calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-opacity) * 1))),\n    0 calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-offset-y) * 4)) calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-blur) * 8)) rgba(0, 0, 0, calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-opacity) * 2))),\n    0 calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-offset-y) * 8)) calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-blur) * 16)) rgba(0, 0, 0, calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-opacity) * 3))),\n    0 calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-offset-y) * 16)) calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-blur) * 32)) rgba(0, 0, 0, calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-opacity) * 4)));\n  --theme-shadow-bottom-medium:\n    0 calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-offset-y) * 2)) calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-blur) * 4)) rgba(0, 0, 0, calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-opacity) * 1))),\n    0 calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-offset-y) * 4)) calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-blur) * 8)) rgba(0, 0, 0, calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-opacity) * 2))),\n    0 calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-offset-y) * 8)) calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-blur) * 16)) rgba(0, 0, 0, calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-opacity) * 3))),\n    0 calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-offset-y) * 16)) calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-blur) * 32)) rgba(0, 0, 0, calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-opacity) * 4)));\n  --theme-shadow-bottom-large:\n    0 calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-offset-y) * 2)) calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-blur) * 4)) rgba(0, 0, 0, calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-opacity) * 1))),\n    0 calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-offset-y) * 4)) calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-blur) * 8)) rgba(0, 0, 0, calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-opacity) * 2))),\n    0 calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-offset-y) * 8)) calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-blur) * 16)) rgba(0, 0, 0, calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-opacity) * 3))),\n    0 calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-offset-y) * 16)) calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-blur) * 32)) rgba(0, 0, 0, calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-opacity) * 4)));\n  --theme-shadow-top-small:\n    0 calc(var(--theme-shadow-size-small) * calc(calc(var(--theme-shadow-offset-y) * -1) * 2)) calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-blur) * 4)) rgba(0, 0, 0, calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-opacity) * 1))),\n    0 calc(var(--theme-shadow-size-small) * calc(calc(var(--theme-shadow-offset-y) * -1) * 4)) calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-blur) * 8)) rgba(0, 0, 0, calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-opacity) * 2))),\n    0 calc(var(--theme-shadow-size-small) * calc(calc(var(--theme-shadow-offset-y) * -1) * 8)) calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-blur) * 16)) rgba(0, 0, 0, calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-opacity) * 3))),\n    0 calc(var(--theme-shadow-size-small) * calc(calc(var(--theme-shadow-offset-y) * -1) * 16)) calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-blur) * 32)) rgba(0, 0, 0, calc(var(--theme-shadow-size-small) * calc(var(--theme-shadow-opacity) * 4)));\n  --theme-shadow-top-medium:\n    0 calc(var(--theme-shadow-size-medium) * calc(calc(var(--theme-shadow-offset-y) * -1) * 2)) calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-blur) * 4)) rgba(0, 0, 0, calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-opacity) * 1))),\n    0 calc(var(--theme-shadow-size-medium) * calc(calc(var(--theme-shadow-offset-y) * -1) * 4)) calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-blur) * 8)) rgba(0, 0, 0, calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-opacity) * 2))),\n    0 calc(var(--theme-shadow-size-medium) * calc(calc(var(--theme-shadow-offset-y) * -1) * 8)) calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-blur) * 16)) rgba(0, 0, 0, calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-opacity) * 3))),\n    0 calc(var(--theme-shadow-size-medium) * calc(calc(var(--theme-shadow-offset-y) * -1) * 16)) calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-blur) * 32)) rgba(0, 0, 0, calc(var(--theme-shadow-size-medium) * calc(var(--theme-shadow-opacity) * 4)));\n  --theme-shadow-top-large:\n    0 calc(var(--theme-shadow-size-large) * calc(calc(var(--theme-shadow-offset-y) * -1) * 2)) calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-blur) * 4)) rgba(0, 0, 0, calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-opacity) * 1))),\n    0 calc(var(--theme-shadow-size-large) * calc(calc(var(--theme-shadow-offset-y) * -1) * 4)) calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-blur) * 8)) rgba(0, 0, 0, calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-opacity) * 2))),\n    0 calc(var(--theme-shadow-size-large) * calc(calc(var(--theme-shadow-offset-y) * -1) * 8)) calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-blur) * 16)) rgba(0, 0, 0, calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-opacity) * 3))),\n    0 calc(var(--theme-shadow-size-large) * calc(calc(var(--theme-shadow-offset-y) * -1) * 16)) calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-blur) * 32)) rgba(0, 0, 0, calc(var(--theme-shadow-size-large) * calc(var(--theme-shadow-opacity) * 4)));\n}\n\n.theme-color-box {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.theme-color-shade-01 {\n  background-color: hsl(var(--theme-primary-010));\n  color: hsl(var(--theme-primary-text-010));\n}\n\n.theme-color-shade-02 {\n  background-color: hsl(var(--theme-primary-020));\n  color: hsl(var(--theme-primary-text-020));\n}\n\n.theme-color-shade-03 {\n  background-color: hsl(var(--theme-primary-030));\n  color: hsl(var(--theme-primary-text-030));\n}\n\n.theme-color-shade-04 {\n  background-color: hsl(var(--theme-primary-040));\n  color: hsl(var(--theme-primary-text-040));\n}\n\n.theme-color-shade-05 {\n  background-color: hsl(var(--theme-primary-050));\n  color: hsl(var(--theme-primary-text-050));\n}\n\n.theme-color-shade-06 {\n  background-color: hsl(var(--theme-primary-060));\n  color: hsl(var(--theme-primary-text-060));\n}\n\n.theme-color-shade-07 {\n  background-color: hsl(var(--theme-primary-070));\n  color: hsl(var(--theme-primary-text-070));\n}\n\n.theme-color-shade-08 {\n  background-color: hsl(var(--theme-primary-080));\n  color: hsl(var(--theme-primary-text-080));\n}\n\n.theme-color-shade-09 {\n  background-color: hsl(var(--theme-primary-090));\n  color: hsl(var(--theme-primary-text-090));\n}\n\n.theme-color-shade-10 {\n  background-color: hsl(var(--theme-primary-100));\n  color: hsl(var(--theme-primary-text-100));\n}\n\n.theme-color-shade-11 {\n  background-color: hsl(var(--theme-primary-110));\n  color: hsl(var(--theme-primary-text-110));\n}\n\n.theme-color-shade-12 {\n  background-color: hsl(var(--theme-primary-120));\n  color: hsl(var(--theme-primary-text-120));\n}\n\n.theme-color-shade-13 {\n  background-color: hsl(var(--theme-primary-130));\n  color: hsl(var(--theme-primary-text-130));\n}\n\n.theme-color-shade-14 {\n  background-color: hsl(var(--theme-primary-140));\n  color: hsl(var(--theme-primary-text-140));\n}\n\n.background {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  pointer-events: none;\n  z-index: var(--z-index-background);\n}\n\n.theme-background-type {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  display: block;\n  opacity: 0;\n  transition: background-color var(--layout-transition-extra-fast), opacity var(--layout-transition-medium);\n}\n\n.theme-background-type-theme {\n  background-color: hsl(var(--theme-background-theme));\n}\n\n.theme-background-type-accent {\n  background-color: rgb(var(--theme-background-accent));\n}\n\n.theme-background-type-color {\n  background-color: rgb(var(--theme-background-color));\n}\n\n.theme-background-type-gradient {\n  background-image: linear-gradient(calc(var(--theme-background-gradient-angle) * 1deg), rgb(var(--theme-background-gradient-start)), rgb(var(--theme-background-gradient-end)));\n}\n\n.theme-background-type-image-wrap {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  opacity: calc(var(--theme-background-image-opacity) / 100);\n  background-image: var(--theme-background-image);\n  background-attachment: fixed;\n  background-size: cover;\n  background-position: center;\n  transform: scale(calc(calc(var(--theme-background-image-scale) / 100) + calc(var(--theme-background-image-blur) / 400)));\n  filter: blur(calc(var(--theme-background-image-blur) * 1px)) grayscale(calc(var(--theme-background-image-grayscale) / 100));\n}\n\n.theme-background-type-image-accent {\n  background-color: rgba(var(--theme-accent), calc(var(--theme-background-image-accent) / 100));\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n}\n\n.theme-background-type-image-vignette {\n  position: absolute;\n  top: -1em;\n  left: -1em;\n  width: calc(100vw + 2em);\n  height: calc(100vh + 2em);\n  pointer-events: none;\n  background-image: radial-gradient(circle,\n      transparent calc(var(--theme-background-image-vignette-end) * 1%),\n      rgba(0, 0, 0, calc(var(--theme-background-image-vignette-opacity) / 100)) calc(var(--theme-background-image-vignette-start) * 1%));\n  z-index: 3;\n}\n\n.theme-background-type-video-wrap {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n  opacity: calc(var(--theme-background-video-opacity) / 100);\n  filter: blur(calc(var(--theme-background-video-blur) * 1px)) grayscale(calc(var(--theme-background-video-grayscale) / 100));\n  transform: scale(calc(var(--theme-background-video-scale) / 100));\n}\n\n.theme-background-type-video-accent {\n  background-color: rgba(var(--theme-accent), calc(var(--theme-background-video-accent) / 100));\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 2;\n}\n\n.theme-background-type-video-vignette {\n  position: absolute;\n  top: -1em;\n  left: -1em;\n  width: calc(100vw + 2em);\n  height: calc(100vh + 2em);\n  pointer-events: none;\n  background-image: radial-gradient(circle,\n      transparent calc(var(--theme-background-video-vignette-end) * 1%),\n      rgba(0, 0, 0, calc(var(--theme-background-video-vignette-opacity) * 1%)) calc(var(--theme-background-video-vignette-start) * 1%));\n  z-index: 3;\n}\n\n.theme-background-type-video video {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  pointer-events: none;\n}\n\n.is-theme-background-type-theme .theme-background-type-theme,\n.is-theme-background-type-accent .theme-background-type-accent,\n.is-theme-background-type-color .theme-background-type-color,\n.is-theme-background-type-gradient .theme-background-type-gradient,\n.is-theme-background-type-image .theme-background-type-image,\n.is-theme-background-type-video .theme-background-type-video {\n  opacity: 1;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 7037:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --toolbar-position-offset: 1em;\n}\n\n.toolbar {\n  display: flex;\n  z-index: var(--z-index-toolbar);\n}\n\n.is-toolbar-location-corner .toolbar {\n  position: fixed;\n}\n\n.is-toolbar-location-corner.is-toolbar-position-top-left .toolbar {\n  top: var(--toolbar-position-offset);\n  left: var(--toolbar-position-offset);\n}\n\n.is-toolbar-location-corner.is-toolbar-position-top-right .toolbar {\n  top: var(--toolbar-position-offset);\n  right: var(--toolbar-position-offset);\n}\n\n.is-toolbar-location-corner.is-toolbar-position-bottom-left .toolbar {\n  bottom: var(--toolbar-position-offset);\n  left: var(--toolbar-position-offset);\n}\n\n.is-toolbar-location-corner.is-toolbar-position-bottom-right .toolbar {\n  bottom: var(--toolbar-position-offset);\n  right: var(--toolbar-position-offset);\n}\n\n.toolbar-control {\n  font-size: calc(var(--toolbar-size) * 0.01em);\n  display: flex;\n  transition: opacity var(--layout-transition-extra-fast);\n}\n\n.is-toolbar-location-header.is-header-item-justify-left .toolbar {\n  justify-content: flex-start;\n}\n\n.is-toolbar-location-header.is-header-item-justify-center .toolbar {\n  justify-content: center;\n}\n\n.is-toolbar-location-header.is-header-item-justify-right .toolbar {\n  justify-content: flex-end;\n}\n\n.is-toolbar-opacity-low .toolbar {\n  --button-text: var(--theme-primary-text-010);\n  --button-text-focus-hover: var(--theme-primary-text-010);\n  --button-text-active: var(--theme-primary-text-010);\n  --button-text-disabled: var(--theme-primary-010);\n}\n\n.is-toolbar-opacity-low .toolbar {\n  --button-text: var(--theme-primary-text-010);\n  --button-text-focus-hover: var(--theme-primary-text-010);\n  --button-text-active: var(--theme-primary-text-010);\n  --button-text-disabled: var(--theme-primary-010);\n}\n\n.is-toolbar-opacity-low.is-theme-background-type-accent .toolbar {\n  --button-text: var(--theme-accent-rgb-text);\n  --button-text-focus-hover: var(--theme-accent-rgb-text);\n  --button-text-active: var(--theme-accent-rgb-text);\n  --button-text-disabled: var(--theme-accent-rgb-text);\n}\n\n.is-toolbar-opacity-low.is-theme-background-type-color .toolbar {\n  --button-text: var(--theme-background-color-rgb-text);\n  --button-text-focus-hover: var(--theme-background-color-rgb-text);\n  --button-text-active: var(--theme-background-color-rgb-text);\n  --button-text-disabled: var(--theme-background-color-rgb-text);\n}\n\n\n.toolbar-item.button,\n.toolbar-item.form-input-button input[type=\"color\"]+label {\n  background-color: hsla(var(--button-background), calc(var(--theme-toolbar-opacity) / 100));\n}\n\n.toolbar-item.button:focus,\n.toolbar-item.button:hover,\n.toolbar-item.form-input-button:focus input[type=\"color\"]+label,\n.toolbar-item.form-input-button:hover input[type=\"color\"]+label {\n  background-color: hsla(var(--button-background-focus-hover), calc(var(--theme-toolbar-opacity) / 100));\n}\n\n.toolbar-item.button:active,\n.toolbar-item.form-input-button:active input[type=\"color\"]+label {\n  background-color: hsla(var(--button-background-focus-hover), calc(var(--theme-toolbar-opacity) / 100));\n}\n\n.toolbar-item.button.active,\n.toolbar-item.form-input-button.active input[type=\"color\"]+label {\n  background-color: hsla(var(--button-background-active), calc(var(--theme-toolbar-opacity) / 100));\n}\n\n.toolbar-item.button.disabled,\n.toolbar-item.button.disabled:hover,\n.toolbar-item.button.disabled:focus,\n.toolbar-item.button.disabled:active,\n.toolbar-item.form-input-button input[type=\"color\"]:disabled+label,\n.toolbar-item.form-input-button input[type=\"color\"]:disabled:hover+label,\n.toolbar-item.form-input-button input[type=\"color\"]:disabled:focus+label,\n.toolbar-item.form-input-button input[type=\"color\"]:disabled:active+label {\n  background-color: hsla(var(--button-background-disabled), calc(var(--theme-toolbar-opacity) / 100));\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 1640:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3645);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);
// Imports

var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".transitional {\n  margin: 0;\n  padding: 0;\n  font-size: 1em;\n  font-family: var(--theme-font-display-name);\n  font-weight: var(--theme-font-display-weight);\n  font-style: var(--theme-font-display-style);\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: nowrap;\n  line-height: 1.2;\n}\n\n.transitional-item {\n  font-size: 1.5em;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.is-theme-background-type-accent .transitional-text {\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.is-theme-background-type-accent .transitional-text {\n  color: hsl(var(--theme-accent-rgb-text));\n}\n\n.is-theme-background-type-color .transitional-text {\n  color: hsl(var(--theme-background-color-rgb-text));\n}\n\n.is-header-item-justify-left .transitional {\n  justify-content: flex-start;\n  text-align: left;\n}\n\n.is-header-item-justify-center .transitional {\n  justify-content: center;\n  text-align: center;\n}\n\n.is-header-item-justify-right .transitional {\n  justify-content: flex-end;\n  text-align: right;\n}\n", ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 3645:
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ 1667:
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== "string") {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};

/***/ }),

/***/ 1178:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-brands-400.ttf");

/***/ }),

/***/ 7460:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-brands-400.woff");

/***/ }),

/***/ 6096:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-brands-400.woff2");

/***/ }),

/***/ 2875:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-regular-400.ttf");

/***/ }),

/***/ 5374:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-regular-400.woff");

/***/ }),

/***/ 6360:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-regular-400.woff2");

/***/ }),

/***/ 7959:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-solid-900.ttf");

/***/ }),

/***/ 9342:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-solid-900.woff");

/***/ }),

/***/ 1759:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fa-solid-900.woff2");

/***/ }),

/***/ 8282:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fjalla-one-400.ttf");

/***/ }),

/***/ 2901:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fjalla-one-400.woff");

/***/ }),

/***/ 2108:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/fjalla-one-400.woff2");

/***/ }),

/***/ 7462:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-300.ttf");

/***/ }),

/***/ 257:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-300.woff");

/***/ }),

/***/ 314:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-300.woff2");

/***/ }),

/***/ 2565:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-400.ttf");

/***/ }),

/***/ 5557:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-400.woff");

/***/ }),

/***/ 10:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-400.woff2");

/***/ }),

/***/ 4221:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-600.ttf");

/***/ }),

/***/ 2223:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-600.woff");

/***/ }),

/***/ 5578:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-600.woff2");

/***/ }),

/***/ 2292:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-700.ttf");

/***/ }),

/***/ 1807:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-700.woff");

/***/ }),

/***/ 875:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-700.woff2");

/***/ }),

/***/ 7046:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-800.ttf");

/***/ }),

/***/ 5358:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-800.woff");

/***/ }),

/***/ 8741:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-800.woff2");

/***/ }),

/***/ 4756:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-300.ttf");

/***/ }),

/***/ 6900:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-300.woff");

/***/ }),

/***/ 1743:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-300.woff2");

/***/ }),

/***/ 2253:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-400.ttf");

/***/ }),

/***/ 3835:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-400.woff");

/***/ }),

/***/ 9938:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-400.woff2");

/***/ }),

/***/ 7002:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-600.ttf");

/***/ }),

/***/ 5944:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-600.woff");

/***/ }),

/***/ 4628:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-600.woff2");

/***/ }),

/***/ 4186:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-700.ttf");

/***/ }),

/***/ 3272:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-700.woff");

/***/ }),

/***/ 9567:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-700.woff2");

/***/ }),

/***/ 6146:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-800.ttf");

/***/ }),

/***/ 3447:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-800.woff");

/***/ }),

/***/ 5308:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + "font/open-sans-italic-800.woff2");

/***/ }),

/***/ 2786:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Afrikaans [af]
//! author : Werner Mollentze : https://github.com/wernerm

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var af = moment.defineLocale('af', {
        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(
            '_'
        ),
        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
        meridiemParse: /vm|nm/i,
        isPM: function (input) {
            return /^nm$/i.test(input);
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'vm' : 'VM';
            } else {
                return isLower ? 'nm' : 'NM';
            }
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Vandag om] LT',
            nextDay: '[Môre om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[Gister om] LT',
            lastWeek: '[Laas] dddd [om] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'oor %s',
            past: '%s gelede',
            s: "'n paar sekondes",
            ss: '%d sekondes',
            m: "'n minuut",
            mm: '%d minute',
            h: "'n uur",
            hh: '%d ure',
            d: "'n dag",
            dd: '%d dae',
            M: "'n maand",
            MM: '%d maande',
            y: "'n jaar",
            yy: '%d jaar',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (number) {
            return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            ); // Thanks to Joris Röling : https://github.com/jjupiter
        },
        week: {
            dow: 1, // Maandag is die eerste dag van die week.
            doy: 4, // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
        },
    });

    return af;

})));


/***/ }),

/***/ 4130:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Algeria) [ar-dz]
//! author : Amine Roukh: https://github.com/Amine27
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi
//! author : Noureddine LOUAHEDJ : https://github.com/noureddinem

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var pluralForm = function (n) {
            return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5;
        },
        plurals = {
            s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
            ],
            m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
            ],
            h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
            ],
            d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
            ],
            M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
            ],
            y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
            ],
        },
        pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                    str = plurals[u][pluralForm(number)];
                if (f === 2) {
                    str = str[withoutSuffix ? 0 : 1];
                }
                return str.replace(/%d/i, number);
            };
        },
        months = [
            'جانفي',
            'فيفري',
            'مارس',
            'أفريل',
            'ماي',
            'جوان',
            'جويلية',
            'أوت',
            'سبتمبر',
            'أكتوبر',
            'نوفمبر',
            'ديسمبر',
        ];

    var arDz = moment.defineLocale('ar-dz', {
        months: months,
        monthsShort: months,
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ص|م/,
        isPM: function (input) {
            return 'م' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y'),
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return arDz;

})));


/***/ }),

/***/ 6135:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Kuwait) [ar-kw]
//! author : Nusret Parlak: https://github.com/nusretparlak

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var arKw = moment.defineLocale('ar-kw', {
        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_'
        ),
        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_'
        ),
        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return arKw;

})));


/***/ }),

/***/ 6440:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Lybia) [ar-ly]
//! author : Ali Hmer: https://github.com/kikoanis

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '1',
            2: '2',
            3: '3',
            4: '4',
            5: '5',
            6: '6',
            7: '7',
            8: '8',
            9: '9',
            0: '0',
        },
        pluralForm = function (n) {
            return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5;
        },
        plurals = {
            s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
            ],
            m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
            ],
            h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
            ],
            d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
            ],
            M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
            ],
            y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
            ],
        },
        pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                    str = plurals[u][pluralForm(number)];
                if (f === 2) {
                    str = str[withoutSuffix ? 0 : 1];
                }
                return str.replace(/%d/i, number);
            };
        },
        months = [
            'يناير',
            'فبراير',
            'مارس',
            'أبريل',
            'مايو',
            'يونيو',
            'يوليو',
            'أغسطس',
            'سبتمبر',
            'أكتوبر',
            'نوفمبر',
            'ديسمبر',
        ];

    var arLy = moment.defineLocale('ar-ly', {
        months: months,
        monthsShort: months,
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ص|م/,
        isPM: function (input) {
            return 'م' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y'),
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return arLy;

})));


/***/ }),

/***/ 7702:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Morocco) [ar-ma]
//! author : ElFadili Yassine : https://github.com/ElFadiliY
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var arMa = moment.defineLocale('ar-ma', {
        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_'
        ),
        monthsShort: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(
            '_'
        ),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return arMa;

})));


/***/ }),

/***/ 6040:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Saudi Arabia) [ar-sa]
//! author : Suhail Alkowaileet : https://github.com/xsoh

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '١',
            2: '٢',
            3: '٣',
            4: '٤',
            5: '٥',
            6: '٦',
            7: '٧',
            8: '٨',
            9: '٩',
            0: '٠',
        },
        numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0',
        };

    var arSa = moment.defineLocale('ar-sa', {
        months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
        ),
        monthsShort: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
        ),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ص|م/,
        isPM: function (input) {
            return 'م' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
        },
        preparse: function (string) {
            return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                    return numberMap[match];
                })
                .replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return arSa;

})));


/***/ }),

/***/ 7100:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale  :  Arabic (Tunisia) [ar-tn]
//! author : Nader Toukabri : https://github.com/naderio

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var arTn = moment.defineLocale('ar-tn', {
        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
        ),
        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(
            '_'
        ),
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[اليوم على الساعة] LT',
            nextDay: '[غدا على الساعة] LT',
            nextWeek: 'dddd [على الساعة] LT',
            lastDay: '[أمس على الساعة] LT',
            lastWeek: 'dddd [على الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'في %s',
            past: 'منذ %s',
            s: 'ثوان',
            ss: '%d ثانية',
            m: 'دقيقة',
            mm: '%d دقائق',
            h: 'ساعة',
            hh: '%d ساعات',
            d: 'يوم',
            dd: '%d أيام',
            M: 'شهر',
            MM: '%d أشهر',
            y: 'سنة',
            yy: '%d سنوات',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return arTn;

})));


/***/ }),

/***/ 867:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic [ar]
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '١',
            2: '٢',
            3: '٣',
            4: '٤',
            5: '٥',
            6: '٦',
            7: '٧',
            8: '٨',
            9: '٩',
            0: '٠',
        },
        numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0',
        },
        pluralForm = function (n) {
            return n === 0
                ? 0
                : n === 1
                ? 1
                : n === 2
                ? 2
                : n % 100 >= 3 && n % 100 <= 10
                ? 3
                : n % 100 >= 11
                ? 4
                : 5;
        },
        plurals = {
            s: [
                'أقل من ثانية',
                'ثانية واحدة',
                ['ثانيتان', 'ثانيتين'],
                '%d ثوان',
                '%d ثانية',
                '%d ثانية',
            ],
            m: [
                'أقل من دقيقة',
                'دقيقة واحدة',
                ['دقيقتان', 'دقيقتين'],
                '%d دقائق',
                '%d دقيقة',
                '%d دقيقة',
            ],
            h: [
                'أقل من ساعة',
                'ساعة واحدة',
                ['ساعتان', 'ساعتين'],
                '%d ساعات',
                '%d ساعة',
                '%d ساعة',
            ],
            d: [
                'أقل من يوم',
                'يوم واحد',
                ['يومان', 'يومين'],
                '%d أيام',
                '%d يومًا',
                '%d يوم',
            ],
            M: [
                'أقل من شهر',
                'شهر واحد',
                ['شهران', 'شهرين'],
                '%d أشهر',
                '%d شهرا',
                '%d شهر',
            ],
            y: [
                'أقل من عام',
                'عام واحد',
                ['عامان', 'عامين'],
                '%d أعوام',
                '%d عامًا',
                '%d عام',
            ],
        },
        pluralize = function (u) {
            return function (number, withoutSuffix, string, isFuture) {
                var f = pluralForm(number),
                    str = plurals[u][pluralForm(number)];
                if (f === 2) {
                    str = str[withoutSuffix ? 0 : 1];
                }
                return str.replace(/%d/i, number);
            };
        },
        months = [
            'يناير',
            'فبراير',
            'مارس',
            'أبريل',
            'مايو',
            'يونيو',
            'يوليو',
            'أغسطس',
            'سبتمبر',
            'أكتوبر',
            'نوفمبر',
            'ديسمبر',
        ];

    var ar = moment.defineLocale('ar', {
        months: months,
        monthsShort: months,
        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/\u200FM/\u200FYYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ص|م/,
        isPM: function (input) {
            return 'م' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ص';
            } else {
                return 'م';
            }
        },
        calendar: {
            sameDay: '[اليوم عند الساعة] LT',
            nextDay: '[غدًا عند الساعة] LT',
            nextWeek: 'dddd [عند الساعة] LT',
            lastDay: '[أمس عند الساعة] LT',
            lastWeek: 'dddd [عند الساعة] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'بعد %s',
            past: 'منذ %s',
            s: pluralize('s'),
            ss: pluralize('s'),
            m: pluralize('m'),
            mm: pluralize('m'),
            h: pluralize('h'),
            hh: pluralize('h'),
            d: pluralize('d'),
            dd: pluralize('d'),
            M: pluralize('M'),
            MM: pluralize('M'),
            y: pluralize('y'),
            yy: pluralize('y'),
        },
        preparse: function (string) {
            return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                    return numberMap[match];
                })
                .replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return ar;

})));


/***/ }),

/***/ 1083:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Azerbaijani [az]
//! author : topchiyev : https://github.com/topchiyev

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        1: '-inci',
        5: '-inci',
        8: '-inci',
        70: '-inci',
        80: '-inci',
        2: '-nci',
        7: '-nci',
        20: '-nci',
        50: '-nci',
        3: '-üncü',
        4: '-üncü',
        100: '-üncü',
        6: '-ncı',
        9: '-uncu',
        10: '-uncu',
        30: '-uncu',
        60: '-ıncı',
        90: '-ıncı',
    };

    var az = moment.defineLocale('az', {
        months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(
            '_'
        ),
        monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
        weekdays: 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(
            '_'
        ),
        weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
        weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[sabah saat] LT',
            nextWeek: '[gələn həftə] dddd [saat] LT',
            lastDay: '[dünən] LT',
            lastWeek: '[keçən həftə] dddd [saat] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s sonra',
            past: '%s əvvəl',
            s: 'bir neçə saniyə',
            ss: '%d saniyə',
            m: 'bir dəqiqə',
            mm: '%d dəqiqə',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir il',
            yy: '%d il',
        },
        meridiemParse: /gecə|səhər|gündüz|axşam/,
        isPM: function (input) {
            return /^(gündüz|axşam)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'gecə';
            } else if (hour < 12) {
                return 'səhər';
            } else if (hour < 17) {
                return 'gündüz';
            } else {
                return 'axşam';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
        ordinal: function (number) {
            if (number === 0) {
                // special case for zero
                return number + '-ıncı';
            }
            var a = number % 10,
                b = (number % 100) - a,
                c = number >= 100 ? 100 : null;
            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return az;

})));


/***/ }),

/***/ 9808:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Belarusian [be]
//! author : Dmitry Demidov : https://github.com/demidov91
//! author: Praleska: http://praleska.pro/
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
            hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
            dd: 'дзень_дні_дзён',
            MM: 'месяц_месяцы_месяцаў',
            yy: 'год_гады_гадоў',
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвіліна' : 'хвіліну';
        } else if (key === 'h') {
            return withoutSuffix ? 'гадзіна' : 'гадзіну';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }

    var be = moment.defineLocale('be', {
        months: {
            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(
                '_'
            ),
            standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(
                '_'
            ),
        },
        monthsShort: 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split(
            '_'
        ),
        weekdays: {
            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(
                '_'
            ),
            standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(
                '_'
            ),
            isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/,
        },
        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., HH:mm',
            LLLL: 'dddd, D MMMM YYYY г., HH:mm',
        },
        calendar: {
            sameDay: '[Сёння ў] LT',
            nextDay: '[Заўтра ў] LT',
            lastDay: '[Учора ў] LT',
            nextWeek: function () {
                return '[У] dddd [ў] LT';
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return '[У мінулую] dddd [ў] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[У мінулы] dddd [ў] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'праз %s',
            past: '%s таму',
            s: 'некалькі секунд',
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithPlural,
            hh: relativeTimeWithPlural,
            d: 'дзень',
            dd: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural,
        },
        meridiemParse: /ночы|раніцы|дня|вечара/,
        isPM: function (input) {
            return /^(дня|вечара)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночы';
            } else if (hour < 12) {
                return 'раніцы';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечара';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return (number % 10 === 2 || number % 10 === 3) &&
                        number % 100 !== 12 &&
                        number % 100 !== 13
                        ? number + '-і'
                        : number + '-ы';
                case 'D':
                    return number + '-га';
                default:
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return be;

})));


/***/ }),

/***/ 8338:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bulgarian [bg]
//! author : Krasen Borisov : https://github.com/kraz

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var bg = moment.defineLocale('bg', {
        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(
            '_'
        ),
        monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(
            '_'
        ),
        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[Днес в] LT',
            nextDay: '[Утре в] LT',
            nextWeek: 'dddd [в] LT',
            lastDay: '[Вчера в] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Миналата] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Миналия] dddd [в] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'след %s',
            past: 'преди %s',
            s: 'няколко секунди',
            ss: '%d секунди',
            m: 'минута',
            mm: '%d минути',
            h: 'час',
            hh: '%d часа',
            d: 'ден',
            dd: '%d дена',
            w: 'седмица',
            ww: '%d седмици',
            M: 'месец',
            MM: '%d месеца',
            y: 'година',
            yy: '%d години',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal: function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return bg;

})));


/***/ }),

/***/ 7438:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bambara [bm]
//! author : Estelle Comment : https://github.com/estellecomment

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var bm = moment.defineLocale('bm', {
        months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(
            '_'
        ),
        monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
        weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
        weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
        weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'MMMM [tile] D [san] YYYY',
            LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
            LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
        },
        calendar: {
            sameDay: '[Bi lɛrɛ] LT',
            nextDay: '[Sini lɛrɛ] LT',
            nextWeek: 'dddd [don lɛrɛ] LT',
            lastDay: '[Kunu lɛrɛ] LT',
            lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s kɔnɔ',
            past: 'a bɛ %s bɔ',
            s: 'sanga dama dama',
            ss: 'sekondi %d',
            m: 'miniti kelen',
            mm: 'miniti %d',
            h: 'lɛrɛ kelen',
            hh: 'lɛrɛ %d',
            d: 'tile kelen',
            dd: 'tile %d',
            M: 'kalo kelen',
            MM: 'kalo %d',
            y: 'san kelen',
            yy: 'san %d',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return bm;

})));


/***/ }),

/***/ 6225:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali (Bangladesh) [bn-bd]
//! author : Asraf Hossain Patoary : https://github.com/ashwoolford

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '১',
            2: '২',
            3: '৩',
            4: '৪',
            5: '৫',
            6: '৬',
            7: '৭',
            8: '৮',
            9: '৯',
            0: '০',
        },
        numberMap = {
            '১': '1',
            '২': '2',
            '৩': '3',
            '৪': '4',
            '৫': '5',
            '৬': '6',
            '৭': '7',
            '৮': '8',
            '৯': '9',
            '০': '0',
        };

    var bnBd = moment.defineLocale('bn-bd', {
        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
            '_'
        ),
        monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
            '_'
        ),
        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
            '_'
        ),
        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
        longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
        },
        calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            ss: '%d সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর',
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },

        meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'রাত') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ভোর') {
                return hour;
            } else if (meridiem === 'সকাল') {
                return hour;
            } else if (meridiem === 'দুপুর') {
                return hour >= 3 ? hour : hour + 12;
            } else if (meridiem === 'বিকাল') {
                return hour + 12;
            } else if (meridiem === 'সন্ধ্যা') {
                return hour + 12;
            }
        },

        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 6) {
                return 'ভোর';
            } else if (hour < 12) {
                return 'সকাল';
            } else if (hour < 15) {
                return 'দুপুর';
            } else if (hour < 18) {
                return 'বিকাল';
            } else if (hour < 20) {
                return 'সন্ধ্যা';
            } else {
                return 'রাত';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return bnBd;

})));


/***/ }),

/***/ 8905:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali [bn]
//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '১',
            2: '২',
            3: '৩',
            4: '৪',
            5: '৫',
            6: '৬',
            7: '৭',
            8: '৮',
            9: '৯',
            0: '০',
        },
        numberMap = {
            '১': '1',
            '২': '2',
            '৩': '3',
            '৪': '4',
            '৫': '5',
            '৬': '6',
            '৭': '7',
            '৮': '8',
            '৯': '9',
            '০': '0',
        };

    var bn = moment.defineLocale('bn', {
        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(
            '_'
        ),
        monthsShort: 'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(
            '_'
        ),
        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(
            '_'
        ),
        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),
        longDateFormat: {
            LT: 'A h:mm সময়',
            LTS: 'A h:mm:ss সময়',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm সময়',
            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',
        },
        calendar: {
            sameDay: '[আজ] LT',
            nextDay: '[আগামীকাল] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[গতকাল] LT',
            lastWeek: '[গত] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s পরে',
            past: '%s আগে',
            s: 'কয়েক সেকেন্ড',
            ss: '%d সেকেন্ড',
            m: 'এক মিনিট',
            mm: '%d মিনিট',
            h: 'এক ঘন্টা',
            hh: '%d ঘন্টা',
            d: 'এক দিন',
            dd: '%d দিন',
            M: 'এক মাস',
            MM: '%d মাস',
            y: 'এক বছর',
            yy: '%d বছর',
        },
        preparse: function (string) {
            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                (meridiem === 'রাত' && hour >= 4) ||
                (meridiem === 'দুপুর' && hour < 5) ||
                meridiem === 'বিকাল'
            ) {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'রাত';
            } else if (hour < 10) {
                return 'সকাল';
            } else if (hour < 17) {
                return 'দুপুর';
            } else if (hour < 20) {
                return 'বিকাল';
            } else {
                return 'রাত';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return bn;

})));


/***/ }),

/***/ 1560:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tibetan [bo]
//! author : Thupten N. Chakrishar : https://github.com/vajradog

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '༡',
            2: '༢',
            3: '༣',
            4: '༤',
            5: '༥',
            6: '༦',
            7: '༧',
            8: '༨',
            9: '༩',
            0: '༠',
        },
        numberMap = {
            '༡': '1',
            '༢': '2',
            '༣': '3',
            '༤': '4',
            '༥': '5',
            '༦': '6',
            '༧': '7',
            '༨': '8',
            '༩': '9',
            '༠': '0',
        };

    var bo = moment.defineLocale('bo', {
        months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(
            '_'
        ),
        monthsShort: 'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(
            '_'
        ),
        monthsShortRegex: /^(ཟླ་\d{1,2})/,
        monthsParseExact: true,
        weekdays: 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(
            '_'
        ),
        weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(
            '_'
        ),
        weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
        },
        calendar: {
            sameDay: '[དི་རིང] LT',
            nextDay: '[སང་ཉིན] LT',
            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',
            lastDay: '[ཁ་སང] LT',
            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ལ་',
            past: '%s སྔན་ལ',
            s: 'ལམ་སང',
            ss: '%d སྐར་ཆ།',
            m: 'སྐར་མ་གཅིག',
            mm: '%d སྐར་མ',
            h: 'ཆུ་ཚོད་གཅིག',
            hh: '%d ཆུ་ཚོད',
            d: 'ཉིན་གཅིག',
            dd: '%d ཉིན་',
            M: 'ཟླ་བ་གཅིག',
            MM: '%d ཟླ་བ',
            y: 'ལོ་གཅིག',
            yy: '%d ལོ',
        },
        preparse: function (string) {
            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                (meridiem === 'མཚན་མོ' && hour >= 4) ||
                (meridiem === 'ཉིན་གུང' && hour < 5) ||
                meridiem === 'དགོང་དག'
            ) {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'མཚན་མོ';
            } else if (hour < 10) {
                return 'ཞོགས་ཀས';
            } else if (hour < 17) {
                return 'ཉིན་གུང';
            } else if (hour < 20) {
                return 'དགོང་དག';
            } else {
                return 'མཚན་མོ';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return bo;

})));


/***/ }),

/***/ 1278:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Breton [br]
//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function relativeTimeWithMutation(number, withoutSuffix, key) {
        var format = {
            mm: 'munutenn',
            MM: 'miz',
            dd: 'devezh',
        };
        return number + ' ' + mutation(format[key], number);
    }
    function specialMutationForYears(number) {
        switch (lastNumber(number)) {
            case 1:
            case 3:
            case 4:
            case 5:
            case 9:
                return number + ' bloaz';
            default:
                return number + ' vloaz';
        }
    }
    function lastNumber(number) {
        if (number > 9) {
            return lastNumber(number % 10);
        }
        return number;
    }
    function mutation(text, number) {
        if (number === 2) {
            return softMutation(text);
        }
        return text;
    }
    function softMutation(text) {
        var mutationTable = {
            m: 'v',
            b: 'v',
            d: 'z',
        };
        if (mutationTable[text.charAt(0)] === undefined) {
            return text;
        }
        return mutationTable[text.charAt(0)] + text.substring(1);
    }

    var monthsParse = [
            /^gen/i,
            /^c[ʼ\']hwe/i,
            /^meu/i,
            /^ebr/i,
            /^mae/i,
            /^(mez|eve)/i,
            /^gou/i,
            /^eos/i,
            /^gwe/i,
            /^her/i,
            /^du/i,
            /^ker/i,
        ],
        monthsRegex = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
        monthsStrictRegex = /^(genver|c[ʼ\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,
        monthsShortStrictRegex = /^(gen|c[ʼ\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,
        fullWeekdaysParse = [
            /^sul/i,
            /^lun/i,
            /^meurzh/i,
            /^merc[ʼ\']her/i,
            /^yaou/i,
            /^gwener/i,
            /^sadorn/i,
        ],
        shortWeekdaysParse = [
            /^Sul/i,
            /^Lun/i,
            /^Meu/i,
            /^Mer/i,
            /^Yao/i,
            /^Gwe/i,
            /^Sad/i,
        ],
        minWeekdaysParse = [
            /^Su/i,
            /^Lu/i,
            /^Me([^r]|$)/i,
            /^Mer/i,
            /^Ya/i,
            /^Gw/i,
            /^Sa/i,
        ];

    var br = moment.defineLocale('br', {
        months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(
            '_'
        ),
        monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
        weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),
        weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
        weekdaysParse: minWeekdaysParse,
        fullWeekdaysParse: fullWeekdaysParse,
        shortWeekdaysParse: shortWeekdaysParse,
        minWeekdaysParse: minWeekdaysParse,

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: monthsStrictRegex,
        monthsShortStrictRegex: monthsShortStrictRegex,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [a viz] MMMM YYYY',
            LLL: 'D [a viz] MMMM YYYY HH:mm',
            LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Hiziv da] LT',
            nextDay: '[Warcʼhoazh da] LT',
            nextWeek: 'dddd [da] LT',
            lastDay: '[Decʼh da] LT',
            lastWeek: 'dddd [paset da] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'a-benn %s',
            past: '%s ʼzo',
            s: 'un nebeud segondennoù',
            ss: '%d eilenn',
            m: 'ur vunutenn',
            mm: relativeTimeWithMutation,
            h: 'un eur',
            hh: '%d eur',
            d: 'un devezh',
            dd: relativeTimeWithMutation,
            M: 'ur miz',
            MM: relativeTimeWithMutation,
            y: 'ur bloaz',
            yy: specialMutationForYears,
        },
        dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
        ordinal: function (number) {
            var output = number === 1 ? 'añ' : 'vet';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
        meridiemParse: /a.m.|g.m./, // goude merenn | a-raok merenn
        isPM: function (token) {
            return token === 'g.m.';
        },
        meridiem: function (hour, minute, isLower) {
            return hour < 12 ? 'a.m.' : 'g.m.';
        },
    });

    return br;

})));


/***/ }),

/***/ 622:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bosnian [bs]
//! author : Nedim Cholich : https://github.com/frontyard
//! based on (hr) translation by Bojan Marković

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var bs = moment.defineLocale('bs', {
        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_'
        ),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                        return '[prošlu] dddd [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return bs;

})));


/***/ }),

/***/ 2468:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Catalan [ca]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ca = moment.defineLocale('ca', {
        months: {
            standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(
                '_'
            ),
            format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split(
                '_'
            ),
            isFormat: /D[oD]?(\s)+MMMM/,
        },
        monthsShort: 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(
            '_'
        ),
        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
        weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [de] YYYY',
            ll: 'D MMM YYYY',
            LLL: 'D MMMM [de] YYYY [a les] H:mm',
            lll: 'D MMM YYYY, H:mm',
            LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',
            llll: 'ddd D MMM YYYY, H:mm',
        },
        calendar: {
            sameDay: function () {
                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextDay: function () {
                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastDay: function () {
                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [passat a ' +
                    (this.hours() !== 1 ? 'les' : 'la') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: "d'aquí %s",
            past: 'fa %s',
            s: 'uns segons',
            ss: '%d segons',
            m: 'un minut',
            mm: '%d minuts',
            h: 'una hora',
            hh: '%d hores',
            d: 'un dia',
            dd: '%d dies',
            M: 'un mes',
            MM: '%d mesos',
            y: 'un any',
            yy: '%d anys',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal: function (number, period) {
            var output =
                number === 1
                    ? 'r'
                    : number === 2
                    ? 'n'
                    : number === 3
                    ? 'r'
                    : number === 4
                    ? 't'
                    : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ca;

})));


/***/ }),

/***/ 5822:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Czech [cs]
//! author : petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(
            '_'
        ),
        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),
        monthsParse = [
            /^led/i,
            /^úno/i,
            /^bře/i,
            /^dub/i,
            /^kvě/i,
            /^(čvn|červen$|června)/i,
            /^(čvc|červenec|července)/i,
            /^srp/i,
            /^zář/i,
            /^říj/i,
            /^lis/i,
            /^pro/i,
        ],
        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsRegex = /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;

    function plural(n) {
        return n > 1 && n < 5 && ~~(n / 10) !== 1;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's': // a few seconds / in a few seconds / a few seconds ago
                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekund');
                } else {
                    return result + 'sekundami';
                }
            case 'm': // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minuty' : 'minut');
                } else {
                    return result + 'minutami';
                }
            case 'h': // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodin');
                } else {
                    return result + 'hodinami';
                }
            case 'd': // a day / in a day / a day ago
                return withoutSuffix || isFuture ? 'den' : 'dnem';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dny' : 'dní');
                } else {
                    return result + 'dny';
                }
            case 'M': // a month / in a month / a month ago
                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'měsíce' : 'měsíců');
                } else {
                    return result + 'měsíci';
                }
            case 'y': // a year / in a year / a year ago
                return withoutSuffix || isFuture ? 'rok' : 'rokem';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'let');
                } else {
                    return result + 'lety';
                }
        }
    }

    var cs = moment.defineLocale('cs', {
        months: months,
        monthsShort: monthsShort,
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.
        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.
        monthsStrictRegex: /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,
        monthsShortStrictRegex: /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),
        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm',
            l: 'D. M. YYYY',
        },
        calendar: {
            sameDay: '[dnes v] LT',
            nextDay: '[zítra v] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v neděli v] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [v] LT';
                    case 3:
                        return '[ve středu v] LT';
                    case 4:
                        return '[ve čtvrtek v] LT';
                    case 5:
                        return '[v pátek v] LT';
                    case 6:
                        return '[v sobotu v] LT';
                }
            },
            lastDay: '[včera v] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulou neděli v] LT';
                    case 1:
                    case 2:
                        return '[minulé] dddd [v] LT';
                    case 3:
                        return '[minulou středu v] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [v] LT';
                    case 6:
                        return '[minulou sobotu v] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'před %s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return cs;

})));


/***/ }),

/***/ 877:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chuvash [cv]
//! author : Anatoly Mironov : https://github.com/mirontoli

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var cv = moment.defineLocale('cv', {
        months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(
            '_'
        ),
        monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
        weekdays: 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(
            '_'
        ),
        weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
        weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
        },
        calendar: {
            sameDay: '[Паян] LT [сехетре]',
            nextDay: '[Ыран] LT [сехетре]',
            lastDay: '[Ӗнер] LT [сехетре]',
            nextWeek: '[Ҫитес] dddd LT [сехетре]',
            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
            sameElse: 'L',
        },
        relativeTime: {
            future: function (output) {
                var affix = /сехет$/i.exec(output)
                    ? 'рен'
                    : /ҫул$/i.exec(output)
                    ? 'тан'
                    : 'ран';
                return output + affix;
            },
            past: '%s каялла',
            s: 'пӗр-ик ҫеккунт',
            ss: '%d ҫеккунт',
            m: 'пӗр минут',
            mm: '%d минут',
            h: 'пӗр сехет',
            hh: '%d сехет',
            d: 'пӗр кун',
            dd: '%d кун',
            M: 'пӗр уйӑх',
            MM: '%d уйӑх',
            y: 'пӗр ҫул',
            yy: '%d ҫул',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
        ordinal: '%d-мӗш',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return cv;

})));


/***/ }),

/***/ 7373:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Welsh [cy]
//! author : Robert Allen : https://github.com/robgallen
//! author : https://github.com/ryangreaves

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var cy = moment.defineLocale('cy', {
        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(
            '_'
        ),
        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(
            '_'
        ),
        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(
            '_'
        ),
        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
        weekdaysParseExact: true,
        // time formats are the same as en-gb
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Heddiw am] LT',
            nextDay: '[Yfory am] LT',
            nextWeek: 'dddd [am] LT',
            lastDay: '[Ddoe am] LT',
            lastWeek: 'dddd [diwethaf am] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'mewn %s',
            past: '%s yn ôl',
            s: 'ychydig eiliadau',
            ss: '%d eiliad',
            m: 'munud',
            mm: '%d munud',
            h: 'awr',
            hh: '%d awr',
            d: 'diwrnod',
            dd: '%d diwrnod',
            M: 'mis',
            MM: '%d mis',
            y: 'blwyddyn',
            yy: '%d flynedd',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
        ordinal: function (number) {
            var b = number,
                output = '',
                lookup = [
                    '',
                    'af',
                    'il',
                    'ydd',
                    'ydd',
                    'ed',
                    'ed',
                    'ed',
                    'fed',
                    'fed',
                    'fed', // 1af to 10fed
                    'eg',
                    'fed',
                    'eg',
                    'eg',
                    'fed',
                    'eg',
                    'eg',
                    'fed',
                    'eg',
                    'fed', // 11eg to 20fed
                ];
            if (b > 20) {
                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                    output = 'fed'; // not 30ain, 70ain or 90ain
                } else {
                    output = 'ain';
                }
            } else if (b > 0) {
                output = lookup[b];
            }
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return cy;

})));


/***/ }),

/***/ 4780:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Danish [da]
//! author : Ulrik Nielsen : https://github.com/mrbase

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var da = moment.defineLocale('da', {
        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),
        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'på dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[i] dddd[s kl.] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'få sekunder',
            ss: '%d sekunder',
            m: 'et minut',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dage',
            M: 'en måned',
            MM: '%d måneder',
            y: 'et år',
            yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return da;

})));


/***/ }),

/***/ 217:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Austria) [de-at]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Martin Groller : https://github.com/MadMG
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren'],
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deAt = moment.defineLocale('de-at', {
        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_'
        ),
        monthsShort: 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
            '_'
        ),
        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return deAt;

})));


/***/ }),

/***/ 894:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Switzerland) [de-ch]
//! author : sschueller : https://github.com/sschueller

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren'],
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var deCh = moment.defineLocale('de-ch', {
        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_'
        ),
        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
            '_'
        ),
        weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return deCh;

})));


/***/ }),

/***/ 9740:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German [de]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            m: ['eine Minute', 'einer Minute'],
            h: ['eine Stunde', 'einer Stunde'],
            d: ['ein Tag', 'einem Tag'],
            dd: [number + ' Tage', number + ' Tagen'],
            w: ['eine Woche', 'einer Woche'],
            M: ['ein Monat', 'einem Monat'],
            MM: [number + ' Monate', number + ' Monaten'],
            y: ['ein Jahr', 'einem Jahr'],
            yy: [number + ' Jahre', number + ' Jahren'],
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }

    var de = moment.defineLocale('de', {
        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_'
        ),
        monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(
            '_'
        ),
        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY HH:mm',
            LLLL: 'dddd, D. MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[heute um] LT [Uhr]',
            sameElse: 'L',
            nextDay: '[morgen um] LT [Uhr]',
            nextWeek: 'dddd [um] LT [Uhr]',
            lastDay: '[gestern um] LT [Uhr]',
            lastWeek: '[letzten] dddd [um] LT [Uhr]',
        },
        relativeTime: {
            future: 'in %s',
            past: 'vor %s',
            s: 'ein paar Sekunden',
            ss: '%d Sekunden',
            m: processRelativeTime,
            mm: '%d Minuten',
            h: processRelativeTime,
            hh: '%d Stunden',
            d: processRelativeTime,
            dd: processRelativeTime,
            w: processRelativeTime,
            ww: '%d Wochen',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return de;

})));


/***/ }),

/***/ 5300:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maldivian [dv]
//! author : Jawish Hameed : https://github.com/jawish

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'ޖެނުއަރީ',
            'ފެބްރުއަރީ',
            'މާރިޗު',
            'އޭޕްރީލު',
            'މޭ',
            'ޖޫން',
            'ޖުލައި',
            'އޯގަސްޓު',
            'ސެޕްޓެމްބަރު',
            'އޮކްޓޯބަރު',
            'ނޮވެމްބަރު',
            'ޑިސެމްބަރު',
        ],
        weekdays = [
            'އާދިއްތަ',
            'ހޯމަ',
            'އަންގާރަ',
            'ބުދަ',
            'ބުރާސްފަތި',
            'ހުކުރު',
            'ހޮނިހިރު',
        ];

    var dv = moment.defineLocale('dv', {
        months: months,
        monthsShort: months,
        weekdays: weekdays,
        weekdaysShort: weekdays,
        weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'D/M/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /މކ|މފ/,
        isPM: function (input) {
            return 'މފ' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'މކ';
            } else {
                return 'މފ';
            }
        },
        calendar: {
            sameDay: '[މިއަދު] LT',
            nextDay: '[މާދަމާ] LT',
            nextWeek: 'dddd LT',
            lastDay: '[އިއްޔެ] LT',
            lastWeek: '[ފާއިތުވި] dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ތެރޭގައި %s',
            past: 'ކުރިން %s',
            s: 'ސިކުންތުކޮޅެއް',
            ss: 'd% ސިކުންތު',
            m: 'މިނިޓެއް',
            mm: 'މިނިޓު %d',
            h: 'ގަޑިއިރެއް',
            hh: 'ގަޑިއިރު %d',
            d: 'ދުވަހެއް',
            dd: 'ދުވަސް %d',
            M: 'މަހެއް',
            MM: 'މަސް %d',
            y: 'އަހަރެއް',
            yy: 'އަހަރު %d',
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 7, // Sunday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return dv;

})));


/***/ }),

/***/ 837:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Greek [el]
//! author : Aggelos Karalias : https://github.com/mehiel

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    var el = moment.defineLocale('el', {
        monthsNominativeEl: 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(
            '_'
        ),
        monthsGenitiveEl: 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(
            '_'
        ),
        months: function (momentToFormat, format) {
            if (!momentToFormat) {
                return this._monthsNominativeEl;
            } else if (
                typeof format === 'string' &&
                /D/.test(format.substring(0, format.indexOf('MMMM')))
            ) {
                // if there is a day number before 'MMMM'
                return this._monthsGenitiveEl[momentToFormat.month()];
            } else {
                return this._monthsNominativeEl[momentToFormat.month()];
            }
        },
        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(
            '_'
        ),
        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
        meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'μμ' : 'ΜΜ';
            } else {
                return isLower ? 'πμ' : 'ΠΜ';
            }
        },
        isPM: function (input) {
            return (input + '').toLowerCase()[0] === 'μ';
        },
        meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendarEl: {
            sameDay: '[Σήμερα {}] LT',
            nextDay: '[Αύριο {}] LT',
            nextWeek: 'dddd [{}] LT',
            lastDay: '[Χθες {}] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 6:
                        return '[το προηγούμενο] dddd [{}] LT';
                    default:
                        return '[την προηγούμενη] dddd [{}] LT';
                }
            },
            sameElse: 'L',
        },
        calendar: function (key, mom) {
            var output = this._calendarEl[key],
                hours = mom && mom.hours();
            if (isFunction(output)) {
                output = output.apply(mom);
            }
            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');
        },
        relativeTime: {
            future: 'σε %s',
            past: '%s πριν',
            s: 'λίγα δευτερόλεπτα',
            ss: '%d δευτερόλεπτα',
            m: 'ένα λεπτό',
            mm: '%d λεπτά',
            h: 'μία ώρα',
            hh: '%d ώρες',
            d: 'μία μέρα',
            dd: '%d μέρες',
            M: 'ένας μήνας',
            MM: '%d μήνες',
            y: 'ένας χρόνος',
            yy: '%d χρόνια',
        },
        dayOfMonthOrdinalParse: /\d{1,2}η/,
        ordinal: '%dη',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4st is the first week of the year.
        },
    });

    return el;

})));


/***/ }),

/***/ 8348:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Australia) [en-au]
//! author : Jared Morse : https://github.com/jarcoal

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enAu = moment.defineLocale('en-au', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enAu;

})));


/***/ }),

/***/ 7925:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Canada) [en-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enCa = moment.defineLocale('en-ca', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'YYYY-MM-DD',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY h:mm A',
            LLLL: 'dddd, MMMM D, YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    return enCa;

})));


/***/ }),

/***/ 2243:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (United Kingdom) [en-gb]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enGb = moment.defineLocale('en-gb', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enGb;

})));


/***/ }),

/***/ 6436:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Ireland) [en-ie]
//! author : Chris Cartlidge : https://github.com/chriscartlidge

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enIe = moment.defineLocale('en-ie', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enIe;

})));


/***/ }),

/***/ 7207:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Israel) [en-il]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enIl = moment.defineLocale('en-il', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    return enIl;

})));


/***/ }),

/***/ 4175:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (India) [en-in]
//! author : Jatin Agrawal : https://github.com/jatinag22

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enIn = moment.defineLocale('en-in', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 1st is the first week of the year.
        },
    });

    return enIn;

})));


/***/ }),

/***/ 6319:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (New Zealand) [en-nz]
//! author : Luke McGregor : https://github.com/lukemcgregor

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enNz = moment.defineLocale('en-nz', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enNz;

})));


/***/ }),

/***/ 1662:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Singapore) [en-sg]
//! author : Matthew Castrillon-Madrigal : https://github.com/techdimension

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var enSg = moment.defineLocale('en-sg', {
        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Today at] LT',
            nextDay: '[Tomorrow at] LT',
            nextWeek: 'dddd [at] LT',
            lastDay: '[Yesterday at] LT',
            lastWeek: '[Last] dddd [at] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'in %s',
            past: '%s ago',
            s: 'a few seconds',
            ss: '%d seconds',
            m: 'a minute',
            mm: '%d minutes',
            h: 'an hour',
            hh: '%d hours',
            d: 'a day',
            dd: '%d days',
            M: 'a month',
            MM: '%d months',
            y: 'a year',
            yy: '%d years',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return enSg;

})));


/***/ }),

/***/ 2915:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Esperanto [eo]
//! author : Colin Dean : https://github.com/colindean
//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
//! comment : miestasmia corrected the translation by colindean
//! comment : Vivakvo corrected the translation by colindean and miestasmia

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var eo = moment.defineLocale('eo', {
        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),
        weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
        weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
        weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: '[la] D[-an de] MMMM, YYYY',
            LLL: '[la] D[-an de] MMMM, YYYY HH:mm',
            LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',
            llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm',
        },
        meridiemParse: /[ap]\.t\.m/i,
        isPM: function (input) {
            return input.charAt(0).toLowerCase() === 'p';
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'p.t.m.' : 'P.T.M.';
            } else {
                return isLower ? 'a.t.m.' : 'A.T.M.';
            }
        },
        calendar: {
            sameDay: '[Hodiaŭ je] LT',
            nextDay: '[Morgaŭ je] LT',
            nextWeek: 'dddd[n je] LT',
            lastDay: '[Hieraŭ je] LT',
            lastWeek: '[pasintan] dddd[n je] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'post %s',
            past: 'antaŭ %s',
            s: 'kelkaj sekundoj',
            ss: '%d sekundoj',
            m: 'unu minuto',
            mm: '%d minutoj',
            h: 'unu horo',
            hh: '%d horoj',
            d: 'unu tago', //ne 'diurno', ĉar estas uzita por proksimumo
            dd: '%d tagoj',
            M: 'unu monato',
            MM: '%d monatoj',
            y: 'unu jaro',
            yy: '%d jaroj',
        },
        dayOfMonthOrdinalParse: /\d{1,2}a/,
        ordinal: '%da',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return eo;

})));


/***/ }),

/***/ 5251:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Dominican Republic) [es-do]

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_'
        ),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        monthsParse = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
        ],
        monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esDo = moment.defineLocale('es-do', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
        },
        calendar: {
            sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [pasado a la' +
                    (this.hours() !== 1 ? 's' : '') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return esDo;

})));


/***/ }),

/***/ 6112:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Mexico) [es-mx]
//! author : JC Franco : https://github.com/jcfranco

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_'
        ),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        monthsParse = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
        ],
        monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esMx = moment.defineLocale('es-mx', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
        },
        calendar: {
            sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [pasado a la' +
                    (this.hours() !== 1 ? 's' : '') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
        invalidDate: 'Fecha inválida',
    });

    return esMx;

})));


/***/ }),

/***/ 1146:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (United States) [es-us]
//! author : bustta : https://github.com/bustta
//! author : chrisrodz : https://github.com/chrisrodz

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_'
        ),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        monthsParse = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
        ],
        monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var esUs = moment.defineLocale('es-us', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'MM/DD/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY h:mm A',
            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',
        },
        calendar: {
            sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [pasado a la' +
                    (this.hours() !== 1 ? 's' : '') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return esUs;

})));


/***/ }),

/***/ 7093:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish [es]
//! author : Julio Napurí : https://github.com/julionc

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(
            '_'
        ),
        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),
        monthsParse = [
            /^ene/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
        ],
        monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

    var es = moment.defineLocale('es', {
        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortDot;
            } else if (/-MMM-/.test(format)) {
                return monthsShort[m.month()];
            } else {
                return monthsShortDot[m.month()];
            }
        },
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
        },
        calendar: {
            sameDay: function () {
                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextDay: function () {
                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastDay: function () {
                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[el] dddd [pasado a la' +
                    (this.hours() !== 1 ? 's' : '') +
                    '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'en %s',
            past: 'hace %s',
            s: 'unos segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'una hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            w: 'una semana',
            ww: '%d semanas',
            M: 'un mes',
            MM: '%d meses',
            y: 'un año',
            yy: '%d años',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
        invalidDate: 'Fecha inválida',
    });

    return es;

})));


/***/ }),

/***/ 5603:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Estonian [et]
//! author : Henry Kehlmann : https://github.com/madhenry
//! improvements : Illimar Tambek : https://github.com/ragulka

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
            ss: [number + 'sekundi', number + 'sekundit'],
            m: ['ühe minuti', 'üks minut'],
            mm: [number + ' minuti', number + ' minutit'],
            h: ['ühe tunni', 'tund aega', 'üks tund'],
            hh: [number + ' tunni', number + ' tundi'],
            d: ['ühe päeva', 'üks päev'],
            M: ['kuu aja', 'kuu aega', 'üks kuu'],
            MM: [number + ' kuu', number + ' kuud'],
            y: ['ühe aasta', 'aasta', 'üks aasta'],
            yy: [number + ' aasta', number + ' aastat'],
        };
        if (withoutSuffix) {
            return format[key][2] ? format[key][2] : format[key][1];
        }
        return isFuture ? format[key][0] : format[key][1];
    }

    var et = moment.defineLocale('et', {
        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(
            '_'
        ),
        monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split(
            '_'
        ),
        weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(
            '_'
        ),
        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),
        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[Täna,] LT',
            nextDay: '[Homme,] LT',
            nextWeek: '[Järgmine] dddd LT',
            lastDay: '[Eile,] LT',
            lastWeek: '[Eelmine] dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s pärast',
            past: '%s tagasi',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: '%d päeva',
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return et;

})));


/***/ }),

/***/ 7763:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Basque [eu]
//! author : Eneko Illarramendi : https://github.com/eillarra

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var eu = moment.defineLocale('eu', {
        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(
            '_'
        ),
        monthsShort: 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(
            '_'
        ),
        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),
        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY[ko] MMMM[ren] D[a]',
            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',
            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
            l: 'YYYY-M-D',
            ll: 'YYYY[ko] MMM D[a]',
            lll: 'YYYY[ko] MMM D[a] HH:mm',
            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',
        },
        calendar: {
            sameDay: '[gaur] LT[etan]',
            nextDay: '[bihar] LT[etan]',
            nextWeek: 'dddd LT[etan]',
            lastDay: '[atzo] LT[etan]',
            lastWeek: '[aurreko] dddd LT[etan]',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s barru',
            past: 'duela %s',
            s: 'segundo batzuk',
            ss: '%d segundo',
            m: 'minutu bat',
            mm: '%d minutu',
            h: 'ordu bat',
            hh: '%d ordu',
            d: 'egun bat',
            dd: '%d egun',
            M: 'hilabete bat',
            MM: '%d hilabete',
            y: 'urte bat',
            yy: '%d urte',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return eu;

})));


/***/ }),

/***/ 6959:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Persian [fa]
//! author : Ebrahim Byagowi : https://github.com/ebraminio

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '۱',
            2: '۲',
            3: '۳',
            4: '۴',
            5: '۵',
            6: '۶',
            7: '۷',
            8: '۸',
            9: '۹',
            0: '۰',
        },
        numberMap = {
            '۱': '1',
            '۲': '2',
            '۳': '3',
            '۴': '4',
            '۵': '5',
            '۶': '6',
            '۷': '7',
            '۸': '8',
            '۹': '9',
            '۰': '0',
        };

    var fa = moment.defineLocale('fa', {
        months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
            '_'
        ),
        monthsShort: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(
            '_'
        ),
        weekdays: 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split(
            '_'
        ),
        weekdaysShort: 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split(
            '_'
        ),
        weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        meridiemParse: /قبل از ظهر|بعد از ظهر/,
        isPM: function (input) {
            return /بعد از ظهر/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'قبل از ظهر';
            } else {
                return 'بعد از ظهر';
            }
        },
        calendar: {
            sameDay: '[امروز ساعت] LT',
            nextDay: '[فردا ساعت] LT',
            nextWeek: 'dddd [ساعت] LT',
            lastDay: '[دیروز ساعت] LT',
            lastWeek: 'dddd [پیش] [ساعت] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'در %s',
            past: '%s پیش',
            s: 'چند ثانیه',
            ss: '%d ثانیه',
            m: 'یک دقیقه',
            mm: '%d دقیقه',
            h: 'یک ساعت',
            hh: '%d ساعت',
            d: 'یک روز',
            dd: '%d روز',
            M: 'یک ماه',
            MM: '%d ماه',
            y: 'یک سال',
            yy: '%d سال',
        },
        preparse: function (string) {
            return string
                .replace(/[۰-۹]/g, function (match) {
                    return numberMap[match];
                })
                .replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        dayOfMonthOrdinalParse: /\d{1,2}م/,
        ordinal: '%dم',
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return fa;

})));


/***/ }),

/***/ 1897:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Finnish [fi]
//! author : Tarmo Aidantausta : https://github.com/bleadof

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(
            ' '
        ),
        numbersFuture = [
            'nolla',
            'yhden',
            'kahden',
            'kolmen',
            'neljän',
            'viiden',
            'kuuden',
            numbersPast[7],
            numbersPast[8],
            numbersPast[9],
        ];
    function translate(number, withoutSuffix, key, isFuture) {
        var result = '';
        switch (key) {
            case 's':
                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
            case 'ss':
                result = isFuture ? 'sekunnin' : 'sekuntia';
                break;
            case 'm':
                return isFuture ? 'minuutin' : 'minuutti';
            case 'mm':
                result = isFuture ? 'minuutin' : 'minuuttia';
                break;
            case 'h':
                return isFuture ? 'tunnin' : 'tunti';
            case 'hh':
                result = isFuture ? 'tunnin' : 'tuntia';
                break;
            case 'd':
                return isFuture ? 'päivän' : 'päivä';
            case 'dd':
                result = isFuture ? 'päivän' : 'päivää';
                break;
            case 'M':
                return isFuture ? 'kuukauden' : 'kuukausi';
            case 'MM':
                result = isFuture ? 'kuukauden' : 'kuukautta';
                break;
            case 'y':
                return isFuture ? 'vuoden' : 'vuosi';
            case 'yy':
                result = isFuture ? 'vuoden' : 'vuotta';
                break;
        }
        result = verbalNumber(number, isFuture) + ' ' + result;
        return result;
    }
    function verbalNumber(number, isFuture) {
        return number < 10
            ? isFuture
                ? numbersFuture[number]
                : numbersPast[number]
            : number;
    }

    var fi = moment.defineLocale('fi', {
        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(
            '_'
        ),
        monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(
            '_'
        ),
        weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(
            '_'
        ),
        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),
        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM[ta] YYYY',
            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',
            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
            l: 'D.M.YYYY',
            ll: 'Do MMM YYYY',
            lll: 'Do MMM YYYY, [klo] HH.mm',
            llll: 'ddd, Do MMM YYYY, [klo] HH.mm',
        },
        calendar: {
            sameDay: '[tänään] [klo] LT',
            nextDay: '[huomenna] [klo] LT',
            nextWeek: 'dddd [klo] LT',
            lastDay: '[eilen] [klo] LT',
            lastWeek: '[viime] dddd[na] [klo] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s päästä',
            past: '%s sitten',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fi;

})));


/***/ }),

/***/ 2549:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Filipino [fil]
//! author : Dan Hagman : https://github.com/hagmandan
//! author : Matthew Co : https://github.com/matthewdeeco

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var fil = moment.defineLocale('fil', {
        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
            '_'
        ),
        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
            '_'
        ),
        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'MM/D/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY HH:mm',
            LLLL: 'dddd, MMMM DD, YYYY HH:mm',
        },
        calendar: {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'sa loob ng %s',
            past: '%s ang nakalipas',
            s: 'ilang segundo',
            ss: '%d segundo',
            m: 'isang minuto',
            mm: '%d minuto',
            h: 'isang oras',
            hh: '%d oras',
            d: 'isang araw',
            dd: '%d araw',
            M: 'isang buwan',
            MM: '%d buwan',
            y: 'isang taon',
            yy: '%d taon',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (number) {
            return number;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fil;

})));


/***/ }),

/***/ 4694:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Faroese [fo]
//! author : Ragnar Johannesen : https://github.com/ragnar123
//! author : Kristian Sakarisson : https://github.com/sakarisson

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var fo = moment.defineLocale('fo', {
        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
        weekdays: 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(
            '_'
        ),
        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D. MMMM, YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Í dag kl.] LT',
            nextDay: '[Í morgin kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[Í gjár kl.] LT',
            lastWeek: '[síðstu] dddd [kl] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'um %s',
            past: '%s síðani',
            s: 'fá sekund',
            ss: '%d sekundir',
            m: 'ein minuttur',
            mm: '%d minuttir',
            h: 'ein tími',
            hh: '%d tímar',
            d: 'ein dagur',
            dd: '%d dagar',
            M: 'ein mánaður',
            MM: '%d mánaðir',
            y: 'eitt ár',
            yy: '%d ár',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fo;

})));


/***/ }),

/***/ 3049:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Canada) [fr-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var frCa = moment.defineLocale('fr-ca', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_'
        ),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
    });

    return frCa;

})));


/***/ }),

/***/ 2330:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Switzerland) [fr-ch]
//! author : Gaspard Bucher : https://github.com/gaspard

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var frCh = moment.defineLocale('fr-ch', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_'
        ),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
        ordinal: function (number, period) {
            switch (period) {
                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'D':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return frCh;

})));


/***/ }),

/***/ 4470:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French [fr]
//! author : John Fischer : https://github.com/jfroffice

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsStrictRegex = /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
        monthsShortStrictRegex = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?)/i,
        monthsRegex = /(janv\.?|févr\.?|mars|avr\.?|mai|juin|juil\.?|août|sept\.?|oct\.?|nov\.?|déc\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,
        monthsParse = [
            /^janv/i,
            /^févr/i,
            /^mars/i,
            /^avr/i,
            /^mai/i,
            /^juin/i,
            /^juil/i,
            /^août/i,
            /^sept/i,
            /^oct/i,
            /^nov/i,
            /^déc/i,
        ];

    var fr = moment.defineLocale('fr', {
        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(
            '_'
        ),
        monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(
            '_'
        ),
        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: monthsStrictRegex,
        monthsShortStrictRegex: monthsShortStrictRegex,
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Aujourd’hui à] LT',
            nextDay: '[Demain à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[Hier à] LT',
            lastWeek: 'dddd [dernier à] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dans %s',
            past: 'il y a %s',
            s: 'quelques secondes',
            ss: '%d secondes',
            m: 'une minute',
            mm: '%d minutes',
            h: 'une heure',
            hh: '%d heures',
            d: 'un jour',
            dd: '%d jours',
            w: 'une semaine',
            ww: '%d semaines',
            M: 'un mois',
            MM: '%d mois',
            y: 'un an',
            yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
        ordinal: function (number, period) {
            switch (period) {
                // TODO: Return 'e' when day of month > 1. Move this case inside
                // block for masculine words below.
                // See https://github.com/moment/moment/issues/3375
                case 'D':
                    return number + (number === 1 ? 'er' : '');

                // Words with masculine grammatical gender: mois, trimestre, jour
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                    return number + (number === 1 ? 'er' : 'e');

                // Words with feminine grammatical gender: semaine
                case 'w':
                case 'W':
                    return number + (number === 1 ? 're' : 'e');
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fr;

})));


/***/ }),

/***/ 5044:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Frisian [fy]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split(
            '_'
        ),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split(
            '_'
        );

    var fy = moment.defineLocale('fy', {
        months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },
        monthsParseExact: true,
        weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(
            '_'
        ),
        weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),
        weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[hjoed om] LT',
            nextDay: '[moarn om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[juster om] LT',
            lastWeek: '[ôfrûne] dddd [om] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'oer %s',
            past: '%s lyn',
            s: 'in pear sekonden',
            ss: '%d sekonden',
            m: 'ien minút',
            mm: '%d minuten',
            h: 'ien oere',
            hh: '%d oeren',
            d: 'ien dei',
            dd: '%d dagen',
            M: 'ien moanne',
            MM: '%d moannen',
            y: 'ien jier',
            yy: '%d jierren',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (number) {
            return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            );
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return fy;

})));


/***/ }),

/***/ 9295:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Irish or Irish Gaelic [ga]
//! author : André Silva : https://github.com/askpt

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'Eanáir',
            'Feabhra',
            'Márta',
            'Aibreán',
            'Bealtaine',
            'Meitheamh',
            'Iúil',
            'Lúnasa',
            'Meán Fómhair',
            'Deireadh Fómhair',
            'Samhain',
            'Nollaig',
        ],
        monthsShort = [
            'Ean',
            'Feabh',
            'Márt',
            'Aib',
            'Beal',
            'Meith',
            'Iúil',
            'Lún',
            'M.F.',
            'D.F.',
            'Samh',
            'Noll',
        ],
        weekdays = [
            'Dé Domhnaigh',
            'Dé Luain',
            'Dé Máirt',
            'Dé Céadaoin',
            'Déardaoin',
            'Dé hAoine',
            'Dé Sathairn',
        ],
        weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],
        weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];

    var ga = moment.defineLocale('ga', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Inniu ag] LT',
            nextDay: '[Amárach ag] LT',
            nextWeek: 'dddd [ag] LT',
            lastDay: '[Inné ag] LT',
            lastWeek: 'dddd [seo caite] [ag] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'i %s',
            past: '%s ó shin',
            s: 'cúpla soicind',
            ss: '%d soicind',
            m: 'nóiméad',
            mm: '%d nóiméad',
            h: 'uair an chloig',
            hh: '%d uair an chloig',
            d: 'lá',
            dd: '%d lá',
            M: 'mí',
            MM: '%d míonna',
            y: 'bliain',
            yy: '%d bliain',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ga;

})));


/***/ }),

/***/ 2101:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Scottish Gaelic [gd]
//! author : Jon Ashdown : https://github.com/jonashdown

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'Am Faoilleach',
            'An Gearran',
            'Am Màrt',
            'An Giblean',
            'An Cèitean',
            'An t-Ògmhios',
            'An t-Iuchar',
            'An Lùnastal',
            'An t-Sultain',
            'An Dàmhair',
            'An t-Samhain',
            'An Dùbhlachd',
        ],
        monthsShort = [
            'Faoi',
            'Gear',
            'Màrt',
            'Gibl',
            'Cèit',
            'Ògmh',
            'Iuch',
            'Lùn',
            'Sult',
            'Dàmh',
            'Samh',
            'Dùbh',
        ],
        weekdays = [
            'Didòmhnaich',
            'Diluain',
            'Dimàirt',
            'Diciadain',
            'Diardaoin',
            'Dihaoine',
            'Disathairne',
        ],
        weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],
        weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

    var gd = moment.defineLocale('gd', {
        months: months,
        monthsShort: monthsShort,
        monthsParseExact: true,
        weekdays: weekdays,
        weekdaysShort: weekdaysShort,
        weekdaysMin: weekdaysMin,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[An-diugh aig] LT',
            nextDay: '[A-màireach aig] LT',
            nextWeek: 'dddd [aig] LT',
            lastDay: '[An-dè aig] LT',
            lastWeek: 'dddd [seo chaidh] [aig] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ann an %s',
            past: 'bho chionn %s',
            s: 'beagan diogan',
            ss: '%d diogan',
            m: 'mionaid',
            mm: '%d mionaidean',
            h: 'uair',
            hh: '%d uairean',
            d: 'latha',
            dd: '%d latha',
            M: 'mìos',
            MM: '%d mìosan',
            y: 'bliadhna',
            yy: '%d bliadhna',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
        ordinal: function (number) {
            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return gd;

})));


/***/ }),

/***/ 8794:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Galician [gl]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var gl = moment.defineLocale('gl', {
        months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(
            '_'
        ),
        monthsShort: 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
        weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
        weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY H:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',
        },
        calendar: {
            sameDay: function () {
                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextDay: function () {
                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';
            },
            nextWeek: function () {
                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';
            },
            lastDay: function () {
                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';
            },
            lastWeek: function () {
                return (
                    '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT'
                );
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: function (str) {
                if (str.indexOf('un') === 0) {
                    return 'n' + str;
                }
                return 'en ' + str;
            },
            past: 'hai %s',
            s: 'uns segundos',
            ss: '%d segundos',
            m: 'un minuto',
            mm: '%d minutos',
            h: 'unha hora',
            hh: '%d horas',
            d: 'un día',
            dd: '%d días',
            M: 'un mes',
            MM: '%d meses',
            y: 'un ano',
            yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return gl;

})));


/***/ }),

/***/ 7884:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Devanagari script [gom-deva]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],
            ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],
            m: ['एका मिणटान', 'एक मिनूट'],
            mm: [number + ' मिणटांनी', number + ' मिणटां'],
            h: ['एका वरान', 'एक वर'],
            hh: [number + ' वरांनी', number + ' वरां'],
            d: ['एका दिसान', 'एक दीस'],
            dd: [number + ' दिसांनी', number + ' दीस'],
            M: ['एका म्हयन्यान', 'एक म्हयनो'],
            MM: [number + ' म्हयन्यानी', number + ' म्हयने'],
            y: ['एका वर्सान', 'एक वर्स'],
            yy: [number + ' वर्सांनी', number + ' वर्सां'],
        };
        return isFuture ? format[key][0] : format[key][1];
    }

    var gomDeva = moment.defineLocale('gom-deva', {
        months: {
            standalone: 'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
                '_'
            ),
            format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(
                '_'
            ),
            isFormat: /MMMM(\s)+D[oD]?/,
        },
        monthsShort: 'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),
        weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),
        weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'A h:mm [वाजतां]',
            LTS: 'A h:mm:ss [वाजतां]',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY A h:mm [वाजतां]',
            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',
            llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]',
        },
        calendar: {
            sameDay: '[आयज] LT',
            nextDay: '[फाल्यां] LT',
            nextWeek: '[फुडलो] dddd[,] LT',
            lastDay: '[काल] LT',
            lastWeek: '[फाटलो] dddd[,] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s',
            past: '%s आदीं',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}(वेर)/,
        ordinal: function (number, period) {
            switch (period) {
                // the ordinal 'वेर' only applies to day of the month
                case 'D':
                    return number + 'वेर';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week
            doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)
        },
        meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राती') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सकाळीं') {
                return hour;
            } else if (meridiem === 'दनपारां') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'सांजे') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'राती';
            } else if (hour < 12) {
                return 'सकाळीं';
            } else if (hour < 16) {
                return 'दनपारां';
            } else if (hour < 20) {
                return 'सांजे';
            } else {
                return 'राती';
            }
        },
    });

    return gomDeva;

})));


/***/ }),

/***/ 3168:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Latin script [gom-latn]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            s: ['thoddea sekondamni', 'thodde sekond'],
            ss: [number + ' sekondamni', number + ' sekond'],
            m: ['eka mintan', 'ek minut'],
            mm: [number + ' mintamni', number + ' mintam'],
            h: ['eka voran', 'ek vor'],
            hh: [number + ' voramni', number + ' voram'],
            d: ['eka disan', 'ek dis'],
            dd: [number + ' disamni', number + ' dis'],
            M: ['eka mhoinean', 'ek mhoino'],
            MM: [number + ' mhoineamni', number + ' mhoine'],
            y: ['eka vorsan', 'ek voros'],
            yy: [number + ' vorsamni', number + ' vorsam'],
        };
        return isFuture ? format[key][0] : format[key][1];
    }

    var gomLatn = moment.defineLocale('gom-latn', {
        months: {
            standalone: 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(
                '_'
            ),
            format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(
                '_'
            ),
            isFormat: /MMMM(\s)+D[oD]?/,
        },
        monthsShort: 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: "Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var".split('_'),
        weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
        weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'A h:mm [vazta]',
            LTS: 'A h:mm:ss [vazta]',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY A h:mm [vazta]',
            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',
            llll: 'ddd, D MMM YYYY, A h:mm [vazta]',
        },
        calendar: {
            sameDay: '[Aiz] LT',
            nextDay: '[Faleam] LT',
            nextWeek: '[Fuddlo] dddd[,] LT',
            lastDay: '[Kal] LT',
            lastWeek: '[Fattlo] dddd[,] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s',
            past: '%s adim',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}(er)/,
        ordinal: function (number, period) {
            switch (period) {
                // the ordinal 'er' only applies to day of the month
                case 'D':
                    return number + 'er';
                default:
                case 'M':
                case 'Q':
                case 'DDD':
                case 'd':
                case 'w':
                case 'W':
                    return number;
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week
            doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)
        },
        meridiemParse: /rati|sokallim|donparam|sanje/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'rati') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'sokallim') {
                return hour;
            } else if (meridiem === 'donparam') {
                return hour > 12 ? hour : hour + 12;
            } else if (meridiem === 'sanje') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'rati';
            } else if (hour < 12) {
                return 'sokallim';
            } else if (hour < 16) {
                return 'donparam';
            } else if (hour < 20) {
                return 'sanje';
            } else {
                return 'rati';
            }
        },
    });

    return gomLatn;

})));


/***/ }),

/***/ 5349:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Gujarati [gu]
//! author : Kaushik Thanki : https://github.com/Kaushik1987

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '૧',
            2: '૨',
            3: '૩',
            4: '૪',
            5: '૫',
            6: '૬',
            7: '૭',
            8: '૮',
            9: '૯',
            0: '૦',
        },
        numberMap = {
            '૧': '1',
            '૨': '2',
            '૩': '3',
            '૪': '4',
            '૫': '5',
            '૬': '6',
            '૭': '7',
            '૮': '8',
            '૯': '9',
            '૦': '0',
        };

    var gu = moment.defineLocale('gu', {
        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(
            '_'
        ),
        monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(
            '_'
        ),
        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm વાગ્યે',
            LTS: 'A h:mm:ss વાગ્યે',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',
        },
        calendar: {
            sameDay: '[આજ] LT',
            nextDay: '[કાલે] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ગઇકાલે] LT',
            lastWeek: '[પાછલા] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s મા',
            past: '%s પહેલા',
            s: 'અમુક પળો',
            ss: '%d સેકંડ',
            m: 'એક મિનિટ',
            mm: '%d મિનિટ',
            h: 'એક કલાક',
            hh: '%d કલાક',
            d: 'એક દિવસ',
            dd: '%d દિવસ',
            M: 'એક મહિનો',
            MM: '%d મહિનો',
            y: 'એક વર્ષ',
            yy: '%d વર્ષ',
        },
        preparse: function (string) {
            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'રાત') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'સવાર') {
                return hour;
            } else if (meridiem === 'બપોર') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'સાંજ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'રાત';
            } else if (hour < 10) {
                return 'સવાર';
            } else if (hour < 17) {
                return 'બપોર';
            } else if (hour < 20) {
                return 'સાંજ';
            } else {
                return 'રાત';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return gu;

})));


/***/ }),

/***/ 4206:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hebrew [he]
//! author : Tomer Cohen : https://github.com/tomer
//! author : Moshe Simantov : https://github.com/DevelopmentIL
//! author : Tal Ater : https://github.com/TalAter

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var he = moment.defineLocale('he', {
        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(
            '_'
        ),
        monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split(
            '_'
        ),
        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [ב]MMMM YYYY',
            LLL: 'D [ב]MMMM YYYY HH:mm',
            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',
            l: 'D/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[היום ב־]LT',
            nextDay: '[מחר ב־]LT',
            nextWeek: 'dddd [בשעה] LT',
            lastDay: '[אתמול ב־]LT',
            lastWeek: '[ביום] dddd [האחרון בשעה] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'בעוד %s',
            past: 'לפני %s',
            s: 'מספר שניות',
            ss: '%d שניות',
            m: 'דקה',
            mm: '%d דקות',
            h: 'שעה',
            hh: function (number) {
                if (number === 2) {
                    return 'שעתיים';
                }
                return number + ' שעות';
            },
            d: 'יום',
            dd: function (number) {
                if (number === 2) {
                    return 'יומיים';
                }
                return number + ' ימים';
            },
            M: 'חודש',
            MM: function (number) {
                if (number === 2) {
                    return 'חודשיים';
                }
                return number + ' חודשים';
            },
            y: 'שנה',
            yy: function (number) {
                if (number === 2) {
                    return 'שנתיים';
                } else if (number % 10 === 0 && number !== 10) {
                    return number + ' שנה';
                }
                return number + ' שנים';
            },
        },
        meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
        isPM: function (input) {
            return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 5) {
                return 'לפנות בוקר';
            } else if (hour < 10) {
                return 'בבוקר';
            } else if (hour < 12) {
                return isLower ? 'לפנה"צ' : 'לפני הצהריים';
            } else if (hour < 18) {
                return isLower ? 'אחה"צ' : 'אחרי הצהריים';
            } else {
                return 'בערב';
            }
        },
    });

    return he;

})));


/***/ }),

/***/ 94:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hindi [hi]
//! author : Mayank Singhal : https://github.com/mayanksinghal

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '१',
            2: '२',
            3: '३',
            4: '४',
            5: '५',
            6: '६',
            7: '७',
            8: '८',
            9: '९',
            0: '०',
        },
        numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
        },
        monthsParse = [
            /^जन/i,
            /^फ़र|फर/i,
            /^मार्च/i,
            /^अप्रै/i,
            /^मई/i,
            /^जून/i,
            /^जुल/i,
            /^अग/i,
            /^सितं|सित/i,
            /^अक्टू/i,
            /^नव|नवं/i,
            /^दिसं|दिस/i,
        ],
        shortMonthsParse = [
            /^जन/i,
            /^फ़र/i,
            /^मार्च/i,
            /^अप्रै/i,
            /^मई/i,
            /^जून/i,
            /^जुल/i,
            /^अग/i,
            /^सित/i,
            /^अक्टू/i,
            /^नव/i,
            /^दिस/i,
        ];

    var hi = moment.defineLocale('hi', {
        months: {
            format: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(
                '_'
            ),
            standalone: 'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split(
                '_'
            ),
        },
        monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split(
            '_'
        ),
        weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat: {
            LT: 'A h:mm बजे',
            LTS: 'A h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',
        },

        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: shortMonthsParse,

        monthsRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,

        monthsShortRegex: /^(जनवरी|जन\.?|फ़रवरी|फरवरी|फ़र\.?|मार्च?|अप्रैल|अप्रै\.?|मई?|जून?|जुलाई|जुल\.?|अगस्त|अग\.?|सितम्बर|सितंबर|सित\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर|नव\.?|दिसम्बर|दिसंबर|दिस\.?)/i,

        monthsStrictRegex: /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\.?|अक्टूबर|अक्टू\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,

        monthsShortStrictRegex: /^(जन\.?|फ़र\.?|मार्च?|अप्रै\.?|मई?|जून?|जुल\.?|अग\.?|सित\.?|अक्टू\.?|नव\.?|दिस\.?)/i,

        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[कल] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[कल] LT',
            lastWeek: '[पिछले] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s में',
            past: '%s पहले',
            s: 'कुछ ही क्षण',
            ss: '%d सेकंड',
            m: 'एक मिनट',
            mm: '%d मिनट',
            h: 'एक घंटा',
            hh: '%d घंटे',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महीने',
            MM: '%d महीने',
            y: 'एक वर्ष',
            yy: '%d वर्ष',
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
        meridiemParse: /रात|सुबह|दोपहर|शाम/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'रात') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'सुबह') {
                return hour;
            } else if (meridiem === 'दोपहर') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'शाम') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'रात';
            } else if (hour < 10) {
                return 'सुबह';
            } else if (hour < 17) {
                return 'दोपहर';
            } else if (hour < 20) {
                return 'शाम';
            } else {
                return 'रात';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return hi;

})));


/***/ }),

/***/ 316:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Croatian [hr]
//! author : Bojan Marković : https://github.com/bmarkovic

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                if (number === 1) {
                    result += 'sekunda';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sekunde';
                } else {
                    result += 'sekundi';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'jedna minuta' : 'jedne minute';
            case 'mm':
                if (number === 1) {
                    result += 'minuta';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'minute';
                } else {
                    result += 'minuta';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'jedan sat' : 'jednog sata';
            case 'hh':
                if (number === 1) {
                    result += 'sat';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'sata';
                } else {
                    result += 'sati';
                }
                return result;
            case 'dd':
                if (number === 1) {
                    result += 'dan';
                } else {
                    result += 'dana';
                }
                return result;
            case 'MM':
                if (number === 1) {
                    result += 'mjesec';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'mjeseca';
                } else {
                    result += 'mjeseci';
                }
                return result;
            case 'yy':
                if (number === 1) {
                    result += 'godina';
                } else if (number === 2 || number === 3 || number === 4) {
                    result += 'godine';
                } else {
                    result += 'godina';
                }
                return result;
        }
    }

    var hr = moment.defineLocale('hr', {
        months: {
            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(
                '_'
            ),
            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(
                '_'
            ),
        },
        monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_'
        ),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'Do MMMM YYYY',
            LLL: 'Do MMMM YYYY H:mm',
            LLLL: 'dddd, Do MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[jučer u] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[prošlu] [nedjelju] [u] LT';
                    case 3:
                        return '[prošlu] [srijedu] [u] LT';
                    case 6:
                        return '[prošle] [subote] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prošli] dddd [u] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'par sekundi',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: 'dan',
            dd: translate,
            M: 'mjesec',
            MM: translate,
            y: 'godinu',
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return hr;

})));


/***/ }),

/***/ 2138:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hungarian [hu]
//! author : Adam Brunner : https://github.com/adambrunner
//! author : Peter Viszt  : https://github.com/passatgt

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(
        ' '
    );
    function translate(number, withoutSuffix, key, isFuture) {
        var num = number;
        switch (key) {
            case 's':
                return isFuture || withoutSuffix
                    ? 'néhány másodperc'
                    : 'néhány másodperce';
            case 'ss':
                return num + (isFuture || withoutSuffix)
                    ? ' másodperc'
                    : ' másodperce';
            case 'm':
                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'mm':
                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
            case 'h':
                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'hh':
                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
            case 'd':
                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'dd':
                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
            case 'M':
                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'MM':
                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
            case 'y':
                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
            case 'yy':
                return num + (isFuture || withoutSuffix ? ' év' : ' éve');
        }
        return '';
    }
    function week(isFuture) {
        return (
            (isFuture ? '' : '[múlt] ') +
            '[' +
            weekEndings[this.day()] +
            '] LT[-kor]'
        );
    }

    var hu = moment.defineLocale('hu', {
        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(
            '_'
        ),
        monthsShort: 'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY. MMMM D.',
            LLL: 'YYYY. MMMM D. H:mm',
            LLLL: 'YYYY. MMMM D., dddd H:mm',
        },
        meridiemParse: /de|du/i,
        isPM: function (input) {
            return input.charAt(1).toLowerCase() === 'u';
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower === true ? 'de' : 'DE';
            } else {
                return isLower === true ? 'du' : 'DU';
            }
        },
        calendar: {
            sameDay: '[ma] LT[-kor]',
            nextDay: '[holnap] LT[-kor]',
            nextWeek: function () {
                return week.call(this, true);
            },
            lastDay: '[tegnap] LT[-kor]',
            lastWeek: function () {
                return week.call(this, false);
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s múlva',
            past: '%s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return hu;

})));


/***/ }),

/***/ 1423:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Armenian [hy-am]
//! author : Armendarabyan : https://github.com/armendarabyan

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var hyAm = moment.defineLocale('hy-am', {
        months: {
            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(
                '_'
            ),
            standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(
                '_'
            ),
        },
        monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
        weekdays: 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(
            '_'
        ),
        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY թ.',
            LLL: 'D MMMM YYYY թ., HH:mm',
            LLLL: 'dddd, D MMMM YYYY թ., HH:mm',
        },
        calendar: {
            sameDay: '[այսօր] LT',
            nextDay: '[վաղը] LT',
            lastDay: '[երեկ] LT',
            nextWeek: function () {
                return 'dddd [օրը ժամը] LT';
            },
            lastWeek: function () {
                return '[անցած] dddd [օրը ժամը] LT';
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s հետո',
            past: '%s առաջ',
            s: 'մի քանի վայրկյան',
            ss: '%d վայրկյան',
            m: 'րոպե',
            mm: '%d րոպե',
            h: 'ժամ',
            hh: '%d ժամ',
            d: 'օր',
            dd: '%d օր',
            M: 'ամիս',
            MM: '%d ամիս',
            y: 'տարի',
            yy: '%d տարի',
        },
        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
        isPM: function (input) {
            return /^(ցերեկվա|երեկոյան)$/.test(input);
        },
        meridiem: function (hour) {
            if (hour < 4) {
                return 'գիշերվա';
            } else if (hour < 12) {
                return 'առավոտվա';
            } else if (hour < 17) {
                return 'ցերեկվա';
            } else {
                return 'երեկոյան';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'DDD':
                case 'w':
                case 'W':
                case 'DDDo':
                    if (number === 1) {
                        return number + '-ին';
                    }
                    return number + '-րդ';
                default:
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return hyAm;

})));


/***/ }),

/***/ 9218:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Indonesian [id]
//! author : Mohammad Satrio Utomo : https://github.com/tyok
//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var id = moment.defineLocale('id', {
        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|siang|sore|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'siang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sore' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'siang';
            } else if (hours < 19) {
                return 'sore';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Besok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kemarin pukul] LT',
            lastWeek: 'dddd [lalu pukul] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lalu',
            s: 'beberapa detik',
            ss: '%d detik',
            m: 'semenit',
            mm: '%d menit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return id;

})));


/***/ }),

/***/ 135:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Icelandic [is]
//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function plural(n) {
        if (n % 100 === 11) {
            return true;
        } else if (n % 10 === 1) {
            return false;
        }
        return true;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture
                    ? 'nokkrar sekúndur'
                    : 'nokkrum sekúndum';
            case 'ss':
                if (plural(number)) {
                    return (
                        result +
                        (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum')
                    );
                }
                return result + 'sekúnda';
            case 'm':
                return withoutSuffix ? 'mínúta' : 'mínútu';
            case 'mm':
                if (plural(number)) {
                    return (
                        result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum')
                    );
                } else if (withoutSuffix) {
                    return result + 'mínúta';
                }
                return result + 'mínútu';
            case 'hh':
                if (plural(number)) {
                    return (
                        result +
                        (withoutSuffix || isFuture
                            ? 'klukkustundir'
                            : 'klukkustundum')
                    );
                }
                return result + 'klukkustund';
            case 'd':
                if (withoutSuffix) {
                    return 'dagur';
                }
                return isFuture ? 'dag' : 'degi';
            case 'dd':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'dagar';
                    }
                    return result + (isFuture ? 'daga' : 'dögum');
                } else if (withoutSuffix) {
                    return result + 'dagur';
                }
                return result + (isFuture ? 'dag' : 'degi');
            case 'M':
                if (withoutSuffix) {
                    return 'mánuður';
                }
                return isFuture ? 'mánuð' : 'mánuði';
            case 'MM':
                if (plural(number)) {
                    if (withoutSuffix) {
                        return result + 'mánuðir';
                    }
                    return result + (isFuture ? 'mánuði' : 'mánuðum');
                } else if (withoutSuffix) {
                    return result + 'mánuður';
                }
                return result + (isFuture ? 'mánuð' : 'mánuði');
            case 'y':
                return withoutSuffix || isFuture ? 'ár' : 'ári';
            case 'yy':
                if (plural(number)) {
                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
                }
                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
        }
    }

    var is = moment.defineLocale('is', {
        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
        weekdays: 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(
            '_'
        ),
        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',
        },
        calendar: {
            sameDay: '[í dag kl.] LT',
            nextDay: '[á morgun kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[í gær kl.] LT',
            lastWeek: '[síðasta] dddd [kl.] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'eftir %s',
            past: 'fyrir %s síðan',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: 'klukkustund',
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return is;

})));


/***/ }),

/***/ 150:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian (Switzerland) [it-ch]
//! author : xfh : https://github.com/xfh

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var itCh = moment.defineLocale('it-ch', {
        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
            '_'
        ),
        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
            '_'
        ),
        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Oggi alle] LT',
            nextDay: '[Domani alle] LT',
            nextWeek: 'dddd [alle] LT',
            lastDay: '[Ieri alle] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[la scorsa] dddd [alle] LT';
                    default:
                        return '[lo scorso] dddd [alle] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: function (s) {
                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;
            },
            past: '%s fa',
            s: 'alcuni secondi',
            ss: '%d secondi',
            m: 'un minuto',
            mm: '%d minuti',
            h: "un'ora",
            hh: '%d ore',
            d: 'un giorno',
            dd: '%d giorni',
            M: 'un mese',
            MM: '%d mesi',
            y: 'un anno',
            yy: '%d anni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return itCh;

})));


/***/ }),

/***/ 626:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian [it]
//! author : Lorenzo : https://github.com/aliem
//! author: Mattia Larentis: https://github.com/nostalgiaz
//! author: Marco : https://github.com/Manfre98

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var it = moment.defineLocale('it', {
        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(
            '_'
        ),
        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(
            '_'
        ),
        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: function () {
                return (
                    '[Oggi a' +
                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
                    ']LT'
                );
            },
            nextDay: function () {
                return (
                    '[Domani a' +
                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
                    ']LT'
                );
            },
            nextWeek: function () {
                return (
                    'dddd [a' +
                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
                    ']LT'
                );
            },
            lastDay: function () {
                return (
                    '[Ieri a' +
                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : "ll'") +
                    ']LT'
                );
            },
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return (
                            '[La scorsa] dddd [a' +
                            (this.hours() > 1
                                ? 'lle '
                                : this.hours() === 0
                                ? ' '
                                : "ll'") +
                            ']LT'
                        );
                    default:
                        return (
                            '[Lo scorso] dddd [a' +
                            (this.hours() > 1
                                ? 'lle '
                                : this.hours() === 0
                                ? ' '
                                : "ll'") +
                            ']LT'
                        );
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'tra %s',
            past: '%s fa',
            s: 'alcuni secondi',
            ss: '%d secondi',
            m: 'un minuto',
            mm: '%d minuti',
            h: "un'ora",
            hh: '%d ore',
            d: 'un giorno',
            dd: '%d giorni',
            w: 'una settimana',
            ww: '%d settimane',
            M: 'un mese',
            MM: '%d mesi',
            y: 'un anno',
            yy: '%d anni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return it;

})));


/***/ }),

/***/ 9183:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Japanese [ja]
//! author : LI Long : https://github.com/baryon

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ja = moment.defineLocale('ja', {
        eras: [
            {
                since: '2019-05-01',
                offset: 1,
                name: '令和',
                narrow: '㋿',
                abbr: 'R',
            },
            {
                since: '1989-01-08',
                until: '2019-04-30',
                offset: 1,
                name: '平成',
                narrow: '㍻',
                abbr: 'H',
            },
            {
                since: '1926-12-25',
                until: '1989-01-07',
                offset: 1,
                name: '昭和',
                narrow: '㍼',
                abbr: 'S',
            },
            {
                since: '1912-07-30',
                until: '1926-12-24',
                offset: 1,
                name: '大正',
                narrow: '㍽',
                abbr: 'T',
            },
            {
                since: '1873-01-01',
                until: '1912-07-29',
                offset: 6,
                name: '明治',
                narrow: '㍾',
                abbr: 'M',
            },
            {
                since: '0001-01-01',
                until: '1873-12-31',
                offset: 1,
                name: '西暦',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: '紀元前',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        eraYearOrdinalRegex: /(元|\d+)年/,
        eraYearOrdinalParse: function (input, match) {
            return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);
        },
        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),
        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日 dddd HH:mm',
            l: 'YYYY/MM/DD',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日(ddd) HH:mm',
        },
        meridiemParse: /午前|午後/i,
        isPM: function (input) {
            return input === '午後';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return '午前';
            } else {
                return '午後';
            }
        },
        calendar: {
            sameDay: '[今日] LT',
            nextDay: '[明日] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    return '[来週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            lastDay: '[昨日] LT',
            lastWeek: function (now) {
                if (this.week() !== now.week()) {
                    return '[先週]dddd LT';
                } else {
                    return 'dddd LT';
                }
            },
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}日/,
        ordinal: function (number, period) {
            switch (period) {
                case 'y':
                    return number === 1 ? '元年' : number + '年';
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '数秒',
            ss: '%d秒',
            m: '1分',
            mm: '%d分',
            h: '1時間',
            hh: '%d時間',
            d: '1日',
            dd: '%d日',
            M: '1ヶ月',
            MM: '%dヶ月',
            y: '1年',
            yy: '%d年',
        },
    });

    return ja;

})));


/***/ }),

/***/ 4286:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Javanese [jv]
//! author : Rony Lantip : https://github.com/lantip
//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var jv = moment.defineLocale('jv', {
        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
        weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
        weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /enjing|siyang|sonten|ndalu/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'enjing') {
                return hour;
            } else if (meridiem === 'siyang') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
                return hour + 12;
            }
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'enjing';
            } else if (hours < 15) {
                return 'siyang';
            } else if (hours < 19) {
                return 'sonten';
            } else {
                return 'ndalu';
            }
        },
        calendar: {
            sameDay: '[Dinten puniko pukul] LT',
            nextDay: '[Mbenjang pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kala wingi pukul] LT',
            lastWeek: 'dddd [kepengker pukul] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'wonten ing %s',
            past: '%s ingkang kepengker',
            s: 'sawetawis detik',
            ss: '%d detik',
            m: 'setunggal menit',
            mm: '%d menit',
            h: 'setunggal jam',
            hh: '%d jam',
            d: 'sedinten',
            dd: '%d dinten',
            M: 'sewulan',
            MM: '%d wulan',
            y: 'setaun',
            yy: '%d taun',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return jv;

})));


/***/ }),

/***/ 2105:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Georgian [ka]
//! author : Irakli Janiashvili : https://github.com/IrakliJani

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ka = moment.defineLocale('ka', {
        months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(
            '_'
        ),
        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
        weekdays: {
            standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(
                '_'
            ),
            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(
                '_'
            ),
            isFormat: /(წინა|შემდეგ)/,
        },
        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[დღეს] LT[-ზე]',
            nextDay: '[ხვალ] LT[-ზე]',
            lastDay: '[გუშინ] LT[-ზე]',
            nextWeek: '[შემდეგ] dddd LT[-ზე]',
            lastWeek: '[წინა] dddd LT-ზე',
            sameElse: 'L',
        },
        relativeTime: {
            future: function (s) {
                return s.replace(/(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/, function (
                    $0,
                    $1,
                    $2
                ) {
                    return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';
                });
            },
            past: function (s) {
                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {
                    return s.replace(/(ი|ე)$/, 'ის წინ');
                }
                if (/წელი/.test(s)) {
                    return s.replace(/წელი$/, 'წლის წინ');
                }
                return s;
            },
            s: 'რამდენიმე წამი',
            ss: '%d წამი',
            m: 'წუთი',
            mm: '%d წუთი',
            h: 'საათი',
            hh: '%d საათი',
            d: 'დღე',
            dd: '%d დღე',
            M: 'თვე',
            MM: '%d თვე',
            y: 'წელი',
            yy: '%d წელი',
        },
        dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
        ordinal: function (number) {
            if (number === 0) {
                return number;
            }
            if (number === 1) {
                return number + '-ლი';
            }
            if (
                number < 20 ||
                (number <= 100 && number % 20 === 0) ||
                number % 100 === 0
            ) {
                return 'მე-' + number;
            }
            return number + '-ე';
        },
        week: {
            dow: 1,
            doy: 7,
        },
    });

    return ka;

})));


/***/ }),

/***/ 7772:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kazakh [kk]
//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        0: '-ші',
        1: '-ші',
        2: '-ші',
        3: '-ші',
        4: '-ші',
        5: '-ші',
        6: '-шы',
        7: '-ші',
        8: '-ші',
        9: '-шы',
        10: '-шы',
        20: '-шы',
        30: '-шы',
        40: '-шы',
        50: '-ші',
        60: '-шы',
        70: '-ші',
        80: '-ші',
        90: '-шы',
        100: '-ші',
    };

    var kk = moment.defineLocale('kk', {
        months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(
            '_'
        ),
        monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
        weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(
            '_'
        ),
        weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
        weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Бүгін сағат] LT',
            nextDay: '[Ертең сағат] LT',
            nextWeek: 'dddd [сағат] LT',
            lastDay: '[Кеше сағат] LT',
            lastWeek: '[Өткен аптаның] dddd [сағат] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ішінде',
            past: '%s бұрын',
            s: 'бірнеше секунд',
            ss: '%d секунд',
            m: 'бір минут',
            mm: '%d минут',
            h: 'бір сағат',
            hh: '%d сағат',
            d: 'бір күн',
            dd: '%d күн',
            M: 'бір ай',
            MM: '%d ай',
            y: 'бір жыл',
            yy: '%d жыл',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return kk;

})));


/***/ }),

/***/ 8758:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Cambodian [km]
//! author : Kruy Vanna : https://github.com/kruyvanna

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '១',
            2: '២',
            3: '៣',
            4: '៤',
            5: '៥',
            6: '៦',
            7: '៧',
            8: '៨',
            9: '៩',
            0: '០',
        },
        numberMap = {
            '១': '1',
            '២': '2',
            '៣': '3',
            '៤': '4',
            '៥': '5',
            '៦': '6',
            '៧': '7',
            '៨': '8',
            '៩': '9',
            '០': '0',
        };

    var km = moment.defineLocale('km', {
        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(
            '_'
        ),
        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        meridiemParse: /ព្រឹក|ល្ងាច/,
        isPM: function (input) {
            return input === 'ល្ងាច';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ព្រឹក';
            } else {
                return 'ល្ងាច';
            }
        },
        calendar: {
            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
            nextDay: '[ស្អែក ម៉ោង] LT',
            nextWeek: 'dddd [ម៉ោង] LT',
            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%sទៀត',
            past: '%sមុន',
            s: 'ប៉ុន្មានវិនាទី',
            ss: '%d វិនាទី',
            m: 'មួយនាទី',
            mm: '%d នាទី',
            h: 'មួយម៉ោង',
            hh: '%d ម៉ោង',
            d: 'មួយថ្ងៃ',
            dd: '%d ថ្ងៃ',
            M: 'មួយខែ',
            MM: '%d ខែ',
            y: 'មួយឆ្នាំ',
            yy: '%d ឆ្នាំ',
        },
        dayOfMonthOrdinalParse: /ទី\d{1,2}/,
        ordinal: 'ទី%d',
        preparse: function (string) {
            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return km;

})));


/***/ }),

/***/ 9282:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kannada [kn]
//! author : Rajeev Naik : https://github.com/rajeevnaikte

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '೧',
            2: '೨',
            3: '೩',
            4: '೪',
            5: '೫',
            6: '೬',
            7: '೭',
            8: '೮',
            9: '೯',
            0: '೦',
        },
        numberMap = {
            '೧': '1',
            '೨': '2',
            '೩': '3',
            '೪': '4',
            '೫': '5',
            '೬': '6',
            '೭': '7',
            '೮': '8',
            '೯': '9',
            '೦': '0',
        };

    var kn = moment.defineLocale('kn', {
        months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(
            '_'
        ),
        monthsShort: 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(
            '_'
        ),
        weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
        weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
        },
        calendar: {
            sameDay: '[ಇಂದು] LT',
            nextDay: '[ನಾಳೆ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ನಿನ್ನೆ] LT',
            lastWeek: '[ಕೊನೆಯ] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ನಂತರ',
            past: '%s ಹಿಂದೆ',
            s: 'ಕೆಲವು ಕ್ಷಣಗಳು',
            ss: '%d ಸೆಕೆಂಡುಗಳು',
            m: 'ಒಂದು ನಿಮಿಷ',
            mm: '%d ನಿಮಿಷ',
            h: 'ಒಂದು ಗಂಟೆ',
            hh: '%d ಗಂಟೆ',
            d: 'ಒಂದು ದಿನ',
            dd: '%d ದಿನ',
            M: 'ಒಂದು ತಿಂಗಳು',
            MM: '%d ತಿಂಗಳು',
            y: 'ಒಂದು ವರ್ಷ',
            yy: '%d ವರ್ಷ',
        },
        preparse: function (string) {
            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ರಾತ್ರಿ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
                return hour;
            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ಸಂಜೆ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ರಾತ್ರಿ';
            } else if (hour < 10) {
                return 'ಬೆಳಿಗ್ಗೆ';
            } else if (hour < 17) {
                return 'ಮಧ್ಯಾಹ್ನ';
            } else if (hour < 20) {
                return 'ಸಂಜೆ';
            } else {
                return 'ರಾತ್ರಿ';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
        ordinal: function (number) {
            return number + 'ನೇ';
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return kn;

})));


/***/ }),

/***/ 3730:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Korean [ko]
//! author : Kyungwook, Park : https://github.com/kyungw00k
//! author : Jeeeyul Lee <jeeeyul@gmail.com>

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ko = moment.defineLocale('ko', {
        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(
            '_'
        ),
        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),
        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'YYYY.MM.DD.',
            LL: 'YYYY년 MMMM D일',
            LLL: 'YYYY년 MMMM D일 A h:mm',
            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',
            l: 'YYYY.MM.DD.',
            ll: 'YYYY년 MMMM D일',
            lll: 'YYYY년 MMMM D일 A h:mm',
            llll: 'YYYY년 MMMM D일 dddd A h:mm',
        },
        calendar: {
            sameDay: '오늘 LT',
            nextDay: '내일 LT',
            nextWeek: 'dddd LT',
            lastDay: '어제 LT',
            lastWeek: '지난주 dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s 후',
            past: '%s 전',
            s: '몇 초',
            ss: '%d초',
            m: '1분',
            mm: '%d분',
            h: '한 시간',
            hh: '%d시간',
            d: '하루',
            dd: '%d일',
            M: '한 달',
            MM: '%d달',
            y: '일 년',
            yy: '%d년',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '일';
                case 'M':
                    return number + '월';
                case 'w':
                case 'W':
                    return number + '주';
                default:
                    return number;
            }
        },
        meridiemParse: /오전|오후/,
        isPM: function (token) {
            return token === '오후';
        },
        meridiem: function (hour, minute, isUpper) {
            return hour < 12 ? '오전' : '오후';
        },
    });

    return ko;

})));


/***/ }),

/***/ 1408:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kurdish [ku]
//! author : Shahram Mebashar : https://github.com/ShahramMebashar

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '١',
            2: '٢',
            3: '٣',
            4: '٤',
            5: '٥',
            6: '٦',
            7: '٧',
            8: '٨',
            9: '٩',
            0: '٠',
        },
        numberMap = {
            '١': '1',
            '٢': '2',
            '٣': '3',
            '٤': '4',
            '٥': '5',
            '٦': '6',
            '٧': '7',
            '٨': '8',
            '٩': '9',
            '٠': '0',
        },
        months = [
            'کانونی دووەم',
            'شوبات',
            'ئازار',
            'نیسان',
            'ئایار',
            'حوزەیران',
            'تەمموز',
            'ئاب',
            'ئەیلوول',
            'تشرینی یەكەم',
            'تشرینی دووەم',
            'كانونی یەکەم',
        ];

    var ku = moment.defineLocale('ku', {
        months: months,
        monthsShort: months,
        weekdays: 'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(
            '_'
        ),
        weekdaysShort: 'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split(
            '_'
        ),
        weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        meridiemParse: /ئێواره‌|به‌یانی/,
        isPM: function (input) {
            return /ئێواره‌/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'به‌یانی';
            } else {
                return 'ئێواره‌';
            }
        },
        calendar: {
            sameDay: '[ئه‌مرۆ كاتژمێر] LT',
            nextDay: '[به‌یانی كاتژمێر] LT',
            nextWeek: 'dddd [كاتژمێر] LT',
            lastDay: '[دوێنێ كاتژمێر] LT',
            lastWeek: 'dddd [كاتژمێر] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'له‌ %s',
            past: '%s',
            s: 'چه‌ند چركه‌یه‌ك',
            ss: 'چركه‌ %d',
            m: 'یه‌ك خوله‌ك',
            mm: '%d خوله‌ك',
            h: 'یه‌ك كاتژمێر',
            hh: '%d كاتژمێر',
            d: 'یه‌ك ڕۆژ',
            dd: '%d ڕۆژ',
            M: 'یه‌ك مانگ',
            MM: '%d مانگ',
            y: 'یه‌ك ساڵ',
            yy: '%d ساڵ',
        },
        preparse: function (string) {
            return string
                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
                    return numberMap[match];
                })
                .replace(/،/g, ',');
        },
        postformat: function (string) {
            return string
                .replace(/\d/g, function (match) {
                    return symbolMap[match];
                })
                .replace(/,/g, '،');
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return ku;

})));


/***/ }),

/***/ 3291:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kyrgyz [ky]
//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        0: '-чү',
        1: '-чи',
        2: '-чи',
        3: '-чү',
        4: '-чү',
        5: '-чи',
        6: '-чы',
        7: '-чи',
        8: '-чи',
        9: '-чу',
        10: '-чу',
        20: '-чы',
        30: '-чу',
        40: '-чы',
        50: '-чү',
        60: '-чы',
        70: '-чи',
        80: '-чи',
        90: '-чу',
        100: '-чү',
    };

    var ky = moment.defineLocale('ky', {
        months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
            '_'
        ),
        monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(
            '_'
        ),
        weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(
            '_'
        ),
        weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
        weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Бүгүн саат] LT',
            nextDay: '[Эртең саат] LT',
            nextWeek: 'dddd [саат] LT',
            lastDay: '[Кечээ саат] LT',
            lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ичинде',
            past: '%s мурун',
            s: 'бирнече секунд',
            ss: '%d секунд',
            m: 'бир мүнөт',
            mm: '%d мүнөт',
            h: 'бир саат',
            hh: '%d саат',
            d: 'бир күн',
            dd: '%d күн',
            M: 'бир ай',
            MM: '%d ай',
            y: 'бир жыл',
            yy: '%d жыл',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return ky;

})));


/***/ }),

/***/ 6841:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Luxembourgish [lb]
//! author : mweimerskirch : https://github.com/mweimerskirch
//! author : David Raison : https://github.com/kwisatz

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            m: ['eng Minutt', 'enger Minutt'],
            h: ['eng Stonn', 'enger Stonn'],
            d: ['een Dag', 'engem Dag'],
            M: ['ee Mount', 'engem Mount'],
            y: ['ee Joer', 'engem Joer'],
        };
        return withoutSuffix ? format[key][0] : format[key][1];
    }
    function processFutureTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'a ' + string;
        }
        return 'an ' + string;
    }
    function processPastTime(string) {
        var number = string.substr(0, string.indexOf(' '));
        if (eifelerRegelAppliesToNumber(number)) {
            return 'viru ' + string;
        }
        return 'virun ' + string;
    }
    /**
     * Returns true if the word before the given number loses the '-n' ending.
     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
     *
     * @param number {integer}
     * @returns {boolean}
     */
    function eifelerRegelAppliesToNumber(number) {
        number = parseInt(number, 10);
        if (isNaN(number)) {
            return false;
        }
        if (number < 0) {
            // Negative Number --> always true
            return true;
        } else if (number < 10) {
            // Only 1 digit
            if (4 <= number && number <= 7) {
                return true;
            }
            return false;
        } else if (number < 100) {
            // 2 digits
            var lastDigit = number % 10,
                firstDigit = number / 10;
            if (lastDigit === 0) {
                return eifelerRegelAppliesToNumber(firstDigit);
            }
            return eifelerRegelAppliesToNumber(lastDigit);
        } else if (number < 10000) {
            // 3 or 4 digits --> recursively check first digit
            while (number >= 10) {
                number = number / 10;
            }
            return eifelerRegelAppliesToNumber(number);
        } else {
            // Anything larger than 4 digits: recursively check first n-3 digits
            number = number / 1000;
            return eifelerRegelAppliesToNumber(number);
        }
    }

    var lb = moment.defineLocale('lb', {
        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(
            '_'
        ),
        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(
            '_'
        ),
        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm [Auer]',
            LTS: 'H:mm:ss [Auer]',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm [Auer]',
            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',
        },
        calendar: {
            sameDay: '[Haut um] LT',
            sameElse: 'L',
            nextDay: '[Muer um] LT',
            nextWeek: 'dddd [um] LT',
            lastDay: '[Gëschter um] LT',
            lastWeek: function () {
                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
                switch (this.day()) {
                    case 2:
                    case 4:
                        return '[Leschten] dddd [um] LT';
                    default:
                        return '[Leschte] dddd [um] LT';
                }
            },
        },
        relativeTime: {
            future: processFutureTime,
            past: processPastTime,
            s: 'e puer Sekonnen',
            ss: '%d Sekonnen',
            m: processRelativeTime,
            mm: '%d Minutten',
            h: processRelativeTime,
            hh: '%d Stonnen',
            d: processRelativeTime,
            dd: '%d Deeg',
            M: processRelativeTime,
            MM: '%d Méint',
            y: processRelativeTime,
            yy: '%d Joer',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return lb;

})));


/***/ }),

/***/ 5466:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lao [lo]
//! author : Ryan Hart : https://github.com/ryanhart2

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var lo = moment.defineLocale('lo', {
        months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
            '_'
        ),
        monthsShort: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(
            '_'
        ),
        weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
        weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'ວັນdddd D MMMM YYYY HH:mm',
        },
        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
        isPM: function (input) {
            return input === 'ຕອນແລງ';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ຕອນເຊົ້າ';
            } else {
                return 'ຕອນແລງ';
            }
        },
        calendar: {
            sameDay: '[ມື້ນີ້ເວລາ] LT',
            nextDay: '[ມື້ອື່ນເວລາ] LT',
            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',
            lastDay: '[ມື້ວານນີ້ເວລາ] LT',
            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ອີກ %s',
            past: '%sຜ່ານມາ',
            s: 'ບໍ່ເທົ່າໃດວິນາທີ',
            ss: '%d ວິນາທີ',
            m: '1 ນາທີ',
            mm: '%d ນາທີ',
            h: '1 ຊົ່ວໂມງ',
            hh: '%d ຊົ່ວໂມງ',
            d: '1 ມື້',
            dd: '%d ມື້',
            M: '1 ເດືອນ',
            MM: '%d ເດືອນ',
            y: '1 ປີ',
            yy: '%d ປີ',
        },
        dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
        ordinal: function (number) {
            return 'ທີ່' + number;
        },
    });

    return lo;

})));


/***/ }),

/***/ 7010:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lithuanian [lt]
//! author : Mindaugas Mozūras : https://github.com/mmozuras

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var units = {
        ss: 'sekundė_sekundžių_sekundes',
        m: 'minutė_minutės_minutę',
        mm: 'minutės_minučių_minutes',
        h: 'valanda_valandos_valandą',
        hh: 'valandos_valandų_valandas',
        d: 'diena_dienos_dieną',
        dd: 'dienos_dienų_dienas',
        M: 'mėnuo_mėnesio_mėnesį',
        MM: 'mėnesiai_mėnesių_mėnesius',
        y: 'metai_metų_metus',
        yy: 'metai_metų_metus',
    };
    function translateSeconds(number, withoutSuffix, key, isFuture) {
        if (withoutSuffix) {
            return 'kelios sekundės';
        } else {
            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
        }
    }
    function translateSingular(number, withoutSuffix, key, isFuture) {
        return withoutSuffix
            ? forms(key)[0]
            : isFuture
            ? forms(key)[1]
            : forms(key)[2];
    }
    function special(number) {
        return number % 10 === 0 || (number > 10 && number < 20);
    }
    function forms(key) {
        return units[key].split('_');
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        if (number === 1) {
            return (
                result + translateSingular(number, withoutSuffix, key[0], isFuture)
            );
        } else if (withoutSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
        } else {
            if (isFuture) {
                return result + forms(key)[1];
            } else {
                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
        }
    }
    var lt = moment.defineLocale('lt', {
        months: {
            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(
                '_'
            ),
            standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(
                '_'
            ),
            isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/,
        },
        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
        weekdays: {
            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(
                '_'
            ),
            standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(
                '_'
            ),
            isFormat: /dddd HH:mm/,
        },
        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY [m.] MMMM D [d.]',
            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
            l: 'YYYY-MM-DD',
            ll: 'YYYY [m.] MMMM D [d.]',
            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',
        },
        calendar: {
            sameDay: '[Šiandien] LT',
            nextDay: '[Rytoj] LT',
            nextWeek: 'dddd LT',
            lastDay: '[Vakar] LT',
            lastWeek: '[Praėjusį] dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'po %s',
            past: 'prieš %s',
            s: translateSeconds,
            ss: translate,
            m: translateSingular,
            mm: translate,
            h: translateSingular,
            hh: translate,
            d: translateSingular,
            dd: translate,
            M: translateSingular,
            MM: translate,
            y: translateSingular,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}-oji/,
        ordinal: function (number) {
            return number + '-oji';
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return lt;

})));


/***/ }),

/***/ 7595:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Latvian [lv]
//! author : Kristaps Karlsons : https://github.com/skakri
//! author : Jānis Elmeris : https://github.com/JanisE

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var units = {
        ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),
        m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),
        h: 'stundas_stundām_stunda_stundas'.split('_'),
        hh: 'stundas_stundām_stunda_stundas'.split('_'),
        d: 'dienas_dienām_diena_dienas'.split('_'),
        dd: 'dienas_dienām_diena_dienas'.split('_'),
        M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
        y: 'gada_gadiem_gads_gadi'.split('_'),
        yy: 'gada_gadiem_gads_gadi'.split('_'),
    };
    /**
     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
     */
    function format(forms, number, withoutSuffix) {
        if (withoutSuffix) {
            // E.g. "21 minūte", "3 minūtes".
            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
        } else {
            // E.g. "21 minūtes" as in "pēc 21 minūtes".
            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
        }
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        return number + ' ' + format(units[key], number, withoutSuffix);
    }
    function relativeTimeWithSingular(number, withoutSuffix, key) {
        return format(units[key], number, withoutSuffix);
    }
    function relativeSeconds(number, withoutSuffix) {
        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
    }

    var lv = moment.defineLocale('lv', {
        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(
            '_'
        ),
        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY.',
            LL: 'YYYY. [gada] D. MMMM',
            LLL: 'YYYY. [gada] D. MMMM, HH:mm',
            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',
        },
        calendar: {
            sameDay: '[Šodien pulksten] LT',
            nextDay: '[Rīt pulksten] LT',
            nextWeek: 'dddd [pulksten] LT',
            lastDay: '[Vakar pulksten] LT',
            lastWeek: '[Pagājušā] dddd [pulksten] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'pēc %s',
            past: 'pirms %s',
            s: relativeSeconds,
            ss: relativeTimeWithPlural,
            m: relativeTimeWithSingular,
            mm: relativeTimeWithPlural,
            h: relativeTimeWithSingular,
            hh: relativeTimeWithPlural,
            d: relativeTimeWithSingular,
            dd: relativeTimeWithPlural,
            M: relativeTimeWithSingular,
            MM: relativeTimeWithPlural,
            y: relativeTimeWithSingular,
            yy: relativeTimeWithPlural,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return lv;

})));


/***/ }),

/***/ 9861:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Montenegrin [me]
//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var translator = {
        words: {
            //Different grammatical cases
            ss: ['sekund', 'sekunda', 'sekundi'],
            m: ['jedan minut', 'jednog minuta'],
            mm: ['minut', 'minuta', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mjesec', 'mjeseca', 'mjeseci'],
            yy: ['godina', 'godine', 'godina'],
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2];
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return (
                    number +
                    ' ' +
                    translator.correctGrammaticalCase(number, wordKey)
                );
            }
        },
    };

    var me = moment.defineLocale('me', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(
            '_'
        ),
        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sjutra u] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedjelju] [u] LT';
                    case 3:
                        return '[u] [srijedu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[juče u] LT',
            lastWeek: function () {
                var lastWeekDays = [
                    '[prošle] [nedjelje] [u] LT',
                    '[prošlog] [ponedjeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srijede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT',
                ];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'prije %s',
            s: 'nekoliko sekundi',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mjesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return me;

})));


/***/ }),

/***/ 5493:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maori [mi]
//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var mi = moment.defineLocale('mi', {
        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(
            '_'
        ),
        monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(
            '_'
        ),
        monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
        monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [i] HH:mm',
            LLLL: 'dddd, D MMMM YYYY [i] HH:mm',
        },
        calendar: {
            sameDay: '[i teie mahana, i] LT',
            nextDay: '[apopo i] LT',
            nextWeek: 'dddd [i] LT',
            lastDay: '[inanahi i] LT',
            lastWeek: 'dddd [whakamutunga i] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'i roto i %s',
            past: '%s i mua',
            s: 'te hēkona ruarua',
            ss: '%d hēkona',
            m: 'he meneti',
            mm: '%d meneti',
            h: 'te haora',
            hh: '%d haora',
            d: 'he ra',
            dd: '%d ra',
            M: 'he marama',
            MM: '%d marama',
            y: 'he tau',
            yy: '%d tau',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return mi;

})));


/***/ }),

/***/ 5966:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Macedonian [mk]
//! author : Borislav Mickov : https://github.com/B0k0
//! author : Sashko Todorov : https://github.com/bkyceh

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var mk = moment.defineLocale('mk', {
        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(
            '_'
        ),
        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(
            '_'
        ),
        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[Денес во] LT',
            nextDay: '[Утре во] LT',
            nextWeek: '[Во] dddd [во] LT',
            lastDay: '[Вчера во] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 6:
                        return '[Изминатата] dddd [во] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[Изминатиот] dddd [во] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'за %s',
            past: 'пред %s',
            s: 'неколку секунди',
            ss: '%d секунди',
            m: 'една минута',
            mm: '%d минути',
            h: 'еден час',
            hh: '%d часа',
            d: 'еден ден',
            dd: '%d дена',
            M: 'еден месец',
            MM: '%d месеци',
            y: 'една година',
            yy: '%d години',
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
        ordinal: function (number) {
            var lastDigit = number % 10,
                last2Digits = number % 100;
            if (number === 0) {
                return number + '-ев';
            } else if (last2Digits === 0) {
                return number + '-ен';
            } else if (last2Digits > 10 && last2Digits < 20) {
                return number + '-ти';
            } else if (lastDigit === 1) {
                return number + '-ви';
            } else if (lastDigit === 2) {
                return number + '-ри';
            } else if (lastDigit === 7 || lastDigit === 8) {
                return number + '-ми';
            } else {
                return number + '-ти';
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return mk;

})));


/***/ }),

/***/ 7341:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malayalam [ml]
//! author : Floyd Pink : https://github.com/floydpink

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ml = moment.defineLocale('ml', {
        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(
            '_'
        ),
        monthsShort: 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(
            '_'
        ),
        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm -നു',
            LTS: 'A h:mm:ss -നു',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm -നു',
            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',
        },
        calendar: {
            sameDay: '[ഇന്ന്] LT',
            nextDay: '[നാളെ] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[ഇന്നലെ] LT',
            lastWeek: '[കഴിഞ്ഞ] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s കഴിഞ്ഞ്',
            past: '%s മുൻപ്',
            s: 'അൽപ നിമിഷങ്ങൾ',
            ss: '%d സെക്കൻഡ്',
            m: 'ഒരു മിനിറ്റ്',
            mm: '%d മിനിറ്റ്',
            h: 'ഒരു മണിക്കൂർ',
            hh: '%d മണിക്കൂർ',
            d: 'ഒരു ദിവസം',
            dd: '%d ദിവസം',
            M: 'ഒരു മാസം',
            MM: '%d മാസം',
            y: 'ഒരു വർഷം',
            yy: '%d വർഷം',
        },
        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                (meridiem === 'രാത്രി' && hour >= 4) ||
                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                meridiem === 'വൈകുന്നേരം'
            ) {
                return hour + 12;
            } else {
                return hour;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'രാത്രി';
            } else if (hour < 12) {
                return 'രാവിലെ';
            } else if (hour < 17) {
                return 'ഉച്ച കഴിഞ്ഞ്';
            } else if (hour < 20) {
                return 'വൈകുന്നേരം';
            } else {
                return 'രാത്രി';
            }
        },
    });

    return ml;

})));


/***/ }),

/***/ 5115:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Mongolian [mn]
//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function translate(number, withoutSuffix, key, isFuture) {
        switch (key) {
            case 's':
                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';
            case 'ss':
                return number + (withoutSuffix ? ' секунд' : ' секундын');
            case 'm':
            case 'mm':
                return number + (withoutSuffix ? ' минут' : ' минутын');
            case 'h':
            case 'hh':
                return number + (withoutSuffix ? ' цаг' : ' цагийн');
            case 'd':
            case 'dd':
                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');
            case 'M':
            case 'MM':
                return number + (withoutSuffix ? ' сар' : ' сарын');
            case 'y':
            case 'yy':
                return number + (withoutSuffix ? ' жил' : ' жилийн');
            default:
                return number;
        }
    }

    var mn = moment.defineLocale('mn', {
        months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(
            '_'
        ),
        monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),
        weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),
        weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY оны MMMMын D',
            LLL: 'YYYY оны MMMMын D HH:mm',
            LLLL: 'dddd, YYYY оны MMMMын D HH:mm',
        },
        meridiemParse: /ҮӨ|ҮХ/i,
        isPM: function (input) {
            return input === 'ҮХ';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ҮӨ';
            } else {
                return 'ҮХ';
            }
        },
        calendar: {
            sameDay: '[Өнөөдөр] LT',
            nextDay: '[Маргааш] LT',
            nextWeek: '[Ирэх] dddd LT',
            lastDay: '[Өчигдөр] LT',
            lastWeek: '[Өнгөрсөн] dddd LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s дараа',
            past: '%s өмнө',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + ' өдөр';
                default:
                    return number;
            }
        },
    });

    return mn;

})));


/***/ }),

/***/ 370:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Marathi [mr]
//! author : Harshad Kale : https://github.com/kalehv
//! author : Vivek Athalye : https://github.com/vnathalye

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '१',
            2: '२',
            3: '३',
            4: '४',
            5: '५',
            6: '६',
            7: '७',
            8: '८',
            9: '९',
            0: '०',
        },
        numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
        };

    function relativeTimeMr(number, withoutSuffix, string, isFuture) {
        var output = '';
        if (withoutSuffix) {
            switch (string) {
                case 's':
                    output = 'काही सेकंद';
                    break;
                case 'ss':
                    output = '%d सेकंद';
                    break;
                case 'm':
                    output = 'एक मिनिट';
                    break;
                case 'mm':
                    output = '%d मिनिटे';
                    break;
                case 'h':
                    output = 'एक तास';
                    break;
                case 'hh':
                    output = '%d तास';
                    break;
                case 'd':
                    output = 'एक दिवस';
                    break;
                case 'dd':
                    output = '%d दिवस';
                    break;
                case 'M':
                    output = 'एक महिना';
                    break;
                case 'MM':
                    output = '%d महिने';
                    break;
                case 'y':
                    output = 'एक वर्ष';
                    break;
                case 'yy':
                    output = '%d वर्षे';
                    break;
            }
        } else {
            switch (string) {
                case 's':
                    output = 'काही सेकंदां';
                    break;
                case 'ss':
                    output = '%d सेकंदां';
                    break;
                case 'm':
                    output = 'एका मिनिटा';
                    break;
                case 'mm':
                    output = '%d मिनिटां';
                    break;
                case 'h':
                    output = 'एका तासा';
                    break;
                case 'hh':
                    output = '%d तासां';
                    break;
                case 'd':
                    output = 'एका दिवसा';
                    break;
                case 'dd':
                    output = '%d दिवसां';
                    break;
                case 'M':
                    output = 'एका महिन्या';
                    break;
                case 'MM':
                    output = '%d महिन्यां';
                    break;
                case 'y':
                    output = 'एका वर्षा';
                    break;
                case 'yy':
                    output = '%d वर्षां';
                    break;
            }
        }
        return output.replace(/%d/i, number);
    }

    var mr = moment.defineLocale('mr', {
        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(
            '_'
        ),
        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),
        longDateFormat: {
            LT: 'A h:mm वाजता',
            LTS: 'A h:mm:ss वाजता',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm वाजता',
            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',
        },
        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[उद्या] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[काल] LT',
            lastWeek: '[मागील] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%sमध्ये',
            past: '%sपूर्वी',
            s: relativeTimeMr,
            ss: relativeTimeMr,
            m: relativeTimeMr,
            mm: relativeTimeMr,
            h: relativeTimeMr,
            hh: relativeTimeMr,
            d: relativeTimeMr,
            dd: relativeTimeMr,
            M: relativeTimeMr,
            MM: relativeTimeMr,
            y: relativeTimeMr,
            yy: relativeTimeMr,
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {
                return hour;
            } else if (
                meridiem === 'दुपारी' ||
                meridiem === 'सायंकाळी' ||
                meridiem === 'रात्री'
            ) {
                return hour >= 12 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour >= 0 && hour < 6) {
                return 'पहाटे';
            } else if (hour < 12) {
                return 'सकाळी';
            } else if (hour < 17) {
                return 'दुपारी';
            } else if (hour < 20) {
                return 'सायंकाळी';
            } else {
                return 'रात्री';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return mr;

})));


/***/ }),

/***/ 1237:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms-my]
//! note : DEPRECATED, the correct one is [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var msMy = moment.defineLocale('ms-my', {
        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            ss: '%d saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return msMy;

})));


/***/ }),

/***/ 9847:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ms = moment.defineLocale('ms', {
        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [pukul] HH.mm',
            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',
        },
        meridiemParse: /pagi|tengahari|petang|malam/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'pagi') {
                return hour;
            } else if (meridiem === 'tengahari') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'petang' || meridiem === 'malam') {
                return hour + 12;
            }
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'pagi';
            } else if (hours < 15) {
                return 'tengahari';
            } else if (hours < 19) {
                return 'petang';
            } else {
                return 'malam';
            }
        },
        calendar: {
            sameDay: '[Hari ini pukul] LT',
            nextDay: '[Esok pukul] LT',
            nextWeek: 'dddd [pukul] LT',
            lastDay: '[Kelmarin pukul] LT',
            lastWeek: 'dddd [lepas pukul] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dalam %s',
            past: '%s yang lepas',
            s: 'beberapa saat',
            ss: '%d saat',
            m: 'seminit',
            mm: '%d minit',
            h: 'sejam',
            hh: '%d jam',
            d: 'sehari',
            dd: '%d hari',
            M: 'sebulan',
            MM: '%d bulan',
            y: 'setahun',
            yy: '%d tahun',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return ms;

})));


/***/ }),

/***/ 2126:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maltese (Malta) [mt]
//! author : Alessandro Maruccia : https://github.com/alesma

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var mt = moment.defineLocale('mt', {
        months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(
            '_'
        ),
        monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),
        weekdays: 'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(
            '_'
        ),
        weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),
        weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Illum fil-]LT',
            nextDay: '[Għada fil-]LT',
            nextWeek: 'dddd [fil-]LT',
            lastDay: '[Il-bieraħ fil-]LT',
            lastWeek: 'dddd [li għadda] [fil-]LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'f’ %s',
            past: '%s ilu',
            s: 'ftit sekondi',
            ss: '%d sekondi',
            m: 'minuta',
            mm: '%d minuti',
            h: 'siegħa',
            hh: '%d siegħat',
            d: 'ġurnata',
            dd: '%d ġranet',
            M: 'xahar',
            MM: '%d xhur',
            y: 'sena',
            yy: '%d sni',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return mt;

})));


/***/ }),

/***/ 6165:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Burmese [my]
//! author : Squar team, mysquar.com
//! author : David Rossellat : https://github.com/gholadr
//! author : Tin Aung Lin : https://github.com/thanyawzinmin

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '၁',
            2: '၂',
            3: '၃',
            4: '၄',
            5: '၅',
            6: '၆',
            7: '၇',
            8: '၈',
            9: '၉',
            0: '၀',
        },
        numberMap = {
            '၁': '1',
            '၂': '2',
            '၃': '3',
            '၄': '4',
            '၅': '5',
            '၆': '6',
            '၇': '7',
            '၈': '8',
            '၉': '9',
            '၀': '0',
        };

    var my = moment.defineLocale('my', {
        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(
            '_'
        ),
        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(
            '_'
        ),
        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[ယနေ.] LT [မှာ]',
            nextDay: '[မနက်ဖြန်] LT [မှာ]',
            nextWeek: 'dddd LT [မှာ]',
            lastDay: '[မနေ.က] LT [မှာ]',
            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'လာမည့် %s မှာ',
            past: 'လွန်ခဲ့သော %s က',
            s: 'စက္ကန်.အနည်းငယ်',
            ss: '%d စက္ကန့်',
            m: 'တစ်မိနစ်',
            mm: '%d မိနစ်',
            h: 'တစ်နာရီ',
            hh: '%d နာရီ',
            d: 'တစ်ရက်',
            dd: '%d ရက်',
            M: 'တစ်လ',
            MM: '%d လ',
            y: 'တစ်နှစ်',
            yy: '%d နှစ်',
        },
        preparse: function (string) {
            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return my;

})));


/***/ }),

/***/ 4924:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Norwegian Bokmål [nb]
//! authors : Espen Hovlandsdal : https://github.com/rexxars
//!           Sigurd Gartmann : https://github.com/sigurdga
//!           Stephen Ramthun : https://github.com/stephenramthun

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var nb = moment.defineLocale('nb', {
        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
        weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),
        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
            sameDay: '[i dag kl.] LT',
            nextDay: '[i morgen kl.] LT',
            nextWeek: 'dddd [kl.] LT',
            lastDay: '[i går kl.] LT',
            lastWeek: '[forrige] dddd [kl.] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'om %s',
            past: '%s siden',
            s: 'noen sekunder',
            ss: '%d sekunder',
            m: 'ett minutt',
            mm: '%d minutter',
            h: 'en time',
            hh: '%d timer',
            d: 'en dag',
            dd: '%d dager',
            w: 'en uke',
            ww: '%d uker',
            M: 'en måned',
            MM: '%d måneder',
            y: 'ett år',
            yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return nb;

})));


/***/ }),

/***/ 6744:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nepalese [ne]
//! author : suvash : https://github.com/suvash

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '१',
            2: '२',
            3: '३',
            4: '४',
            5: '५',
            6: '६',
            7: '७',
            8: '८',
            9: '९',
            0: '०',
        },
        numberMap = {
            '१': '1',
            '२': '2',
            '३': '3',
            '४': '4',
            '५': '5',
            '६': '6',
            '७': '7',
            '८': '8',
            '९': '9',
            '०': '0',
        };

    var ne = moment.defineLocale('ne', {
        months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(
            '_'
        ),
        monthsShort: 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(
            '_'
        ),
        weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
        weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'Aको h:mm बजे',
            LTS: 'Aको h:mm:ss बजे',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, Aको h:mm बजे',
            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',
        },
        preparse: function (string) {
            return string.replace(/[१२३४५६७८९०]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'राति') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'बिहान') {
                return hour;
            } else if (meridiem === 'दिउँसो') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'साँझ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 3) {
                return 'राति';
            } else if (hour < 12) {
                return 'बिहान';
            } else if (hour < 16) {
                return 'दिउँसो';
            } else if (hour < 20) {
                return 'साँझ';
            } else {
                return 'राति';
            }
        },
        calendar: {
            sameDay: '[आज] LT',
            nextDay: '[भोलि] LT',
            nextWeek: '[आउँदो] dddd[,] LT',
            lastDay: '[हिजो] LT',
            lastWeek: '[गएको] dddd[,] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%sमा',
            past: '%s अगाडि',
            s: 'केही क्षण',
            ss: '%d सेकेण्ड',
            m: 'एक मिनेट',
            mm: '%d मिनेट',
            h: 'एक घण्टा',
            hh: '%d घण्टा',
            d: 'एक दिन',
            dd: '%d दिन',
            M: 'एक महिना',
            MM: '%d महिना',
            y: 'एक बर्ष',
            yy: '%d बर्ष',
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return ne;

})));


/***/ }),

/***/ 9814:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch (Belgium) [nl-be]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(
            '_'
        ),
        monthsParse = [
            /^jan/i,
            /^feb/i,
            /^maart|mrt.?$/i,
            /^apr/i,
            /^mei$/i,
            /^jun[i.]?$/i,
            /^jul[i.]?$/i,
            /^aug/i,
            /^sep/i,
            /^okt/i,
            /^nov/i,
            /^dec/i,
        ],
        monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nlBe = moment.defineLocale('nl-be', {
        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
            '_'
        ),
        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (number) {
            return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            );
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return nlBe;

})));


/***/ }),

/***/ 3901:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch [nl]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split(
            '_'
        ),
        monthsParse = [
            /^jan/i,
            /^feb/i,
            /^maart|mrt.?$/i,
            /^apr/i,
            /^mei$/i,
            /^jun[i.]?$/i,
            /^jul[i.]?$/i,
            /^aug/i,
            /^sep/i,
            /^okt/i,
            /^nov/i,
            /^dec/i,
        ],
        monthsRegex = /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

    var nl = moment.defineLocale('nl', {
        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: function (m, format) {
            if (!m) {
                return monthsShortWithDots;
            } else if (/-MMM-/.test(format)) {
                return monthsShortWithoutDots[m.month()];
            } else {
                return monthsShortWithDots[m.month()];
            }
        },

        monthsRegex: monthsRegex,
        monthsShortRegex: monthsRegex,
        monthsStrictRegex: /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,
        monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split(
            '_'
        ),
        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),
        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD-MM-YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[vandaag om] LT',
            nextDay: '[morgen om] LT',
            nextWeek: 'dddd [om] LT',
            lastDay: '[gisteren om] LT',
            lastWeek: '[afgelopen] dddd [om] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'over %s',
            past: '%s geleden',
            s: 'een paar seconden',
            ss: '%d seconden',
            m: 'één minuut',
            mm: '%d minuten',
            h: 'één uur',
            hh: '%d uur',
            d: 'één dag',
            dd: '%d dagen',
            w: 'één week',
            ww: '%d weken',
            M: 'één maand',
            MM: '%d maanden',
            y: 'één jaar',
            yy: '%d jaar',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
        ordinal: function (number) {
            return (
                number +
                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')
            );
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return nl;

})));


/***/ }),

/***/ 3877:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nynorsk [nn]
//! authors : https://github.com/mechuwind
//!           Stephen Ramthun : https://github.com/stephenramthun

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var nn = moment.defineLocale('nn', {
        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
        weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),
        weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY [kl.] H:mm',
            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',
        },
        calendar: {
            sameDay: '[I dag klokka] LT',
            nextDay: '[I morgon klokka] LT',
            nextWeek: 'dddd [klokka] LT',
            lastDay: '[I går klokka] LT',
            lastWeek: '[Føregåande] dddd [klokka] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'om %s',
            past: '%s sidan',
            s: 'nokre sekund',
            ss: '%d sekund',
            m: 'eit minutt',
            mm: '%d minutt',
            h: 'ein time',
            hh: '%d timar',
            d: 'ein dag',
            dd: '%d dagar',
            w: 'ei veke',
            ww: '%d veker',
            M: 'ein månad',
            MM: '%d månader',
            y: 'eit år',
            yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return nn;

})));


/***/ }),

/***/ 2135:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Occitan, lengadocian dialecte [oc-lnc]
//! author : Quentin PAGÈS : https://github.com/Quenty31

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ocLnc = moment.defineLocale('oc-lnc', {
        months: {
            standalone: 'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(
                '_'
            ),
            format: "de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre".split(
                '_'
            ),
            isFormat: /D[oD]?(\s)+MMMM/,
        },
        monthsShort: 'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(
            '_'
        ),
        weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),
        weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [de] YYYY',
            ll: 'D MMM YYYY',
            LLL: 'D MMMM [de] YYYY [a] H:mm',
            lll: 'D MMM YYYY, H:mm',
            LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',
            llll: 'ddd D MMM YYYY, H:mm',
        },
        calendar: {
            sameDay: '[uèi a] LT',
            nextDay: '[deman a] LT',
            nextWeek: 'dddd [a] LT',
            lastDay: '[ièr a] LT',
            lastWeek: 'dddd [passat a] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: "d'aquí %s",
            past: 'fa %s',
            s: 'unas segondas',
            ss: '%d segondas',
            m: 'una minuta',
            mm: '%d minutas',
            h: 'una ora',
            hh: '%d oras',
            d: 'un jorn',
            dd: '%d jorns',
            M: 'un mes',
            MM: '%d meses',
            y: 'un an',
            yy: '%d ans',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
        ordinal: function (number, period) {
            var output =
                number === 1
                    ? 'r'
                    : number === 2
                    ? 'n'
                    : number === 3
                    ? 'r'
                    : number === 4
                    ? 't'
                    : 'è';
            if (period === 'w' || period === 'W') {
                output = 'a';
            }
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4,
        },
    });

    return ocLnc;

})));


/***/ }),

/***/ 5858:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Punjabi (India) [pa-in]
//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '੧',
            2: '੨',
            3: '੩',
            4: '੪',
            5: '੫',
            6: '੬',
            7: '੭',
            8: '੮',
            9: '੯',
            0: '੦',
        },
        numberMap = {
            '੧': '1',
            '੨': '2',
            '੩': '3',
            '੪': '4',
            '੫': '5',
            '੬': '6',
            '੭': '7',
            '੮': '8',
            '੯': '9',
            '੦': '0',
        };

    var paIn = moment.defineLocale('pa-in', {
        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.
        months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
            '_'
        ),
        monthsShort: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(
            '_'
        ),
        weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(
            '_'
        ),
        weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm ਵਜੇ',
            LTS: 'A h:mm:ss ਵਜੇ',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',
            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',
        },
        calendar: {
            sameDay: '[ਅਜ] LT',
            nextDay: '[ਕਲ] LT',
            nextWeek: '[ਅਗਲਾ] dddd, LT',
            lastDay: '[ਕਲ] LT',
            lastWeek: '[ਪਿਛਲੇ] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s ਵਿੱਚ',
            past: '%s ਪਿਛਲੇ',
            s: 'ਕੁਝ ਸਕਿੰਟ',
            ss: '%d ਸਕਿੰਟ',
            m: 'ਇਕ ਮਿੰਟ',
            mm: '%d ਮਿੰਟ',
            h: 'ਇੱਕ ਘੰਟਾ',
            hh: '%d ਘੰਟੇ',
            d: 'ਇੱਕ ਦਿਨ',
            dd: '%d ਦਿਨ',
            M: 'ਇੱਕ ਮਹੀਨਾ',
            MM: '%d ਮਹੀਨੇ',
            y: 'ਇੱਕ ਸਾਲ',
            yy: '%d ਸਾਲ',
        },
        preparse: function (string) {
            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ਰਾਤ') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ਸਵੇਰ') {
                return hour;
            } else if (meridiem === 'ਦੁਪਹਿਰ') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'ਸ਼ਾਮ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ਰਾਤ';
            } else if (hour < 10) {
                return 'ਸਵੇਰ';
            } else if (hour < 17) {
                return 'ਦੁਪਹਿਰ';
            } else if (hour < 20) {
                return 'ਸ਼ਾਮ';
            } else {
                return 'ਰਾਤ';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return paIn;

})));


/***/ }),

/***/ 4495:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Polish [pl]
//! author : Rafal Hirsz : https://github.com/evoL

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(
            '_'
        ),
        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(
            '_'
        ),
        monthsParse = [
            /^sty/i,
            /^lut/i,
            /^mar/i,
            /^kwi/i,
            /^maj/i,
            /^cze/i,
            /^lip/i,
            /^sie/i,
            /^wrz/i,
            /^paź/i,
            /^lis/i,
            /^gru/i,
        ];
    function plural(n) {
        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;
    }
    function translate(number, withoutSuffix, key) {
        var result = number + ' ';
        switch (key) {
            case 'ss':
                return result + (plural(number) ? 'sekundy' : 'sekund');
            case 'm':
                return withoutSuffix ? 'minuta' : 'minutę';
            case 'mm':
                return result + (plural(number) ? 'minuty' : 'minut');
            case 'h':
                return withoutSuffix ? 'godzina' : 'godzinę';
            case 'hh':
                return result + (plural(number) ? 'godziny' : 'godzin');
            case 'ww':
                return result + (plural(number) ? 'tygodnie' : 'tygodni');
            case 'MM':
                return result + (plural(number) ? 'miesiące' : 'miesięcy');
            case 'yy':
                return result + (plural(number) ? 'lata' : 'lat');
        }
    }

    var pl = moment.defineLocale('pl', {
        months: function (momentToFormat, format) {
            if (!momentToFormat) {
                return monthsNominative;
            } else if (/D MMMM/.test(format)) {
                return monthsSubjective[momentToFormat.month()];
            } else {
                return monthsNominative[momentToFormat.month()];
            }
        },
        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,
        weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split(
            '_'
        ),
        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Dziś o] LT',
            nextDay: '[Jutro o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W niedzielę o] LT';

                    case 2:
                        return '[We wtorek o] LT';

                    case 3:
                        return '[W środę o] LT';

                    case 6:
                        return '[W sobotę o] LT';

                    default:
                        return '[W] dddd [o] LT';
                }
            },
            lastDay: '[Wczoraj o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[W zeszłą niedzielę o] LT';
                    case 3:
                        return '[W zeszłą środę o] LT';
                    case 6:
                        return '[W zeszłą sobotę o] LT';
                    default:
                        return '[W zeszły] dddd [o] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: '%s temu',
            s: 'kilka sekund',
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: '1 dzień',
            dd: '%d dni',
            w: 'tydzień',
            ww: translate,
            M: 'miesiąc',
            MM: translate,
            y: 'rok',
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return pl;

})));


/***/ }),

/***/ 7971:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese (Brazil) [pt-br]
//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ptBr = moment.defineLocale('pt-br', {
        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
            '_'
        ),
        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
        weekdays: 'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(
            '_'
        ),
        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),
        weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',
        },
        calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return this.day() === 0 || this.day() === 6
                    ? '[Último] dddd [às] LT' // Saturday + Sunday
                    : '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'poucos segundos',
            ss: '%d segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        invalidDate: 'Data inválida',
    });

    return ptBr;

})));


/***/ }),

/***/ 9520:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese [pt]
//! author : Jefferson : https://github.com/jalex79

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var pt = moment.defineLocale('pt', {
        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(
            '_'
        ),
        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
        weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(
            '_'
        ),
        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
        weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D [de] MMMM [de] YYYY',
            LLL: 'D [de] MMMM [de] YYYY HH:mm',
            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Hoje às] LT',
            nextDay: '[Amanhã às] LT',
            nextWeek: 'dddd [às] LT',
            lastDay: '[Ontem às] LT',
            lastWeek: function () {
                return this.day() === 0 || this.day() === 6
                    ? '[Último] dddd [às] LT' // Saturday + Sunday
                    : '[Última] dddd [às] LT'; // Monday - Friday
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'em %s',
            past: 'há %s',
            s: 'segundos',
            ss: '%d segundos',
            m: 'um minuto',
            mm: '%d minutos',
            h: 'uma hora',
            hh: '%d horas',
            d: 'um dia',
            dd: '%d dias',
            w: 'uma semana',
            ww: '%d semanas',
            M: 'um mês',
            MM: '%d meses',
            y: 'um ano',
            yy: '%d anos',
        },
        dayOfMonthOrdinalParse: /\d{1,2}º/,
        ordinal: '%dº',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return pt;

})));


/***/ }),

/***/ 6459:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Romanian [ro]
//! author : Vlad Gurdiga : https://github.com/gurdiga
//! author : Valentin Agachi : https://github.com/avaly
//! author : Emanuel Cepoi : https://github.com/cepem

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
                ss: 'secunde',
                mm: 'minute',
                hh: 'ore',
                dd: 'zile',
                ww: 'săptămâni',
                MM: 'luni',
                yy: 'ani',
            },
            separator = ' ';
        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
            separator = ' de ';
        }
        return number + separator + format[key];
    }

    var ro = moment.defineLocale('ro', {
        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(
            '_'
        ),
        monthsShort: 'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY H:mm',
            LLLL: 'dddd, D MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[azi la] LT',
            nextDay: '[mâine la] LT',
            nextWeek: 'dddd [la] LT',
            lastDay: '[ieri la] LT',
            lastWeek: '[fosta] dddd [la] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'peste %s',
            past: '%s în urmă',
            s: 'câteva secunde',
            ss: relativeTimeWithPlural,
            m: 'un minut',
            mm: relativeTimeWithPlural,
            h: 'o oră',
            hh: relativeTimeWithPlural,
            d: 'o zi',
            dd: relativeTimeWithPlural,
            w: 'o săptămână',
            ww: relativeTimeWithPlural,
            M: 'o lună',
            MM: relativeTimeWithPlural,
            y: 'un an',
            yy: relativeTimeWithPlural,
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return ro;

})));


/***/ }),

/***/ 1793:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Russian [ru]
//! author : Viktorminator : https://github.com/Viktorminator
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Коренберг Марк : https://github.com/socketpair

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',
            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
            hh: 'час_часа_часов',
            dd: 'день_дня_дней',
            ww: 'неделя_недели_недель',
            MM: 'месяц_месяца_месяцев',
            yy: 'год_года_лет',
        };
        if (key === 'm') {
            return withoutSuffix ? 'минута' : 'минуту';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    var monthsParse = [
        /^янв/i,
        /^фев/i,
        /^мар/i,
        /^апр/i,
        /^ма[йя]/i,
        /^июн/i,
        /^июл/i,
        /^авг/i,
        /^сен/i,
        /^окт/i,
        /^ноя/i,
        /^дек/i,
    ];

    // http://new.gramota.ru/spravka/rules/139-prop : § 103
    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
    var ru = moment.defineLocale('ru', {
        months: {
            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(
                '_'
            ),
            standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(
                '_'
            ),
        },
        monthsShort: {
            // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку?
            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(
                '_'
            ),
            standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(
                '_'
            ),
        },
        weekdays: {
            standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(
                '_'
            ),
            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(
                '_'
            ),
            isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,
        },
        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
        monthsParse: monthsParse,
        longMonthsParse: monthsParse,
        shortMonthsParse: monthsParse,

        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
        monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // копия предыдущего
        monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

        // полные названия с падежами
        monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

        // Выражение, которое соответствует только сокращённым формам
        monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY г.',
            LLL: 'D MMMM YYYY г., H:mm',
            LLLL: 'dddd, D MMMM YYYY г., H:mm',
        },
        calendar: {
            sameDay: '[Сегодня, в] LT',
            nextDay: '[Завтра, в] LT',
            lastDay: '[Вчера, в] LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В следующее] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В следующий] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В следующую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            lastWeek: function (now) {
                if (now.week() !== this.week()) {
                    switch (this.day()) {
                        case 0:
                            return '[В прошлое] dddd, [в] LT';
                        case 1:
                        case 2:
                        case 4:
                            return '[В прошлый] dddd, [в] LT';
                        case 3:
                        case 5:
                        case 6:
                            return '[В прошлую] dddd, [в] LT';
                    }
                } else {
                    if (this.day() === 2) {
                        return '[Во] dddd, [в] LT';
                    } else {
                        return '[В] dddd, [в] LT';
                    }
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'через %s',
            past: '%s назад',
            s: 'несколько секунд',
            ss: relativeTimeWithPlural,
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'час',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            w: 'неделя',
            ww: relativeTimeWithPlural,
            M: 'месяц',
            MM: relativeTimeWithPlural,
            y: 'год',
            yy: relativeTimeWithPlural,
        },
        meridiemParse: /ночи|утра|дня|вечера/i,
        isPM: function (input) {
            return /^(дня|вечера)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночи';
            } else if (hour < 12) {
                return 'утра';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечера';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                case 'w':
                case 'W':
                    return number + '-я';
                default:
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ru;

})));


/***/ }),

/***/ 950:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sindhi [sd]
//! author : Narain Sagar : https://github.com/narainsagar

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'جنوري',
            'فيبروري',
            'مارچ',
            'اپريل',
            'مئي',
            'جون',
            'جولاءِ',
            'آگسٽ',
            'سيپٽمبر',
            'آڪٽوبر',
            'نومبر',
            'ڊسمبر',
        ],
        days = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];

    var sd = moment.defineLocale('sd', {
        months: months,
        monthsShort: months,
        weekdays: days,
        weekdaysShort: days,
        weekdaysMin: days,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm',
        },
        meridiemParse: /صبح|شام/,
        isPM: function (input) {
            return 'شام' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar: {
            sameDay: '[اڄ] LT',
            nextDay: '[سڀاڻي] LT',
            nextWeek: 'dddd [اڳين هفتي تي] LT',
            lastDay: '[ڪالهه] LT',
            lastWeek: '[گزريل هفتي] dddd [تي] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s پوء',
            past: '%s اڳ',
            s: 'چند سيڪنڊ',
            ss: '%d سيڪنڊ',
            m: 'هڪ منٽ',
            mm: '%d منٽ',
            h: 'هڪ ڪلاڪ',
            hh: '%d ڪلاڪ',
            d: 'هڪ ڏينهن',
            dd: '%d ڏينهن',
            M: 'هڪ مهينو',
            MM: '%d مهينا',
            y: 'هڪ سال',
            yy: '%d سال',
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return sd;

})));


/***/ }),

/***/ 490:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Northern Sami [se]
//! authors : Bård Rolstad Henriksen : https://github.com/karamell

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var se = moment.defineLocale('se', {
        months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(
            '_'
        ),
        monthsShort: 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split(
            '_'
        ),
        weekdays: 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(
            '_'
        ),
        weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
        weekdaysMin: 's_v_m_g_d_b_L'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'MMMM D. [b.] YYYY',
            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',
            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',
        },
        calendar: {
            sameDay: '[otne ti] LT',
            nextDay: '[ihttin ti] LT',
            nextWeek: 'dddd [ti] LT',
            lastDay: '[ikte ti] LT',
            lastWeek: '[ovddit] dddd [ti] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s geažes',
            past: 'maŋit %s',
            s: 'moadde sekunddat',
            ss: '%d sekunddat',
            m: 'okta minuhta',
            mm: '%d minuhtat',
            h: 'okta diimmu',
            hh: '%d diimmut',
            d: 'okta beaivi',
            dd: '%d beaivvit',
            M: 'okta mánnu',
            MM: '%d mánut',
            y: 'okta jahki',
            yy: '%d jagit',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return se;

})));


/***/ }),

/***/ 124:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sinhalese [si]
//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    /*jshint -W100*/
    var si = moment.defineLocale('si', {
        months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(
            '_'
        ),
        monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(
            '_'
        ),
        weekdays: 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(
            '_'
        ),
        weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
        weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'a h:mm',
            LTS: 'a h:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY MMMM D',
            LLL: 'YYYY MMMM D, a h:mm',
            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',
        },
        calendar: {
            sameDay: '[අද] LT[ට]',
            nextDay: '[හෙට] LT[ට]',
            nextWeek: 'dddd LT[ට]',
            lastDay: '[ඊයේ] LT[ට]',
            lastWeek: '[පසුගිය] dddd LT[ට]',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%sකින්',
            past: '%sකට පෙර',
            s: 'තත්පර කිහිපය',
            ss: 'තත්පර %d',
            m: 'මිනිත්තුව',
            mm: 'මිනිත්තු %d',
            h: 'පැය',
            hh: 'පැය %d',
            d: 'දිනය',
            dd: 'දින %d',
            M: 'මාසය',
            MM: 'මාස %d',
            y: 'වසර',
            yy: 'වසර %d',
        },
        dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
        ordinal: function (number) {
            return number + ' වැනි';
        },
        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
        isPM: function (input) {
            return input === 'ප.ව.' || input === 'පස් වරු';
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? 'ප.ව.' : 'පස් වරු';
            } else {
                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
            }
        },
    });

    return si;

})));


/***/ }),

/***/ 4249:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovak [sk]
//! author : Martin Minka : https://github.com/k2s
//! based on work of petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(
            '_'
        ),
        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
    function plural(n) {
        return n > 1 && n < 5;
    }
    function translate(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's': // a few seconds / in a few seconds / a few seconds ago
                return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';
            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'sekundy' : 'sekúnd');
                } else {
                    return result + 'sekundami';
                }
            case 'm': // a minute / in a minute / a minute ago
                return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';
            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'minúty' : 'minút');
                } else {
                    return result + 'minútami';
                }
            case 'h': // an hour / in an hour / an hour ago
                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';
            case 'hh': // 9 hours / in 9 hours / 9 hours ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'hodiny' : 'hodín');
                } else {
                    return result + 'hodinami';
                }
            case 'd': // a day / in a day / a day ago
                return withoutSuffix || isFuture ? 'deň' : 'dňom';
            case 'dd': // 9 days / in 9 days / 9 days ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'dni' : 'dní');
                } else {
                    return result + 'dňami';
                }
            case 'M': // a month / in a month / a month ago
                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';
            case 'MM': // 9 months / in 9 months / 9 months ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'mesiace' : 'mesiacov');
                } else {
                    return result + 'mesiacmi';
                }
            case 'y': // a year / in a year / a year ago
                return withoutSuffix || isFuture ? 'rok' : 'rokom';
            case 'yy': // 9 years / in 9 years / 9 years ago
                if (withoutSuffix || isFuture) {
                    return result + (plural(number) ? 'roky' : 'rokov');
                } else {
                    return result + 'rokmi';
                }
        }
    }

    var sk = moment.defineLocale('sk', {
        months: months,
        monthsShort: monthsShort,
        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),
        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[dnes o] LT',
            nextDay: '[zajtra o] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[v] dddd [o] LT';
                    case 3:
                        return '[v stredu o] LT';
                    case 4:
                        return '[vo štvrtok o] LT';
                    case 5:
                        return '[v piatok o] LT';
                    case 6:
                        return '[v sobotu o] LT';
                }
            },
            lastDay: '[včera o] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[minulú nedeľu o] LT';
                    case 1:
                    case 2:
                        return '[minulý] dddd [o] LT';
                    case 3:
                        return '[minulú stredu o] LT';
                    case 4:
                    case 5:
                        return '[minulý] dddd [o] LT';
                    case 6:
                        return '[minulú sobotu o] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'pred %s',
            s: translate,
            ss: translate,
            m: translate,
            mm: translate,
            h: translate,
            hh: translate,
            d: translate,
            dd: translate,
            M: translate,
            MM: translate,
            y: translate,
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return sk;

})));


/***/ }),

/***/ 4985:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovenian [sl]
//! author : Robert Sedovšek : https://github.com/sedovsek

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var result = number + ' ';
        switch (key) {
            case 's':
                return withoutSuffix || isFuture
                    ? 'nekaj sekund'
                    : 'nekaj sekundami';
            case 'ss':
                if (number === 1) {
                    result += withoutSuffix ? 'sekundo' : 'sekundi';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';
                } else {
                    result += 'sekund';
                }
                return result;
            case 'm':
                return withoutSuffix ? 'ena minuta' : 'eno minuto';
            case 'mm':
                if (number === 1) {
                    result += withoutSuffix ? 'minuta' : 'minuto';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';
                } else {
                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';
                }
                return result;
            case 'h':
                return withoutSuffix ? 'ena ura' : 'eno uro';
            case 'hh':
                if (number === 1) {
                    result += withoutSuffix ? 'ura' : 'uro';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'uri' : 'urama';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'ure' : 'urami';
                } else {
                    result += withoutSuffix || isFuture ? 'ur' : 'urami';
                }
                return result;
            case 'd':
                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
            case 'dd':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
                } else {
                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
                }
                return result;
            case 'M':
                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
            case 'MM':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
                } else {
                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
                }
                return result;
            case 'y':
                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
            case 'yy':
                if (number === 1) {
                    result += withoutSuffix || isFuture ? 'leto' : 'letom';
                } else if (number === 2) {
                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';
                } else if (number < 5) {
                    result += withoutSuffix || isFuture ? 'leta' : 'leti';
                } else {
                    result += withoutSuffix || isFuture ? 'let' : 'leti';
                }
                return result;
        }
    }

    var sl = moment.defineLocale('sl', {
        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD. MM. YYYY',
            LL: 'D. MMMM YYYY',
            LLL: 'D. MMMM YYYY H:mm',
            LLLL: 'dddd, D. MMMM YYYY H:mm',
        },
        calendar: {
            sameDay: '[danes ob] LT',
            nextDay: '[jutri ob] LT',

            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[v] [nedeljo] [ob] LT';
                    case 3:
                        return '[v] [sredo] [ob] LT';
                    case 6:
                        return '[v] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[v] dddd [ob] LT';
                }
            },
            lastDay: '[včeraj ob] LT',
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[prejšnjo] [nedeljo] [ob] LT';
                    case 3:
                        return '[prejšnjo] [sredo] [ob] LT';
                    case 6:
                        return '[prejšnjo] [soboto] [ob] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[prejšnji] dddd [ob] LT';
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'čez %s',
            past: 'pred %s',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return sl;

})));


/***/ }),

/***/ 1104:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Albanian [sq]
//! author : Flakërim Ismani : https://github.com/flakerimi
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Oerd Cukalla : https://github.com/oerd

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var sq = moment.defineLocale('sq', {
        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(
            '_'
        ),
        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(
            '_'
        ),
        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),
        weekdaysParseExact: true,
        meridiemParse: /PD|MD/,
        isPM: function (input) {
            return input.charAt(0) === 'M';
        },
        meridiem: function (hours, minutes, isLower) {
            return hours < 12 ? 'PD' : 'MD';
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Sot në] LT',
            nextDay: '[Nesër në] LT',
            nextWeek: 'dddd [në] LT',
            lastDay: '[Dje në] LT',
            lastWeek: 'dddd [e kaluar në] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'në %s',
            past: '%s më parë',
            s: 'disa sekonda',
            ss: '%d sekonda',
            m: 'një minutë',
            mm: '%d minuta',
            h: 'një orë',
            hh: '%d orë',
            d: 'një ditë',
            dd: '%d ditë',
            M: 'një muaj',
            MM: '%d muaj',
            y: 'një vit',
            yy: '%d vite',
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return sq;

})));


/***/ }),

/***/ 9915:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian Cyrillic [sr-cyrl]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
//! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var translator = {
        words: {
            //Different grammatical cases
            ss: ['секунда', 'секунде', 'секунди'],
            m: ['један минут', 'једне минуте'],
            mm: ['минут', 'минуте', 'минута'],
            h: ['један сат', 'једног сата'],
            hh: ['сат', 'сата', 'сати'],
            dd: ['дан', 'дана', 'дана'],
            MM: ['месец', 'месеца', 'месеци'],
            yy: ['година', 'године', 'година'],
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2];
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return (
                    number +
                    ' ' +
                    translator.correctGrammaticalCase(number, wordKey)
                );
            }
        },
    };

    var srCyrl = moment.defineLocale('sr-cyrl', {
        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(
            '_'
        ),
        monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D. M. YYYY.',
            LL: 'D. MMMM YYYY.',
            LLL: 'D. MMMM YYYY. H:mm',
            LLLL: 'dddd, D. MMMM YYYY. H:mm',
        },
        calendar: {
            sameDay: '[данас у] LT',
            nextDay: '[сутра у] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[у] [недељу] [у] LT';
                    case 3:
                        return '[у] [среду] [у] LT';
                    case 6:
                        return '[у] [суботу] [у] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[у] dddd [у] LT';
                }
            },
            lastDay: '[јуче у] LT',
            lastWeek: function () {
                var lastWeekDays = [
                    '[прошле] [недеље] [у] LT',
                    '[прошлог] [понедељка] [у] LT',
                    '[прошлог] [уторка] [у] LT',
                    '[прошле] [среде] [у] LT',
                    '[прошлог] [четвртка] [у] LT',
                    '[прошлог] [петка] [у] LT',
                    '[прошле] [суботе] [у] LT',
                ];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'за %s',
            past: 'пре %s',
            s: 'неколико секунди',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'дан',
            dd: translator.translate,
            M: 'месец',
            MM: translator.translate,
            y: 'годину',
            yy: translator.translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
        },
    });

    return srCyrl;

})));


/***/ }),

/***/ 9131:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian [sr]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
//! author : Stefan Crnjaković <stefan@hotmail.rs> : https://github.com/crnjakovic

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var translator = {
        words: {
            //Different grammatical cases
            ss: ['sekunda', 'sekunde', 'sekundi'],
            m: ['jedan minut', 'jedne minute'],
            mm: ['minut', 'minute', 'minuta'],
            h: ['jedan sat', 'jednog sata'],
            hh: ['sat', 'sata', 'sati'],
            dd: ['dan', 'dana', 'dana'],
            MM: ['mesec', 'meseca', 'meseci'],
            yy: ['godina', 'godine', 'godina'],
        },
        correctGrammaticalCase: function (number, wordKey) {
            return number === 1
                ? wordKey[0]
                : number >= 2 && number <= 4
                ? wordKey[1]
                : wordKey[2];
        },
        translate: function (number, withoutSuffix, key) {
            var wordKey = translator.words[key];
            if (key.length === 1) {
                return withoutSuffix ? wordKey[0] : wordKey[1];
            } else {
                return (
                    number +
                    ' ' +
                    translator.correctGrammaticalCase(number, wordKey)
                );
            }
        },
    };

    var sr = moment.defineLocale('sr', {
        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(
            '_'
        ),
        monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(
            '_'
        ),
        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'D. M. YYYY.',
            LL: 'D. MMMM YYYY.',
            LLL: 'D. MMMM YYYY. H:mm',
            LLLL: 'dddd, D. MMMM YYYY. H:mm',
        },
        calendar: {
            sameDay: '[danas u] LT',
            nextDay: '[sutra u] LT',
            nextWeek: function () {
                switch (this.day()) {
                    case 0:
                        return '[u] [nedelju] [u] LT';
                    case 3:
                        return '[u] [sredu] [u] LT';
                    case 6:
                        return '[u] [subotu] [u] LT';
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return '[u] dddd [u] LT';
                }
            },
            lastDay: '[juče u] LT',
            lastWeek: function () {
                var lastWeekDays = [
                    '[prošle] [nedelje] [u] LT',
                    '[prošlog] [ponedeljka] [u] LT',
                    '[prošlog] [utorka] [u] LT',
                    '[prošle] [srede] [u] LT',
                    '[prošlog] [četvrtka] [u] LT',
                    '[prošlog] [petka] [u] LT',
                    '[prošle] [subote] [u] LT',
                ];
                return lastWeekDays[this.day()];
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'za %s',
            past: 'pre %s',
            s: 'nekoliko sekundi',
            ss: translator.translate,
            m: translator.translate,
            mm: translator.translate,
            h: translator.translate,
            hh: translator.translate,
            d: 'dan',
            dd: translator.translate,
            M: 'mesec',
            MM: translator.translate,
            y: 'godinu',
            yy: translator.translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return sr;

})));


/***/ }),

/***/ 5893:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : siSwati [ss]
//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ss = moment.defineLocale('ss', {
        months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split(
            '_'
        ),
        monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
        weekdays: 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(
            '_'
        ),
        weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
        weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Namuhla nga] LT',
            nextDay: '[Kusasa nga] LT',
            nextWeek: 'dddd [nga] LT',
            lastDay: '[Itolo nga] LT',
            lastWeek: 'dddd [leliphelile] [nga] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'nga %s',
            past: 'wenteka nga %s',
            s: 'emizuzwana lomcane',
            ss: '%d mzuzwana',
            m: 'umzuzu',
            mm: '%d emizuzu',
            h: 'lihora',
            hh: '%d emahora',
            d: 'lilanga',
            dd: '%d emalanga',
            M: 'inyanga',
            MM: '%d tinyanga',
            y: 'umnyaka',
            yy: '%d iminyaka',
        },
        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
        meridiem: function (hours, minutes, isLower) {
            if (hours < 11) {
                return 'ekuseni';
            } else if (hours < 15) {
                return 'emini';
            } else if (hours < 19) {
                return 'entsambama';
            } else {
                return 'ebusuku';
            }
        },
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'ekuseni') {
                return hour;
            } else if (meridiem === 'emini') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
                if (hour === 0) {
                    return 0;
                }
                return hour + 12;
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: '%d',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ss;

})));


/***/ }),

/***/ 8760:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swedish [sv]
//! author : Jens Alm : https://github.com/ulmus

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var sv = moment.defineLocale('sv', {
        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(
            '_'
        ),
        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY [kl.] HH:mm',
            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd D MMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Idag] LT',
            nextDay: '[Imorgon] LT',
            lastDay: '[Igår] LT',
            nextWeek: '[På] dddd LT',
            lastWeek: '[I] dddd[s] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'om %s',
            past: 'för %s sedan',
            s: 'några sekunder',
            ss: '%d sekunder',
            m: 'en minut',
            mm: '%d minuter',
            h: 'en timme',
            hh: '%d timmar',
            d: 'en dag',
            dd: '%d dagar',
            M: 'en månad',
            MM: '%d månader',
            y: 'ett år',
            yy: '%d år',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(\:e|\:a)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? ':e'
                        : b === 1
                        ? ':a'
                        : b === 2
                        ? ':a'
                        : b === 3
                        ? ':e'
                        : ':e';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return sv;

})));


/***/ }),

/***/ 1172:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swahili [sw]
//! author : Fahad Kassim : https://github.com/fadsel

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var sw = moment.defineLocale('sw', {
        months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(
            '_'
        ),
        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
        weekdays: 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(
            '_'
        ),
        weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
        weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'hh:mm A',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[leo saa] LT',
            nextDay: '[kesho saa] LT',
            nextWeek: '[wiki ijayo] dddd [saat] LT',
            lastDay: '[jana] LT',
            lastWeek: '[wiki iliyopita] dddd [saat] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s baadaye',
            past: 'tokea %s',
            s: 'hivi punde',
            ss: 'sekunde %d',
            m: 'dakika moja',
            mm: 'dakika %d',
            h: 'saa limoja',
            hh: 'masaa %d',
            d: 'siku moja',
            dd: 'siku %d',
            M: 'mwezi mmoja',
            MM: 'miezi %d',
            y: 'mwaka mmoja',
            yy: 'miaka %d',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return sw;

})));


/***/ }),

/***/ 7333:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tamil [ta]
//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var symbolMap = {
            1: '௧',
            2: '௨',
            3: '௩',
            4: '௪',
            5: '௫',
            6: '௬',
            7: '௭',
            8: '௮',
            9: '௯',
            0: '௦',
        },
        numberMap = {
            '௧': '1',
            '௨': '2',
            '௩': '3',
            '௪': '4',
            '௫': '5',
            '௬': '6',
            '௭': '7',
            '௮': '8',
            '௯': '9',
            '௦': '0',
        };

    var ta = moment.defineLocale('ta', {
        months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
            '_'
        ),
        monthsShort: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(
            '_'
        ),
        weekdays: 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(
            '_'
        ),
        weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(
            '_'
        ),
        weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, HH:mm',
            LLLL: 'dddd, D MMMM YYYY, HH:mm',
        },
        calendar: {
            sameDay: '[இன்று] LT',
            nextDay: '[நாளை] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[நேற்று] LT',
            lastWeek: '[கடந்த வாரம்] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s இல்',
            past: '%s முன்',
            s: 'ஒரு சில விநாடிகள்',
            ss: '%d விநாடிகள்',
            m: 'ஒரு நிமிடம்',
            mm: '%d நிமிடங்கள்',
            h: 'ஒரு மணி நேரம்',
            hh: '%d மணி நேரம்',
            d: 'ஒரு நாள்',
            dd: '%d நாட்கள்',
            M: 'ஒரு மாதம்',
            MM: '%d மாதங்கள்',
            y: 'ஒரு வருடம்',
            yy: '%d ஆண்டுகள்',
        },
        dayOfMonthOrdinalParse: /\d{1,2}வது/,
        ordinal: function (number) {
            return number + 'வது';
        },
        preparse: function (string) {
            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
                return numberMap[match];
            });
        },
        postformat: function (string) {
            return string.replace(/\d/g, function (match) {
                return symbolMap[match];
            });
        },
        // refer http://ta.wikipedia.org/s/1er1
        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
        meridiem: function (hour, minute, isLower) {
            if (hour < 2) {
                return ' யாமம்';
            } else if (hour < 6) {
                return ' வைகறை'; // வைகறை
            } else if (hour < 10) {
                return ' காலை'; // காலை
            } else if (hour < 14) {
                return ' நண்பகல்'; // நண்பகல்
            } else if (hour < 18) {
                return ' எற்பாடு'; // எற்பாடு
            } else if (hour < 22) {
                return ' மாலை'; // மாலை
            } else {
                return ' யாமம்';
            }
        },
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'யாமம்') {
                return hour < 2 ? hour : hour + 12;
            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
                return hour;
            } else if (meridiem === 'நண்பகல்') {
                return hour >= 10 ? hour : hour + 12;
            } else {
                return hour + 12;
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return ta;

})));


/***/ }),

/***/ 3110:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Telugu [te]
//! author : Krishna Chaitanya Thota : https://github.com/kcthota

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var te = moment.defineLocale('te', {
        months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(
            '_'
        ),
        monthsShort: 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(
            '_'
        ),
        weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
        weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
        longDateFormat: {
            LT: 'A h:mm',
            LTS: 'A h:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY, A h:mm',
            LLLL: 'dddd, D MMMM YYYY, A h:mm',
        },
        calendar: {
            sameDay: '[నేడు] LT',
            nextDay: '[రేపు] LT',
            nextWeek: 'dddd, LT',
            lastDay: '[నిన్న] LT',
            lastWeek: '[గత] dddd, LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s లో',
            past: '%s క్రితం',
            s: 'కొన్ని క్షణాలు',
            ss: '%d సెకన్లు',
            m: 'ఒక నిమిషం',
            mm: '%d నిమిషాలు',
            h: 'ఒక గంట',
            hh: '%d గంటలు',
            d: 'ఒక రోజు',
            dd: '%d రోజులు',
            M: 'ఒక నెల',
            MM: '%d నెలలు',
            y: 'ఒక సంవత్సరం',
            yy: '%d సంవత్సరాలు',
        },
        dayOfMonthOrdinalParse: /\d{1,2}వ/,
        ordinal: '%dవ',
        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'రాత్రి') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'ఉదయం') {
                return hour;
            } else if (meridiem === 'మధ్యాహ్నం') {
                return hour >= 10 ? hour : hour + 12;
            } else if (meridiem === 'సాయంత్రం') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'రాత్రి';
            } else if (hour < 10) {
                return 'ఉదయం';
            } else if (hour < 17) {
                return 'మధ్యాహ్నం';
            } else if (hour < 20) {
                return 'సాయంత్రం';
            } else {
                return 'రాత్రి';
            }
        },
        week: {
            dow: 0, // Sunday is the first day of the week.
            doy: 6, // The week that contains Jan 6th is the first week of the year.
        },
    });

    return te;

})));


/***/ }),

/***/ 2095:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tetun Dili (East Timor) [tet]
//! author : Joshua Brooks : https://github.com/joshbrooks
//! author : Onorio De J. Afonso : https://github.com/marobo
//! author : Sonia Simoes : https://github.com/soniasimoes

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var tet = moment.defineLocale('tet', {
        months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(
            '_'
        ),
        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
        weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),
        weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),
        weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Ohin iha] LT',
            nextDay: '[Aban iha] LT',
            nextWeek: 'dddd [iha] LT',
            lastDay: '[Horiseik iha] LT',
            lastWeek: 'dddd [semana kotuk] [iha] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'iha %s',
            past: '%s liuba',
            s: 'segundu balun',
            ss: 'segundu %d',
            m: 'minutu ida',
            mm: 'minutu %d',
            h: 'oras ida',
            hh: 'oras %d',
            d: 'loron ida',
            dd: 'loron %d',
            M: 'fulan ida',
            MM: 'fulan %d',
            y: 'tinan ida',
            yy: 'tinan %d',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return tet;

})));


/***/ }),

/***/ 7321:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tajik [tg]
//! author : Orif N. Jr. : https://github.com/orif-jr

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        0: '-ум',
        1: '-ум',
        2: '-юм',
        3: '-юм',
        4: '-ум',
        5: '-ум',
        6: '-ум',
        7: '-ум',
        8: '-ум',
        9: '-ум',
        10: '-ум',
        12: '-ум',
        13: '-ум',
        20: '-ум',
        30: '-юм',
        40: '-ум',
        50: '-ум',
        60: '-ум',
        70: '-ум',
        80: '-ум',
        90: '-ум',
        100: '-ум',
    };

    var tg = moment.defineLocale('tg', {
        months: {
            format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(
                '_'
            ),
            standalone: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
                '_'
            ),
        },
        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(
            '_'
        ),
        weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),
        weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Имрӯз соати] LT',
            nextDay: '[Фардо соати] LT',
            lastDay: '[Дирӯз соати] LT',
            nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',
            lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'баъди %s',
            past: '%s пеш',
            s: 'якчанд сония',
            m: 'як дақиқа',
            mm: '%d дақиқа',
            h: 'як соат',
            hh: '%d соат',
            d: 'як рӯз',
            dd: '%d рӯз',
            M: 'як моҳ',
            MM: '%d моҳ',
            y: 'як сол',
            yy: '%d сол',
        },
        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === 'шаб') {
                return hour < 4 ? hour : hour + 12;
            } else if (meridiem === 'субҳ') {
                return hour;
            } else if (meridiem === 'рӯз') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === 'бегоҳ') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'шаб';
            } else if (hour < 11) {
                return 'субҳ';
            } else if (hour < 16) {
                return 'рӯз';
            } else if (hour < 19) {
                return 'бегоҳ';
            } else {
                return 'шаб';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
        ordinal: function (number) {
            var a = number % 10,
                b = number >= 100 ? 100 : null;
            return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1th is the first week of the year.
        },
    });

    return tg;

})));


/***/ }),

/***/ 9041:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Thai [th]
//! author : Kridsada Thanabulpong : https://github.com/sirn

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var th = moment.defineLocale('th', {
        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(
            '_'
        ),
        monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'H:mm',
            LTS: 'H:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY เวลา H:mm',
            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',
        },
        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
        isPM: function (input) {
            return input === 'หลังเที่ยง';
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'ก่อนเที่ยง';
            } else {
                return 'หลังเที่ยง';
            }
        },
        calendar: {
            sameDay: '[วันนี้ เวลา] LT',
            nextDay: '[พรุ่งนี้ เวลา] LT',
            nextWeek: 'dddd[หน้า เวลา] LT',
            lastDay: '[เมื่อวานนี้ เวลา] LT',
            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'อีก %s',
            past: '%sที่แล้ว',
            s: 'ไม่กี่วินาที',
            ss: '%d วินาที',
            m: '1 นาที',
            mm: '%d นาที',
            h: '1 ชั่วโมง',
            hh: '%d ชั่วโมง',
            d: '1 วัน',
            dd: '%d วัน',
            w: '1 สัปดาห์',
            ww: '%d สัปดาห์',
            M: '1 เดือน',
            MM: '%d เดือน',
            y: '1 ปี',
            yy: '%d ปี',
        },
    });

    return th;

})));


/***/ }),

/***/ 9005:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkmen [tk]
//! author : Atamyrat Abdyrahmanov : https://github.com/atamyratabdy

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        1: "'inji",
        5: "'inji",
        8: "'inji",
        70: "'inji",
        80: "'inji",
        2: "'nji",
        7: "'nji",
        20: "'nji",
        50: "'nji",
        3: "'ünji",
        4: "'ünji",
        100: "'ünji",
        6: "'njy",
        9: "'unjy",
        10: "'unjy",
        30: "'unjy",
        60: "'ynjy",
        90: "'ynjy",
    };

    var tk = moment.defineLocale('tk', {
        months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(
            '_'
        ),
        monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),
        weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(
            '_'
        ),
        weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),
        weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[bugün sagat] LT',
            nextDay: '[ertir sagat] LT',
            nextWeek: '[indiki] dddd [sagat] LT',
            lastDay: '[düýn] LT',
            lastWeek: '[geçen] dddd [sagat] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s soň',
            past: '%s öň',
            s: 'birnäçe sekunt',
            m: 'bir minut',
            mm: '%d minut',
            h: 'bir sagat',
            hh: '%d sagat',
            d: 'bir gün',
            dd: '%d gün',
            M: 'bir aý',
            MM: '%d aý',
            y: 'bir ýyl',
            yy: '%d ýyl',
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {
                        // special case for zero
                        return number + "'unjy";
                    }
                    var a = number % 10,
                        b = (number % 100) - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return tk;

})));


/***/ }),

/***/ 5768:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tagalog (Philippines) [tl-ph]
//! author : Dan Hagman : https://github.com/hagmandan

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var tlPh = moment.defineLocale('tl-ph', {
        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(
            '_'
        ),
        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(
            '_'
        ),
        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'MM/D/YYYY',
            LL: 'MMMM D, YYYY',
            LLL: 'MMMM D, YYYY HH:mm',
            LLLL: 'dddd, MMMM DD, YYYY HH:mm',
        },
        calendar: {
            sameDay: 'LT [ngayong araw]',
            nextDay: '[Bukas ng] LT',
            nextWeek: 'LT [sa susunod na] dddd',
            lastDay: 'LT [kahapon]',
            lastWeek: 'LT [noong nakaraang] dddd',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'sa loob ng %s',
            past: '%s ang nakalipas',
            s: 'ilang segundo',
            ss: '%d segundo',
            m: 'isang minuto',
            mm: '%d minuto',
            h: 'isang oras',
            hh: '%d oras',
            d: 'isang araw',
            dd: '%d araw',
            M: 'isang buwan',
            MM: '%d buwan',
            y: 'isang taon',
            yy: '%d taon',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (number) {
            return number;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return tlPh;

})));


/***/ }),

/***/ 9444:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Klingon [tlh]
//! author : Dominika Kruk : https://github.com/amaranthrose

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

    function translateFuture(output) {
        var time = output;
        time =
            output.indexOf('jaj') !== -1
                ? time.slice(0, -3) + 'leS'
                : output.indexOf('jar') !== -1
                ? time.slice(0, -3) + 'waQ'
                : output.indexOf('DIS') !== -1
                ? time.slice(0, -3) + 'nem'
                : time + ' pIq';
        return time;
    }

    function translatePast(output) {
        var time = output;
        time =
            output.indexOf('jaj') !== -1
                ? time.slice(0, -3) + 'Hu’'
                : output.indexOf('jar') !== -1
                ? time.slice(0, -3) + 'wen'
                : output.indexOf('DIS') !== -1
                ? time.slice(0, -3) + 'ben'
                : time + ' ret';
        return time;
    }

    function translate(number, withoutSuffix, string, isFuture) {
        var numberNoun = numberAsNoun(number);
        switch (string) {
            case 'ss':
                return numberNoun + ' lup';
            case 'mm':
                return numberNoun + ' tup';
            case 'hh':
                return numberNoun + ' rep';
            case 'dd':
                return numberNoun + ' jaj';
            case 'MM':
                return numberNoun + ' jar';
            case 'yy':
                return numberNoun + ' DIS';
        }
    }

    function numberAsNoun(number) {
        var hundred = Math.floor((number % 1000) / 100),
            ten = Math.floor((number % 100) / 10),
            one = number % 10,
            word = '';
        if (hundred > 0) {
            word += numbersNouns[hundred] + 'vatlh';
        }
        if (ten > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';
        }
        if (one > 0) {
            word += (word !== '' ? ' ' : '') + numbersNouns[one];
        }
        return word === '' ? 'pagh' : word;
    }

    var tlh = moment.defineLocale('tlh', {
        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(
            '_'
        ),
        monthsShort: 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_'
        ),
        weekdaysShort: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_'
        ),
        weekdaysMin: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(
            '_'
        ),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[DaHjaj] LT',
            nextDay: '[wa’leS] LT',
            nextWeek: 'LLL',
            lastDay: '[wa’Hu’] LT',
            lastWeek: 'LLL',
            sameElse: 'L',
        },
        relativeTime: {
            future: translateFuture,
            past: translatePast,
            s: 'puS lup',
            ss: translate,
            m: 'wa’ tup',
            mm: translate,
            h: 'wa’ rep',
            hh: translate,
            d: 'wa’ jaj',
            dd: translate,
            M: 'wa’ jar',
            MM: translate,
            y: 'wa’ DIS',
            yy: translate,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return tlh;

})));


/***/ }),

/***/ 2397:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkish [tr]
//! authors : Erhan Gundogan : https://github.com/erhangundogan,
//!           Burak Yiğit Kaya: https://github.com/BYK

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var suffixes = {
        1: "'inci",
        5: "'inci",
        8: "'inci",
        70: "'inci",
        80: "'inci",
        2: "'nci",
        7: "'nci",
        20: "'nci",
        50: "'nci",
        3: "'üncü",
        4: "'üncü",
        100: "'üncü",
        6: "'ncı",
        9: "'uncu",
        10: "'uncu",
        30: "'uncu",
        60: "'ıncı",
        90: "'ıncı",
    };

    var tr = moment.defineLocale('tr', {
        months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(
            '_'
        ),
        monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
        weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(
            '_'
        ),
        weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
        weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
        meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'öö' : 'ÖÖ';
            } else {
                return isLower ? 'ös' : 'ÖS';
            }
        },
        meridiemParse: /öö|ÖÖ|ös|ÖS/,
        isPM: function (input) {
            return input === 'ös' || input === 'ÖS';
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[bugün saat] LT',
            nextDay: '[yarın saat] LT',
            nextWeek: '[gelecek] dddd [saat] LT',
            lastDay: '[dün] LT',
            lastWeek: '[geçen] dddd [saat] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s sonra',
            past: '%s önce',
            s: 'birkaç saniye',
            ss: '%d saniye',
            m: 'bir dakika',
            mm: '%d dakika',
            h: 'bir saat',
            hh: '%d saat',
            d: 'bir gün',
            dd: '%d gün',
            w: 'bir hafta',
            ww: '%d hafta',
            M: 'bir ay',
            MM: '%d ay',
            y: 'bir yıl',
            yy: '%d yıl',
        },
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'Do':
                case 'DD':
                    return number;
                default:
                    if (number === 0) {
                        // special case for zero
                        return number + "'ıncı";
                    }
                    var a = number % 10,
                        b = (number % 100) - a,
                        c = number >= 100 ? 100 : null;
                    return number + (suffixes[a] || suffixes[b] || suffixes[c]);
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return tr;

})));


/***/ }),

/***/ 8254:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Talossan [tzl]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v
//! author : Iustì Canun

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
    // This is currently too difficult (maybe even impossible) to add.
    var tzl = moment.defineLocale('tzl', {
        months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(
            '_'
        ),
        monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
        weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
        weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
        weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
        longDateFormat: {
            LT: 'HH.mm',
            LTS: 'HH.mm.ss',
            L: 'DD.MM.YYYY',
            LL: 'D. MMMM [dallas] YYYY',
            LLL: 'D. MMMM [dallas] YYYY HH.mm',
            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',
        },
        meridiemParse: /d\'o|d\'a/i,
        isPM: function (input) {
            return "d'o" === input.toLowerCase();
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours > 11) {
                return isLower ? "d'o" : "D'O";
            } else {
                return isLower ? "d'a" : "D'A";
            }
        },
        calendar: {
            sameDay: '[oxhi à] LT',
            nextDay: '[demà à] LT',
            nextWeek: 'dddd [à] LT',
            lastDay: '[ieiri à] LT',
            lastWeek: '[sür el] dddd [lasteu à] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'osprei %s',
            past: 'ja%s',
            s: processRelativeTime,
            ss: processRelativeTime,
            m: processRelativeTime,
            mm: processRelativeTime,
            h: processRelativeTime,
            hh: processRelativeTime,
            d: processRelativeTime,
            dd: processRelativeTime,
            M: processRelativeTime,
            MM: processRelativeTime,
            y: processRelativeTime,
            yy: processRelativeTime,
        },
        dayOfMonthOrdinalParse: /\d{1,2}\./,
        ordinal: '%d.',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    function processRelativeTime(number, withoutSuffix, key, isFuture) {
        var format = {
            s: ['viensas secunds', "'iensas secunds"],
            ss: [number + ' secunds', '' + number + ' secunds'],
            m: ["'n míut", "'iens míut"],
            mm: [number + ' míuts', '' + number + ' míuts'],
            h: ["'n þora", "'iensa þora"],
            hh: [number + ' þoras', '' + number + ' þoras'],
            d: ["'n ziua", "'iensa ziua"],
            dd: [number + ' ziuas', '' + number + ' ziuas'],
            M: ["'n mes", "'iens mes"],
            MM: [number + ' mesen', '' + number + ' mesen'],
            y: ["'n ar", "'iens ar"],
            yy: [number + ' ars', '' + number + ' ars'],
        };
        return isFuture
            ? format[key][0]
            : withoutSuffix
            ? format[key][0]
            : format[key][1];
    }

    return tzl;

})));


/***/ }),

/***/ 699:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight Latin [tzm-latn]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var tzmLatn = moment.defineLocale('tzm-latn', {
        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
            '_'
        ),
        monthsShort: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(
            '_'
        ),
        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[asdkh g] LT',
            nextDay: '[aska g] LT',
            nextWeek: 'dddd [g] LT',
            lastDay: '[assant g] LT',
            lastWeek: 'dddd [g] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'dadkh s yan %s',
            past: 'yan %s',
            s: 'imik',
            ss: '%d imik',
            m: 'minuḍ',
            mm: '%d minuḍ',
            h: 'saɛa',
            hh: '%d tassaɛin',
            d: 'ass',
            dd: '%d ossan',
            M: 'ayowr',
            MM: '%d iyyirn',
            y: 'asgas',
            yy: '%d isgasn',
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return tzmLatn;

})));


/***/ }),

/***/ 1106:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight [tzm]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var tzm = moment.defineLocale('tzm', {
        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
            '_'
        ),
        monthsShort: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(
            '_'
        ),
        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
            nextWeek: 'dddd [ⴴ] LT',
            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
            lastWeek: 'dddd [ⴴ] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
            past: 'ⵢⴰⵏ %s',
            s: 'ⵉⵎⵉⴽ',
            ss: '%d ⵉⵎⵉⴽ',
            m: 'ⵎⵉⵏⵓⴺ',
            mm: '%d ⵎⵉⵏⵓⴺ',
            h: 'ⵙⴰⵄⴰ',
            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
            d: 'ⴰⵙⵙ',
            dd: '%d oⵙⵙⴰⵏ',
            M: 'ⴰⵢoⵓⵔ',
            MM: '%d ⵉⵢⵢⵉⵔⵏ',
            y: 'ⴰⵙⴳⴰⵙ',
            yy: '%d ⵉⵙⴳⴰⵙⵏ',
        },
        week: {
            dow: 6, // Saturday is the first day of the week.
            doy: 12, // The week that contains Jan 12th is the first week of the year.
        },
    });

    return tzm;

})));


/***/ }),

/***/ 9288:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uyghur (China) [ug-cn]
//! author: boyaq : https://github.com/boyaq

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var ugCn = moment.defineLocale('ug-cn', {
        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        monthsShort: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(
            '_'
        ),
        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(
            '_'
        ),
        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY-MM-DD',
            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',
            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',
        },
        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (
                meridiem === 'يېرىم كېچە' ||
                meridiem === 'سەھەر' ||
                meridiem === 'چۈشتىن بۇرۇن'
            ) {
                return hour;
            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {
                return hour + 12;
            } else {
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return 'يېرىم كېچە';
            } else if (hm < 900) {
                return 'سەھەر';
            } else if (hm < 1130) {
                return 'چۈشتىن بۇرۇن';
            } else if (hm < 1230) {
                return 'چۈش';
            } else if (hm < 1800) {
                return 'چۈشتىن كېيىن';
            } else {
                return 'كەچ';
            }
        },
        calendar: {
            sameDay: '[بۈگۈن سائەت] LT',
            nextDay: '[ئەتە سائەت] LT',
            nextWeek: '[كېلەركى] dddd [سائەت] LT',
            lastDay: '[تۆنۈگۈن] LT',
            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s كېيىن',
            past: '%s بۇرۇن',
            s: 'نەچچە سېكونت',
            ss: '%d سېكونت',
            m: 'بىر مىنۇت',
            mm: '%d مىنۇت',
            h: 'بىر سائەت',
            hh: '%d سائەت',
            d: 'بىر كۈن',
            dd: '%d كۈن',
            M: 'بىر ئاي',
            MM: '%d ئاي',
            y: 'بىر يىل',
            yy: '%d يىل',
        },

        dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '-كۈنى';
                case 'w':
                case 'W':
                    return number + '-ھەپتە';
                default:
                    return number;
            }
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 1st is the first week of the year.
        },
    });

    return ugCn;

})));


/***/ }),

/***/ 7691:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Ukrainian [uk]
//! author : zemlanin : https://github.com/zemlanin
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    function plural(word, num) {
        var forms = word.split('_');
        return num % 10 === 1 && num % 100 !== 11
            ? forms[0]
            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)
            ? forms[1]
            : forms[2];
    }
    function relativeTimeWithPlural(number, withoutSuffix, key) {
        var format = {
            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',
            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
            dd: 'день_дні_днів',
            MM: 'місяць_місяці_місяців',
            yy: 'рік_роки_років',
        };
        if (key === 'm') {
            return withoutSuffix ? 'хвилина' : 'хвилину';
        } else if (key === 'h') {
            return withoutSuffix ? 'година' : 'годину';
        } else {
            return number + ' ' + plural(format[key], +number);
        }
    }
    function weekdaysCaseReplace(m, format) {
        var weekdays = {
                nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(
                    '_'
                ),
                accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(
                    '_'
                ),
                genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(
                    '_'
                ),
            },
            nounCase;

        if (m === true) {
            return weekdays['nominative']
                .slice(1, 7)
                .concat(weekdays['nominative'].slice(0, 1));
        }
        if (!m) {
            return weekdays['nominative'];
        }

        nounCase = /(\[[ВвУу]\]) ?dddd/.test(format)
            ? 'accusative'
            : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(format)
            ? 'genitive'
            : 'nominative';
        return weekdays[nounCase][m.day()];
    }
    function processHoursFunction(str) {
        return function () {
            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
        };
    }

    var uk = moment.defineLocale('uk', {
        months: {
            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(
                '_'
            ),
            standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(
                '_'
            ),
        },
        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(
            '_'
        ),
        weekdays: weekdaysCaseReplace,
        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD.MM.YYYY',
            LL: 'D MMMM YYYY р.',
            LLL: 'D MMMM YYYY р., HH:mm',
            LLLL: 'dddd, D MMMM YYYY р., HH:mm',
        },
        calendar: {
            sameDay: processHoursFunction('[Сьогодні '),
            nextDay: processHoursFunction('[Завтра '),
            lastDay: processHoursFunction('[Вчора '),
            nextWeek: processHoursFunction('[У] dddd ['),
            lastWeek: function () {
                switch (this.day()) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return processHoursFunction('[Минулої] dddd [').call(this);
                    case 1:
                    case 2:
                    case 4:
                        return processHoursFunction('[Минулого] dddd [').call(this);
                }
            },
            sameElse: 'L',
        },
        relativeTime: {
            future: 'за %s',
            past: '%s тому',
            s: 'декілька секунд',
            ss: relativeTimeWithPlural,
            m: relativeTimeWithPlural,
            mm: relativeTimeWithPlural,
            h: 'годину',
            hh: relativeTimeWithPlural,
            d: 'день',
            dd: relativeTimeWithPlural,
            M: 'місяць',
            MM: relativeTimeWithPlural,
            y: 'рік',
            yy: relativeTimeWithPlural,
        },
        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
        meridiemParse: /ночі|ранку|дня|вечора/,
        isPM: function (input) {
            return /^(дня|вечора)$/.test(input);
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 4) {
                return 'ночі';
            } else if (hour < 12) {
                return 'ранку';
            } else if (hour < 17) {
                return 'дня';
            } else {
                return 'вечора';
            }
        },
        dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'M':
                case 'd':
                case 'DDD':
                case 'w':
                case 'W':
                    return number + '-й';
                case 'D':
                    return number + '-го';
                default:
                    return number;
            }
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return uk;

})));


/***/ }),

/***/ 3795:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Urdu [ur]
//! author : Sawood Alam : https://github.com/ibnesayeed
//! author : Zack : https://github.com/ZackVision

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var months = [
            'جنوری',
            'فروری',
            'مارچ',
            'اپریل',
            'مئی',
            'جون',
            'جولائی',
            'اگست',
            'ستمبر',
            'اکتوبر',
            'نومبر',
            'دسمبر',
        ],
        days = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];

    var ur = moment.defineLocale('ur', {
        months: months,
        monthsShort: months,
        weekdays: days,
        weekdaysShort: days,
        weekdaysMin: days,
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd، D MMMM YYYY HH:mm',
        },
        meridiemParse: /صبح|شام/,
        isPM: function (input) {
            return 'شام' === input;
        },
        meridiem: function (hour, minute, isLower) {
            if (hour < 12) {
                return 'صبح';
            }
            return 'شام';
        },
        calendar: {
            sameDay: '[آج بوقت] LT',
            nextDay: '[کل بوقت] LT',
            nextWeek: 'dddd [بوقت] LT',
            lastDay: '[گذشتہ روز بوقت] LT',
            lastWeek: '[گذشتہ] dddd [بوقت] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s بعد',
            past: '%s قبل',
            s: 'چند سیکنڈ',
            ss: '%d سیکنڈ',
            m: 'ایک منٹ',
            mm: '%d منٹ',
            h: 'ایک گھنٹہ',
            hh: '%d گھنٹے',
            d: 'ایک دن',
            dd: '%d دن',
            M: 'ایک ماہ',
            MM: '%d ماہ',
            y: 'ایک سال',
            yy: '%d سال',
        },
        preparse: function (string) {
            return string.replace(/،/g, ',');
        },
        postformat: function (string) {
            return string.replace(/,/g, '،');
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return ur;

})));


/***/ }),

/***/ 588:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek Latin [uz-latn]
//! author : Rasulbek Mirzayev : github.com/Rasulbeeek

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var uzLatn = moment.defineLocale('uz-latn', {
        months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(
            '_'
        ),
        monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
        weekdays: 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(
            '_'
        ),
        weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
        weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm',
        },
        calendar: {
            sameDay: '[Bugun soat] LT [da]',
            nextDay: '[Ertaga] LT [da]',
            nextWeek: 'dddd [kuni soat] LT [da]',
            lastDay: '[Kecha soat] LT [da]',
            lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
            sameElse: 'L',
        },
        relativeTime: {
            future: 'Yaqin %s ichida',
            past: 'Bir necha %s oldin',
            s: 'soniya',
            ss: '%d soniya',
            m: 'bir daqiqa',
            mm: '%d daqiqa',
            h: 'bir soat',
            hh: '%d soat',
            d: 'bir kun',
            dd: '%d kun',
            M: 'bir oy',
            MM: '%d oy',
            y: 'bir yil',
            yy: '%d yil',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 7th is the first week of the year.
        },
    });

    return uzLatn;

})));


/***/ }),

/***/ 6791:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek [uz]
//! author : Sardor Muminov : https://github.com/muminoff

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var uz = moment.defineLocale('uz', {
        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(
            '_'
        ),
        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'D MMMM YYYY, dddd HH:mm',
        },
        calendar: {
            sameDay: '[Бугун соат] LT [да]',
            nextDay: '[Эртага] LT [да]',
            nextWeek: 'dddd [куни соат] LT [да]',
            lastDay: '[Кеча соат] LT [да]',
            lastWeek: '[Утган] dddd [куни соат] LT [да]',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'Якин %s ичида',
            past: 'Бир неча %s олдин',
            s: 'фурсат',
            ss: '%d фурсат',
            m: 'бир дакика',
            mm: '%d дакика',
            h: 'бир соат',
            hh: '%d соат',
            d: 'бир кун',
            dd: '%d кун',
            M: 'бир ой',
            MM: '%d ой',
            y: 'бир йил',
            yy: '%d йил',
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 7, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return uz;

})));


/***/ }),

/***/ 5666:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Vietnamese [vi]
//! author : Bang Nguyen : https://github.com/bangnk
//! author : Chien Kira : https://github.com/chienkira

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var vi = moment.defineLocale('vi', {
        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(
            '_'
        ),
        monthsShort: 'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(
            '_'
        ),
        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
        weekdaysParseExact: true,
        meridiemParse: /sa|ch/i,
        isPM: function (input) {
            return /^ch$/i.test(input);
        },
        meridiem: function (hours, minutes, isLower) {
            if (hours < 12) {
                return isLower ? 'sa' : 'SA';
            } else {
                return isLower ? 'ch' : 'CH';
            }
        },
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM [năm] YYYY',
            LLL: 'D MMMM [năm] YYYY HH:mm',
            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',
            l: 'DD/M/YYYY',
            ll: 'D MMM YYYY',
            lll: 'D MMM YYYY HH:mm',
            llll: 'ddd, D MMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[Hôm nay lúc] LT',
            nextDay: '[Ngày mai lúc] LT',
            nextWeek: 'dddd [tuần tới lúc] LT',
            lastDay: '[Hôm qua lúc] LT',
            lastWeek: 'dddd [tuần trước lúc] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: '%s tới',
            past: '%s trước',
            s: 'vài giây',
            ss: '%d giây',
            m: 'một phút',
            mm: '%d phút',
            h: 'một giờ',
            hh: '%d giờ',
            d: 'một ngày',
            dd: '%d ngày',
            w: 'một tuần',
            ww: '%d tuần',
            M: 'một tháng',
            MM: '%d tháng',
            y: 'một năm',
            yy: '%d năm',
        },
        dayOfMonthOrdinalParse: /\d{1,2}/,
        ordinal: function (number) {
            return number;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return vi;

})));


/***/ }),

/***/ 4378:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Pseudo [x-pseudo]
//! author : Andrew Hood : https://github.com/andrewhood125

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var xPseudo = moment.defineLocale('x-pseudo', {
        months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(
            '_'
        ),
        monthsShort: 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(
            '_'
        ),
        monthsParseExact: true,
        weekdays: 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(
            '_'
        ),
        weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
        weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
        weekdaysParseExact: true,
        longDateFormat: {
            LT: 'HH:mm',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY HH:mm',
            LLLL: 'dddd, D MMMM YYYY HH:mm',
        },
        calendar: {
            sameDay: '[T~ódá~ý át] LT',
            nextDay: '[T~ómó~rró~w át] LT',
            nextWeek: 'dddd [át] LT',
            lastDay: '[Ý~ést~érdá~ý át] LT',
            lastWeek: '[L~ást] dddd [át] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'í~ñ %s',
            past: '%s á~gó',
            s: 'á ~féw ~sécó~ñds',
            ss: '%d s~écóñ~ds',
            m: 'á ~míñ~úté',
            mm: '%d m~íñú~tés',
            h: 'á~ñ hó~úr',
            hh: '%d h~óúrs',
            d: 'á ~dáý',
            dd: '%d d~áýs',
            M: 'á ~móñ~th',
            MM: '%d m~óñt~hs',
            y: 'á ~ýéár',
            yy: '%d ý~éárs',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    ~~((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return xPseudo;

})));


/***/ }),

/***/ 5805:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Yoruba Nigeria [yo]
//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var yo = moment.defineLocale('yo', {
        months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(
            '_'
        ),
        monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
        weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
        weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
        weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
        longDateFormat: {
            LT: 'h:mm A',
            LTS: 'h:mm:ss A',
            L: 'DD/MM/YYYY',
            LL: 'D MMMM YYYY',
            LLL: 'D MMMM YYYY h:mm A',
            LLLL: 'dddd, D MMMM YYYY h:mm A',
        },
        calendar: {
            sameDay: '[Ònì ni] LT',
            nextDay: '[Ọ̀la ni] LT',
            nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
            lastDay: '[Àna ni] LT',
            lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
            sameElse: 'L',
        },
        relativeTime: {
            future: 'ní %s',
            past: '%s kọjá',
            s: 'ìsẹjú aayá die',
            ss: 'aayá %d',
            m: 'ìsẹjú kan',
            mm: 'ìsẹjú %d',
            h: 'wákati kan',
            hh: 'wákati %d',
            d: 'ọjọ́ kan',
            dd: 'ọjọ́ %d',
            M: 'osù kan',
            MM: 'osù %d',
            y: 'ọdún kan',
            yy: 'ọdún %d',
        },
        dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
        ordinal: 'ọjọ́ %d',
        week: {
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return yo;

})));


/***/ }),

/***/ 3839:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (China) [zh-cn]
//! author : suupic : https://github.com/suupic
//! author : Zeno Zeng : https://github.com/zenozeng
//! author : uu109 : https://github.com/uu109

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var zhCn = moment.defineLocale('zh-cn', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日Ah点mm分',
            LLLL: 'YYYY年M月D日ddddAh点mm分',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            } else {
                // '中午'
                return hour >= 11 ? hour : hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: function (now) {
                if (now.week() !== this.week()) {
                    return '[下]dddLT';
                } else {
                    return '[本]dddLT';
                }
            },
            lastDay: '[昨天]LT',
            lastWeek: function (now) {
                if (this.week() !== now.week()) {
                    return '[上]dddLT';
                } else {
                    return '[本]dddLT';
                }
            },
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '周';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s后',
            past: '%s前',
            s: '几秒',
            ss: '%d 秒',
            m: '1 分钟',
            mm: '%d 分钟',
            h: '1 小时',
            hh: '%d 小时',
            d: '1 天',
            dd: '%d 天',
            w: '1 周',
            ww: '%d 周',
            M: '1 个月',
            MM: '%d 个月',
            y: '1 年',
            yy: '%d 年',
        },
        week: {
            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
            dow: 1, // Monday is the first day of the week.
            doy: 4, // The week that contains Jan 4th is the first week of the year.
        },
    });

    return zhCn;

})));


/***/ }),

/***/ 5726:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Hong Kong) [zh-hk]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Konstantin : https://github.com/skfd
//! author : Anthony : https://github.com/anthonylau

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var zhHk = moment.defineLocale('zh-hk', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1200) {
                return '上午';
            } else if (hm === 1200) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天]LT',
            nextDay: '[明天]LT',
            nextWeek: '[下]ddddLT',
            lastDay: '[昨天]LT',
            lastWeek: '[上]ddddLT',
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '週';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年',
        },
    });

    return zhHk;

})));


/***/ }),

/***/ 9807:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Macau) [zh-mo]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Tan Yuanhong : https://github.com/le0tan

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var zhMo = moment.defineLocale('zh-mo', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'DD/MM/YYYY',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'D/M/YYYY',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天] LT',
            nextDay: '[明天] LT',
            nextWeek: '[下]dddd LT',
            lastDay: '[昨天] LT',
            lastWeek: '[上]dddd LT',
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '週';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s內',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年',
        },
    });

    return zhMo;

})));


/***/ }),

/***/ 4152:
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Taiwan) [zh-tw]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris

;(function (global, factory) {
    true ? factory(__webpack_require__(381)) :
   0
}(this, (function (moment) { 'use strict';

    //! moment.js locale configuration

    var zhTw = moment.defineLocale('zh-tw', {
        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(
            '_'
        ),
        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(
            '_'
        ),
        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),
        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),
        longDateFormat: {
            LT: 'HH:mm',
            LTS: 'HH:mm:ss',
            L: 'YYYY/MM/DD',
            LL: 'YYYY年M月D日',
            LLL: 'YYYY年M月D日 HH:mm',
            LLLL: 'YYYY年M月D日dddd HH:mm',
            l: 'YYYY/M/D',
            ll: 'YYYY年M月D日',
            lll: 'YYYY年M月D日 HH:mm',
            llll: 'YYYY年M月D日dddd HH:mm',
        },
        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
        meridiemHour: function (hour, meridiem) {
            if (hour === 12) {
                hour = 0;
            }
            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
                return hour;
            } else if (meridiem === '中午') {
                return hour >= 11 ? hour : hour + 12;
            } else if (meridiem === '下午' || meridiem === '晚上') {
                return hour + 12;
            }
        },
        meridiem: function (hour, minute, isLower) {
            var hm = hour * 100 + minute;
            if (hm < 600) {
                return '凌晨';
            } else if (hm < 900) {
                return '早上';
            } else if (hm < 1130) {
                return '上午';
            } else if (hm < 1230) {
                return '中午';
            } else if (hm < 1800) {
                return '下午';
            } else {
                return '晚上';
            }
        },
        calendar: {
            sameDay: '[今天] LT',
            nextDay: '[明天] LT',
            nextWeek: '[下]dddd LT',
            lastDay: '[昨天] LT',
            lastWeek: '[上]dddd LT',
            sameElse: 'L',
        },
        dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
        ordinal: function (number, period) {
            switch (period) {
                case 'd':
                case 'D':
                case 'DDD':
                    return number + '日';
                case 'M':
                    return number + '月';
                case 'w':
                case 'W':
                    return number + '週';
                default:
                    return number;
            }
        },
        relativeTime: {
            future: '%s後',
            past: '%s前',
            s: '幾秒',
            ss: '%d 秒',
            m: '1 分鐘',
            mm: '%d 分鐘',
            h: '1 小時',
            hh: '%d 小時',
            d: '1 天',
            dd: '%d 天',
            M: '1 個月',
            MM: '%d 個月',
            y: '1 年',
            yy: '%d 年',
        },
    });

    return zhTw;

})));


/***/ }),

/***/ 6700:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": 2786,
	"./af.js": 2786,
	"./ar": 867,
	"./ar-dz": 4130,
	"./ar-dz.js": 4130,
	"./ar-kw": 6135,
	"./ar-kw.js": 6135,
	"./ar-ly": 6440,
	"./ar-ly.js": 6440,
	"./ar-ma": 7702,
	"./ar-ma.js": 7702,
	"./ar-sa": 6040,
	"./ar-sa.js": 6040,
	"./ar-tn": 7100,
	"./ar-tn.js": 7100,
	"./ar.js": 867,
	"./az": 1083,
	"./az.js": 1083,
	"./be": 9808,
	"./be.js": 9808,
	"./bg": 8338,
	"./bg.js": 8338,
	"./bm": 7438,
	"./bm.js": 7438,
	"./bn": 8905,
	"./bn-bd": 6225,
	"./bn-bd.js": 6225,
	"./bn.js": 8905,
	"./bo": 1560,
	"./bo.js": 1560,
	"./br": 1278,
	"./br.js": 1278,
	"./bs": 622,
	"./bs.js": 622,
	"./ca": 2468,
	"./ca.js": 2468,
	"./cs": 5822,
	"./cs.js": 5822,
	"./cv": 877,
	"./cv.js": 877,
	"./cy": 7373,
	"./cy.js": 7373,
	"./da": 4780,
	"./da.js": 4780,
	"./de": 9740,
	"./de-at": 217,
	"./de-at.js": 217,
	"./de-ch": 894,
	"./de-ch.js": 894,
	"./de.js": 9740,
	"./dv": 5300,
	"./dv.js": 5300,
	"./el": 837,
	"./el.js": 837,
	"./en-au": 8348,
	"./en-au.js": 8348,
	"./en-ca": 7925,
	"./en-ca.js": 7925,
	"./en-gb": 2243,
	"./en-gb.js": 2243,
	"./en-ie": 6436,
	"./en-ie.js": 6436,
	"./en-il": 7207,
	"./en-il.js": 7207,
	"./en-in": 4175,
	"./en-in.js": 4175,
	"./en-nz": 6319,
	"./en-nz.js": 6319,
	"./en-sg": 1662,
	"./en-sg.js": 1662,
	"./eo": 2915,
	"./eo.js": 2915,
	"./es": 7093,
	"./es-do": 5251,
	"./es-do.js": 5251,
	"./es-mx": 6112,
	"./es-mx.js": 6112,
	"./es-us": 1146,
	"./es-us.js": 1146,
	"./es.js": 7093,
	"./et": 5603,
	"./et.js": 5603,
	"./eu": 7763,
	"./eu.js": 7763,
	"./fa": 6959,
	"./fa.js": 6959,
	"./fi": 1897,
	"./fi.js": 1897,
	"./fil": 2549,
	"./fil.js": 2549,
	"./fo": 4694,
	"./fo.js": 4694,
	"./fr": 4470,
	"./fr-ca": 3049,
	"./fr-ca.js": 3049,
	"./fr-ch": 2330,
	"./fr-ch.js": 2330,
	"./fr.js": 4470,
	"./fy": 5044,
	"./fy.js": 5044,
	"./ga": 9295,
	"./ga.js": 9295,
	"./gd": 2101,
	"./gd.js": 2101,
	"./gl": 8794,
	"./gl.js": 8794,
	"./gom-deva": 7884,
	"./gom-deva.js": 7884,
	"./gom-latn": 3168,
	"./gom-latn.js": 3168,
	"./gu": 5349,
	"./gu.js": 5349,
	"./he": 4206,
	"./he.js": 4206,
	"./hi": 94,
	"./hi.js": 94,
	"./hr": 316,
	"./hr.js": 316,
	"./hu": 2138,
	"./hu.js": 2138,
	"./hy-am": 1423,
	"./hy-am.js": 1423,
	"./id": 9218,
	"./id.js": 9218,
	"./is": 135,
	"./is.js": 135,
	"./it": 626,
	"./it-ch": 150,
	"./it-ch.js": 150,
	"./it.js": 626,
	"./ja": 9183,
	"./ja.js": 9183,
	"./jv": 4286,
	"./jv.js": 4286,
	"./ka": 2105,
	"./ka.js": 2105,
	"./kk": 7772,
	"./kk.js": 7772,
	"./km": 8758,
	"./km.js": 8758,
	"./kn": 9282,
	"./kn.js": 9282,
	"./ko": 3730,
	"./ko.js": 3730,
	"./ku": 1408,
	"./ku.js": 1408,
	"./ky": 3291,
	"./ky.js": 3291,
	"./lb": 6841,
	"./lb.js": 6841,
	"./lo": 5466,
	"./lo.js": 5466,
	"./lt": 7010,
	"./lt.js": 7010,
	"./lv": 7595,
	"./lv.js": 7595,
	"./me": 9861,
	"./me.js": 9861,
	"./mi": 5493,
	"./mi.js": 5493,
	"./mk": 5966,
	"./mk.js": 5966,
	"./ml": 7341,
	"./ml.js": 7341,
	"./mn": 5115,
	"./mn.js": 5115,
	"./mr": 370,
	"./mr.js": 370,
	"./ms": 9847,
	"./ms-my": 1237,
	"./ms-my.js": 1237,
	"./ms.js": 9847,
	"./mt": 2126,
	"./mt.js": 2126,
	"./my": 6165,
	"./my.js": 6165,
	"./nb": 4924,
	"./nb.js": 4924,
	"./ne": 6744,
	"./ne.js": 6744,
	"./nl": 3901,
	"./nl-be": 9814,
	"./nl-be.js": 9814,
	"./nl.js": 3901,
	"./nn": 3877,
	"./nn.js": 3877,
	"./oc-lnc": 2135,
	"./oc-lnc.js": 2135,
	"./pa-in": 5858,
	"./pa-in.js": 5858,
	"./pl": 4495,
	"./pl.js": 4495,
	"./pt": 9520,
	"./pt-br": 7971,
	"./pt-br.js": 7971,
	"./pt.js": 9520,
	"./ro": 6459,
	"./ro.js": 6459,
	"./ru": 1793,
	"./ru.js": 1793,
	"./sd": 950,
	"./sd.js": 950,
	"./se": 490,
	"./se.js": 490,
	"./si": 124,
	"./si.js": 124,
	"./sk": 4249,
	"./sk.js": 4249,
	"./sl": 4985,
	"./sl.js": 4985,
	"./sq": 1104,
	"./sq.js": 1104,
	"./sr": 9131,
	"./sr-cyrl": 9915,
	"./sr-cyrl.js": 9915,
	"./sr.js": 9131,
	"./ss": 5893,
	"./ss.js": 5893,
	"./sv": 8760,
	"./sv.js": 8760,
	"./sw": 1172,
	"./sw.js": 1172,
	"./ta": 7333,
	"./ta.js": 7333,
	"./te": 3110,
	"./te.js": 3110,
	"./tet": 2095,
	"./tet.js": 2095,
	"./tg": 7321,
	"./tg.js": 7321,
	"./th": 9041,
	"./th.js": 9041,
	"./tk": 9005,
	"./tk.js": 9005,
	"./tl-ph": 5768,
	"./tl-ph.js": 5768,
	"./tlh": 9444,
	"./tlh.js": 9444,
	"./tr": 2397,
	"./tr.js": 2397,
	"./tzl": 8254,
	"./tzl.js": 8254,
	"./tzm": 1106,
	"./tzm-latn": 699,
	"./tzm-latn.js": 699,
	"./tzm.js": 1106,
	"./ug-cn": 9288,
	"./ug-cn.js": 9288,
	"./uk": 7691,
	"./uk.js": 7691,
	"./ur": 3795,
	"./ur.js": 3795,
	"./uz": 6791,
	"./uz-latn": 588,
	"./uz-latn.js": 588,
	"./uz.js": 6791,
	"./vi": 5666,
	"./vi.js": 5666,
	"./x-pseudo": 4378,
	"./x-pseudo.js": 4378,
	"./yo": 5805,
	"./yo.js": 5805,
	"./zh-cn": 3839,
	"./zh-cn.js": 3839,
	"./zh-hk": 5726,
	"./zh-hk.js": 5726,
	"./zh-mo": 9807,
	"./zh-mo.js": 9807,
	"./zh-tw": 4152,
	"./zh-tw.js": 4152
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 6700;

/***/ }),

/***/ 381:
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* module decorator */ module = __webpack_require__.nmd(module);
//! moment.js
//! version : 2.29.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
     true ? module.exports = factory() :
    0
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            "object" !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = undefined;
                __webpack_require__(6700)("./" + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (!arguments[0]) {
                time = undefined;
                formats = undefined;
            } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.29.1';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));


/***/ }),

/***/ 3379:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ 5933:
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_RESULT__;/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&("style"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}
function w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(" ").replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function y(a,b){for(var c=a.className.split(/\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}
function ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,"link",{rel:"stylesheet",href:b,media:"all"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error("Stylesheet failed to load");d()}):setTimeout(function(){e=!0;d()},0);u(a,"head",b)}
function A(a,b,c,d){var e=a.c.getElementsByTagName("head")[0];if(e){var f=t(a,"script",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,"HEAD"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error("Script load timeout")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||"-"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\W_]+/g,"").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a="n";var c=(b||"n4").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+" "+(a.f+"00")+" 300px "+I(a.c)}function I(a){var b=[];a=a.split(/,\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['"]/g,"");-1!=d.indexOf(" ")||/^\d/.test(d)?b.push("'"+d+"'"):b.push(d)}return b.join(",")}function J(a){return a.a+a.f}function H(a){var b="normal";"o"===a.a?b="oblique":"i"===a.a&&(b="italic");return b}
function ga(a){var b=4,c="n",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F("-");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c("wf","loading")]);K(a,"loading")}function L(a){if(a.g){var b=y(a.f,a.a.c("wf","active")),c=[],d=[a.a.c("wf","loading")];b||c.push(a.a.c("wf","inactive"));w(a.f,c,d)}K(a,"inactive")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,"span",{"aria-hidden":"true"},this.f)}function N(a){u(a.c,"body",a.a)}function O(a){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+I(a.c)+";"+("font-style:"+H(a)+";font-weight:"+(a.f+"00")+";")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||"BESbswy";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+",serif",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+",sans-serif",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G("serif",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G("sans-serif",J(this.a));a=
O(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:"serif",C:"sans-serif"},S=null;function T(){if(null===S){var a=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f["sans-serif"]=this.m.a.offsetWidth;this.A=q();U(this)};
function la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f["sans-serif"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c("wf",a.c,J(a).toString(),"active")],[b.a.c("wf",a.c,J(a).toString(),"loading"),b.a.c("wf",a.c,J(a).toString(),"inactive")]);K(b,"fontactive",a);this.m=!0;na(this)};
W.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c("wf",a.c,J(a).toString(),"active")),d=[],e=[b.a.c("wf",a.c,J(a).toString(),"loading")];c||d.push(b.a.c("wf",a.c,J(a).toString(),"inactive"));w(b.f,d,e)}K(b,"fontinactive",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c("wf","active")],[a.a.c("wf","loading"),a.a.c("wf","inactive")]),K(a,"active")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};
function qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c("wf",x.c,J(x).toString(),"loading")]);K(r,"fontloading",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);
X=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}
ra.prototype.load=function(a){function b(){if(f["__mti_fntLst"+d]){var c=f["__mti_fntLst"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||"https://fast.fonts.net/jsapi")+"/"+d+".js"+(e?"?v="+e:""),function(e){e?a([]):(f["__MonotypeConfiguration__"+
d]=function(){return c.a},b())}).id="__MonotypeAPIScript__"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(":"),d[1])for(var h=d[1].split(","),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||""}var ua="https://fonts.googleapis.com/css";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(":");3==e.length&&a.f.push(e.pop());var f="";2==e.length&&""!=e[1]&&(f=":");a.a.push(e.join(f))}}
function wa(a){if(0==a.a.length)throw Error("No fonts to load!");if(-1!=a.c.indexOf("kit="))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,"+"));b=a.c+"?family="+c.join("%7C");0<a.f.length&&(b+="&subset="+a.f.join(","));0<a.g.length&&(b+="&text="+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}
var za={latin:"BESbswy","latin-ext":"\u00e7\u00f6\u00fc\u011f\u015f",cyrillic:"\u0439\u044f\u0416",greek:"\u03b1\u03b2\u03a3",khmer:"\u1780\u1781\u1782",Hanuman:"\u1780\u1781\u1782"},Aa={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},Ba={i:"i",italic:"i",n:"n",normal:"n"},
Ca=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;
function Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(":"),e=d[0].replace(/\+/g," "),f=["n4"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(","),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k="";else{k=n[2];k=null==k||""==k?"n":Ba[k];n=n[1];if(null==n||""==n)n="4";else var r=Aa[n],n=r?r:isNaN(n)?"4":n.substr(0,1);k=[k,n].join("")}}else k="";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(","):
g,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||"https://use.typekit.net")+"/"+b+".js",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga("font-weight:"+h.weight+";font-style:"+h.style)))}a(d.a)},A(this.c,(this.f.api||"https://f.fontdeck.com/s/css/js/")+ea(this.c)+"/"+b+".js",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)}; true?!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return Z}).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):0;}());


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";

// NAMESPACE OBJECT: ./src/component/form/input/index.js
var form_input_namespaceObject = {};
__webpack_require__.r(form_input_namespaceObject);
__webpack_require__.d(form_input_namespaceObject, {
  "checkbox": () => (checkbox_checkbox),
  "color": () => (color_color),
  "file": () => (file_file),
  "inputButton": () => (inputButton_inputButton),
  "number": () => (number_number),
  "radio": () => (radio_radio),
  "range": () => (range_range),
  "select": () => (select_select),
  "text": () => (text_text),
  "textarea": () => (textarea_textarea)
});

// NAMESPACE OBJECT: ./src/component/form/index.js
var component_form_namespaceObject = {};
__webpack_require__.r(component_form_namespaceObject);
__webpack_require__.d(component_form_namespaceObject, {
  "feedback": () => (feedback_feedback),
  "fieldset": () => (fieldset_fieldset),
  "grid": () => (grid_grid),
  "group": () => (group_group),
  "groupText": () => (groupText_groupText),
  "helper": () => (helper_helper),
  "indent": () => (indent_indent),
  "inline": () => (inline_inline),
  "input": () => (form_input_namespaceObject),
  "label": () => (label_label),
  "sticky": () => (sticky_sticky),
  "wrap": () => (wrap_wrap)
});

// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(3379);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/reset/index.css
var component_reset = __webpack_require__(9548);
;// CONCATENATED MODULE: ./src/component/reset/index.css

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = injectStylesIntoStyleTag_default()(component_reset/* default */.Z, options);



/* harmony default export */ const src_component_reset = (component_reset/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/reset/index.js


const reset_reset = {};

;// CONCATENATED MODULE: ./src/utility/node.js
const node = (string, node) => {

  // set element
  let tag;

  if (string.indexOf('|') > 0) {
    tag = string.slice(0, string.indexOf('|'));
  } else {
    tag = string;
  };

  let text = false;

  if (tag.indexOf(':') > 0) {
    // regex
    // find all : and split
    // ignore all \:
    let pair = tag.split(/:(?!.*:\\)/);
    tag = pair[0];
    // replace \: with :
    text = pair[1].replace('\\', ':');
  };

  let element = document.createElement(tag);

  if (text && text != '') {
    element.innerHTML = text;
  };

  let attributes = string.slice(string.indexOf('|') + 1, string.length).split(',');

  // set attributes
  if (string.indexOf('|') > 0 && string.indexOf('|') < string.length - 1) {

    attributes.forEach((item, i) => {
      if (item.indexOf(':') > 0) {
        // if key and value
        var pair = item.substring(0, item.indexOf(':')) + ',' + item.substring(item.indexOf(':') + 1, item.length);
        pair = pair.split(',');
        attributes[i] = {
          key: pair[0],
          value: pair[1]
        };
      } else {
        // if key only
        attributes[i] = {
          key: item,
          value: undefined
        };
      }
    });

    attributes.forEach((item, i) => {
      if ('key' in item && item.key != undefined && 'value' in item && item.value != undefined) {
        element.setAttribute(item.key, item.value);
      } else if ('key' in item && item.key != undefined) {
        element.setAttribute(item.key, '');
      }
    });

  };

  if (node) {

    if (typeof node != 'string') {

      if (node.length > 0) {

        node.forEach((item, i) => {

          if (item instanceof HTMLElement) {

            element.appendChild(item);

          } else {

            let div = document.createElement('div');

            div.innerHTML = item;

            element.appendChild(div.firstChild);

          };

        });

      } else {

        if (node instanceof HTMLElement) {

          element.appendChild(node);

        } else {

          let div = document.createElement('div');

          div.innerHTML = node;

          element.appendChild(div.firstChild);

        };

      };

    };

  };

  return element;
};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/icon/index.css
var icon = __webpack_require__(2826);
;// CONCATENATED MODULE: ./src/component/icon/index.css

            

var icon_options = {};

icon_options.insert = "head";
icon_options.singleton = false;

var icon_update = injectStylesIntoStyleTag_default()(icon/* default */.Z, icon_options);



/* harmony default export */ const component_icon = (icon/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/icon/index.js




const icon_icon = {};

icon_icon.all = {
  add: {
    name: 'add',
    path: 'M18.984 12.984h-6v6h-1.969v-6h-6v-1.969h6v-6h1.969v6h6v1.969z'
  },
  arrowBack: {
    name: 'arrow-back',
    path: 'M20.016 11.016v1.969h-12.188l5.578 5.625-1.406 1.406-8.016-8.016 8.016-8.016 1.406 1.406-5.578 5.625h12.188z'
  },
  arrowDownward: {
    name: 'arrow-downward',
    path: 'M20.016 12l-8.016 8.016-8.016-8.016 1.453-1.406 5.578 5.578v-12.188h1.969v12.188l5.625-5.578z'
  },
  arrowForward: {
    name: 'arrow-forward',
    path: 'M12 3.984l8.016 8.016-8.016 8.016-1.406-1.406 5.578-5.625h-12.188v-1.969h12.188l-5.578-5.625z'
  },
  arrowUpward: {
    name: 'arrow-upward',
    path: 'M3.984 12l8.016-8.016 8.016 8.016-1.453 1.406-5.578-5.578v12.188h-1.969v-12.188l-5.625 5.578z'
  },
  check: {
    name: 'check',
    path: 'M9 16.172l10.594-10.594 1.406 1.406-12 12-5.578-5.578 1.406-1.406z'
  },
  cross: {
    name: 'cross',
    path: 'M18.984 6.422l-5.578 5.578 5.578 5.578-1.406 1.406-5.578-5.578-5.578 5.578-1.406-1.406 5.578-5.578-5.578-5.578 1.406-1.406 5.578 5.578 5.578-5.578z'
  },
  arrowKeyboardDown: {
    name: 'arrow-keyboard-down',
    path: 'M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'
  },
  arrowKeyboardLeft: {
    name: 'arrow-keyboard-left',
    path: 'M15.422 16.078l-1.406 1.406-6-6 6-6 1.406 1.406-4.594 4.594z'
  },
  arrowKeyboardRight: {
    name: 'arrow-keyboard-right',
    path: 'M8.578 16.359l4.594-4.594-4.594-4.594 1.406-1.406 6 6-6 6z'
  },
  arrowKeyboardUp: {
    name: 'arrow-keyboard-up',
    path: 'M7.406 15.422l-1.406-1.406 6-6 6 6-1.406 1.406-4.594-4.594z'
  },
  edit: {
    name: 'edit',
    path: 'M20.719 7.031l-1.828 1.828-3.75-3.75 1.828-1.828c0.375-0.375 1.031-0.375 1.406 0l2.344 2.344c0.375 0.375 0.375 1.031 0 1.406zM3 17.25l11.063-11.063 3.75 3.75-11.063 11.063h-3.75v-3.75z'
  },
  moreHorizontal: {
    name: 'more-horizontal',
    path: 'M12 9.984c1.078 0 2.016 0.938 2.016 2.016s-0.938 2.016-2.016 2.016-2.016-0.938-2.016-2.016 0.938-2.016 2.016-2.016zM18 9.984c1.078 0 2.016 0.938 2.016 2.016s-0.938 2.016-2.016 2.016-2.016-0.938-2.016-2.016 0.938-2.016 2.016-2.016zM6 9.984c1.078 0 2.016 0.938 2.016 2.016s-0.938 2.016-2.016 2.016-2.016-0.938-2.016-2.016 0.938-2.016 2.016-2.016z'
  },
  moreVertical: {
    name: 'more-vertical',
    path: 'M12 15.984c1.078 0 2.016 0.938 2.016 2.016s-0.938 2.016-2.016 2.016-2.016-0.938-2.016-2.016 0.938-2.016 2.016-2.016zM12 9.984c1.078 0 2.016 0.938 2.016 2.016s-0.938 2.016-2.016 2.016-2.016-0.938-2.016-2.016 0.938-2.016 2.016-2.016zM12 8.016c-1.078 0-2.016-0.938-2.016-2.016s0.938-2.016 2.016-2.016 2.016 0.938 2.016 2.016-0.938 2.016-2.016 2.016z'
  },
  redo: {
    name: 'redo',
    path: 'M18.422 10.594l3.563-3.609v9h-9l3.656-3.609q-2.25-1.875-5.156-1.875-2.391 0-4.617 1.594t-2.977 3.891l-2.344-0.75q1.031-3.188 3.773-5.203t6.164-2.016q3.984 0 6.938 2.578z'
  },
  refresh: {
    name: 'refresh',
    path: 'M17.672 6.328l2.344-2.344v7.031h-7.031l3.234-3.234c-1.078-1.078-2.578-1.781-4.219-1.781-3.328 0-6 2.672-6 6s2.672 6 6 6c2.625 0 4.875-1.641 5.672-3.984h2.063c-0.891 3.469-3.984 6-7.734 6-4.406 0-7.969-3.609-7.969-8.016s3.563-8.016 7.969-8.016c2.203 0 4.219 0.891 5.672 2.344z'
  },
  remove: {
    name: 'remove',
    path: 'M18.984 12.984h-13.969v-1.969h13.969v1.969z'
  },
  reorder: {
    name: 'reorder',
    path: 'M3 5.016h18v1.969h-18v-1.969zM3 11.016v-2.016h18v2.016h-18zM3 18.984v-1.969h18v1.969h-18zM3 15v-2.016h18v2.016h-18z'
  },
  replay: {
    name: 'replay',
    path: 'M12 5.016q3.328 0 5.672 2.344t2.344 5.625q0 3.328-2.367 5.672t-5.648 2.344-5.648-2.344-2.367-5.672h2.016q0 2.484 1.758 4.242t4.242 1.758 4.242-1.758 1.758-4.242-1.758-4.242-4.242-1.758v4.031l-5.016-5.016 5.016-5.016v4.031z'
  },
  settings: {
    name: 'settings',
    path: 'M12 15.516c1.922 0 3.516-1.594 3.516-3.516s-1.594-3.516-3.516-3.516-3.516 1.594-3.516 3.516 1.594 3.516 3.516 3.516zM19.453 12.984l2.109 1.641c0.188 0.141 0.234 0.422 0.094 0.656l-2.016 3.469c-0.141 0.234-0.375 0.281-0.609 0.188l-2.484-0.984c-0.516 0.375-1.078 0.75-1.688 0.984l-0.375 2.625c-0.047 0.234-0.234 0.422-0.469 0.422h-4.031c-0.234 0-0.422-0.188-0.469-0.422l-0.375-2.625c-0.609-0.234-1.172-0.563-1.688-0.984l-2.484 0.984c-0.234 0.094-0.469 0.047-0.609-0.188l-2.016-3.469c-0.141-0.234-0.094-0.516 0.094-0.656l2.109-1.641c-0.047-0.328-0.047-0.656-0.047-0.984s0-0.656 0.047-0.984l-2.109-1.641c-0.188-0.141-0.234-0.422-0.094-0.656l2.016-3.469c0.141-0.234 0.375-0.281 0.609-0.188l2.484 0.984c0.516-0.375 1.078-0.75 1.688-0.984l0.375-2.625c0.047-0.234 0.234-0.422 0.469-0.422h4.031c0.234 0 0.422 0.188 0.469 0.422l0.375 2.625c0.609 0.234 1.172 0.563 1.688 0.984l2.484-0.984c0.234-0.094 0.469-0.047 0.609 0.188l2.016 3.469c0.141 0.234 0.094 0.516-0.094 0.656l-2.109 1.641c0.047 0.328 0.047 0.656 0.047 0.984s0 0.656-0.047 0.984z'
  },
  undo: {
    name: 'undo',
    path: 'M12.516 8.016q3.422 0 6.141 2.016t3.797 5.203l-2.344 0.75q-0.797-2.438-2.883-3.961t-4.711-1.523q-2.906 0-5.156 1.875l3.656 3.609h-9v-9l3.563 3.609q2.953-2.578 6.938-2.578z'
  },
  unfoldLess: {
    name: 'unfold-less',
    path: 'M16.594 5.391l-4.594 4.594-4.594-4.594 1.406-1.406 3.188 3.188 3.188-3.188zM7.406 18.609l4.594-4.594 4.594 4.594-1.406 1.406-3.188-3.188-3.188 3.188z'
  },
  unfoldMore: {
    name: 'unfold-more',
    path: 'M12 18.188l3.188-3.188 1.406 1.406-4.594 4.594-4.594-4.594 1.406-1.406zM12 5.813l-3.188 3.188-1.406-1.406 4.594-4.594 4.594 4.594-1.406 1.406z'
  },
  coffee: {
    name: 'coffee',
    path: 'M20 3H4v10c0 2.21 1.79 4 4 4h6c2.21 0 4-1.79 4-4v-3h2c1.11 0 2-.9 2-2V5c0-1.11-.89-2-2-2zm0 5h-2V5h2v3zM4 19h16v2H4z'
  },
  drag: {
    name: 'drag',
    path: 'M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z'
  },
  bookmark: {
    name: 'bookmark',
    path: 'M17 3H7c-1.1 0-1.99.9-1.99 2L5 21l7-3 7 3V5c0-1.1-.9-2-2-2zm0 15l-5-2.18L7 18V5h10v13z'
  },
  addBookmark: {
    name: 'add-bookmark',
    path: 'M17,11v6.97l-5-2.14l-5,2.14V5h6V3H7C5.9,3,5,3.9,5,5v16l7-3l7,3V11H17z M21,7h-2v2h-2V7h-2V5h2V3h2v2h2V7z'
  },
  folder: {
    name: 'folder',
    path: 'M9.17 6l2 2H20v10H4V6h5.17M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z'
  },
  addFolder: {
    name: 'add-folder',
    path: 'M20 6h-8l-2-2H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zm0 12H4V6h5.17l2 2H20v10zm-8-4h2v2h2v-2h2v-2h-2v-2h-2v2h-2z'
  }
};

icon_icon.render = (name) => {
  const iconElement = node('span|class:icon');
  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
  svg.setAttribute('version', '1.1');
  svg.setAttribute('viewBox', '0 0 24 24');
  svg.setAttribute('width', '24');
  svg.setAttribute('height', '24');
  svg.setAttribute('fill', 'currentColor');

  const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');
  path.setAttribute('d', icon_icon.all[name].path);

  svg.appendChild(path);
  iconElement.appendChild(svg);

  return iconElement;
};



;// CONCATENATED MODULE: ./src/utility/complexNode.js
const complexNode = ({
  tag = 'div',
  text = false,
  attr = [],
  node = []
} = {}) => {

  const element = document.createElement(tag);

  if (text) {
    element.innerHTML = text;
  };

  if (attr.length > 0) {
    attr.forEach((item, i) => {

      if ('key' in item && 'value' in item) {
        element.setAttribute(item.key, item.value);
      } else if ('key' in item) {
        element.setAttribute(item.key, '');
      };

    });
  };

  if (node) {
    if (typeof node != 'string') {
      if (node.length > 0) {

        node.forEach((item, i) => {
          if (item instanceof HTMLElement) {
            element.appendChild(item);
          };
        });

      } else {

        if (node instanceof HTMLElement) {
          element.appendChild(node);
        };

      };
    };
  };

  return element;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/feedback/index.css
var feedback = __webpack_require__(2207);
;// CONCATENATED MODULE: ./src/component/form/feedback/index.css

            

var feedback_options = {};

feedback_options.insert = "head";
feedback_options.singleton = false;

var feedback_update = injectStylesIntoStyleTag_default()(feedback/* default */.Z, feedback_options);



/* harmony default export */ const form_feedback = (feedback/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/feedback/index.js





const feedback_feedback = ({
  text = false
} = {}) => {

  const feedback = node('div|class:form-feedback');

  if (text) {
    const feedbackText = complexNode({
      tag: 'p',
      text: text,
      attr: [{
        key: 'class',
        value: 'muted small'
      }]
    });

    feedback.appendChild(feedbackText);
  };

  return feedback;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/fieldset/index.css
var fieldset = __webpack_require__(3681);
;// CONCATENATED MODULE: ./src/component/form/fieldset/index.css

            

var fieldset_options = {};

fieldset_options.insert = "head";
fieldset_options.singleton = false;

var fieldset_update = injectStylesIntoStyleTag_default()(fieldset/* default */.Z, fieldset_options);



/* harmony default export */ const form_fieldset = (fieldset/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/fieldset/index.js




const fieldset_fieldset = function({
  children = false
} = {}) {

  return node('fieldset|class:form-fieldset', children);

};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/group/index.css
var group = __webpack_require__(7039);
;// CONCATENATED MODULE: ./src/component/form/group/index.css

            

var group_options = {};

group_options.insert = "head";
group_options.singleton = false;

var group_update = injectStylesIntoStyleTag_default()(group/* default */.Z, group_options);



/* harmony default export */ const form_group = (group/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/group/index.js




const group_group = function({
  direction = 'horizontal',
  reverse = false,
  block = false,
  border = false,
  children = false,
  justify = 'left'
} = {}) {

  const group = node('div|class:form-group', children);

  switch (direction) {
    case 'horizontal':
      group.classList.add('form-group-horizontal');
      break;

    case 'vertical':
      group.classList.add('form-group-vertical');
      break;
  };

  if (reverse) {
    group.classList.add('form-group-reverse');
  };

  if (block) {
    group.classList.add('form-group-block');
  };

  if (border) {
    group.classList.add('form-group-border');
  };

  switch (justify) {

    case 'left':
      group.classList.add('form-group-justify-left');
      break;

    case 'right':
      group.classList.add('form-group-justify-right');
      break;

    case 'space-between':
      group.classList.add('form-group-justify-space-between');
      break;

  };

  return group;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/groupText/index.css
var groupText = __webpack_require__(5516);
;// CONCATENATED MODULE: ./src/component/form/groupText/index.css

            

var groupText_options = {};

groupText_options.insert = "head";
groupText_options.singleton = false;

var groupText_update = injectStylesIntoStyleTag_default()(groupText/* default */.Z, groupText_options);



/* harmony default export */ const form_groupText = (groupText/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/groupText/index.js




const groupText_groupText = ({
  text = false,
  classList = []
} = {}) => {

  const textElement = node('div|class:form-group-text,tabindex:1');

  if (text) {
    textElement.textContent = text;
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      textElement.classList.add(item);
    });

  };

  return textElement;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/helper/index.css
var helper = __webpack_require__(214);
;// CONCATENATED MODULE: ./src/component/form/helper/index.css

            

var helper_options = {};

helper_options.insert = "head";
helper_options.singleton = false;

var helper_update = injectStylesIntoStyleTag_default()(helper/* default */.Z, helper_options);



/* harmony default export */ const form_helper = (helper/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/helper/index.js





const helper_helper = function({
  text = 'text',
  classList = []
} = {}) {

  const helper = complexNode({
    tag: 'p',
    text: text,
    attr: [{
      key: 'class',
      value: 'form-helper-item'
    }]
  });

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      helper.classList.add(item);
    });

  };

  return helper;

};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/indent/index.css
var indent = __webpack_require__(1400);
;// CONCATENATED MODULE: ./src/component/form/indent/index.css

            

var indent_options = {};

indent_options.insert = "head";
indent_options.singleton = false;

var indent_update = injectStylesIntoStyleTag_default()(indent/* default */.Z, indent_options);



/* harmony default export */ const form_indent = (indent/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/indent/index.js




const indent_indent = ({
  children = false
} = {}) => {

  return node('div|class:form-indent', children);

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/inline/index.css
var inline = __webpack_require__(4046);
;// CONCATENATED MODULE: ./src/component/form/inline/index.css

            

var inline_options = {};

inline_options.insert = "head";
inline_options.singleton = false;

var inline_update = injectStylesIntoStyleTag_default()(inline/* default */.Z, inline_options);



/* harmony default export */ const form_inline = (inline/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/inline/index.js




const inline_inline = function({
  direction = 'horizontal',
  reverse = false,
  block = false,
  wrap = false,
  gap = 'medium',
  equalGap = false,
  children = false
} = {}) {

  const inline = node('div|class:form-inline', children);

  switch (direction) {
    case 'horizontal':
      inline.classList.add('form-inline-horizontal');
      break;

    case 'vertical':
      inline.classList.add('form-inline-vertical');
      break;
  };

  switch (gap) {

    case 'small':
      inline.classList.add('form-inline-gap-small');
      break;

    case 'medium':
      inline.classList.add('form-inline-gap-medium');
      break;

    case 'large':
      inline.classList.add('form-inline-gap-large');
      break;

  };

  if (equalGap) {
    inline.classList.add('form-inline-gap-equal');
  };

  if (reverse) {
    inline.classList.add('form-inline-reverse');
  };

  if (block) {
    inline.classList.add('form-inline-block');
  };

  if (wrap) {
    inline.classList.add('form-inline-wrap');
  };

  return inline;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/label/index.css
var label = __webpack_require__(5071);
;// CONCATENATED MODULE: ./src/component/form/label/index.css

            

var label_options = {};

label_options.insert = "head";
label_options.singleton = false;

var label_update = injectStylesIntoStyleTag_default()(label/* default */.Z, label_options);



/* harmony default export */ const form_label = (label/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/label/index.js




const label_label = ({
  forInput = false,
  text = 'label',
  description = false,
  srOnly = false,
  icon = false,
  noPadding = false,
  classList = []
} = {}) => {

  let label;

  if (forInput) {
    label = node('label|for:' + forInput);
  } else {
    label = node('label');
  };

  if (noPadding) {
    label.classList.add('label-no-padding');
  };

  const labelBlock = node('span|class:label-block');

  if (srOnly) {
    if (icon) {
      labelBlock.classList.add('sr-only');
    } else {
      label.classList.add('sr-only');
    };
  };

  if (text) {
    labelBlock.appendChild(node('span:' + text + '|class:label-block-item'));
  };

  if (description) {
    if (Array.isArray(description)) {

      description.forEach((item, i) => {
        labelBlock.appendChild(node('span:' + item + '|class:label-block-item small muted'));
      });

    } else if (typeof description === 'string') {

      labelBlock.appendChild(node('span:' + description + '|class:label-block-item small muted'));

    };
  };

  if (text || description) {
    label.appendChild(labelBlock);
  };

  if (icon) {
    label.prepend(node('span|class:label-icon'));
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      label.classList.add(item);
    });

  };

  return label;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/sticky/index.css
var sticky = __webpack_require__(460);
;// CONCATENATED MODULE: ./src/component/form/sticky/index.css

            

var sticky_options = {};

sticky_options.insert = "head";
sticky_options.singleton = false;

var sticky_update = injectStylesIntoStyleTag_default()(sticky/* default */.Z, sticky_options);



/* harmony default export */ const form_sticky = (sticky/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/sticky/index.js




const sticky_sticky = function({
  children = false
} = {}) {

  return node('div|class:form-sticky', children);

};
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/wrap/index.css
var wrap = __webpack_require__(1879);
;// CONCATENATED MODULE: ./src/component/form/wrap/index.css

            

var wrap_options = {};

wrap_options.insert = "head";
wrap_options.singleton = false;

var wrap_update = injectStylesIntoStyleTag_default()(wrap/* default */.Z, wrap_options);



/* harmony default export */ const form_wrap = (wrap/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/wrap/index.js




const wrap_wrap = ({
  children = false
} = {}) => {

  return node('div|class:form-wrap', children);

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/grid/index.css
var grid = __webpack_require__(7662);
;// CONCATENATED MODULE: ./src/component/form/grid/index.css

            

var grid_options = {};

grid_options.insert = "head";
grid_options.singleton = false;

var grid_update = injectStylesIntoStyleTag_default()(grid/* default */.Z, grid_options);



/* harmony default export */ const form_grid = (grid/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/grid/index.js




const grid_grid = ({
  children = false
} = {}) => {

  return node('div|class:form-grid', children);

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/checkbox/index.css
var input_checkbox = __webpack_require__(5875);
;// CONCATENATED MODULE: ./src/component/form/input/checkbox/index.css

            

var checkbox_options = {};

checkbox_options.insert = "head";
checkbox_options.singleton = false;

var checkbox_update = injectStylesIntoStyleTag_default()(input_checkbox/* default */.Z, checkbox_options);



/* harmony default export */ const form_input_checkbox = (input_checkbox/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/checkbox/index.js




const checkbox_checkbox = ({
  id = false,
  value = false,
  checked = false,
  classList = [],
  func = false
} = {}) => {

  const input = node('input|type:checkbox,tabindex:1');

  if (id) {
    input.setAttribute('id', id);
  };

  if (value) {
    input.setAttribute('value', value);
  };

  if (checked) {
    input.setAttribute('checked', '');
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      input.classList.add(item);
    });

  };

  if (func) {

    input.addEventListener('change', (event) => {
      func();
    });

  };

  return input;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/color/index.css
var color = __webpack_require__(9755);
;// CONCATENATED MODULE: ./src/component/form/input/color/index.css

            

var color_options = {};

color_options.insert = "head";
color_options.singleton = false;

var color_update = injectStylesIntoStyleTag_default()(color/* default */.Z, color_options);



/* harmony default export */ const input_color = (color/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/color/index.js




const color_color = function({
  id = false,
  value = '#000000',
  classList = [],
  func = false
} = {}) {

  const input = node('input|type:color,value:' + value + ',tabindex:1');

  if (id) {
    input.setAttribute('id', id);
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      input.classList.add(item);
    });

  };

  if (func) {

    input.addEventListener('change', (event) => {
      func();
    });

  };

  return input;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/file/index.css
var file = __webpack_require__(462);
;// CONCATENATED MODULE: ./src/component/form/input/file/index.css

            

var file_options = {};

file_options.insert = "head";
file_options.singleton = false;

var file_update = injectStylesIntoStyleTag_default()(file/* default */.Z, file_options);



/* harmony default export */ const input_file = (file/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/file/index.js




const file_file = ({
  id = false,
  classList = [],
  func = false
} = {}) => {

  const input = node('input|type:file,tabindex:1');

  if (id) {
    input.setAttribute('id', id);
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      input.classList.add(item);
    });

  };

  if (func) {

    input.addEventListener('change', (event) => {
      func();
    });

  };

  return input;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/number/index.css
var number = __webpack_require__(2725);
;// CONCATENATED MODULE: ./src/component/form/input/number/index.css

            

var number_options = {};

number_options.insert = "head";
number_options.singleton = false;

var number_update = injectStylesIntoStyleTag_default()(number/* default */.Z, number_options);



/* harmony default export */ const input_number = (number/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/number/index.js




const number_number = ({
  id = false,
  min = 0,
  max = 100,
  step = 1,
  value = false,
  placeholder = false,
  classList = [],
  func = false
} = {}) => {

  const input = node('input|type:number,min:' + min + ',max:' + max + ',step:' + step + ',tabindex:1');

  let delayUpdate = null;

  if (id) {
    input.setAttribute('id', id);
  };

  if (value || (typeof value === 'number' && value === 0)) {
    input.setAttribute('value', value);
  };

  if (placeholder) {
    input.setAttribute('placeholder', placeholder);
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      input.classList.add(item);
    });

  };

  if (func) {

    input.addEventListener('input', (event) => {
      func();
    });

  };

  return input;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/radio/index.css
var input_radio = __webpack_require__(9610);
;// CONCATENATED MODULE: ./src/component/form/input/radio/index.css

            

var radio_options = {};

radio_options.insert = "head";
radio_options.singleton = false;

var radio_update = injectStylesIntoStyleTag_default()(input_radio/* default */.Z, radio_options);



/* harmony default export */ const form_input_radio = (input_radio/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/radio/index.js




const radio_radio = function({
  id = false,
  radioGroup = false,
  value = false,
  checked = false,
  classList = [],
  func = false
} = {}) {

  const input = node('input|type:radio,tabindex:1');

  if (id) {
    input.setAttribute('id', id);
  };

  if (radioGroup) {
    input.setAttribute('name', radioGroup);
  };

  if (value) {
    input.setAttribute('value', value);
  };

  if (checked) {
    input.setAttribute('checked', '');
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      input.classList.add(item);
    });

  };

  if (func) {
    input.addEventListener('change', (event) => {
      func();
    });
  };

  return input;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/range/index.css
var range = __webpack_require__(349);
;// CONCATENATED MODULE: ./src/component/form/input/range/index.css

            

var range_options = {};

range_options.insert = "head";
range_options.singleton = false;

var range_update = injectStylesIntoStyleTag_default()(range/* default */.Z, range_options);



/* harmony default export */ const input_range = (range/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/range/index.js




const range_range = ({
  id = false,
  min = 0,
  max = 100,
  step = 1,
  value = 0,
  classList = [],
  func = false,
  focusFunc = false,
  blurFunc = false,
  mouseDownFunc = false,
  mouseUpFunc = false
} = {}) => {

  const input = node('input|type:range,min:' + min + ',max:' + max + ',step:' + step + ',value:' + value + ',tabindex:1');

  if (id) {
    input.setAttribute('id', id);
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      input.classList.add(item);
    });

  };

  if (func) {

    input.addEventListener('input', (event) => {
      func();
    });

  };

  if (focusFunc) {

    input.addEventListener('focus', (event) => {
      focusFunc();
    });

  };

  if (blurFunc) {

    input.addEventListener('blur', (event) => {
      blurFunc();
    });

  };

  if (mouseDownFunc) {

    input.addEventListener('mousedown', (event) => {
      mouseDownFunc();
    });

  };

  if (mouseUpFunc) {

    input.addEventListener('mouseup', (event) => {
      mouseUpFunc();
    });

  };

  return input;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/text/index.css
var input_text = __webpack_require__(4224);
;// CONCATENATED MODULE: ./src/component/form/input/text/index.css

            

var text_options = {};

text_options.insert = "head";
text_options.singleton = false;

var text_update = injectStylesIntoStyleTag_default()(input_text/* default */.Z, text_options);



/* harmony default export */ const form_input_text = (input_text/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/text/index.js




const text_text = ({
  id = false,
  value = false,
  min = false,
  max = false,
  placeholder = false,
  classList = [],
  func = false
} = {}) => {

  const input = node('input|type:text,autocomplete:off,autocorrect:off,autocapitalize:off,spellcheck:false,tabindex:1');

  if (id) {
    input.setAttribute('id', id);
  };

  if (value) {
    input.setAttribute('value', value);
  };

  if (typeof min === 'number') {
    input.setAttribute('minlength', min);
  };

  if (typeof max === 'number') {
    input.setAttribute('maxlength', max);
  };

  if (placeholder) {
    input.setAttribute('placeholder', placeholder);
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      input.classList.add(item);
    });

  };

  if (func) {

    input.addEventListener('input', (event) => {
      func();
    });

  };

  return input;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/textarea/index.css
var input_textarea = __webpack_require__(8843);
;// CONCATENATED MODULE: ./src/component/form/input/textarea/index.css

            

var textarea_options = {};

textarea_options.insert = "head";
textarea_options.singleton = false;

var textarea_update = injectStylesIntoStyleTag_default()(input_textarea/* default */.Z, textarea_options);



/* harmony default export */ const form_input_textarea = (input_textarea/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/textarea/index.js




const textarea_textarea = function({
  id = false,
  value = false,
  placeholder = false,
  classList = [],
  func = false
} = {}) {

  const textarea = node('textarea|tabindex:1,spellcheck:false');

  if (id) {
    textarea.setAttribute('id', id);
  };

  if (value) {
    textarea.setAttribute('value', value);
  };

  if (placeholder) {
    textarea.setAttribute('placeholder', placeholder);
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      textarea.classList.add(item);
    });

  };

  if (func) {

    textarea.addEventListener('input', (event) => {
      func();
    });

  };

  return textarea;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/inputButton/index.css
var inputButton = __webpack_require__(9606);
;// CONCATENATED MODULE: ./src/component/form/input/inputButton/index.css

            

var inputButton_options = {};

inputButton_options.insert = "head";
inputButton_options.singleton = false;

var inputButton_update = injectStylesIntoStyleTag_default()(inputButton/* default */.Z, inputButton_options);



/* harmony default export */ const input_inputButton = (inputButton/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/inputButton/index.js




const inputButton_inputButton = function({
  children = false,
  inputHide = false,
  srOnly = false,
  style = []
} = {}) {

  const inputButtonElement = node('div|class:form-input-button', children);

  if (style.length > 0) {
    style.forEach((item, i) => {
      switch (item) {
        case 'link':
          inputButtonElement.classList.add('form-input-button-link');
          break;

        case 'line':
          inputButtonElement.classList.add('form-input-button-line');
          break;

        case 'ring':
          inputButtonElement.classList.add('form-input-button-ring');
          break;

        case 'dot':
          inputButtonElement.classList.add('input-color-dot');
          break;

      };
    });
  };

  if (inputHide) {
    inputButtonElement.classList.add('form-input-hide');
  };

  if (srOnly) {
    inputButtonElement.classList.add('form-input-button-sr-only');
  };

  return inputButtonElement;

};

;// CONCATENATED MODULE: ./src/utility/trimString.js
const trimString = (value) => {

  if (typeof value == 'string') {
    return value.trim().replace(/\s\s+/g, ' ');
  } else {
    return value;
  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/select/index.css
var input_select = __webpack_require__(5819);
;// CONCATENATED MODULE: ./src/component/form/input/select/index.css

            

var select_options = {};

select_options.insert = "head";
select_options.singleton = false;

var select_update = injectStylesIntoStyleTag_default()(input_select/* default */.Z, select_options);



/* harmony default export */ const form_input_select = (input_select/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/select/index.js





const select_select = function({
  id = false,
  classList = [],
  option = [],
  selected = 0,
  func = false
} = {}) {

  const select = node('select|tabindex:1');

  if (id) {
    select.setAttribute('id', id);
  };

  if (classList.length > 0) {

    classList.forEach((item, i) => {
      select.classList.add(item);
    });

  };

  if (func) {

    select.addEventListener('change', (event) => {
      func();
    });

  };

  if (option.length > 0) {

    option.forEach((item, i) => {

      select.appendChild(
        node(
          'option:' +
          item +
          '|value:' +
          trimString(item).replace(/\s+/g, '-').toLowerCase()
        )
      );

    });

    select.selectedIndex = selected;

  };

  return select;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/input/index.css
var input = __webpack_require__(443);
;// CONCATENATED MODULE: ./src/component/form/input/index.css

            

var input_options = {};

input_options.insert = "head";
input_options.singleton = false;

var input_update = injectStylesIntoStyleTag_default()(input/* default */.Z, input_options);



/* harmony default export */ const form_input = (input/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/input/index.js















// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/form/index.css
var component_form = __webpack_require__(1058);
;// CONCATENATED MODULE: ./src/component/form/index.css

            

var form_options = {};

form_options.insert = "head";
form_options.singleton = false;

var form_update = injectStylesIntoStyleTag_default()(component_form/* default */.Z, form_options);



/* harmony default export */ const src_component_form = (component_form/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/form/index.js


















// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/button/index.css
var component_button = __webpack_require__(8509);
;// CONCATENATED MODULE: ./src/component/button/index.css

            

var button_options = {};

button_options.insert = "head";
button_options.singleton = false;

var button_update = injectStylesIntoStyleTag_default()(component_button/* default */.Z, button_options);



/* harmony default export */ const src_component_button = (component_button/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/button/index.js








const Button = function({
  text = 'Button',
  srOnly = false,
  iconName = false,
  iconPosition = false,
  block = false,
  size = false,
  style = [],
  title = false,
  classList = [],
  func = false
} = {}) {

  this.button = node('button|class:button,tabindex:1,type:button');

  if (text) {
    const buttonText = node('span:' + text + '|class:button-text');

    if (srOnly) {
      buttonText.classList.add('sr-only');
    };

    this.button.appendChild(buttonText);
  };

  if (iconName) {

    switch (iconPosition) {

      case 'right':
        this.button.append(icon_icon.render(iconName));
        break;

      default:
      case 'left':
        this.button.prepend(icon_icon.render(iconName));
        break;

    };

  };

  if (block) {
    this.button.classList.add('button-block');
  };

  switch (size) {
    case 'small':
      this.button.classList.add('button-small');
      break;

    case 'large':
      this.button.classList.add('button-large');
      break;
  };

  if (title) {
    this.button.setAttribute('title', title);
  };

  if (classList.length > 0) {
    classList.forEach((item, i) => {
      this.button.classList.add(item);
    });
  };

  if (func) {
    this.button.addEventListener('click', (event) => {
      func();
    });
  };

  this.style = {};

  this.style.add = (style) => {

    if (style) {

      if (style.length > 0) {
        style.forEach((item, i) => {
          switch (item) {
            case 'link':
              this.button.classList.add('button-link');
              break;

            case 'line':
              this.button.classList.add('button-line');
              break;

            case 'ring':
              this.button.classList.add('button-ring');
              break;
          };
        });
      };

    };

  };

  this.style.remove = () => {

    this.button.classList.remove('button-link');

    this.button.classList.remove('button-line');

    this.button.classList.remove('button-ring');

  };

  this.style.update = (style) => {

    this.style.remove();

    this.style.add(style);

  };

  this.style.add(style);

  this.disable = () => {
    this.button.disabled = true;
  };

  this.enable = () => {
    this.button.disabled = false;
  };

  this.deactive = () => {
    this.button.classList.remove('active');
  };

  this.active = () => {
    this.button.classList.add('active');
  };

  this.wrap = () => {
    return wrap_wrap({
      children: [
        this.button
      ]
    })
  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/collapse/index.css
var collapse = __webpack_require__(5655);
;// CONCATENATED MODULE: ./src/component/collapse/index.css

            

var collapse_options = {};

collapse_options.insert = "head";
collapse_options.singleton = false;

var collapse_update = injectStylesIntoStyleTag_default()(collapse/* default */.Z, collapse_options);



/* harmony default export */ const component_collapse = (collapse/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/collapse/index.js








const Collapse = function({
  type = false,
  radioGroup = false,
  checkbox = false,
  target = false
} = {}) {

  target.forEach((item, i) => {
    item.state = {
      collapsed: true
    };

    item.area = node('div|class:collapse-area');

    item.spacer = node('div|class:collapse-spacer');
  });

  this.target = () => {
    return target;
  };

  this.element = {
    collapse: node('div|class:collapse')
  };

  this.collapse = () => {
    target.forEach((item, i) => {
      item.spacer.appendChild(item.content);

      item.area.appendChild(item.spacer);

      this.element.collapse.appendChild(item.area);
    });

    return this.element.collapse;
  };

  this.toggle = () => {
    target.forEach((item, i) => {
      if (item.state.collapsed) {
        item.state.collapsed = false;
      } else {
        item.state.collapsed = true;
      };
    });

    this.update();
  };

  this.renderTarget = (state, area) => {
    if (state) {
      area.classList.add('is-collapsed');
      // area.classList.remove('is-pop');
      area.setAttribute('aria-hidden', true);
    } else {
      area.classList.remove('is-collapsed');
      // area.classList.add('is-pop');
      area.removeAttribute('aria-hidden');
    };
  };

  this.renderToggle = (state, toggle) => {
    if (state) {
      toggle.classList.remove('active');
      toggle.classList.remove('is-collapsed');
    } else {
      toggle.classList.add('active');
      toggle.classList.add('is-collapsed');
    };
  };

  this.update = () => {

    switch (type) {

      case 'radio':

        const selectedRadioValue = radioGroup.value();

        target.forEach((item, i) => {
          this.renderTarget(!(item.id === selectedRadioValue), item.area);
        });

        break;

      case 'checkbox':

        let state = true;

        if (checkbox.length > 1) {

          let allCheckboxState = [];

          checkbox.forEach(item => allCheckboxState.push(item.checked()));

          state = allCheckboxState.some(item => item === true);

        } else {

          state = checkbox.checked();

        };

        target.forEach((item, i) => {
          this.renderTarget(!state, item.area);
        });

        break;

      case 'toggle':

        target.forEach((item, i) => {

          this.renderTarget(item.state.collapsed, item.area);

          if (item.toggle) {
            this.renderToggle(item.state.collapsed, item.toggle);
          };

        });

        break;

    };

  };

  this.update();

};

;// CONCATENATED MODULE: ./src/component/keyboardShortcut/index.js
const KeyboardShortcut = function({
  keycode = false,
  ctrl = false,
  alt = false,
  action = false
} = {}) {

  this.action = () => {
    if (keycode) {
      if ((event.keyCode == keycode) && (ctrl == event.ctrlKey) && (alt == event.altKey)) {

        event.preventDefault();

        if (action) {
          action();
        };

      };
    };
  };

  this.add = () => { window.addEventListener('keydown', this.action); };

  this.remove = () => { window.removeEventListener('keydown', this.action); };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/dropdown/index.css
var dropdown = __webpack_require__(4827);
;// CONCATENATED MODULE: ./src/component/dropdown/index.css

            

var dropdown_options = {};

dropdown_options.insert = "head";
dropdown_options.singleton = false;

var dropdown_update = injectStylesIntoStyleTag_default()(dropdown/* default */.Z, dropdown_options);



/* harmony default export */ const component_dropdown = (dropdown/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/dropdown/index.js











const Dropdown = function({
  text = 'Dropdown',
  menuItem = [],
  buttonStyle = [],
  buttonClassList = [],
  srOnly = false,
  iconName = false
} = {}) {

  this.state = {
    open: false
  };

  this.element = {
    menu: node('div|class:dropdown-menu'),
    content: node('div|class:dropdown-content'),
    toggle: new Button({
      text: text,
      srOnly: srOnly,
      iconName: iconName,
      style: buttonStyle,
      classList: buttonClassList,
      func: () => {

        if (this.state.open) {
          this.close();
        } else {
          this.open();
        };

      }
    })
  };

  this.toggle = this.element.toggle.button;

  this.buttonStyle = {};

  this.buttonStyle.update = (style) => {

    this.element.toggle.style.update(style);

  };

  this.open = () => {

    this.state.open = true;

    const body = document.querySelector('body');

    body.appendChild(this.element.menu);

    this.position();

    this.bind.add();

  };

  this.close = () => {

    this.state.open = false;

    const body = document.querySelector('body');

    if (body.contains(this.element.menu)) {
      body.removeChild(this.element.menu)
    };

    this.bind.remove();

  };

  this.esc = new KeyboardShortcut({ keycode: 27, action: () => { this.close(); } });

  this.ctrAltM = new KeyboardShortcut({ keycode: 77, ctrl: true, alt: true, action: () => { this.close(); } });

  this.ctrAltG = new KeyboardShortcut({ keycode: 71, ctrl: true, alt: true, action: () => { this.close(); } });

  this.ctrAltA = new KeyboardShortcut({ keycode: 65, ctrl: true, alt: true, action: () => { this.close(); } });

  this.bind = {
    add: () => {

      window.addEventListener('mouseup', this.clickOut);

      this.esc.add();

      this.ctrAltM.add();

      this.ctrAltG.add();

      this.ctrAltA.add();

    },
    remove: () => {

      window.removeEventListener('mouseup', this.clickOut);

      this.esc.remove();

      this.ctrAltM.remove();

      this.ctrAltG.remove();

      this.ctrAltA.remove();

    }
  };

  this.clickOut = (event) => {

    const path = event.path || (event.composedPath && event.composedPath());

    if (!path.includes(this.element.toggle.button) && !path.includes(this.element.menu)) {

      this.close();

    };

  };

  this.position = () => {

    const vWidth = window.innerWidth || doc.documentElement.clientWidth;

    const vHeight = window.innerHeight || doc.documentElement.clientHeight;

    const dropdownRect = this.element.toggle.button.getBoundingClientRect();

    const menuRect = this.element.menu.getBoundingClientRect();

    let menuTop;

    if ((dropdownRect.bottom + menuRect.height) > vHeight) {
      menuTop = dropdownRect.top - menuRect.height;
    } else {
      menuTop = dropdownRect.bottom;
    };

    let menuLeft = dropdownRect.left + (dropdownRect.width / 2) - (menuRect.width / 2);

    if (menuLeft < 0) {
      menuLeft = 0;
    } else if ((menuLeft + menuRect.width) > vWidth) {
      menuLeft = vWidth - menuRect.width;
    };

    this.element.menu.style.setProperty('--dropdown-menu-top', menuTop);

    this.element.menu.style.setProperty('--dropdown-menu-left', menuLeft);

  };

  this.assemble = () => {

    if (menuItem.length > 0) {

      menuItem.forEach((item, i) => {

        const dropdownMenuButton = new Button({
          text: item.text,
          iconName: item.iconName,
          classList: ['dropdown-menu-button']
        });

        dropdownMenuButton.button.addEventListener('click', () => {

          if (item.action()) {
            item.action();
          };

          this.close();

        });

        this.element.content.appendChild(dropdownMenuButton.button);

      });

      this.element.menu.appendChild(this.element.content);

    };

  };

  this.assemble();

};

;// CONCATENATED MODULE: ./src/component/state/index.js
const state = {};

state.current = {};

state.default = {
  layout: {
    area: {
      header: { width: 100, justify: 'center' },
      bookmark: { width: 100, justify: 'center' }
    },
    alignment: 'center-center',
    order: 'header-bookmark',
    direction: 'vertical',
    size: 100,
    width: 80,
    padding: 40,
    gutter: 20,
    breakpoint: 'xs',
    scrollbar: 'auto',
    title: '',
    overscroll: false
  },
  header: {
    item: { justify: 'left' },
    greeting: { show: false, type: 'good', custom: '', name: '', size: 100, newLine: false },
    transitional: { show: false, type: 'timeanddate', size: 100, newLine: false },
    clock: {
      hour: { show: true, display: 'number' },
      minute: { show: true, display: 'number' },
      second: { show: false, display: 'number' },
      separator: { show: true, text: '' },
      meridiem: { show: false },
      hour24: { show: true },
      size: 100,
      newLine: false
    },
    date: {
      day: { show: true, display: 'word', weekStart: 'monday', length: 'long' },
      date: { show: true, display: 'number', ordinal: true },
      month: { show: true, display: 'word', length: 'long', ordinal: true },
      year: { show: false, display: 'number' },
      separator: { show: true, text: '' },
      format: 'date-month',
      size: 100,
      newLine: false
    },
    search: {
      show: true,
      width: { by: 'auto', size: 30 },
      focus: false,
      engine: { selected: 'google', custom: { name: '', url: '', queryName: '' } },
      text: { justify: 'center' },
      size: 100,
      newLine: false,
      newTab: false
    },
    order: [],
    edit: false
  },
  bookmark: {
    size: 100,
    url: { show: true },
    line: { show: true },
    shadow: { show: true },
    hoverScale: { show: true },
    orientation: 'bottom',
    style: 'block',
    newTab: false,
    edit: false,
    add: false,
    show: true
  },
  group: {
    area: { justify: 'left' },
    name: { size: 100 },
    order: 'header-body',
    openAll: { size: 100 },
    edit: false,
    add: false
  },
  toolbar: { location: 'header', position: 'bottom-right', size: 100, accent: { show: true }, add: { show: true }, edit: { show: true }, newLine: false },
  theme: {
    color: { range: { primary: { h: 222, s: 14 } }, contrast: { start: 17, end: 83 }, shades: 14 },
    accent: { hsl: { h: 221, s: 100, l: 50 }, rgb: { r: 0, g: 80, b: 255 }, random: { active: false, style: 'any' }, cycle: { active: false, speed: 300, step: 10 } },
    font: {
      display: { name: '', weight: 400, style: 'normal' },
      ui: { name: '', weight: 400, style: 'normal' }
    },
    background: {
      type: 'theme',
      color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
      gradient: {
        angle: 160,
        start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
        end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
      },
      image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
      video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
    },
    opacity: { general: 100 },
    layout: { divider: { size: 0 } },
    header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
    bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
    group: { openAll: { opacity: 100 } },
    toolbar: { opacity: 100 },
    style: 'dark',
    radius: 25,
    shadow: 75,
    shade: { opacity: 30, blur: 0 },
    custom: { all: [], edit: false }
  },
  search: false,
  modal: false,
  menu: false,
  autoSuggest: false
};

state.minMax = {
  header: {
    greeting: { size: { min: 50, max: 500 } },
    transitional: { size: { min: 50, max: 500 } },
    clock: { size: { min: 50, max: 500 } },
    date: { size: { min: 50, max: 500 } },
    search: { size: { min: 50, max: 500 }, width: { size: { min: 10, max: 100 } } }
  },
  bookmark: { size: { min: 50, max: 500 } },
  group: {
    name: { size: { min: 50, max: 500 } },
    openAll: { size: { min: 50, max: 500 } }
  },
  layout: {
    area: {
      header: { width: { min: 10, max: 100 } },
      bookmark: { width: { min: 10, max: 100 } }
    },
    size: { min: 10, max: 200 },
    width: { min: 10, max: 100 },
    padding: { min: 0, max: 300 },
    gutter: { min: 0, max: 300 }
  },
  toolbar: { size: { min: 50, max: 300 } },
  theme: {
    color: {
      range: { primary: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 } } },
      contrast: { start: { min: 0, max: 100 }, end: { min: 0, max: 100 } }
    },
    accent: {
      hsl: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 }, l: { min: 0, max: 100 } },
      rgb: { r: { min: 0, max: 255 }, g: { min: 0, max: 255 }, b: { min: 0, max: 255 } },
      cycle: { speed: { min: 100, max: 10000 }, step: { min: 1, max: 100 } }
    },
    font: {
      display: { weight: { min: 100, max: 900 } },
      ui: { weight: { min: 100, max: 900 } }
    },
    opacity: {
      general: { min: 0, max: 100 },
      toolbar: { min: 0, max: 100 },
      bookmark: { min: 0, max: 100 },
      search: { min: 0, max: 100 },
      openAll: { min: 0, max: 100 }
    },
    layout: { divider: { size: { min: 0, max: 10 } } },
    header: {
      color: {
        hsl: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 }, l: { min: 0, max: 100 } },
        rgb: { r: { min: 0, max: 255 }, g: { min: 0, max: 255 }, b: { min: 0, max: 255 } },
        opacity: { min: 0, max: 100 }
      },
      search: { opacity: { min: 0, max: 100 } }
    },
    bookmark: {
      color: {
        hsl: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 }, l: { min: 0, max: 100 } },
        rgb: { r: { min: 0, max: 255 }, g: { min: 0, max: 255 }, b: { min: 0, max: 255 } },
        opacity: { min: 0, max: 100 }
      },
      item: { border: { min: 0, max: 20 }, opacity: { min: 0, max: 100 } }
    },
    group: { openAll: { opacity: { min: 0, max: 100 } } },
    toolbar: { opacity: { min: 0, max: 100 } },
    background: {
      color: {
        hsl: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 }, l: { min: 0, max: 100 } },
        rgb: { r: { min: 0, max: 255 }, g: { min: 0, max: 255 }, b: { min: 0, max: 255 } }
      },
      gradient: {
        angle: { min: 0, max: 360 },
        start: {
          hsl: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 }, l: { min: 0, max: 100 } },
          rgb: { r: { min: 0, max: 255 }, g: { min: 0, max: 255 }, b: { min: 0, max: 255 } }
        },
        end: {
          hsl: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 }, l: { min: 0, max: 100 } },
          rgb: { r: { min: 0, max: 255 }, g: { min: 0, max: 255 }, b: { min: 0, max: 255 } }
        },
      },
      image: { blur: { min: 0, max: 200 }, grayscale: { min: 0, max: 100 }, scale: { min: 100, max: 400 }, accent: { min: 0, max: 100 }, opacity: { min: 0, max: 100 }, vignette: { opacity: { min: 0, max: 100 }, start: { min: 0, max: 100 }, end: { min: 0, max: 100 } } },
      video: { blur: { min: 0, max: 200 }, grayscale: { min: 0, max: 100 }, scale: { min: 100, max: 400 }, accent: { min: 0, max: 100 }, opacity: { min: 0, max: 100 }, vignette: { opacity: { min: 0, max: 100 }, start: { min: 0, max: 100 }, end: { min: 0, max: 100 } } }
    },
    radius: { min: 0, max: 500 },
    shadow: { min: 0, max: 300 },
    shade: { opacity: { min: 0, max: 100 }, blur: { min: 0, max: 200 } }
  }
};

state.step = {
  theme: {
    font: {
      display: { weight: 100 },
      ui: { weight: 100 }
    }
  }
};

state.option = {
  layout: {
    area: {
      header: { justify: ['left', 'center', 'right'], align: ['left', 'center', 'right'] },
      bookmark: { justify: ['left', 'center', 'right'], align: ['left', 'center', 'right'] }
    },
    alignment: ['top-left', 'top-center', 'top-right', 'center-left', 'center-center', 'center-right', 'bottom-left', 'bottom-center', 'bottom-right'],
    direction: ['horizontal', 'vertical'],
    order: ['header-bookmark', 'bookmark-header'],
    scrollbar: ['auto', 'thin', 'none']
  },
  header: {
    item: { justify: ['left', 'center', 'right'] },
    search: { width: { by: ['auto', 'custom'] }, text: { justify: ['left', 'center', 'right'] } }
  },
  bookmark: {
    item: { justify: ['left', 'center', 'right'] },
    orientation: ['top', 'bottom'],
    style: ['block', 'list']
  },
  group: {
    area: { justify: ['left', 'center', 'right'] },
    order: ['header-body', 'body-header']
  },
  toolbar: {
    location: ['corner', 'header'],
    position: ['top-left', 'top-right', 'bottom-right', 'bottom-left']
  },
  theme: {
    accent: { random: { style: ['any', 'light', 'dark', 'pastel', 'saturated'] } },
    style: ['dark', 'light', 'system'],
    header: { color: { by: ['theme', 'custom'] } },
    bookmark: { color: { by: ['theme', 'custom'] } },
    background: { type: ['theme', 'accent', 'color', 'gradient', 'image', 'video'] }
  }
};

state.get = {
  current: () => { return state.current },
  default: () => { return JSON.parse(JSON.stringify(state.default)) },
  minMax: () => { return JSON.parse(JSON.stringify(state.minMax)) },
  step: () => { return JSON.parse(JSON.stringify(state.step)) },
  option: () => { return JSON.parse(JSON.stringify(state.option)) }
};

state.set = {
  restore: (dataToRestore) => {
    state.current = dataToRestore.state;
    console.log('state restored');
  },
  default: () => {
    state.current = state.get.default();
    console.log('state set to default');
  }
};



// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/edge/index.css
var edge = __webpack_require__(455);
;// CONCATENATED MODULE: ./src/component/edge/index.css

            

var edge_options = {};

edge_options.insert = "head";
edge_options.singleton = false;

var edge_update = injectStylesIntoStyleTag_default()(edge/* default */.Z, edge_options);



/* harmony default export */ const component_edge = (edge/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/edge/index.js






const Edge = function({
  primary = false,
  secondary = false,
  padding = 0
} = {}) {

  this.tick = null;

  this.element = {
    edge: {
      primary: null,
      secondary: []
    }
  };

  this.bind = {
    set: () => {

      this.tick = window.setTimeout(() => {

        this.bind.set();

        this.track();

      }, 100);

    },
    remove: () => {

      clearTimeout(this.tick);

      this.tick = null;

    }
  };

  this.assemble = (edge) => {

    this.element.edge.primary = node('div|class:edge is-transparent');

    this.element.edge.primary.addEventListener('transitionend', (event) => {

      if (event.propertyName === 'opacity' && getComputedStyle(this.element.edge.primary).opacity == 1) {

        this.bind.set();

        this.element.edge.primary.classList.remove('is-edge-opening');

      };

      if (event.propertyName === 'opacity' && getComputedStyle(this.element.edge.primary).opacity == 0) {

        if (this.element.edge.primary.parentElement.contains(this.element.edge.primary)) {
          this.element.edge.primary.parentElement.removeChild(this.element.edge.primary);
        };

        this.element.edge.primary.removeAttribute('style');

        this.element.edge.primary.classList.remove('is-edge-opening');

        this.bind.remove();

      };

    });

    this.element.edge.secondary = [];

    if (secondary.length > 0) {

      secondary.forEach((item, i) => {
        this.element.edge.secondary.push(node('div|class:edge-secondary is-transparent'));
      });

      this.element.edge.secondary.forEach((item, i) => {

        item.addEventListener('transitionend', (event) => {

          if (event.propertyName === 'opacity' && getComputedStyle(item).opacity == 1) {

            item.classList.remove('is-edge-opening');

          };

          if (event.propertyName === 'opacity' && getComputedStyle(item).opacity == 0) {

            if (item.parentElement.contains(item)) {
              item.parentElement.removeChild(item);
            };

            item.removeAttribute('style');

            item.classList.remove('is-edge-opening');

          };

        });

      });

    };

  };

  this.destroy = () => {

    this.element.edge.primary.classList.remove('is-opaque');

    this.element.edge.primary.classList.add('is-transparent');

    if (this.element.edge.secondary.length > 0) {

      this.element.edge.secondary.forEach((item, i) => {

        item.classList.remove('is-opaque');

        item.classList.add('is-transparent');

      });

    };

  };

  this.appear = (edge) => {

    const html = document.querySelector('html');

    const body = document.querySelector('body');

    body.appendChild(edge);

    getComputedStyle(edge).opacity;

    getComputedStyle(edge).width;

    getComputedStyle(edge).height;

    getComputedStyle(edge).top;

    getComputedStyle(edge).left;

    edge.classList.remove('is-transparent');

    edge.classList.add('is-opaque');

    edge.classList.add('is-edge-opening');

  };

  this.show = () => {

    this.appear(this.element.edge.primary);

    const body = document.querySelector('body');


    if (secondary.length > 0) {

      secondary.forEach((item, i) => {

        if (body.contains(item)) {

          this.appear(this.element.edge.secondary[i]);

        };

      });

    };

    this.track();

    const html = document.querySelector('html');

    html.classList.add('is-edge');

  };

  this.hide = () => {

    this.destroy();

    this.bind.remove();

    const html = document.querySelector('html');

    html.classList.remove('is-edge');

  };

  this.style = (elementToTrack, edge) => {

    const html = document.querySelector('html');

    const scrollTop = document.documentElement.scrollTop;

    const scrollLeft = document.documentElement.scrollLeft;

    const rect = elementToTrack.getBoundingClientRect();

    const fontSize = parseInt(getComputedStyle(html).fontSize, 10);

    const layoutSpace = parseFloat(getComputedStyle(html).getPropertyValue('--layout-space'), 10);

    const layoutSize = state.get.current().layout.size;

    edge.style.width = rect.width + ((layoutSize / 100) * (((layoutSpace * fontSize) * padding) * 2)) + 'px';

    edge.style.height = rect.height + ((layoutSize / 100) * (((layoutSpace * fontSize) * padding) * 2)) + 'px';

    edge.style.top = rect.top + scrollTop - ((layoutSize / 100) * ((layoutSpace * fontSize) * padding)) + 'px';

    edge.style.left = rect.left + scrollLeft - ((layoutSize / 100) * ((layoutSpace * fontSize) * padding)) + 'px';

  };

  this.track = () => {

    this.style(primary, this.element.edge.primary);

    if (secondary.length > 0) {

      secondary.forEach((item, i) => {
        this.style(item, this.element.edge.secondary[i]);
      });

    };

  };

  this.update = {
    primary: (newPrimary) => {

      if (newPrimary) {
        primary = newPrimary;
      };

      this.assemble();

    },
    secondary: (newSecondary) => {

      if (newSecondary) {
        secondary = newSecondary;
      };

      this.assemble();

    }
  };

  this.assemble();

};

;// CONCATENATED MODULE: ./src/utility/makePath.js
const makePath = (string) => {

  if (string) {

    let array;

    if (string.indexOf('[') != -1 && string.indexOf(']') != -1) {

      array = string.split('.').join(',').split('[').join(',').split(']').join(',').split(',');

      for (var i = 0; i < array.length; i++) {
        if (array[i] == '') {
          array.splice(i, 1);
        };
        if (!isNaN(parseInt(array[i], 10))) {
          array[i] = parseInt(array[i], 10);
        };
      };

    } else {

      array = string.split('.');

    };

    return array;

  } else {

    return false;

  };

};

;// CONCATENATED MODULE: ./src/utility/set.js


const set = ({
  object = null,
  path = null,
  value = null
} = {}) => {

  const address = makePath(path);

  const setValue = () => {

    while (address.length > 1) {

      // shift off and store the first
      let currentKey = address.shift();

      // if the key is not found make a new object
      if (!(currentKey in object)) {
        // make an empty object in the current object level
        if (isNaN(currentKey)) {
          object[currentKey] = {};
        } else {
          object[currentKey] = [];
        };
      };

      // drill down the object with the first key
      object = object[currentKey];

    };

    let finalKey = address.shift();

    object[finalKey] = value;

  };

  if (object != null && path != null && value != null) {
    setValue();
  } else {
    return false;
  };

};

;// CONCATENATED MODULE: ./src/utility/clearChildNode.js
const clearChildNode = (element) => {

  while (element.lastChild) {
    element.removeChild(element.lastChild);
  };

};

;// CONCATENATED MODULE: ./src/utility/get.js


const get = ({
  object = null,
  path = null
} = {}) => {

  const address = makePath(path);

  const getValue = () => {

    while (address.length > 1) {

      // shift off and store the first key
      let currentKey = address.shift();

      // if the key is not found make a new object
      if (!(currentKey in object)) {
        // make an empty object in the current object level
        if (isNaN(currentKey)) {
          object[currentKey] = {};
        } else {
          object[currentKey] = [];
        };
      };

      // drill down the object with the first key
      object = object[currentKey];

    };

    let finalKey = address.shift();

    if (!(finalKey in object)) {
      return '';
    } else {
      return object[finalKey];
    };

  };

  if (object != null && path != null) {
    return getValue();
  } else {
    return false;
  };

};

;// CONCATENATED MODULE: ./src/utility/applyCSSVar.js



const applyCSSVar = (path) => {

  const html = document.querySelector('html');

  const apply = (path) => {

    html.style.setProperty('--' + path.replace(/\./g, '-').toLowerCase(), get({
      object: state.get.current(),
      path: path
    }));

  };

  if (Array.isArray(path)) {

    path.forEach((item, i) => { apply(item); });

  } else {

    apply(path);

  };

};

;// CONCATENATED MODULE: ./src/utility/applyCSSClass.js



const applyCSSClass = (path) => {

  const html = document.querySelector('html');

  const apply = (path) => {

    get({
      object: state.get.option(),
      path: path
    }).forEach((item, i) => {

      html.classList.remove('is-' + path.replace(/\./g, '-').toLowerCase() + '-' + item);

    });

    html.classList.add('is-' + path.replace(/\./g, '-').toLowerCase() + '-' + get({
      object: state.get.current(),
      path: path
    }));

  };

  if (Array.isArray(path)) {

    path.forEach((item, i) => { apply(item); });

  } else {

    apply(path);

  };

};

;// CONCATENATED MODULE: ./src/utility/applyCSSState.js



const applyCSSState = function(path) {

  const html = document.querySelector('html');

  const apply = (path) => {

    if (get({ object: state.get.current(), path: path })) {

      html.classList.add('is-' + path.replace(/\./g, '-').toLowerCase());

    } else {

      html.classList.remove('is-' + path.replace(/\./g, '-').toLowerCase());

    };

  };

  if (Array.isArray(path)) {

    path.forEach((item, i) => { apply(item); });

  } else {

    apply(path);

  };

};

;// CONCATENATED MODULE: ./src/utility/isValidString.js
const isValidString = (value) => {
  let result = false;

  if (typeof value == 'string') {
    value = value.trim().replace(/\s/g, '');
    if (value != '') {
      result = true;
    };
  };

  return result;
};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/layout/index.css
var layout = __webpack_require__(9209);
;// CONCATENATED MODULE: ./src/component/layout/index.css

            

var layout_options = {};

layout_options.insert = "head";
layout_options.singleton = false;

var layout_update = injectStylesIntoStyleTag_default()(layout/* default */.Z, layout_options);



/* harmony default export */ const component_layout = (layout/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/layout/index.js
















const layout_layout = {}

layout_layout.element = {
  layout: node('div|class:layout'),
  header: node('div|class:layout-header'),
  bookmark: node('div|class:layout-bookmark'),
  divider: node('div|class:layout-divider')
};

layout_layout.area = {
  render: () => {

    layout_layout.area.assemble();

    const body = document.querySelector('body');

    body.appendChild(layout_layout.element.layout);

    const resize = new ResizeObserver((entries) => {

      const size = { sm: 550, md: 700, lg: 900, xl: 1100, xxl: 1600 };

      let breakpoint;

      entries.forEach(function(entry) {

        if (entry.contentRect.width <= size.sm) {
          breakpoint = 'xs';
        } else if (entry.contentRect.width > size.sm && entry.contentRect.width <= size.md) {
          breakpoint = 'sm';
        } else if (entry.contentRect.width > size.md && entry.contentRect.width <= size.lg) {
          breakpoint = 'md';
        } else if (entry.contentRect.width > size.lg && entry.contentRect.width <= size.xl) {
          breakpoint = 'lg';
        } else if (entry.contentRect.width > size.xl && entry.contentRect.width <= size.xxl) {
          breakpoint = 'xl';
        } else if (entry.contentRect.width > size.xxl) {
          breakpoint = 'xxl';
        };

      });

      set({
        object: state.get.current(),
        path: 'layout.breakpoint',
        value: breakpoint
      });

      layout_layout.breakpoint.bind();

    });

    resize.observe(layout_layout.element.bookmark);

  },
  assemble: () => {

    if (
      (state.get.current().header.clock.second.show ||
        state.get.current().header.clock.minute.show ||
        state.get.current().header.clock.hour.show) ||
      (state.get.current().header.date.day.show ||
        state.get.current().header.date.date.show ||
        state.get.current().header.date.month.show ||
        state.get.current().header.date.year.show) ||
      state.get.current().header.greeting.show ||
      state.get.current().header.search.show ||
      state.get.current().toolbar.location === 'header'
    ) {

      layout_layout.element.layout.appendChild(layout_layout.element.header);

    } else {

      if (layout_layout.element.layout.contains(layout_layout.element.header)) {

        layout_layout.element.layout.removeChild(layout_layout.element.header);

      };

    };

    if (state.get.current().theme.layout.divider.size > 0) {

      layout_layout.element.layout.appendChild(layout_layout.element.divider);

    } else {

      if (layout_layout.element.layout.contains(layout_layout.element.divider)) {

        layout_layout.element.layout.removeChild(layout_layout.element.divider);

      };

    };

    if (state.get.current().bookmark.show) {

      layout_layout.element.layout.appendChild(layout_layout.element.bookmark);

    } else {

      if (layout_layout.element.layout.contains(layout_layout.element.bookmark)) {

        layout_layout.element.layout.removeChild(layout_layout.element.bookmark);

      };

    };

  },
  clear: () => {
    clearChildNode(layout_layout.element.layout);
  }
};

layout_layout.header = {
  clear: () => {
    clearChildNode(layout_layout.element.header);
  }
};

layout_layout.bookmark = {
  clear: () => {
    clearChildNode(layout_layout.element.bookmark);
  }
};

layout_layout.breakpoint = {
  bind: () => {

    const html = document.querySelector('html');

    const size = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];

    size.forEach((item, i) => {
      html.classList.remove('is-layout-breakpoint-' + item);
    });

    switch (state.get.current().layout.breakpoint) {
      case 'xs':
        html.classList.add('is-layout-breakpoint-xs');
        break;

      case 'sm':
        html.classList.add('is-layout-breakpoint-sm');
        break;

      case 'md':
        html.classList.add('is-layout-breakpoint-md');
        break;

      case 'lg':
        html.classList.add('is-layout-breakpoint-lg');
        break;

      case 'xl':
        html.classList.add('is-layout-breakpoint-xl');
        break;

      case 'xxl':
        html.classList.add('is-layout-breakpoint-xxl');
        break;

    };
  }
};

layout_layout.title = {
  render: () => {

    const title = document.querySelector('title');

    if (isValidString(state.get.current().layout.title)) {

      title.textContent = trimString(state.get.current().layout.title);

    } else {

      title.textContent = 'New Tab';

    };

  }
};

layout_layout.init = () => {
  applyCSSVar([
    'layout.size',
    'layout.width',
    'layout.area.header.width',
    'layout.area.bookmark.width',
    'layout.padding',
    'layout.gutter'
  ]);
  applyCSSClass([
    'layout.alignment',
    'layout.direction',
    'layout.order',
    'layout.area.header.justify',
    'layout.area.bookmark.justify',
    'layout.scrollbar'
  ]);
  applyCSSState([
    'layout.overscroll'
  ]);
  layout_layout.area.render();
  layout_layout.breakpoint.bind();
  layout_layout.title.render();
};



;// CONCATENATED MODULE: ./src/component/appName/index.js
const appName = 'nightTab';

;// CONCATENATED MODULE: ./src/component/groupAndBookmark/index.js





const groupAndBookmark = {};

groupAndBookmark.render = () => {

  component_group_group.item.clear();

  bookmark_bookmark.item.clear();

  component_group_group.item.render();

  bookmark_bookmark.item.render();

  if (state.get.current().search) {

    if (component_group_group.sort.sortable) {

      component_group_group.sort.sortable.option('disabled', true);

    };

    if (bookmark_bookmark.sort.sortable.length > 0) {

      bookmark_bookmark.sort.sortable.forEach((item, i) => {

        item.option('disabled', true);

      });

    };


  } else {

    component_group_group.sort.bind();

    bookmark_bookmark.sort.bind();

  };

};

groupAndBookmark.init = () => {
  groupAndBookmark.render();
};



;// CONCATENATED MODULE: ./src/component/version/index.js
const version = {};

version.number = '7.0.0';

version.name = 'Delightful Komodo Dragon';

version.compare = (a, b) => {

  let pa = a.split('.');

  let pb = b.split('.');

  for (let i = 0; i < 3; i++) {

    let na = Number(pa[i]);

    let nb = Number(pb[i]);

    if (na > nb) {
      return 1;
    };

    if (nb > na) {
      return -1;
    };

    if (!isNaN(na) && isNaN(nb)) {
      return 1;
    };

    if (isNaN(na) && !isNaN(nb)) {
      return -1;
    };

  };

  return 0;
};

;// CONCATENATED MODULE: ./src/component/bookmarkDefault/index.js
const bookmarkDefault = {
  url: '',
  display: {
    alignment: 'center-center',
    direction: 'vertical',
    order: 'visual-name',
    rotate: 0,
    translate: { x: 0, y: 0 },
    gutter: 25,
    name: { show: true, text: '', size: 7 },
    visual: { show: true, type: 'letter', size: 25, letter: { text: '' }, icon: { name: '', prefix: '', label: '' }, image: { url: '' }, shadow: { size: 0 } }
  },
  accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
  color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
  background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
  border: 0,
  shape: { wide: false, tall: false },
  timestamp: null
};

;// CONCATENATED MODULE: ./src/component/stagedBookmark/index.js


const StagedBookmark = function(bookmarkData) {

  this.link = bookmarkData || JSON.parse(JSON.stringify(bookmarkDefault));

  this.position = {
    origin: { group: 0, item: 0 },
    destination: { group: 0, item: 0 }
  };

  this.group = { destination: 'existing', name: '' };

  this.type = { new: false, existing: false };

  this.propagate = { display: false, layout: false, theme: false };

};

;// CONCATENATED MODULE: ./src/component/groupDefault/index.js
const groupDefault = {
  name: { text: '', show: true },
  openAll: { show: true },
  items: []
};

;// CONCATENATED MODULE: ./src/component/stagedGroup/index.js





const StagedGroup = function(groupData) {

  this.group = groupData || JSON.parse(JSON.stringify(groupDefault));

  this.position = { origin: 0, destination: 0 };

  this.type = { new: false, existing: false };

  this.newGroup = ({
    name = false
  } = {}) => {

    if (name && isValidString(name)) {
      this.group.name.text = trimString(name);
    };

    this.position.destination = bookmark_bookmark.all.length;

    this.type.new = true;

  };

};

;// CONCATENATED MODULE: ./src/utility/randomNumber.js
const randomNumber = (min, max) => {

  return Math.floor(Math.random() * (max - min + 1) + min);

};

;// CONCATENATED MODULE: ./src/utility/convertColor.js
const convertColor = {
  rgb: {},
  hsl: {},
  hex: {}
};

convertColor.rgb.hsl = (rgb) => {
  var r = rgb.r / 255;
  var g = rgb.g / 255;
  var b = rgb.b / 255;
  var min = Math.min(r, g, b);
  var max = Math.max(r, g, b);
  var delta = max - min;
  var h;
  var s;

  if (max === min) {
    h = 0;
  } else if (r === max) {
    h = (g - b) / delta;
  } else if (g === max) {
    h = 2 + (b - r) / delta;
  } else if (b === max) {
    h = 4 + (r - g) / delta;
  };

  h = Math.min(h * 60, 360);

  if (h < 0) {
    h += 360;
  };

  var l = (min + max) / 2;

  if (max === min) {
    s = 0;
  } else if (l <= 0.5) {
    s = delta / (max + min);
  } else {
    s = delta / (2 - max - min);
  };

  return {
    h: Math.round(h),
    s: Math.round(s * 100),
    l: Math.round(l * 100)
  };
};

convertColor.rgb.hex = (args) => {
  var integer = ((Math.round(args.r) & 0xFF) << 16) +
    ((Math.round(args.g) & 0xFF) << 8) +
    (Math.round(args.b) & 0xFF);

  var string = integer.toString(16);

  return '#' + '000000'.substring(string.length) + string;
};

convertColor.hsl.rgb = (hsl) => {
  var h = hsl.h / 360;
  var s = hsl.s / 100;
  var l = hsl.l / 100;
  var t2;
  var t3;
  var val;

  if (s === 0) {
    val = l * 255;
    return {
      r: Math.round(val),
      g: Math.round(val),
      b: Math.round(val)
    };
  };

  if (l < 0.5) {
    t2 = l * (1 + s);
  } else {
    t2 = l + s - l * s;
  };

  var t1 = 2 * l - t2;

  var rgb = [0, 0, 0];

  for (var i = 0; i < 3; i++) {
    t3 = h + 1 / 3 * -(i - 1);

    if (t3 < 0) {
      t3++;
    };

    if (t3 > 1) {
      t3--;
    };

    if (6 * t3 < 1) {
      val = t1 + (t2 - t1) * 6 * t3;
    } else if (2 * t3 < 1) {
      val = t2;
    } else if (3 * t3 < 2) {
      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
    } else {
      val = t1;
    };

    rgb[i] = val * 255;
  };

  return {
    r: Math.round(rgb[0]),
    g: Math.round(rgb[1]),
    b: Math.round(rgb[2])
  };
};

convertColor.hex.rgb = (args) => {
  var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);

  if (!match) {
    return {
      r: 0,
      g: 0,
      b: 0
    };
  };

  var colorString = match[0];

  if (match[0].length === 3) {
    colorString = colorString.split('').map((char) => {
      return char + char;
    }).join('');
  };

  var integer = parseInt(colorString, 16);
  var r = (integer >> 16) & 0xFF;
  var g = (integer >> 8) & 0xFF;
  var b = integer & 0xFF;

  return {
    r: r,
    g: g,
    b: b
  };
};

;// CONCATENATED MODULE: ./src/component/easterEgg/index.js














const easterEgg = {};

easterEgg.toaster = {};

easterEgg.toaster.render = () => {

  easterEgg.toaster.bind.remove();

  if (bookmark_bookmark.all.length < 1) {

    const newGroupData = new StagedGroup();

    newGroupData.group.name.text = 'Toaster';

    newGroupData.newGroup();

    component_group_group.item.mod.add(newGroupData);

  };

  const newBookmarkData = new StagedBookmark();

  newBookmarkData.link.url = 'https://en.wikipedia.org/wiki/Easter_egg_(media)';

  newBookmarkData.link.background.show = true;

  newBookmarkData.link.background.image.url = 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1628494879270.gif?raw=true';

  newBookmarkData.link.accent.by = 'custom';

  newBookmarkData.link.accent.hsl = { h: randomNumber(0, 360), s: 100, l: 50 };

  newBookmarkData.link.accent.rgb = convertColor.hsl.rgb(newBookmarkData.link.accent.hsl);

  newBookmarkData.link.color.by = 'custom';

  newBookmarkData.link.color.hsl = { h: 0, s: 0, l: 100 };

  newBookmarkData.link.color.rgb = { r: 255, g: 255, b: 255 };

  bookmark_bookmark.item.mod.add(newBookmarkData);

  groupAndBookmark.render();

  menu.close();

  data.save();

};

easterEgg.toaster.bind = {
  add: () => {

    menu.element.frame.element.area.addEventListener('animationend', easterEgg.toaster.render);

    menu.element.frame.element.area.classList.add('is-jello');

  },
  remove: () => {

    menu.element.frame.element.area.removeEventListener('animationend', easterEgg.toaster.render);

    menu.element.frame.element.area.classList.remove('is-jello');

  }
};



// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/logo/index.css
var logo = __webpack_require__(448);
;// CONCATENATED MODULE: ./src/component/logo/index.css

            

var logo_options = {};

logo_options.insert = "head";
logo_options.singleton = false;

var logo_update = injectStylesIntoStyleTag_default()(logo/* default */.Z, logo_options);



/* harmony default export */ const component_logo = (logo/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/logo/index.js






const logo_logo = {};

logo_logo.svg =
  '<svg class="logo" viewBox="0 0 512 512" version="1.1" xmlns="http://www.w3.org/2000/svg">' +
  '<circle cx="256" cy="256" r="256" class="logo-circle"/>' +
  '<path d="M374 224H138C132.477 224 128 228.477 128 234V278C128 283.523 132.477 288 138 288H374C379.523 288 384 283.523 384 278V234C384 228.477 379.523 224 374 224Z" class="logo-cross-x"/>' +
  '<path d="M278 128H234C228.477 128 224 132.477 224 138V374C224 379.523 228.477 384 234 384H278C283.523 384 288 379.523 288 374V138C288 132.477 283.523 128 278 128Z" class="logo-cross-y"/>' +
  '</svg>';

logo_logo.render = () => {

  const versionIcon = node('div|class:version-icon');

  versionIcon.innerHTML = logo_logo.svg;

  versionIcon.addEventListener('dblclick', () => { easterEgg.toaster.bind.add(); });

  return versionIcon;
};



;// CONCATENATED MODULE: ./src/component/link/index.js





const link_link = {};

link_link.render = ({
  text = 'Link',
  href = '#',
  iconName = false,
  iconPosition = 'right',
  image = false,
  linkButton = false,
  style = [],
  title = false,
  openNew = false,
  classList = [],
  func = false
} = {}) => {

  const linkElement = node('a|tabindex:1');

  if (linkButton) {
    linkElement.classList.add('button');

    if (style.length > 0) {
      style.forEach((item, i) => {
        switch (item) {
          case 'link':
            linkElement.classList.add('button-link');
            break;

          case 'line':
            linkElement.classList.add('button-line');
            break;

          case 'ring':
            linkElement.classList.add('button-ring');
            break;
        };
      });
    };
  };

  if (image) {
    const linkImage = node('img|src:' + image + ',class:mr-2');

    linkElement.appendChild(linkImage);
  };

  if (text) {
    const linkText = node('span:' + text);

    if (linkButton) {
      linkText.classList.add('button-text');
    };
    linkElement.appendChild(linkText);
  };

  if (iconName) {
    switch (iconPosition) {
      case 'left':
        linkElement.prepend(icon_icon.render(iconName));
        break;

      case 'right':
        linkElement.append(icon_icon.render(iconName));
        break;
    };
  };

  if (href) {
    linkElement.setAttribute('href', href);
  };

  if (openNew) {
    linkElement.setAttribute('target', '_blank');
  };

  if (title) {
    linkElement.setAttribute('title', title);
  };

  if (classList.length > 0) {
    classList.forEach((item, i) => {
      linkElement.classList.add(item);
    });
  };

  if (func) {
    linkElement.addEventListener('click', (event) => {
      func();
    });
  };

  return linkElement;

};



;// CONCATENATED MODULE: ./src/component/themePreset/acrid/index.js
const acrid = {
  name: 'Acrid',
  color: { range: { primary: { h: 301, s: 32 } }, contrast: { start: 11, end: 65 } },
  accent: { hsl: { h: 112, s: 100, l: 42 }, rgb: { r: 29, g: 213, b: 0 } },
  font: { display: { name: 'Titillium Web', weight: 400, style: 'italic' }, ui: { name: 'Inconsolata', weight: 400, style: 'normal' } },
  background: {
    type: 'gradient',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 154, s: 62, l: 24 }, rgb: { r: 23, g: 99, b: 66 } },
      end: { hsl: { h: 300, s: 42, l: 21 }, rgb: { r: 76, g: 31, b: 76 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 30,
  shadow: 75,
  style: 'dark',
  shade: { opacity: 20, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/aerial/index.js
const aerial = {
  name: 'Aerial',
  color: { range: { primary: { h: 200, s: 27 } }, contrast: { start: 11, end: 77 } },
  accent: { hsl: { h: 180, s: 100, l: 50 }, rgb: { r: 0, g: 255, b: 255 } },
  font: { display: { name: 'Unica One', weight: 400, style: 'normal' }, ui: { name: 'Inria Sans', weight: 400, style: 'normal' } },
  background: {
    type: 'video',
    color: { rgb: { r: 0, g: 0, b: 0 }, hsl: { h: 0, s: 0, l: 0 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 10, opacity: 60, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/videos/1626342605376.mp4?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 20, opacity: 80, vignette: { opacity: 70, start: 90, end: 25 } }
  },
  radius: 25,
  shadow: 50,
  style: 'dark',
  shade: { opacity: 2, blur: 0 },
  opacity: { general: 0 },
  layout: { divider: { size: 1 } },
  header: { color: { by: 'custom', opacity: 20, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 0 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/azure/index.js
const azure = {
  name: 'Azure',
  color: { range: { primary: { h: 215, s: 18 } }, contrast: { start: 13, end: 40 } },
  accent: { hsl: { h: 180, s: 100, l: 50 }, rgb: { r: 0, g: 255, b: 255 } },
  font: { display: { name: 'Unica One', weight: 400, style: 'normal' }, ui: { name: 'Inria Sans', weight: 400, style: 'normal' } },
  background: {
    type: 'gradient',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 180,
      start: { hsl: { h: 200, s: 46, l: 33 }, rgb: { r: 45, g: 97, b: 123 } },
      end: { hsl: { h: 212, s: 49, l: 9 }, rgb: { r: 12, g: 22, b: 34 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 25,
  shadow: 50,
  style: 'dark',
  shade: { opacity: 10, blur: 10 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 0 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/bean/index.js
const bean = {
  name: 'Bean',
  color: { range: { primary: { h: 191, s: 80 } }, contrast: { start: 7, end: 65 } },
  accent: { hsl: { h: 38, s: 100, l: 50 }, rgb: { r: 255, g: 160, b: 0 } },
  font: { display: { name: 'Life Savers', weight: 400, style: 'normal' }, ui: { name: 'Oswald', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 50,
  shadow: 175,
  style: 'dark',
  shade: { opacity: 10, blur: 0 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/black/index.js


const black = {
  name: 'Black',
  color: { range: { primary: { h: 0, s: 0 } }, contrast: { start: 0, end: 100 } },
  accent: { hsl: { h: 0, s: 0, l: 80 }, rgb: { r: 204, g: 204, b: 204 } },
  font: state.get.default().theme.font,
  background: state.get.default().theme.background,
  radius: state.get.default().theme.radius,
  shadow: state.get.default().theme.shadow,
  style: 'dark',
  shade: state.get.default().theme.shade,
  opacity: state.get.default().theme.opacity,
  layout: state.get.default().theme.layout,
  header: state.get.default().theme.header,
  bookmark: state.get.default().theme.bookmark,
  group: state.get.default().theme.group,
  toolbar: state.get.default().theme.toolbar
};

;// CONCATENATED MODULE: ./src/component/themePreset/comet/index.js
const comet = {
  name: 'Comet',
  color: { range: { primary: { h: 207, s: 87 } }, contrast: { start: 14, end: 83 } },
  accent: { hsl: { h: 300, s: 80, l: 63 }, rgb: { r: 236, g: 85, b: 236 } },
  font: { display: { name: 'Bungee Hairline', weight: 700, style: 'normal' }, ui: { name: 'Quicksand', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 145,
      start: { hsl: { h: 209, s: 100, l: 9 }, rgb: { r: 0, g: 24, b: 46 } },
      end: { hsl: { h: 207, s: 86, l: 27 }, rgb: { r: 10, g: 75, b: 128 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626783072074.jpeg?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 50, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 0,
  shadow: 125,
  style: 'dark',
  shade: { opacity: 15, blur: 0 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 0 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/corsair/index.js
const corsair = {
  name: 'Corsair',
  color: { range: { primary: { h: 217, s: 46 } }, contrast: { start: 18, end: 74 } },
  accent: { hsl: { h: 59, s: 100, l: 50 }, rgb: { r: 255, g: 251, b: 0 } },
  font: { display: { name: 'Alatsi', weight: 400, style: 'normal' }, ui: { name: 'Source Sans Pro', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 20,
  shadow: 150,
  style: 'dark',
  shade: { opacity: 30, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/dash/index.js
const dash = {
  name: 'Dash',
  color: { range: { primary: { h: 211, s: 10 } }, contrast: { start: 50, end: 100 } },
  accent: { hsl: { h: 342, s: 83, l: 40 }, rgb: { r: 187, g: 17, b: 68 } },
  font: { display: { name: 'Fredericka the Great', weight: 400, style: 'normal' }, ui: { name: 'Oswald', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 0,
  shadow: 0,
  style: 'light',
  shade: { opacity: 50, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/deco/index.js
const deco = {
  name: 'Deco',
  color: { range: { primary: { h: 184, s: 38 } }, contrast: { start: 22, end: 75 } },
  accent: { hsl: { h: 0, s: 100, l: 82 }, rgb: { r: 255, g: 161, b: 161 } },
  font: { display: { name: 'Poiret One', weight: 400, style: 'normal' }, ui: { name: 'Lato', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 200,
  shadow: 50,
  style: 'dark',
  shade: { opacity: 10, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/earthquake/index.js
const earthquake = {
  name: 'Earthquake',
  color: { range: { primary: { h: 0, s: 13 } }, contrast: { start: 15, end: 40 } },
  accent: { hsl: { h: 48, s: 100, l: 50 }, rgb: { r: 255, g: 204, b: 0 } },
  font: { display: { name: 'Tulpen One', weight: 400, style: 'normal' }, ui: { name: 'Barlow Condensed', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 80,
  shadow: 100,
  style: 'dark',
  shade: { opacity: 80, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/funkadelic/index.js
const funkadelic = {
  name: 'Funkadelic',
  color: { range: { primary: { h: 307, s: 100 } }, contrast: { start: 20, end: 70 } },
  accent: { hsl: { h: 60, s: 86, l: 53 }, rgb: { r: 238, g: 238, b: 34 } },
  font: { display: { name: 'Monoton', weight: 400, style: 'normal' }, ui: { name: 'Lato', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 120,
  shadow: 0,
  style: 'dark',
  shade: { opacity: 80, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/grimm/index.js
const grimm = {
  name: 'Grimm',
  color: { range: { primary: { h: 283, s: 7 } }, contrast: { start: 18, end: 45 } },
  accent: { hsl: { h: 144, s: 100, l: 50 }, rgb: { r: 0, g: 255, b: 102 } },
  font: { display: { name: 'Griffy', weight: 400, style: 'normal' }, ui: { name: 'Roboto Slab', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 100,
  shadow: 150,
  style: 'dark',
  shade: { opacity: 90, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/hive/index.js
const hive = {
  name: 'Hive',
  color: { range: { primary: { h: 37, s: 88 } }, contrast: { start: 33, end: 100 } },
  accent: { hsl: { h: 210, s: 60, l: 23 }, rgb: { r: 23, g: 59, b: 94 } },
  font: { display: { name: 'Kufam', weight: 400, style: 'normal' }, ui: { name: 'Inconsolata', weight: 400, style: 'normal' } },
  background: {
    type: 'video',
    color: { rgb: { r: 255, g: 255, b: 255 }, hsl: { h: 0, s: 0, l: 0 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { type: 'url', url: '', blur: 0, grayscale: 0, opacity: 100, scale: 100, accent: 0, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/videos/1627763800511.mp4?raw=true', blur: 0, grayscale: 0, opacity: 16, scale: 100, accent: 0, vignette: { opacity: 50, start: 90, end: 0 } }
  },
  radius: 25,
  shadow: 0,
  style: 'dark',
  shade: { opacity: 0, blur: 0 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'custom', opacity: 20, hsl: { h: 35, s: 100, l: 61 }, rgb: { r: 255, g: 172, b: 56 } }, item: { border: 1, opacity: 0 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/hypnos/index.js
const hypnos = {
  name: 'Hypnos',
  color: { range: { primary: { h: 243, s: 26 } }, contrast: { start: 15, end: 50 } },
  accent: { hsl: { h: 30, s: 100, l: 80 }, rgb: { r: 255, g: 204, b: 153 } },
  font: { display: { name: 'Shadows Into Light', weight: 100, style: 'normal' }, ui: { name: 'Fira Code', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1628356492462.jpeg?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 5, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 60,
  shadow: 25,
  style: 'dark',
  shade: { opacity: 20, blur: 0 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 40 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/infrared/index.js
const infrared = {
  name: 'Infrared',
  color: { range: { primary: { h: 359, s: 100 } }, contrast: { start: 12, end: 85 } },
  accent: { hsl: { h: 0, s: 100, l: 50 }, rgb: { r: 255, g: 0, b: 0 } },
  font: { display: { name: 'Bellota', weight: 400, style: 'normal' }, ui: { name: 'Lexend', weight: 400, style: 'normal' } },
  background: {
    type: 'video',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/videos/1626342620002.mp4?raw=true', blur: 0, grayscale: 100, scale: 100, accent: 50, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 25,
  shadow: 75,
  style: 'dark',
  shade: { opacity: 0, blur: 5 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 0 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/kapow/index.js
const kapow = {
  name: 'Kapow',
  color: { range: { primary: { h: 194, s: 77 } }, contrast: { start: 24, end: 54 } },
  accent: { hsl: { h: 115, s: 100, l: 50 }, rgb: { r: 21, g: 255, b: 0 } },
  font: { display: { name: 'Bangers', weight: 400, style: 'normal' }, ui: { name: 'Sniglet', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626516786268.jpeg?raw=true', blur: 0, grayscale: 100, scale: 100, accent: 0, opacity: 10, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 40,
  shadow: 100,
  style: 'dark',
  shade: { opacity: 40, blur: 4 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 1, opacity: 80 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/koto/index.js
const koto = {
  name: 'Koto',
  color: { range: { primary: { h: 231, s: 56 } }, contrast: { start: 13, end: 60 } },
  accent: { hsl: { h: 341, s: 100, l: 52 }, rgb: { r: 255, g: 12, b: 88 } },
  font: { display: { name: 'Dosis', weight: 200, style: 'normal' }, ui: { name: 'Montserrat', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626365116841.jpeg?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 20, opacity: 50, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 25,
  shadow: 50,
  style: 'dark',
  shade: { opacity: 0, blur: 10 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/lex/index.js
const lex = {
  name: 'Lex',
  color: { range: { primary: { h: 278, s: 73 } }, contrast: { start: 10, end: 60 } },
  accent: { hsl: { h: 160, s: 100, l: 50 }, rgb: { r: 0, g: 255, b: 170 } },
  font: { display: { name: 'Autour One', weight: 400, style: 'normal' }, ui: { name: 'Solway', weight: 400, style: 'normal' } },
  background: {
    type: 'gradient',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 0,
      start: { hsl: { h: 268, s: 72, l: 25 }, rgb: { r: 61, g: 18, b: 110 } },
      end: { hsl: { h: 299, s: 72, l: 25 }, rgb: { r: 108, g: 18, b: 110 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 10,
  shadow: 100,
  style: 'dark',
  shade: { opacity: 90, blur: 0 },
  opacity: { general: 30 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 30 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 30 } },
  group: { openAll: { opacity: 30 } },
  toolbar: { opacity: 30 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/macaroon/index.js
const macaroon = {
  name: 'Macaroon',
  color: { range: { primary: { h: 301, s: 28 } }, contrast: { start: 55, end: 80 } },
  accent: { hsl: { h: 241, s: 51, l: 62 }, rgb: { r: 110, g: 109, b: 208 } },
  font: { display: { name: 'Calistoga', weight: 400, style: 'normal' }, ui: { name: 'Source Sans Pro', weight: 400, style: 'normal' } },
  background: {
    type: 'video',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/videos/1626342625654.mp4?raw=true', blur: 0, grayscale: 90, scale: 100, accent: 0, opacity: 10, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 40,
  shadow: 50,
  style: 'light',
  shade: { opacity: 30, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/marker/index.js
const marker = {
  name: 'Marker',
  color: { range: { primary: { h: 0, s: 0 } }, contrast: { start: 56, end: 96 } },
  accent: { hsl: { h: 210, s: 33, l: 20 }, rgb: { r: 34, g: 51, b: 68 } },
  font: { display: { name: 'Permanent Marker', weight: 400, style: 'normal' }, ui: { name: 'Roboto Condensed', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626365108115.jpeg?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 25, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 30,
  shadow: 50,
  style: 'light',
  shade: { opacity: 30, blur: 0 },
  opacity: { general: 20 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 20 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 20 } },
  group: { openAll: { opacity: 20 } },
  toolbar: { opacity: 20 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/midnight/index.js
const midnight = {
  name: 'Midnight',
  color: { range: { primary: { h: 221, s: 40 } }, contrast: { start: 12, end: 50 } },
  accent: { hsl: { h: 236, s: 100, l: 50 }, rgb: { r: 0, g: 17, b: 255 } },
  font: { display: { name: 'Megrim', weight: 400, style: 'normal' }, ui: { name: 'Lato', weight: 400, style: 'normal' } },
  background: {
    type: 'video',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/videos/1626351787997.mp4?raw=true', blur: 0, grayscale: 100, scale: 100, accent: 15, opacity: 30, vignette: { opacity: 40, start: 90, end: 50 } }
  },
  radius: 50,
  shadow: 75,
  style: 'dark',
  shade: { opacity: 10, blur: 0 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/mint/index.js
const mint = {
  name: 'Mint',
  color: { range: { primary: { h: 157, s: 50 } }, contrast: { start: 12, end: 50 } },
  accent: { hsl: { h: 169, s: 100, l: 68 }, rgb: { r: 94, g: 255, b: 226 } },
  font: { display: { name: 'Unica One', weight: 400, style: 'normal' }, ui: { name: 'Montserrat', weight: 400, style: 'normal' } },
  background: {
    type: 'color',
    color: { hsl: { h: 154, s: 69, l: 32 }, rgb: { r: 25, g: 138, b: 89 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 80,
  shadow: 100,
  style: 'dark',
  shade: { opacity: 40, blur: 20 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/nighttab/index.js


const nighttab = {
  name: 'nightTab (default)',
  color: state.get.default().theme.color,
  accent: { hsl: state.get.default().theme.accent.hsl, rgb: state.get.default().theme.accent.rgb },
  font: state.get.default().theme.font,
  background: state.get.default().theme.background,
  radius: state.get.default().theme.radius,
  shadow: state.get.default().theme.shadow,
  style: state.get.default().theme.style,
  shade: state.get.default().theme.shade,
  opacity: state.get.default().theme.opacity,
  layout: state.get.default().theme.layout,
  header: state.get.default().theme.header,
  bookmark: state.get.default().theme.bookmark,
  group: state.get.default().theme.group,
  toolbar: state.get.default().theme.toolbar
};

;// CONCATENATED MODULE: ./src/component/themePreset/nord/index.js
const nord = {
  name: 'Nord',
  color: { range: { primary: { h: 220, s: 16 } }, contrast: { start: 15, end: 50 } },
  accent: { hsl: { h: 213, s: 32, l: 52 }, rgb: { r: 94, g: 129, b: 172 } },
  font: { display: { name: 'Rubik', weight: 400, style: 'normal' }, ui: { name: 'Inter', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 75,
  shadow: 100,
  style: 'dark',
  shade: { opacity: 10, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/obsidian/index.js
const obsidian = {
  name: 'Obsidian',
  color: { range: { primary: { h: 200, s: 10 } }, contrast: { start: 5, end: 50 } },
  accent: { hsl: { h: 180, s: 100, l: 50 }, rgb: { r: 0, g: 255, b: 255 } },
  font: { display: { name: 'Zilla Slab', weight: 700, style: 'normal' }, ui: { name: 'Montserrat', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 25,
  shadow: 200,
  style: 'dark',
  shade: { opacity: 50, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/origin/index.js
const origin = {
  name: 'Origin',
  color: { range: { primary: { h: 222, s: 14 } }, contrast: { start: 8, end: 88 } },
  accent: { hsl: { h: 30, s: 100, l: 50 }, rgb: { r: 255, g: 128, b: 0 } },
  font: { display: { name: 'Fira Sans', weight: 400, style: 'normal' }, ui: { name: 'Noto Sans', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626472271306.jpeg?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 20, vignette: { opacity: 20, start: 90, end: 40 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 50,
  shadow: 75,
  style: 'dark',
  shade: { opacity: 0, blur: 10 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 1, opacity: 0 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/outrun/index.js
const outrun = {
  name: 'Outrun',
  color: { range: { primary: { h: 227, s: 52 } }, contrast: { start: 20, end: 80 } },
  accent: { hsl: { h: 316, s: 100, l: 50 }, rgb: { r: 255, g: 0, b: 187 } },
  font: { display: { name: 'Major Mono Display', weight: 400, style: 'normal' }, ui: { name: 'Roboto Condensed', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626365114391.jpeg?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 60, opacity: 70, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 25,
  shadow: 0,
  style: 'dark',
  shade: { opacity: 70, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 1 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/pepper/index.js
const pepper = {
  name: 'Pepper',
  color: { range: { primary: { h: 0, s: 69 } }, contrast: { start: 15, end: 80 } },
  accent: { rgb: { r: 255, g: 150, b: 0 }, hsl: { h: 35, s: 100, l: 50 } },
  font: { display: { name: 'Big Shoulders Display', weight: 400, style: 'normal' }, ui: { name: 'Montserrat', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 30,
      start: { hsl: { h: 358, s: 100, l: 15 }, rgb: { r: 77, g: 0, b: 3 } },
      end: { hsl: { h: 9, s: 99, l: 40 }, rgb: { r: 203, g: 31, b: 1 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1628355202943.jpeg?raw=true', blur: 0, grayscale: 100, scale: 100, accent: 0, opacity: 15, vignette: { opacity: 25, start: 90, end: 35 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 60,
  shadow: 100,
  style: 'dark',
  shade: { opacity: 10, blur: 0 },
  opacity: { general: 25 },
  layout: { divider: { size: 1 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 25 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 25 } },
  group: { openAll: { opacity: 25 } },
  toolbar: { opacity: 25 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/pumpkin/index.js
const pumpkin = {
  name: 'Pumpkin',
  color: { range: { primary: { h: 198, s: 0 } }, contrast: { start: 10, end: 60 } },
  accent: { hsl: { h: 25, s: 86, l: 53 }, rgb: { r: 238, g: 119, b: 34 } },
  font: { display: { name: 'Girassol', weight: 400, style: 'normal' }, ui: { name: 'Muli', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 20,
  shadow: 100,
  style: 'dark',
  shade: { opacity: 10, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/replica/index.js
const replica = {
  name: 'Replica',
  color: { range: { primary: { h: 212, s: 23 } }, contrast: { start: 54, end: 100 } },
  accent: { hsl: { h: 210, s: 40, l: 30 }, rgb: { r: 51, g: 85, b: 119 } },
  font: { display: { name: 'Abel', weight: 400, style: 'normal' }, ui: { name: 'Raleway', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { rgb: { r: 255, g: 255, b: 255 }, hsl: { h: 0, s: 0, l: 0 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626366863277.jpeg?raw=true', blur: 0, grayscale: 0, opacity: 40, scale: 100, accent: 0, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, opacity: 50, scale: 100, accent: 0, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 0,
  shadow: 0,
  style: 'light',
  shade: { opacity: 50, blur: 5 },
  opacity: { general: 0 },
  layout: { divider: { size: 1 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 0 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/rumble/index.js
const rumble = {
  name: 'Rumble',
  color: { range: { primary: { h: 267, s: 10 } }, contrast: { start: 16, end: 40 } },
  accent: { hsl: { h: 340, s: 100, l: 38 }, rgb: { r: 196, g: 0, b: 66 } },
  font: { display: { name: 'Odibee Sans', weight: 400, style: 'normal' }, ui: { name: 'Roboto Condensed', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1628615254892.jpeg?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 12, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 75,
  shadow: 175,
  style: 'dark',
  shade: { opacity: 20, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 1 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 50 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 50 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/savage/index.js
const savage = {
  name: 'Savage',
  color: { range: { primary: { h: 35, s: 7 } }, contrast: { start: 5, end: 30 } },
  accent: { hsl: { h: 0, s: 100, l: 50 }, rgb: { r: 255, g: 0, b: 0 } },
  font: { display: { name: 'Metal Mania', weight: 400, style: 'normal' }, ui: { name: 'Lato', weight: 400, style: 'normal' } },
  background: {
    type: 'gradient',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 180,
      start: { hsl: { h: 30, s: 5, l: 7 }, rgb: { r: 20, g: 19, b: 18 } },
      end: { hsl: { h: 0, s: 100, l: 13 }, rgb: { r: 66, g: 0, b: 0 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 0,
  shadow: 250,
  style: 'dark',
  shade: { opacity: 80, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/scoria/index.js
const scoria = {
  name: 'Scoria',
  color: { range: { primary: { h: 338, s: 76 } }, contrast: { start: 20, end: 65 } },
  accent: { hsl: { h: 210, s: 80, l: 63 }, rgb: { r: 85, g: 161, b: 236 } },
  font: { display: { name: 'Zen Loop', weight: 400, style: 'normal' }, ui: { name: 'Montserrat', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 40, l: 17 }, rgb: { r: 26, g: 37, b: 61 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626775107287.jpeg?raw=true', blur: 4, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 60,
  shadow: 100,
  style: 'dark',
  shade: { opacity: 0, blur: 90 },
  opacity: { general: 80 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 80 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 80 } },
  group: { openAll: { opacity: 80 } },
  toolbar: { opacity: 80 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/snow/index.js
const snow = {
  name: 'Snow',
  color: { range: { primary: { h: 217, s: 46 } }, contrast: { start: 75, end: 95 } },
  accent: { hsl: { h: 191, s: 59, l: 82 }, rgb: { r: 181, g: 226, b: 236 } },
  font: { display: { name: 'Righteous', weight: 400, style: 'normal' }, ui: { name: 'Raleway', weight: 400, style: 'normal' } },
  background: {
    type: 'gradient',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 360,
      start: { hsl: { h: 286, s: 15, l: 96 }, rgb: { r: 246, g: 243, b: 246 } },
      end: { hsl: { h: 204, s: 52, l: 81 }, rgb: { r: 181, g: 212, b: 232 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 0,
  shadow: 25,
  style: 'light',
  shade: { opacity: 60, blur: 0 },
  opacity: { general: 80 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 80 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 2, opacity: 80 } },
  group: { openAll: { opacity: 80 } },
  toolbar: { opacity: 80 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/sol/index.js
const sol = {
  name: 'Sol',
  color: { range: { primary: { h: 52, s: 100 } }, contrast: { start: 0, end: 90 } },
  accent: { hsl: { h: 44, s: 100, l: 50 }, rgb: { r: 255, g: 185, b: 0 } },
  font: { display: { name: 'Fredoka One', weight: 400, style: 'normal' }, ui: { name: 'Muli', weight: 400, style: 'normal' } },
  background: {
    type: 'accent',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 50,
  shadow: 25,
  style: 'light',
  shade: { opacity: 60, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 10 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 10 } },
  toolbar: { opacity: 10 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/steel/index.js
const steel = {
  name: 'Steel',
  color: { range: { primary: { h: 214, s: 30 } }, contrast: { start: 20, end: 80 } },
  accent: { hsl: { h: 203, s: 33, l: 35 }, rgb: { r: 59, g: 95, b: 118 } },
  font: { display: { name: 'Abel', weight: 400, style: 'normal' }, ui: { name: 'Raleway', weight: 400, style: 'normal' } },
  background: {
    type: 'theme',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 30,
  shadow: 50,
  style: 'light',
  shade: { opacity: 70, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 100 } },
  toolbar: { opacity: 100 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/stria/index.js
const stria = {
  name: 'Stria',
  color: { range: { primary: { h: 305, s: 20 } }, contrast: { start: 20, end: 48 } },
  accent: { hsl: { h: 30, s: 80, l: 63 }, rgb: { r: 236, g: 161, b: 85 } },
  font: { display: { name: 'Gowun Batang', weight: 400, style: 'normal' }, ui: { name: '', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626366147967.jpeg?raw=true', blur: 0, grayscale: 52, scale: 100, accent: 0, opacity: 40, vignette: { opacity: 25, start: 90, end: 20 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 40,
  shadow: 30,
  style: 'dark',
  shade: { opacity: 0, blur: 10 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 50 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 50 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/terra/index.js
const terra = {
  name: 'Terra',
  color: { range: { primary: { h: 29, s: 28 } }, contrast: { start: 17, end: 83 } },
  accent: { hsl: { h: 270, s: 80, l: 37 }, rgb: { r: 94, g: 19, b: 170 } },
  font: { display: { name: 'Sansita Swashed', weight: 400, style: 'normal' }, ui: { name: '', weight: 400, style: 'normal' } },
  background: {
    type: 'gradient',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 180,
      start: { hsl: { h: 46, s: 52, l: 70 }, rgb: { r: 219, g: 200, b: 140 } },
      end: { hsl: { h: 342, s: 16, l: 52 }, rgb: { r: 152, g: 113, b: 125 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 75,
  shadow: 30,
  style: 'light',
  shade: { opacity: 4, blur: 4 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/trine/index.js
const trine = {
  name: 'Trine',
  color: { range: { primary: { h: 228, s: 71 } }, contrast: { start: 10, end: 60 } },
  accent: { hsl: { h: 180, s: 100, l: 50 }, rgb: { r: 0, g: 255, b: 255 } },
  font: { display: { name: 'Josefin Sans', weight: 300, style: 'normal' }, ui: { name: 'Roboto Slab', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626365111390.jpeg?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 30, vignette: { opacity: 50, start: 95, end: 60 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 50,
  shadow: 125,
  style: 'dark',
  shade: { opacity: 10, blur: 0 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 40 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } },
  group: { openAll: { opacity: 40 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/vanadium/index.js
const vanadium = {
  name: 'Vanadium',
  color: { range: { primary: { h: 218, s: 33 } }, contrast: { start: 15, end: 65 } },
  accent: { hsl: { h: 30, s: 100, l: 50 }, rgb: { r: 255, g: 128, b: 0 } },
  font: { display: { name: 'Grenze Gotisch', weight: 100, style: 'normal' }, ui: { name: 'Roboto', weight: 400, style: 'normal' } },
  background: {
    type: 'video',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/videos/1626342631982.mp4?raw=true', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 30, vignette: { opacity: 60, start: 90, end: 20 } }
  },
  radius: 25,
  shadow: 25,
  style: 'dark',
  shade: { opacity: 20, blur: 10 },
  opacity: { general: 100 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 40 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/viper/index.js
const viper = {
  name: 'Viper',
  color: { range: { primary: { h: 111, s: 34 } }, contrast: { start: 17, end: 90 } },
  accent: { hsl: { h: 173, s: 100, l: 25 }, rgb: { r: 0, g: 128, b: 113 } },
  font: { display: { name: 'Georama', weight: 500, style: 'normal' }, ui: { name: 'Lora', weight: 400, style: 'normal' } },
  background: {
    type: 'image',
    color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
    gradient: {
      angle: 160,
      start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
      end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
    },
    image: { url: 'https://github.com/zombieFox/nightTabAssets/blob/main/images/1626368964266.jpeg?raw=true', blur: 0, grayscale: 100, scale: 100, accent: 20, opacity: 22, vignette: { opacity: 0, start: 90, end: 70 } },
    video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100, vignette: { opacity: 0, start: 90, end: 70 } }
  },
  radius: 25,
  shadow: 75,
  style: 'light',
  shade: { opacity: 0, blur: 0 },
  opacity: { general: 0 },
  layout: { divider: { size: 0 } },
  header: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 0 } },
  bookmark: { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 0 } },
  group: { openAll: { opacity: 0 } },
  toolbar: { opacity: 0 }
};

;// CONCATENATED MODULE: ./src/component/themePreset/white/index.js


const white = {
  name: 'White',
  color: { range: { primary: { h: 0, s: 0 } }, contrast: { start: 0, end: 100 } },
  accent: { hsl: { h: 0, s: 0, l: 20 }, rgb: { r: 51, g: 51, b: 51 } },
  font: state.get.default().theme.font,
  background: state.get.default().theme.background,
  radius: state.get.default().theme.radius,
  shadow: state.get.default().theme.shadow,
  style: 'light',
  shade: state.get.default().theme.shade,
  opacity: state.get.default().theme.opacity,
  layout: state.get.default().theme.layout,
  header: state.get.default().theme.header,
  bookmark: state.get.default().theme.bookmark,
  group: state.get.default().theme.group,
  toolbar: state.get.default().theme.toolbar
};

;// CONCATENATED MODULE: ./src/component/themePreset/index.js













































const themePreset = {};

themePreset.get = () => {
  return [
    nighttab,
    black,
    white,
    acrid,
    aerial,
    azure,
    bean,
    comet,
    corsair,
    dash,
    deco,
    earthquake,
    funkadelic,
    grimm,
    hive,
    hypnos,
    infrared,
    kapow,
    koto,
    lex,
    macaroon,
    marker,
    midnight,
    mint,
    nord,
    obsidian,
    origin,
    outrun,
    pepper,
    pumpkin,
    replica,
    rumble,
    savage,
    scoria,
    snow,
    sol,
    steel,
    stria,
    terra,
    trine,
    vanadium,
    viper
  ];
};



;// CONCATENATED MODULE: ./src/component/accentPreset/index.js
const accentPreset = {};

accentPreset.get = () => {
  return [
    { name: 'Grey', prefix: 'Super extra light', type: 'grey', hsl: { h: 0, s: 0, l: 90 } },
    { name: 'Grey', prefix: 'Extra light', type: 'grey', hsl: { h: 0, s: 0, l: 77 } },
    { name: 'Grey', prefix: 'Light', type: 'grey', hsl: { h: 0, s: 0, l: 63 } },
    { name: 'Grey', prefix: false, type: 'grey', hsl: { h: 0, s: 0, l: 50 } },
    { name: 'Grey', prefix: 'Dark', type: 'grey', hsl: { h: 0, s: 0, l: 37 } },
    { name: 'Grey', prefix: 'Extra dark', type: 'grey', hsl: { h: 0, s: 0, l: 23 } },
    { name: 'Grey', prefix: 'Super extra dark', type: 'grey', hsl: { h: 0, s: 0, l: 10 } },
    { name: 'Red', prefix: 'Super extra light', type: 'primary', hsl: { h: 0, s: 40, l: 90 } },
    { name: 'Red', prefix: 'Extra light', type: 'primary', hsl: { h: 0, s: 60, l: 77 } },
    { name: 'Red', prefix: 'Light', type: 'primary', hsl: { h: 0, s: 80, l: 63 } },
    { name: 'Red', prefix: false, type: 'primary', hsl: { h: 0, s: 100, l: 50 } },
    { name: 'Red', prefix: 'Dark', type: 'primary', hsl: { h: 0, s: 80, l: 37 } },
    { name: 'Red', prefix: 'Extra dark', type: 'primary', hsl: { h: 0, s: 60, l: 23 } },
    { name: 'Red', prefix: 'Super extra dark', type: 'primary', hsl: { h: 0, s: 40, l: 10 } },
    { name: 'Orange', prefix: 'Super extra light', type: 'secondary', hsl: { h: 30, s: 40, l: 90 } },
    { name: 'Orange', prefix: 'Extra light', type: 'secondary', hsl: { h: 30, s: 60, l: 77 } },
    { name: 'Orange', prefix: 'Light', type: 'secondary', hsl: { h: 30, s: 80, l: 63 } },
    { name: 'Orange', prefix: false, type: 'secondary', hsl: { h: 30, s: 100, l: 50 } },
    { name: 'Orange', prefix: 'Dark', type: 'secondary', hsl: { h: 30, s: 80, l: 37 } },
    { name: 'Orange', prefix: 'Extra dark', type: 'secondary', hsl: { h: 30, s: 60, l: 23 } },
    { name: 'Orange', prefix: 'Super extra dark', type: 'secondary', hsl: { h: 30, s: 40, l: 10 } },
    { name: 'Yellow', prefix: 'Super extra light', type: 'primary', hsl: { h: 60, s: 40, l: 90 } },
    { name: 'Yellow', prefix: 'Extra light', type: 'primary', hsl: { h: 60, s: 60, l: 77 } },
    { name: 'Yellow', prefix: 'Light', type: 'primary', hsl: { h: 60, s: 80, l: 63 } },
    { name: 'Yellow', prefix: false, type: 'primary', hsl: { h: 60, s: 100, l: 50 } },
    { name: 'Yellow', prefix: 'Dark', type: 'primary', hsl: { h: 60, s: 80, l: 37 } },
    { name: 'Yellow', prefix: 'Extra dark', type: 'primary', hsl: { h: 60, s: 60, l: 23 } },
    { name: 'Yellow', prefix: 'Super extra dark', type: 'primary', hsl: { h: 60, s: 40, l: 10 } },
    { name: 'Lime', prefix: 'Super extra light', type: 'secondary', hsl: { h: 90, s: 40, l: 90 } },
    { name: 'Lime', prefix: 'Extra light', type: 'secondary', hsl: { h: 90, s: 60, l: 77 } },
    { name: 'Lime', prefix: 'Light', type: 'secondary', hsl: { h: 90, s: 80, l: 63 } },
    { name: 'Lime', prefix: false, type: 'secondary', hsl: { h: 90, s: 100, l: 50 } },
    { name: 'Lime', prefix: 'Dark', type: 'secondary', hsl: { h: 90, s: 80, l: 37 } },
    { name: 'Lime', prefix: 'Extra dark', type: 'secondary', hsl: { h: 90, s: 60, l: 23 } },
    { name: 'Lime', prefix: 'Super extra dark', type: 'secondary', hsl: { h: 90, s: 40, l: 10 } },
    { name: 'Green', prefix: 'Super extra light', type: 'primary', hsl: { h: 120, s: 40, l: 90 } },
    { name: 'Green', prefix: 'Extra light', type: 'primary', hsl: { h: 120, s: 60, l: 77 } },
    { name: 'Green', prefix: 'Light', type: 'primary', hsl: { h: 120, s: 80, l: 63 } },
    { name: 'Green', prefix: false, type: 'primary', hsl: { h: 120, s: 100, l: 50 } },
    { name: 'Green', prefix: 'Dark', type: 'primary', hsl: { h: 120, s: 80, l: 37 } },
    { name: 'Green', prefix: 'Extra dark', type: 'primary', hsl: { h: 120, s: 60, l: 23 } },
    { name: 'Green', prefix: 'Super extra dark', type: 'primary', hsl: { h: 120, s: 40, l: 10 } },
    { name: 'Aqua', prefix: 'Super extra light', type: 'secondary', hsl: { h: 150, s: 40, l: 90 } },
    { name: 'Aqua', prefix: 'Extra light', type: 'secondary', hsl: { h: 150, s: 60, l: 77 } },
    { name: 'Aqua', prefix: 'Light', type: 'secondary', hsl: { h: 150, s: 80, l: 63 } },
    { name: 'Aqua', prefix: false, type: 'secondary', hsl: { h: 150, s: 100, l: 50 } },
    { name: 'Aqua', prefix: 'Dark', type: 'secondary', hsl: { h: 150, s: 80, l: 37 } },
    { name: 'Aqua', prefix: 'Extra dark', type: 'secondary', hsl: { h: 150, s: 60, l: 23 } },
    { name: 'Aqua', prefix: 'Super extra dark', type: 'secondary', hsl: { h: 150, s: 40, l: 10 } },
    { name: 'Cyan', prefix: 'Super extra light', type: 'primary', hsl: { h: 180, s: 40, l: 90 } },
    { name: 'Cyan', prefix: 'Extra light', type: 'primary', hsl: { h: 180, s: 60, l: 77 } },
    { name: 'Cyan', prefix: 'Light', type: 'primary', hsl: { h: 180, s: 80, l: 63 } },
    { name: 'Cyan', prefix: false, type: 'primary', hsl: { h: 180, s: 100, l: 50 } },
    { name: 'Cyan', prefix: 'Dark', type: 'primary', hsl: { h: 180, s: 80, l: 37 } },
    { name: 'Cyan', prefix: 'Extra dark', type: 'primary', hsl: { h: 180, s: 60, l: 23 } },
    { name: 'Cyan', prefix: 'Super extra dark', type: 'primary', hsl: { h: 180, s: 40, l: 10 } },
    { name: 'Teal', prefix: 'Super extra light', type: 'secondary', hsl: { h: 210, s: 40, l: 90 } },
    { name: 'Teal', prefix: 'Extra light', type: 'secondary', hsl: { h: 210, s: 60, l: 77 } },
    { name: 'Teal', prefix: 'Light', type: 'secondary', hsl: { h: 210, s: 80, l: 63 } },
    { name: 'Teal', prefix: false, type: 'secondary', hsl: { h: 210, s: 100, l: 50 } },
    { name: 'Teal', prefix: 'Dark', type: 'secondary', hsl: { h: 210, s: 80, l: 37 } },
    { name: 'Teal', prefix: 'Extra dark', type: 'secondary', hsl: { h: 210, s: 60, l: 23 } },
    { name: 'Teal', prefix: 'Super extra dark', type: 'secondary', hsl: { h: 210, s: 40, l: 10 } },
    { name: 'Blue', prefix: 'Super extra light', type: 'primary', hsl: { h: 240, s: 40, l: 90 } },
    { name: 'Blue', prefix: 'Extra light', type: 'primary', hsl: { h: 240, s: 60, l: 77 } },
    { name: 'Blue', prefix: 'Light', type: 'primary', hsl: { h: 240, s: 80, l: 63 } },
    { name: 'Blue', prefix: false, type: 'primary', hsl: { h: 240, s: 100, l: 50 } },
    { name: 'Blue', prefix: 'Dark', type: 'primary', hsl: { h: 240, s: 80, l: 37 } },
    { name: 'Blue', prefix: 'Extra dark', type: 'primary', hsl: { h: 240, s: 60, l: 23 } },
    { name: 'Blue', prefix: 'Super extra dark', type: 'primary', hsl: { h: 240, s: 40, l: 10 } },
    { name: 'Purple', prefix: 'Super extra light', type: 'secondary', hsl: { h: 270, s: 40, l: 90 } },
    { name: 'Purple', prefix: 'Extra light', type: 'secondary', hsl: { h: 270, s: 60, l: 77 } },
    { name: 'Purple', prefix: 'Light', type: 'secondary', hsl: { h: 270, s: 80, l: 63 } },
    { name: 'Purple', prefix: false, type: 'secondary', hsl: { h: 270, s: 100, l: 50 } },
    { name: 'Purple', prefix: 'Dark', type: 'secondary', hsl: { h: 270, s: 80, l: 37 } },
    { name: 'Purple', prefix: 'Extra dark', type: 'secondary', hsl: { h: 270, s: 60, l: 23 } },
    { name: 'Purple', prefix: 'Super extra dark', type: 'secondary', hsl: { h: 270, s: 40, l: 10 } },
    { name: 'Magenta', prefix: 'Super extra light', type: 'primary', hsl: { h: 300, s: 40, l: 90 } },
    { name: 'Magenta', prefix: 'Extra light', type: 'primary', hsl: { h: 300, s: 60, l: 77 } },
    { name: 'Magenta', prefix: 'Light', type: 'primary', hsl: { h: 300, s: 80, l: 63 } },
    { name: 'Magenta', prefix: false, type: 'primary', hsl: { h: 300, s: 100, l: 50 } },
    { name: 'Magenta', prefix: 'Dark', type: 'primary', hsl: { h: 300, s: 80, l: 37 } },
    { name: 'Magenta', prefix: 'Extra dark', type: 'primary', hsl: { h: 300, s: 60, l: 23 } },
    { name: 'Magenta', prefix: 'Super extra dark', type: 'primary', hsl: { h: 300, s: 40, l: 10 } },
    { name: 'Fuchsia', prefix: 'Super extra light', type: 'secondary', hsl: { h: 330, s: 40, l: 90 } },
    { name: 'Fuchsia', prefix: 'Extra light', type: 'secondary', hsl: { h: 330, s: 60, l: 77 } },
    { name: 'Fuchsia', prefix: 'Light', type: 'secondary', hsl: { h: 330, s: 80, l: 63 } },
    { name: 'Fuchsia', prefix: false, type: 'secondary', hsl: { h: 330, s: 100, l: 50 } },
    { name: 'Fuchsia', prefix: 'Dark', type: 'secondary', hsl: { h: 330, s: 80, l: 37 } },
    { name: 'Fuchsia', prefix: 'Extra dark', type: 'secondary', hsl: { h: 330, s: 60, l: 23 } },
    { name: 'Fuchsia', prefix: 'Super extra dark', type: 'secondary', hsl: { h: 330, s: 40, l: 10 } },
  ];
};



;// CONCATENATED MODULE: ./src/component/control/helperText/index.js















const Control_helperText = function({
  text = []
} = {}) {

  this.para = [];

  text.forEach((item, i) => {
    this.para.push(helper_helper({
      tag: 'p',
      text: item
    }));
  });

  this.wrap = () => {
    const formWrap = wrap_wrap();

    this.para.forEach((item, i) => {
      formWrap.appendChild(item);
    });

    return formWrap;
  };

  this.disable = () => {
    this.para.forEach((item, i) => {
      item.classList.add('disabled');
    });
  };

  this.enable = () => {
    this.para.forEach((item, i) => {
      item.classList.remove('disabled');
    });
  };

};
;// CONCATENATED MODULE: ./src/component/control/inputButton/index.js















const Control_inputButton = function({
  object = {},
  path = false,
  id = 'name',
  classList = [],
  inputButtonClassList = [],
  type = false,
  inputHide = false,
  labelText = 'Name',
  srOnly = false,
  inputButtonStyle = [],
  action = false
} = {}) {

  this.input;

  switch (type) {
    case 'file':
      this.input = file_file({
        id: id,
        func: () => {
          if (action) {
            action();
          };
        }
      });

      break;

    case 'color':
      this.input = color_color({
        id: id,
        value: convertColor.rgb.hex(get({
          object: object,
          path: path + '.rgb'
        })),
        classList: classList,
        func: () => {
          if (path) {
            set({
              object: object,
              path: path + '.rgb',
              value: convertColor.hex.rgb(this.input.value)
            });
            set({
              object: object,
              path: path + '.hsl',
              value: convertColor.rgb.hsl(get({
                object: object,
                path: path + '.rgb'
              }))
            });
          };
          if (action) {
            action();
          };
        }
      });

      break;

  };

  this.label = label_label({
    text: labelText,
    forInput: id
  });

  this.button = inputButton_inputButton({
    style: inputButtonStyle,
    inputHide: inputHide,
    srOnly: srOnly
  });

  this.inputButtonStyle = {};

  this.inputButtonStyle.add = (inputButtonStyle) => {

    if (inputButtonStyle) {
      if (inputButtonStyle.length > 0) {

        inputButtonStyle.forEach((item, i) => {

          switch (item) {
            case 'link':
              this.button.classList.add('form-input-button-link');
              break;

            case 'line':
              this.button.classList.add('form-input-button-line');
              break;

            case 'ring':
              this.button.classList.add('form-input-button-ring');
              break;

            case 'dot':
              this.button.classList.add('input-color-dot');
              break;
          };

        });

      };
    };

  };

  this.inputButtonStyle.remove = () => {

    this.button.classList.remove('form-input-button-link');

    this.button.classList.remove('form-input-button-line');

    this.button.classList.remove('form-input-button-ring');

    this.button.classList.remove('input-color-dot');

  };

  this.inputButtonStyle.update = (inputButtonStyle) => {

    this.inputButtonStyle.remove();

    this.inputButtonStyle.add(inputButtonStyle);

  };

  this.inputButtonStyle.add(inputButtonStyle);

  if (inputButtonClassList.length > 0) {

    inputButtonClassList.forEach((item, i) => {
      this.button.classList.add(item);
    });

  };

  this.button.appendChild(this.input);

  this.button.appendChild(this.label);

  this.update = () => {
    switch (type) {
      case 'color':
        this.input.value = convertColor.rgb.hex(get({
          object: object,
          path: path + '.rgb'
        }));

        break;
    };
  };

  this.wrap = () => {
    return wrap_wrap({
      children: [
        this.button
      ]
    })
  };

  this.disable = () => {
    this.label.classList.add('disabled');
    this.input.disabled = true;
  };

  this.enable = () => {
    this.label.classList.remove('disabled');
    this.input.disabled = false;
  };

};

;// CONCATENATED MODULE: ./src/component/control/groupText/index.js
















const Control_groupText = function({
  text = false,
  classList = []
} = {}) {

  this.groupText = groupText_groupText({
    text: text,
    classList: classList
  });

  this.update = (content) => {

    clearChildNode(this.groupText);

    if (typeof content === 'string' && isValidString(content)) {
      this.groupText.textContent = content;
    } else if (content && content != '') {
      this.groupText.appendChild(content);
    };
  };

  this.wrap = () => {
    return wrap_wrap({
      children: [
        this.groupText
      ]
    })
  };

  this.disable = () => {
    this.groupText.classList.add('disabled');
  };

  this.enable = () => {
    this.groupText.classList.remove('disabled');
  };

};

;// CONCATENATED MODULE: ./src/component/control/radio/index.js















const Control_radio = function({
  radioGroup = [],
  object = {},
  label = false,
  groupName = 'group',
  path = false,
  action = false,
  inputButton = false,
  inputHide = false,
  inputButtonStyle = false
} = {}) {

  this.radioSet = [];

  const radioGroupName = groupName;

  const radioGroupPath = path;

  this.label = label;

  if (label) {
    this.label = label_label({
      text: label,
      noPadding: true
    });
  };

  if (radioGroup.length > 0) {
    radioGroup.forEach((item, i) => {
      const radioAndLabel = {
        radio: radio_radio({
          id: item.id,
          radioGroup: radioGroupName,
          value: item.value,
          checked: (get({ object: object, path: radioGroupPath }) === item.value),
          func: () => {

            set({ object: object, path: radioGroupPath, value: item.value });

            if (action) { action(); };

          }
        }),
        label: label_label({
          forInput: item.id,
          text: item.labelText,
          description: item.description,
          icon: true
        }),
        wrap: () => {
          return wrap_wrap({
            children: [
              radioAndLabel.radio,
              radioAndLabel.label
            ]
          });
        },
        inputButton: () => {
          return inputButton_inputButton({
            inputButton: inputButton,
            inputHide: inputHide,
            style: inputButtonStyle,
            children: [
              radioAndLabel.radio,
              radioAndLabel.label
            ]
          });
        }
      };

      radioAndLabel.radio.update = () => {
        radioAndLabel.radio.checked = (get({ object: object, path: radioGroupPath }) === item.value);
      };

      radioAndLabel.radio.disable = () => {
        radioAndLabel.radio.disabled = true;
      };

      radioAndLabel.radio.enable = () => {
        radioAndLabel.radio.disabled = false;
      };

      this.radioSet.push(radioAndLabel);
    });
  };

  this.value = () => {

    let currentSelectedRadio = false;

    this.radioSet.forEach((item, i) => {
      if (item.radio.checked) {
        currentSelectedRadio = item.radio.value;
      };
    });

    return currentSelectedRadio;

  };

  this.update = () => {

    this.radioSet.forEach((item, i) => {
      item.radio.update();
    });

  };

  this.wrap = () => {

    const wrap = wrap_wrap();

    if (label) {
      wrap.appendChild(
        wrap_wrap({
          children: [
            this.label
          ]
        })
      );
    };

    this.radioSet.forEach((item, i) => {
      wrap.appendChild(
        item.wrap()
      );
    });

    return wrap;

  };

  this.inputButton = ({
    inputHide = false
  } = {}) => {

    const wrap = wrap_wrap();

    const group = group_group();

    this.radioSet.forEach((item, i) => {
      group.appendChild(
        item.inputButton()
      );
    });

    wrap.appendChild(group);

    return wrap;

  };

  this.inline = () => {

    const formWrap = wrap_wrap();

    const formInline = inline_inline({
      gap: 'large',
      wrap: true
    });

    this.radioSet.forEach((item, i) => {
      formInline.appendChild(
        wrap_wrap({
          children: [
            item.radio,
            item.label
          ]
        })
      );
    });

    formWrap.appendChild(formInline);

    return formWrap;

  };

  this.disable = () => {
    this.radioSet.forEach((item, i) => {
      item.radio.disable();
    });

    if (label) {
      this.label.classList.add('disabled');
    };
  };

  this.enable = () => {
    this.radioSet.forEach((item, i) => {
      item.radio.enable();
    });

    if (label) {
      this.label.classList.remove('disabled');
    };
  };

};

;// CONCATENATED MODULE: ./src/component/control/radioGrid/index.js















const Control_radioGrid = function({
  radioGroup = [],
  label = false,
  object = {},
  groupName = 'group',
  path = false,
  gridSize = '3x3',
  action = false
} = {}) {

  this.radioSet = [];

  const radioGroupName = groupName;

  const radioGroupPath = path;

  const gridElement = grid_grid();

  this.label = false;

  if (label) {
    this.label = label_label({
      text: label
    });
  };

  if (radioGroup.length > 0) {
    radioGroup.forEach((item, i) => {
      const radioAndLabel = {};

      radioAndLabel.position = item.position;

      radioAndLabel.radio = radio_radio({
        id: item.id,
        radioGroup: radioGroupName,
        value: item.value,
        checked: (get({ object: object, path: radioGroupPath, }) === item.value),
        func: () => {

          set({ object: object, path: radioGroupPath, value: item.value });

          if (action) { action(); };

        }
      });

      radioAndLabel.label = label_label({
        forInput: item.id,
        text: item.labelText,
        description: item.description,
        srOnly: true,
        icon: true
      });

      radioAndLabel.wrap = () => {
        return wrap_wrap({
          children: [
            radioAndLabel.radio,
            radioAndLabel.label
          ]
        });
      };

      radioAndLabel.radio.update = () => {

        radioAndLabel.radio.checked = (get({ object: object, path: radioGroupPath }) === item.value);

      };

      radioAndLabel.radio.disable = () => {
        radioAndLabel.radio.disabled = true;
      };

      radioAndLabel.radio.enable = () => {
        radioAndLabel.radio.disabled = false;
      };

      this.radioSet.push(radioAndLabel);
    });
  };

  this.value = () => {
    let currentSelectedRadio = false;

    this.radioSet.forEach((item, i) => {
      if (item.radio.checked) {
        currentSelectedRadio = item.radio.value;
      };
    });

    return currentSelectedRadio;
  };

  this.update = () => {
    this.radioSet.forEach((item, i) => {
      item.radio.update();
    });
  };

  this.wrap = () => {
    const wrap = wrap_wrap();

    switch (gridSize) {
      case '3x3':
        gridElement.classList.add('form-grid-3x3');
        break;

      case '3x1':
        gridElement.classList.add('form-grid-3x1');
        break;

      case '1x3':
        gridElement.classList.add('form-grid-1x3');
        break;

      case '2x2':
        gridElement.classList.add('form-grid-2x2');
        break;
    };

    this.radioSet.forEach((item, i) => {
      const wrap = wrap_wrap({
        children: [
          item.radio,
          item.label
        ]
      });

      wrap.style.setProperty('--form-grid-cell', 'cell-' + item.position);

      gridElement.appendChild(wrap);
    });

    if (label) {
      wrap.appendChild(this.label);
    };

    wrap.appendChild(gridElement);

    return wrap;
  };

  this.disable = () => {
    this.radioSet.forEach((item, i) => {
      item.radio.disable();
    });

    gridElement.classList.add('disabled');

    if (label) {
      this.label.classList.add('disabled');
    };
  };

  this.enable = () => {
    this.radioSet.forEach((item, i) => {
      item.radio.enable();
    });

    gridElement.classList.remove('disabled');

    if (label) {
      this.label.classList.remove('disabled');
    };
  };

};

;// CONCATENATED MODULE: ./src/component/control/checkbox/index.js















const Control_checkbox = function({
  object = {},
  id = 'name',
  path = false,
  labelText = 'name',
  description = false,
  action = false,
  inputButton = false,
  inputHide = false,
  inputButtonStyle = false
} = {}) {

  this.checkbox = checkbox_checkbox({
    id: id,
    checked: get({ object: object, path: path }),
    func: () => {

      set({ object: object, path: path, value: this.checkbox.checked });

      if (action) { action(); };

    }
  });

  this.label = label_label({
    forInput: id,
    text: labelText,
    description: description,
    icon: true
  });

  this.update = () => {
    this.checkbox.checked = get({ object: object, path: path });
  };

  this.checked = () => {

    return get({ object: object, path: path });

  };

  this.wrap = () => {

    return wrap_wrap({
      children: [
        this.checkbox,
        this.label
      ]
    });

  };

  this.disable = () => {
    this.checkbox.disabled = true;
  };

  this.enable = () => {
    this.checkbox.disabled = false;
  };

};

;// CONCATENATED MODULE: ./src/utility/minMax.js
const minMax = ({
  min = 0,
  max = 0,
  value = 0
} = {}) => {

  if (value > max) {

    return max;

  } else if (value < min) {

    return min;

  } else if (isNaN(value)) {

    return min;

  } else {

    return value;

  };

};

;// CONCATENATED MODULE: ./src/component/control/slider/index.js
















const Control_slider = function({
  object = {},
  path = false,
  id = 'name',
  labelText = 'Name',
  hue = false,
  value = 0,
  defaultValue = false,
  min = 0,
  max = 100,
  step = 1,
  action = false,
  focusAction = false,
  blurAction = false,
  sliderAction = false,
  numberAction = false,
  resetAction = false,
  mouseDownAction = false,
  mouseUpAction = false
} = {}) {

  this.label = label_label({
    forInput: id,
    text: labelText
  });

  const classList = [];

  if (hue) {
    classList.push('input-range-hue-spectrum');
  };

  this.range = range_range({
    id: id,
    value: value,
    min: min,
    max: max,
    step: step,
    classList: classList,
    func: () => {

      if (path) {

        set({ object: object, path: path, value: this.value() });

      };

      if (action) { action(); };

      if (sliderAction) { sliderAction(); };

      this.number.value = get({ object: object, path: path });

    },
    focusFunc: focusAction,
    blurFunc: blurAction,
    mouseDownFunc: mouseDownAction,
    mouseUpFunc: mouseUpAction
  });

  this.number = number_number({
    value: value,
    min: min,
    max: max,
    classList: ['form-group-item-small'],
    func: () => {

      if (path) {

        set({
          object: object,
          path: path,
          value: minMax({
            value: parseInt(this.number.value, 10),
            min: min,
            max: max
          })
        });

      };

      if (action) { action(); };

      if (numberAction) { numberAction(); };

      this.update({ delay: true });

    }
  });

  this.reset = new Button({
    text: false,
    iconName: 'replay',
    style: ['line'],
    classList: ['form-group-item-small'],
    func: () => {

      set({
        object: object,
        path: path,
        value: JSON.parse(JSON.stringify(defaultValue))
      });

      this.update();

      if (action) { action(); };

      if (resetAction) { resetAction(); };

    }
  });

  this.update = ({
    delay = false
  } = {}) => {

    let delayedUpdate = null;

    const updateControl = () => {
      this.range.value = get({ object: object, path: path });
      this.number.value = get({ object: object, path: path });
    };

    if (delay) {
      clearTimeout(delayedUpdate);
      delayedUpdate = setTimeout(updateControl, 2000);
    } else {
      updateControl();
    };

  };

  this.value = () => {
    return parseInt(this.range.value, 10);
  };

  this.wrap = () => {
    const formGroup = group_group({
      children: [
        this.number
      ]
    });

    if (defaultValue || (typeof defaultValue === 'number' && defaultValue === 0)) {
      formGroup.appendChild(this.reset.button);
    };

    const formInline = inline_inline({
      block: true,
      gap: 'small',
      children: [
        this.range,
        formGroup
      ]
    });

    const wrap = wrap_wrap({
      children: [
        this.label,
        formInline
      ]
    });

    return wrap;
  };

  this.disable = () => {
    this.label.classList.add('disabled');
    this.range.disabled = true;
    this.number.disabled = true;
    this.reset.disable();
  };

  this.enable = () => {
    this.label.classList.remove('disabled');
    this.range.disabled = false;
    this.number.disabled = false;
    this.reset.enable();
  };

};

;// CONCATENATED MODULE: ./src/component/control/sliderSlim/index.js
















const Control_sliderSlim = function({
  object = {},
  path = false,
  id = 'name',
  labelText = 'Name',
  hue = false,
  value = 0,
  defaultValue = false,
  min = 0,
  max = 100,
  step = 1,
  action = false,
  focusAction = false,
  blurAction = false,
  sliderAction = false,
  numberAction = false,
  resetAction = false,
  mouseDownAction = false,
  mouseUpAction = false
} = {}) {

  this.label = label_label({
    forInput: id,
    text: labelText,
    noPadding: true,
    classList: ['form-group-text', 'form-group-text-left', 'form-group-text-transparent', 'form-group-text-borderless', 'form-group-item-medium', ]
  });

  const classList = ['form-group-item-grow'];

  if (hue) {
    classList.push('input-range-hue-spectrum');
  };

  this.range = range_range({
    id: id,
    value: value,
    min: min,
    max: max,
    step: step,
    classList: classList,
    func: () => {

      if (path) {

        set({ object: object, path: path, value: this.value() });

      };

      if (action) { action(); };

      if (sliderAction) { sliderAction(); };

      this.number.value = get({ object: object, path: path });

    },
    focusFunc: focusAction,
    blurFunc: blurAction,
    mouseDownFunc: mouseDownAction,
    mouseUpFunc: mouseUpAction
  });

  this.number = number_number({
    value: value,
    min: min,
    max: max,
    classList: ['form-group-item-small'],
    func: () => {

      if (path) {

        set({
          object: object,
          path: path,
          value: minMax({
            value: parseInt(this.number.value, 10),
            min: min,
            max: max
          })
        });

      };

      if (action) { action(); };

      if (numberAction) { numberAction(); };

      this.update({ delay: true });

    }
  });

  this.reset = new Button({
    text: false,
    iconName: 'replay',
    style: ['line'],
    classList: ['form-group-item-small'],
    func: () => {

      set({
        object: object,
        path: path,
        value: JSON.parse(JSON.stringify(defaultValue))
      });

      this.update();

      if (action) { action(); };

      if (resetAction) { resetAction(); };

    }
  });

  this.update = ({
    delay = false
  } = {}) => {

    let delayedUpdate = null;

    const updateControl = () => {
      this.range.value = get({ object: object, path: path });
      this.number.value = get({ object: object, path: path });
    };

    if (delay) {
      clearTimeout(delayedUpdate);
      delayedUpdate = setTimeout(updateControl, 2000);
    } else {
      updateControl();
    };

  };

  this.value = () => {
    return parseInt(this.range.value, 10);
  };

  this.wrap = () => {
    const formGroup = group_group({
      children: [
        this.number
      ]
    });

    if (defaultValue || (typeof defaultValue === 'number' && defaultValue === 0)) {
      formGroup.appendChild(this.reset.button);
    };

    const formInline = inline_inline({
      block: true,
      gap: 'small',
      children: [
        this.label,
        this.range,
        formGroup
      ]
    });

    const wrap = wrap_wrap({
      children: [
        formInline
      ]
    });

    return wrap;
  };

  this.disable = () => {
    this.label.classList.add('disabled');
    this.range.disabled = true;
    this.number.disabled = true;
    this.reset.disable();
  };

  this.enable = () => {
    this.label.classList.remove('disabled');
    this.range.disabled = false;
    this.number.disabled = false;
    this.reset.enable();
  };

};

;// CONCATENATED MODULE: ./src/component/control/color/index.js















const Control_color = function({
  object = {},
  path = false,
  id = 'name',
  labelText = 'Name',
  srOnly = false,
  value = '#000000',
  defaultValue = false,
  action = false,
  extraButtons = []
} = {}) {

  this.label = label_label({
    forInput: id,
    text: labelText,
    srOnly: srOnly
  });

  this.color = color_color({
    id: id,
    value: convertColor.rgb.hex(get({
      object: object,
      path: path + '.rgb'
    })),
    classList: ['form-group-item-half'],
    func: () => {

      if (path) {

        set({ object: object, path: path + '.rgb', value: convertColor.hex.rgb(this.color.value) });

        set({
          object: object,
          path: path + '.hsl',
          value: convertColor.rgb.hsl(get({
            object: object,
            path: path + '.rgb'
          }))
        });

      };

      if (action) { action(); };

      this.text.value = convertColor.rgb.hex(get({ object: object, path: path + '.rgb' }));

    }
  });

  this.text = text_text({
    value: convertColor.rgb.hex(get({
      object: object,
      path: path + '.rgb'
    })),
    max: 7,
    classList: ['form-group-item-half'],
    placeholder: 'Hex code',
    func: () => {

      if (path) {

        set({ object: object, path: path + '.rgb', value: convertColor.hex.rgb(this.text.value) });

      };

      if (action) { action(); };

      this.update({ delay: true });

    }
  });

  this.reset = new Button({
    text: false,
    iconName: 'replay',
    style: ['line'],
    classList: ['form-group-item-small'],
    func: () => {

      set({ object: object, path: path + '.rgb', value: JSON.parse(JSON.stringify(defaultValue)) });

      this.update({ all: true });

      if (action) { action(); };

    }
  });

  this.update = ({
    delay = false,
    all = false
  } = {}) => {

    let delayedUpdate = null;

    const updateControl = () => {

      this.color.value = convertColor.rgb.hex(get({
        object: object,
        path: path + '.rgb'
      }));

      if (all) {
        this.text.value = convertColor.rgb.hex(get({
          object: object,
          path: path + '.rgb'
        }));
      };

    };

    if (delay) {
      clearTimeout(delayedUpdate);
      delayedUpdate = setTimeout(updateControl, 2000);
    } else {
      updateControl();
    };

  };

  this.wrap = () => {

    const formGroup = group_group({
      block: true,
      children: [
        this.color,
        this.text
      ]
    });

    if (defaultValue || (typeof defaultValue === 'number' && defaultValue === 0)) {
      formGroup.appendChild(this.reset.button);
    };

    if (extraButtons.length > 0) {
      extraButtons.forEach((item, i) => {
        formGroup.appendChild(item.button);
      });
    };

    const wrap = wrap_wrap({
      children: [
        this.label,
        formGroup
      ]
    });

    return wrap;

  };

  this.disable = () => {
    this.label.classList.add('disabled');
    this.color.disabled = true;
    this.text.disabled = true;
    this.reset.disable();

    if (extraButtons.length > 0) {
      extraButtons.forEach((item, i) => {
        item.disable();
      });
    };
  };

  this.enable = () => {
    this.label.classList.remove('disabled');
    this.color.disabled = false;
    this.text.disabled = false;
    this.reset.enable();

    if (extraButtons.length > 0) {
      extraButtons.forEach((item, i) => {
        item.enable();
      });
    };
  };

};

;// CONCATENATED MODULE: ./src/component/control/colorMixer/index.js


















const Control_colorMixer = function({
  object = {},
  path = false,
  defaultValue = false,
  minMaxObject = false,
  id = 'name',
  labelText = 'name',
  srOnly = false,
  action = false
} = {}) {

  this.moreControlsToggle = new Button({
    text: false,
    iconName: 'arrowKeyboardDown',
    style: ['line'],
    classList: ['collapse-toggle', 'form-group-item-small'],
    func: () => {
      this.moreControlsCollapse.toggle();
      this.moreControlsUpdate();
    }
  });

  this.color = new Control_color({
    object: object,
    path: path,
    id: id + '-rgb',
    labelText: labelText,
    srOnly: srOnly,
    value: get({ object: object, path: path + '.rgb' }),
    defaultValue: defaultValue,
    extraButtons: [this.moreControlsToggle],
    action: () => {
      set({
        object: object,
        path: path + '.hsl',
        value: convertColor.rgb.hsl(get({ object: object, path: path + '.rgb' }))
      });
      this.colorSliderR.update();
      this.colorSliderG.update();
      this.colorSliderB.update();
      this.colorSliderH.update();
      this.colorSliderS.update();
      this.colorSliderL.update();
      if (action) {
        action();
      };
    }
  });

  this.colorSliderH = new Control_sliderSlim({
    object: object,
    path: path + '.hsl.h',
    id: id + '-hsl-h',
    labelText: 'Hue',
    value: get({ object: object, path: path + '.hsl.h' }),
    min: get({ object: minMaxObject, path: path + '.hsl.h.min' }),
    max: get({ object: minMaxObject, path: path + '.hsl.h.max' }),
    action: () => {
      set({
        object: object,
        path: path + '.rgb',
        value: convertColor.hsl.rgb(get({ object: object, path: path + '.hsl' }))
      });
      this.color.update({ all: true });
      this.colorSliderR.update();
      this.colorSliderG.update();
      this.colorSliderB.update();
      this.colorSliderS.update();
      this.colorSliderL.update();
      if (action) {
        action();
      };
    }
  });

  this.colorSliderS = new Control_sliderSlim({
    object: object,
    path: path + '.hsl.s',
    id: id + '-hsl-s',
    labelText: 'Saturation',
    value: get({ object: object, path: path + '.hsl.s' }),
    min: get({ object: minMaxObject, path: path + '.hsl.s.min' }),
    max: get({ object: minMaxObject, path: path + '.hsl.s.max' }),
    action: () => {
      set({
        object: object,
        path: path + '.rgb',
        value: convertColor.hsl.rgb(get({ object: object, path: path + '.hsl' }))
      });
      this.color.update({ all: true });
      this.colorSliderR.update();
      this.colorSliderG.update();
      this.colorSliderB.update();
      this.colorSliderH.update();
      this.colorSliderL.update();
      if (action) {
        action();
      };
    }
  });

  this.colorSliderL = new Control_sliderSlim({
    object: object,
    path: path + '.hsl.l',
    id: id + '-hsl-l',
    labelText: 'Lightness',
    value: get({ object: object, path: path + '.hsl.l' }),
    min: get({ object: minMaxObject, path: path + '.hsl.l.min' }),
    max: get({ object: minMaxObject, path: path + '.hsl.l.max' }),
    action: () => {
      set({
        object: object,
        path: path + '.rgb',
        value: convertColor.hsl.rgb(get({ object: object, path: path + '.hsl' }))
      });
      this.color.update({ all: true });
      this.colorSliderR.update();
      this.colorSliderG.update();
      this.colorSliderB.update();
      this.colorSliderH.update();
      this.colorSliderS.update();
      if (action) {
        action();
      };
    }
  });

  this.colorSliderR = new Control_sliderSlim({
    object: object,
    path: path + '.rgb.r',
    id: id + '-rgb-r',
    labelText: 'Red',
    value: get({ object: object, path: path + '.rgb.r' }),
    min: get({ object: minMaxObject, path: path + '.rgb.r.min' }),
    max: get({ object: minMaxObject, path: path + '.rgb.r.max' }),
    action: () => {
      set({
        object: object,
        path: path + '.hsl',
        value: convertColor.rgb.hsl(get({ object: object, path: path + '.rgb' }))
      });
      this.color.update({ all: true });
      this.colorSliderG.update();
      this.colorSliderB.update();
      this.colorSliderH.update();
      this.colorSliderS.update();
      this.colorSliderL.update();
      if (action) {
        action();
      };
    }
  });

  this.colorSliderG = new Control_sliderSlim({
    object: object,
    path: path + '.rgb.g',
    id: id + '-rgb-g',
    labelText: 'Green',
    value: get({ object: object, path: path + '.rgb.g' }),
    min: get({ object: minMaxObject, path: path + '.rgb.g.min' }),
    max: get({ object: minMaxObject, path: path + '.rgb.g.max' }),
    action: () => {
      set({
        object: object,
        path: path + '.hsl',
        value: convertColor.rgb.hsl(get({ object: object, path: path + '.rgb' }))
      });
      this.color.update({ all: true });
      this.colorSliderR.update();
      this.colorSliderB.update();
      this.colorSliderH.update();
      this.colorSliderS.update();
      this.colorSliderL.update();
      if (action) {
        action();
      };
    }
  });

  this.colorSliderB = new Control_sliderSlim({
    object: object,
    path: path + '.rgb.b',
    id: id + '-rgb-b',
    labelText: 'Blue',
    value: get({ object: object, path: path + '.rgb.b' }),
    min: get({ object: minMaxObject, path: path + '.rgb.b.min' }),
    max: get({ object: minMaxObject, path: path + '.rgb.b.max' }),
    action: () => {
      set({
        object: object,
        path: path + '.hsl',
        value: convertColor.rgb.hsl(get({ object: object, path: path + '.rgb' }))
      });
      this.color.update({ all: true });
      this.colorSliderR.update();
      this.colorSliderG.update();
      this.colorSliderH.update();
      this.colorSliderS.update();
      this.colorSliderL.update();
      if (action) {
        action();
      };
    }
  });

  this.moreControls = node('div', [
    this.colorSliderH.wrap(),
    this.colorSliderS.wrap(),
    this.colorSliderL.wrap(),
    this.colorSliderR.wrap(),
    this.colorSliderG.wrap(),
    this.colorSliderB.wrap()
  ]);

  this.moreControlsCollapse = new Collapse({
    type: 'toggle',
    target: [{
      toggle: this.moreControlsToggle.button,
      content: this.moreControls
    }]
  });

  this.wrap = () => {
    return wrap_wrap({
      children: [
        this.color.wrap(),
        wrap_wrap({
          children: [
            indent_indent({
              children: [
                this.moreControlsCollapse.collapse()
              ]
            })
          ]
        })
      ]
    })
  };

  this.disable = () => {
    this.color.disable();

    if (!this.moreControlsCollapse.target()[0].state.collapsed) {
      this.colorSliderH.disable();
      this.colorSliderS.disable();
      this.colorSliderL.disable();
      this.colorSliderR.disable();
      this.colorSliderG.disable();
      this.colorSliderB.disable();
    } else {
      this.moreControlsUpdate();
    };
  };

  this.enable = () => {
    this.color.enable();

    if (!this.moreControlsCollapse.target()[0].state.collapsed) {
      this.colorSliderH.enable();
      this.colorSliderS.enable();
      this.colorSliderL.enable();
      this.colorSliderR.enable();
      this.colorSliderG.enable();
      this.colorSliderB.enable();
    } else {
      this.moreControlsUpdate();
    };
  };

  this.moreControlsUpdate = () => {

    if (this.moreControlsCollapse.target()[0].state.collapsed) {
      this.colorSliderH.disable();
      this.colorSliderS.disable();
      this.colorSliderL.disable();
      this.colorSliderR.disable();
      this.colorSliderG.disable();
      this.colorSliderB.disable();
    } else {
      this.colorSliderH.enable();
      this.colorSliderS.enable();
      this.colorSliderL.enable();
      this.colorSliderR.enable();
      this.colorSliderG.enable();
      this.colorSliderB.enable();
    };

  };

  this.update = () => {
    this.color.update({ all: true });
    this.colorSliderR.update();
    this.colorSliderG.update();
    this.colorSliderB.update();
    this.colorSliderH.update();
    this.colorSliderS.update();
    this.colorSliderL.update();
  };

  this.moreControlsUpdate();

};

;// CONCATENATED MODULE: ./src/component/control/text/index.js















const Control_text = function({
  object = {},
  path = false,
  id = 'name',
  value = false,
  min = false,
  max = false,
  placeholder = false,
  classList = [],
  labelText = 'Name',
  srOnly = false,
  action = false
} = {}) {

  this.label = label_label({
    forInput: id,
    text: labelText
  });

  if (srOnly) {
    this.label.classList.add('sr-only')
  };

  this.text = text_text({
    id: id,
    classList: classList,
    func: () => {

      if (path) {
        set({ object: object, path: path, value: this.text.value });
      };

      if (action) { action(); };

    }
  });

  if (value) {
    this.text.value = value;
  };

  if (min) {
    this.text.min = min;
  };

  if (max) {
    this.text.max = max;
  };

  if (placeholder) {
    this.text.placeholder = placeholder;
  };

  this.update = () => {

    this.text.value = get({ object: object, path: path });

  };

  this.wrap = () => {
    return wrap_wrap({
      children: [
        this.label,
        this.text
      ]
    })
  };

  this.disable = () => {
    this.label.classList.add('disabled');
    this.text.disabled = true;
  };

  this.enable = () => {
    this.label.classList.remove('disabled');
    this.text.disabled = false;
  };

};

;// CONCATENATED MODULE: ./src/component/control/select/index.js

















const Control_select = function({
  option = [],
  selected = 0,
  object = {},
  id = 'name',
  path = false,
  labelText = 'name',
  srOnly = false,
  description = false,
  action = false
} = {}) {

  this.select = select_select({
    id: id,
    option: option,
    selected: selected,
    func: () => {

      set({ object: object, path: path, value: this.select.selectedIndex });

      if (action) { action(); };

    }
  });

  this.label = label_label({
    forInput: id,
    text: labelText,
    description: description
  });

  if (srOnly) {
    this.label.classList.add('sr-only')
  };

  this.update = () => {
    this.select.selectedIndex = get({
      object: object,
      path: path
    });
  };

  this.updateOption = (option, selectedIndex) => {

    if (option.length > 0) {

      clearChildNode(this.select);

      option.forEach((item, i) => {

        this.select.appendChild(
          node(
            'option:' +
            item +
            '|value:' +
            trimString(item).replace(/\s+/g, '-').toLowerCase()
          )
        );

      });

      if (selectedIndex || selectedIndex === 0) {
        this.select.selectedIndex = selectedIndex;
      };

    };

  };

  this.selected = () => {
    return this.select.selectedIndex;
  };

  this.wrap = () => {
    return wrap_wrap({
      children: [
        this.label,
        this.select
      ]
    })
  };

  this.disable = () => {
    this.label.classList.add('disabled');
    this.select.disabled = true;
  };

  this.enable = () => {
    this.label.classList.remove('disabled');
    this.select.disabled = false;
  };

};

;// CONCATENATED MODULE: ./src/utility/randomString.js
const randomString = ({
  letter = false,
  adjectivesCount = false
} = {}) => {

  const alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];

  const adjectives = {
    a: ['Aback', 'Abaft', 'Abandoned', 'Abashed', 'Aberrant', 'Abhorrent', 'Abiding', 'Abject', 'Ablaze', 'Able', 'Abnormal', 'Aboriginal', 'Abortive', 'Abounding', 'Abrasive', 'Abrupt', 'Absent', 'Absorbed', 'Absorbing', 'Abstracted', 'Absurd', 'Abundant', 'Abusive', 'Acceptable', 'Accessible', 'Accidental', 'Accurate', 'Acid', 'Acidic', 'Acoustic', 'Acrid', 'Adamant', 'Adaptable', 'Addicted', 'Adhesive', 'Adjoining', 'Adorable', 'Adventurous', 'Afraid', 'Aggressive', 'Agonizing', 'Agreeable', 'Ahead', 'Ajar', 'Alert', 'Alike', 'Alive', 'Alleged', 'Alluring', 'Aloof', 'Amazing', 'Ambiguous', 'Ambitious', 'Amuck', 'Amused', 'Amusing', 'Ancient', 'Angry', 'Animated', 'Annoyed', 'Annoying', 'Anxious', 'Apathetic', 'Aquatic', 'Aromatic', 'Arrogant', 'Ashamed', 'Aspiring', 'Assorted', 'Astonishing', 'Attractive', 'Auspicious', 'Automatic', 'Available', 'Average', 'Aware', 'Awesome', 'Axiomatic'],
    b: ['Bad', 'Barbarous', 'Bashful', 'Bawdy', 'Beautiful', 'Befitting', 'Belligerent', 'Beneficial', 'Bent', 'Berserk', 'Bewildered', 'Big', 'Billowy', 'Bitter', 'Bizarre', 'Black', 'Bloody', 'Blue', 'Blushing', 'Boiling', 'Boorish', 'Bored', 'Boring', 'Bouncy', 'Boundless', 'Brainy', 'Brash', 'Brave', 'Brawny', 'Breakable', 'Breezy', 'Brief', 'Bright', 'Broad', 'Broken', 'Brown', 'Bumpy', 'Burly', 'Bustling', 'Busy'],
    c: ['Cagey', 'Calculating', 'Callous', 'Calm', 'Capable', 'Capricious', 'Careful', 'Careless', 'Caring', 'Cautious', 'Ceaseless', 'Certain', 'Changeable', 'Charming', 'Cheap', 'Cheerful', 'Chemical', 'Chief', 'Childlike', 'Chilly', 'Chivalrous', 'Chubby', 'Chunky', 'Clammy', 'Classy', 'Clean', 'Clear', 'Clever', 'Cloistered', 'Cloudy', 'Closed', 'Clumsy', 'Cluttered', 'Coherent', 'Cold', 'Colorful', 'Colossal', 'Combative', 'Comfortable', 'Common', 'Complete', 'Complex', 'Concerned', 'Condemned', 'Confused', 'Conscious', 'Cooing', 'Cool', 'Cooperative', 'Coordinated', 'Courageous', 'Cowardly', 'Crabby', 'Craven', 'Crazy', 'Creepy', 'Crooked', 'Crowded', 'Cruel', 'Cuddly', 'Cultured', 'Cumbersome', 'Curious', 'Curly', 'Curved', 'Curvy', 'Cut', 'Cute', 'Cynical'],
    d: ['Daffy', 'Daily', 'Damaged', 'Damaging', 'Damp', 'Dangerous', 'Dapper', 'Dark', 'Dashing', 'Dazzling', 'Dead', 'Deadpan', 'Deafening', 'Dear', 'Debonair', 'Decisive', 'Decorous', 'Deep', 'Deeply', 'Defeated', 'Defective', 'Defiant', 'Delicate', 'Delicious', 'Delightful', 'Demonic', 'Delirious', 'Dependent', 'Depressed', 'Deranged', 'Descriptive', 'Deserted', 'Detailed', 'Determined', 'Devilish', 'Didactic', 'Different', 'Difficult', 'Diligent', 'Direful', 'Dirty', 'Disagreeable', 'Disastrous', 'Discreet', 'Disgusted', 'Disgusting', 'Disillusioned', 'Dispensable', 'Distinct', 'Disturbed', 'Divergent', 'Dizzy', 'Domineering', 'Doubtful', 'Drab', 'Draconian', 'Dramatic', 'Dreary', 'Drunk', 'Dry', 'Dull', 'Dusty', 'Dynamic', 'Dysfunctional'],
    e: ['Eager', 'Early', 'Earsplitting', 'Earthy', 'Easy', 'Eatable', 'Economic', 'Educated', 'Efficacious', 'Efficient', 'Elastic', 'Elated', 'Elderly', 'Electric', 'Elegant', 'Elfin', 'Elite', 'Embarrassed', 'Eminent', 'Empty', 'Enchanted', 'Enchanting', 'Encouraging', 'Endurable', 'Energetic', 'Enormous', 'Entertaining', 'Enthusiastic', 'Envious', 'Equable', 'Equal', 'Erect', 'Erratic', 'Ethereal', 'Evanescent', 'Evasive', 'Even', 'Excellent', 'Excited', 'Exciting', 'Exclusive', 'Exotic', 'Expensive', 'Exuberant', 'Exultant'],
    f: ['Fabulous', 'Faded', 'Faint', 'Fair', 'Faithful', 'Fallacious', 'False', 'Familiar', 'Famous', 'Fanatical', 'Fancy', 'Fantastic', 'Far', 'Fascinated', 'Fast', 'Fat', 'Faulty', 'Fearful', 'Fearless', 'Feeble', 'Feigned', 'Female', 'Fertile', 'Festive', 'Few', 'Fierce', 'Filthy', 'Fine', 'Finicky', 'First', 'Fixed', 'Flagrant', 'Flaky', 'Flashy', 'Flat', 'Flawless', 'Flimsy', 'Flippant', 'Flowery', 'Fluffy', 'Fluttering', 'Foamy', 'Foolish', 'Foregoing', 'Forgetful', 'Fortunate', 'Frail', 'Fragile', 'Frantic', 'Free', 'Freezing', 'Frequent', 'Fresh', 'Fretful', 'Friendly', 'Frightened', 'Frightening', 'Full', 'Fumbling', 'Functional', 'Funny', 'Furry', 'Furtive', 'Future', 'Futuristic', 'Fuzzy'],
    g: ['Gabby', 'Gainful', 'Gamy', 'Gaping', 'Garrulous', 'Gaudy', 'General', 'Gentle', 'Giant', 'Giddy', 'Gifted', 'Gigantic', 'Glamorous', 'Gleaming', 'Glib', 'Glistening', 'Glorious', 'Glossy', 'Godly', 'Good', 'Goofy', 'Gorgeous', 'Graceful', 'Grandiose', 'Grateful', 'Gratis', 'Gray', 'Greasy', 'Great', 'Greedy', 'Green', 'Grey', 'Grieving', 'Groovy', 'Grotesque', 'Grouchy', 'Grubby', 'Gruesome', 'Grumpy', 'Guarded', 'Guiltless', 'Gullible', 'Gusty', 'Guttural'],
    h: ['Habitual', 'Half', 'Hallowed', 'Halting', 'Handsome', 'Handy', 'Hanging', 'Hapless', 'Happy', 'Hard', 'Harmonious', 'Harsh', 'Hateful', 'Heady', 'Healthy', 'Heartbreaking', 'Heavenly', 'Heavy', 'Hellish', 'Helpful', 'Helpless', 'Hesitant', 'Hideous', 'High', 'Highfalutin', 'Hilarious', 'Hissing', 'Historical', 'Holistic', 'Hollow', 'Homeless', 'Homely', 'Honorable', 'Horrible', 'Hospitable', 'Hot', 'Huge', 'Hulking', 'Humdrum', 'Humorous', 'Hungry', 'Hurried', 'Hurt', 'Hushed', 'Husky', 'Hypnotic', 'Hysterical'],
    i: ['Icky', 'Icy', 'Idiotic', 'Ignorant', 'Ill', 'Illegal', 'Illustrious', 'Imaginary', 'Immense', 'Imminent', 'Impartial', 'Imperfect', 'Impolite', 'Important', 'Imported', 'Impossible', 'Incandescent', 'Incompetent', 'Inconclusive', 'Industrious', 'Incredible', 'Inexpensive', 'Infamous', 'Innate', 'Innocent', 'Inquisitive', 'Insidious', 'Instinctive', 'Intelligent', 'Interesting', 'Internal', 'Invincible', 'Irate', 'Irritating', 'Itchy'],
    j: ['Jaded', 'Jagged', 'Jazzy', 'Jealous', 'Jittery', 'Jobless', 'Jolly', 'Joyous', 'Judicious', 'Juicy', 'Jumbled', 'Jumpy', 'Juvenile'],
    k: ['Keen', 'Kind', 'Kindhearted', 'Kindly', 'Knotty', 'Knowing', 'Knowledgeable', 'Known'],
    l: ['Labored', 'Lackadaisical', 'Lacking', 'Lame', 'Lamentable', 'Languid', 'Large', 'Last', 'Late', 'Laughable', 'Lavish', 'Lazy', 'Lean', 'Learned', 'Left', 'Legal', 'Lethal', 'Level', 'Lewd', 'Light', 'Like', 'Likeable', 'Limping', 'Literate', 'Little', 'Lively', 'Living', 'Lonely', 'Long', 'Longing', 'Loose', 'Lopsided', 'Loud', 'Loutish', 'Lovely', 'Loving', 'Low', 'Lowly', 'Lucky', 'Ludicrous', 'Lumpy', 'Lush', 'Luxuriant', 'Lying', 'Lyrical'],
    m: ['Macabre', 'Macho', 'Maddening', 'Madly', 'Magenta', 'Magical', 'Magnificent', 'Majestic', 'Makeshift', 'Male', 'Malicious', 'Mammoth', 'Maniacal', 'Many', 'Marked', 'Massive', 'Married', 'Marvelous', 'Material', 'Materialistic', 'Mature', 'Mean', 'Measly', 'Meaty', 'Medical', 'Meek', 'Mellow', 'Melodic', 'Melted', 'Merciful', 'Mere', 'Messy', 'Mighty', 'Military', 'Milky', 'Mindless', 'Miniature', 'Minor', 'Miscreant', 'Misty', 'Mixed', 'Moaning', 'Modern', 'Moldy', 'Momentous', 'Motionless', 'Mountainous', 'Muddled', 'Mundane', 'Murky', 'Mushy', 'Mute', 'Mysterious'],
    n: ['Naive', 'Nappy', 'Narrow', 'Nasty', 'Natural', 'Naughty', 'Nauseating', 'Near', 'Neat', 'Nebulous', 'Necessary', 'Needless', 'Needy', 'Neighborly', 'Nervous', 'New', 'Next', 'Nice', 'Nifty', 'Nimble', 'Nippy', 'Noiseless', 'Noisy', 'Nonchalant', 'Nondescript', 'Nonstop', 'Normal', 'Nostalgic', 'Nosy', 'Noxious', 'Numberless', 'Numerous', 'Nutritious', 'Nutty'],
    o: ['Oafish', 'Obedient', 'Obeisant', 'Obese', 'Obnoxious', 'Obscene', 'Obsequious', 'Observant', 'Obsolete', 'Obtainable', 'Oceanic', 'Odd', 'Offbeat', 'Old', 'Omniscient', 'Onerous', 'Open', 'Opposite', 'Optimal', 'Orange', 'Ordinary', 'Organic', 'Ossified', 'Outgoing', 'Outrageous', 'Outstanding', 'Oval', 'Overconfident', 'Overjoyed', 'Overrated', 'Overt', 'Overwrought'],
    p: ['Painful', 'Painstaking', 'Pale', 'Paltry', 'Panicky', 'Panoramic', 'Parallel', 'Parched', 'Parsimonious', 'Past', 'Pastoral', 'Pathetic', 'Peaceful', 'Penitent', 'Perfect', 'Periodic', 'Permissible', 'Perpetual', 'Petite', 'Phobic', 'Physical', 'Picayune', 'Pink', 'Piquant', 'Placid', 'Plain', 'Plant', 'Plastic', 'Plausible', 'Pleasant', 'Plucky', 'Pointless', 'Poised', 'Polite', 'Political', 'Poor', 'Possessive', 'Possible', 'Powerful', 'Precious', 'Premium', 'Present', 'Pretty', 'Previous', 'Pricey', 'Prickly', 'Private', 'Probable', 'Productive', 'Profuse', 'Protective', 'Proud', 'Psychedelic', 'Psychotic', 'Public', 'Puffy', 'Pumped', 'Puny', 'Purple', 'Purring', 'Pushy', 'Puzzled', 'Puzzling'],
    q: ['Quaint', 'Quarrelsome', 'Questionable', 'Quick', 'Quiet', 'Quirky', 'Quixotic', 'Quizzical'],
    r: ['Rabid', 'Racial', 'Ragged', 'Rainy', 'Rambunctious', 'Rampant', 'Rapid', 'Rare', 'Raspy', 'Ratty', 'Ready', 'Real', 'Rebel', 'Receptive', 'Recondite', 'Red', 'Redundant', 'Reflective', 'Regular', 'Relieved', 'Remarkable', 'Reminiscent', 'Repulsive', 'Resolute', 'Resonant', 'Responsible', 'Rhetorical', 'Rich', 'Right', 'Righteous', 'Rightful', 'Rigid', 'Ripe', 'Ritzy', 'Roasted', 'Robust', 'Romantic', 'Roomy', 'Rotten', 'Rough', 'Round', 'Royal', 'Ruddy', 'Rude', 'Rural', 'Rustic', 'Ruthless'],
    s: ['Sable', 'Sad', 'Safe', 'Salty', 'Same', 'Sassy', 'Satisfying', 'Savory', 'Scandalous', 'Scarce', 'Scared', 'Scary', 'Scattered', 'Scientific', 'Scintillating', 'Scrawny', 'Screeching', 'Second', 'Secret', 'Secretive', 'Sedate', 'Seemly', 'Selective', 'Selfish', 'Separate', 'Serious', 'Shaggy', 'Shaky', 'Shallow', 'Sharp', 'Shiny', 'Shivering', 'Shocking', 'Short', 'Shrill', 'Shut', 'Shy', 'Sick', 'Silent', 'Silky', 'Silly', 'Simple', 'Simplistic', 'Sincere', 'Skillful', 'Skinny', 'Sleepy', 'Slim', 'Slimy', 'Slippery', 'Sloppy', 'Slow', 'Small', 'Smart', 'Smelly', 'Smiling', 'Smoggy', 'Smooth', 'Sneaky', 'Snobbish', 'Snotty', 'Soft', 'Soggy', 'Solid', 'Somber', 'Sophisticated', 'Sordid', 'Sore', 'Sour', 'Sparkling', 'Special', 'Spectacular', 'Spicy', 'Spiffy', 'Spiky', 'Spiritual', 'Spiteful', 'Splendid', 'Spooky', 'Spotless', 'Spotted', 'Spotty', 'Spurious', 'Squalid', 'Square', 'Squealing', 'Squeamish', 'Staking', 'Stale', 'Standing', 'Statuesque', 'Steadfast', 'Steady', 'Steep', 'Stereotyped', 'Sticky', 'Stiff', 'Stimulating', 'Stingy', 'Stormy', 'Straight', 'Strange', 'Striped', 'Strong', 'Stupendous', 'Sturdy', 'Subdued', 'Subsequent', 'Substantial', 'Successful', 'Succinct', 'Sudden', 'Sulky', 'Super', 'Superb', 'Superficial', 'Supreme', 'Swanky', 'Sweet', 'Sweltering', 'Swift', 'Symptomatic', 'Synonymous'],
    t: ['Taboo', 'Tacit', 'Tacky', 'Talented', 'Tall', 'Tame', 'Tan', 'Tangible', 'Tangy', 'Tart', 'Tasteful', 'Tasteless', 'Tasty', 'Tawdry', 'Tearful', 'Tedious', 'Teeny', 'Telling', 'Temporary', 'Ten', 'Tender', 'Tense', 'Tenuous', 'Terrific', 'Tested', 'Testy', 'Thankful', 'Therapeutic', 'Thick', 'Thin', 'Thinkable', 'Third', 'Thirsty', 'Thoughtful', 'Thoughtless', 'Threatening', 'Thundering', 'Tidy', 'Tight', 'Tightfisted', 'Tiny', 'Tired', 'Tiresome', 'Toothsome', 'Torpid', 'Tough', 'Towering', 'Tranquil', 'Trashy', 'Tremendous', 'Tricky', 'Trite', 'Troubled', 'Truculent', 'True', 'Truthful', 'Typical'],
    u: ['Ubiquitous', 'Ultra', 'Unable', 'Unaccountable', 'Unadvised', 'Unarmed', 'Unbecoming', 'Unbiased', 'Uncovered', 'Understood', 'Undesirable', 'Unequal', 'Unequaled', 'Uneven', 'Unhealthy', 'Uninterested', 'Unique', 'Unkempt', 'Unknown', 'Unnatural', 'Unruly', 'Unsightly', 'Unsuitable', 'Untidy', 'Unused', 'Unusual', 'Unwieldy', 'Unwritten', 'Upbeat', 'Uppity', 'Upset', 'Uptight', 'Used', 'Useful', 'Useless', 'Utopian'],
    v: ['Vacuous', 'Vagabond', 'Vague', 'Valuable', 'Various', 'Vast', 'Vengeful', 'Venomous', 'Verdant', 'Versed', 'Victorious', 'Vigorous', 'Violent', 'Violet', 'Vivacious', 'Voiceless', 'Volatile', 'Voracious', 'Vulgar'],
    w: ['Wacky', 'Waggish', 'Waiting', 'Wakeful', 'Wandering', 'Wanting', 'Warlike', 'Warm', 'Wary', 'Wasteful', 'Watery', 'Weak', 'Wealthy', 'Weary', 'Wet', 'Whimsical', 'Whispering', 'White', 'Whole', 'Wholesale', 'Wicked', 'Wide', 'Wiggly', 'Wild', 'Willing', 'Windy', 'Wiry', 'Wise', 'Wistful', 'Witty', 'Woebegone', 'Womanly', 'Wonderful', 'Wooden', 'Woozy', 'Workable', 'Worried', 'Worthless', 'Wrathful', 'Wretched', 'Wrong', 'Wry'],
    x: ['Xenial', 'Xenodochial', 'Xenophobic'],
    y: ['Yellow', 'Yielding', 'Young', 'Youthful', 'Yummy'],
    z: ['Zany', 'Zealous', 'Zesty', 'Zippy', 'Zombiesque', 'Zonked']
  };

  const animals = {
    a: ['Aardvark', 'Albatross', 'Alligator', 'Alpaca', 'Ant', 'Anteater', 'Antelope', 'Ape', 'Armadillo'],
    b: ['Baboon', 'Badger', 'Barracuda', 'Bat', 'Bear', 'Beaver', 'Bee', 'Bison', 'Boar', 'Buffalo', 'Butterfly'],
    c: ['Camel', 'Capybara', 'Caribou', 'Cassowary', 'Cat', 'Caterpillar', 'Cattle', 'Chamois', 'Cheetah', 'Chicken', 'Chimpanzee', 'Chinchilla', 'Chough', 'Clam', 'Cobra', 'Cockroach', 'Cod', 'Cormorant', 'Coyote', 'Crab', 'Crane', 'Crocodile', 'Crow', 'Curlew'],
    d: ['Deer', 'Dinosaur', 'Dog', 'Dogfish', 'Dolphin', 'Donkey', 'Dotterel', 'Dove', 'Dragonfly', 'Duck', 'Dugong', 'Dunlin'],
    e: ['Eagle', 'Echidna', 'Eel', 'Eland', 'Elephant', 'Elephant Seal', 'Elk', 'Emu'],
    f: ['Falcon', 'Ferret', 'Finch', 'Fish', 'Flamingo', 'Fly', 'Fox', 'Frog'],
    g: ['Gaur', 'Gazelle', 'Gerbil', 'Giant Panda', 'Giraffe', 'Gnat', 'Gnu', 'Goat', 'Goose', 'Goldfinch', 'Goldfish', 'Gorilla', 'Goshawk', 'Grasshopper', 'Grouse', 'Guanaco', 'Guinea Fowl', 'Guinea Pig', 'Gull'],
    h: ['Hamster', 'Hare', 'Hawk', 'Hedgehog', 'Heron', 'Herring', 'Hippopotamus', 'Hornet', 'Horse', 'Human', 'Hummingbird', 'Hyena'],
    i: ['Ibex', 'Ibis', 'Iguana', 'Impala', 'Isopod'],
    j: ['Jackal', 'Jaguar', 'Jay', 'Jellyfish'],
    k: ['Kangaroo', 'Kingfisher', 'Koala', 'Komodo Dragon', 'Kookabura', 'Kouprey', 'Kudu'],
    l: ['Lapwing', 'Lark', 'Lemur', 'Leopard', 'Lima', 'Lion', 'Llama', 'Lobster', 'Locust', 'Loris', 'Louse', 'Lyrebird'],
    m: ['Magpie', 'Mallard', 'Manatee', 'Mandrill', 'Mantis', 'Marten', 'Meerkat', 'Mink', 'Mole', 'Mongoose', 'Monkey', 'Moose', 'Mouse', 'Mosquito', 'Mule'],
    n: ['Narwhal', 'Newt', 'Nightingale', 'Nyala'],
    o: ['Octopus', 'Okapi', 'Opossum', 'Oryx', 'Ostrich', 'Otter', 'Owl', 'Ox', 'Oyster'],
    p: ['Panther', 'Parrot', 'Partridge', 'Peafowl', 'Pelican', 'Penguin', 'Pheasant', 'Pig', 'Pigeon', 'Polar Bear', 'Pony', 'Porcupine', 'Porpoise'],
    q: ['Quail', 'Quelea', 'Quetzal'],
    r: ['Rabbit', 'Raccoon', 'Rail', 'Ram', 'Rat', 'Raven', 'Red Deer', 'Red Panda', 'Reindeer', 'Rhinoceros', 'Rook'],
    s: ['Salamander', 'Salmon', 'Sand Dollar', 'Sandpiper', 'Sardine', 'Scorpion', 'Sea Lion', 'Sea Urchin', 'Seahorse', 'Seal', 'Shark', 'Sheep', 'Shrew', 'Skunk', 'Snail', 'Snake', 'Sparrow', 'Spider', 'Spoonbill', 'Squid', 'Squirrel', 'Starling', 'Stingray', 'Stinkbug', 'Stork', 'Swallow', 'Swan'],
    t: ['Tapir', 'Tarsier', 'Termite', 'Tiger', 'Toad', 'Trout', 'Turkey', 'Turtle'],
    u: ['Uakari', 'Unau', 'Urial', 'Urchin', 'Umbrellabird', 'Unicornfish', 'Uromastyx', 'Uguisu'],
    v: ['Vampire Bat', 'Viper', 'Vole', 'Vulture'],
    w: ['Wallaby', 'Walrus', 'Wasp', 'Weasel', 'Whale', 'Wolf', 'Wolverine', 'Wombat', 'Woodcock', 'Woodpecker', 'Worm', 'Wren'],
    x: ['Xaviers Greenbul', 'Xeme', 'Xingu Corydoras', 'Xolo'],
    y: ['Yabby', 'Yak', 'Yellowhammer', 'Yellowjacket'],
    z: ['Zebra', 'Zebu', 'Zokor', 'Zorilla']
  };

  const action = {
    alliteration: {
      short: () => {

        const randomAdjective = adjectives[letter.toLowerCase()][Math.floor(Math.random() * adjectives[letter.toLowerCase()].length)];

        const randomAnimal = animals[letter.toLowerCase()][Math.floor(Math.random() * animals[letter.toLowerCase()].length)];

        return randomAdjective + ' ' + randomAnimal;

      },
      long: () => {

        const randomAdjective = '';

        for (let i = 1; i <= adjectivesCount; i++) {

          if (adjectives[letter.toLowerCase()].length > 0) {
            if (randomAdjective.length > 0) {
              randomAdjective = randomAdjective + ' ';
            };
            randomAdjective = randomAdjective + adjectives[letter.toLowerCase()].splice(Math.floor(Math.random() * adjectives[letter.toLowerCase()].length), 1);
          };

        };

        const randomAnimal = animals[letter.toLowerCase()][Math.floor(Math.random() * animals[letter.toLowerCase()].length)];

        return randomAdjective + ' ' + randomAnimal;
      }
    },
    mix: {
      short: () => {

        const adjectivesSeed = alphabet[Math.floor(Math.random() * (alphabet.length - 1))];

        const animalsSeed = alphabet[Math.floor(Math.random() * (alphabet.length - 1))];

        const randomAdjective = adjectives[adjectivesSeed][Math.floor(Math.random() * adjectives[adjectivesSeed].length)];

        const randomAnimal = animals[animalsSeed][Math.floor(Math.random() * animals[animalsSeed].length)];

        return randomAdjective + ' ' + randomAnimal;

      },
      long: () => {

        var randomAdjective = '';

        for (let i = 1; i <= adjectivesCount; i++) {

          var adjectiveLetter = alphabet[Math.floor(Math.random() * (alphabet.length - 1))];

          if (adjectiveLetter in adjectives && adjectives[adjectiveLetter].length > 0) {

            if (randomAdjective.length > 0) {
              randomAdjective = randomAdjective + ' ';
            };

            randomAdjective = randomAdjective + adjectives[adjectiveLetter].splice(Math.floor(Math.random() * adjectives[adjectiveLetter].length), 1);

            if (adjectives[adjectiveLetter].length == 0) {
              delete adjectives[adjectiveLetter];
            };

          };
        };

        var randomAnimalArray = animals[alphabet[Math.floor(Math.random() * (alphabet.length - 1))]]

        var randomAnimal = randomAnimalArray[Math.floor(Math.random() * (randomAnimalArray.length - 1))];

        return randomAdjective + ' ' + randomAnimal;

      }
    }
  };

  if (letter && alphabet.includes(letter.toLowerCase())) {

    if (adjectivesCount && adjectivesCount > 0) {
      return action.alliteration.long();
    } else {
      return action.alliteration.short();
    };

  } else {

    if (adjectivesCount && adjectivesCount > 0) {
      return action.mix.long();
    } else {
      return action.mix.short();
    };

  };

};

;// CONCATENATED MODULE: ./src/component/customThemeForm/index.js

























const CustomThemeForm = function({
  customThemeData = false
} = {}) {

  this.element = {
    form: node('form|class:theme-custom-form'),
    main: node('div|class:theme-custom-form-main'),
    text: new Control_text({
      object: customThemeData.theme,
      path: 'name',
      id: 'name',
      value: customThemeData.theme.name,
      placeholder: 'Example theme',
      labelText: 'Name'
    }),
    randomName: new Button({
      text: 'Random theme name',
      style: ['line'],
      func: () => {
        customThemeData.theme.name = randomString({ adjectivesCount: randomNumber(1, 3) });
        this.element.text.update();
      }
    })
  };

  this.assemble = () => {

    this.element.main.appendChild(this.element.text.wrap());

    this.element.main.appendChild(this.element.randomName.wrap());

    this.element.form.appendChild(this.element.main);

  };

  this.form = () => {

    return this.element.form;

  };

  this.assemble();

};

;// CONCATENATED MODULE: ./src/component/customThemeDefault/index.js


const customThemeDefault = () => {
  return {
    name: '',
    color: { range: { primary: { h: state.get.current().theme.color.range.primary.h, s: state.get.current().theme.color.range.primary.s } }, contrast: state.get.current().theme.color.contrast },
    accent: { hsl: state.get.current().theme.accent.hsl, rgb: state.get.current().theme.accent.rgb },
    font: state.get.current().theme.font,
    background: state.get.current().theme.background,
    radius: state.get.current().theme.radius,
    shadow: state.get.current().theme.shadow,
    style: state.get.current().theme.style,
    shade: state.get.current().theme.shade,
    opacity: state.get.current().theme.opacity,
    layout: state.get.current().theme.layout,
    header: state.get.current().theme.header,
    bookmark: state.get.current().theme.bookmark,
    group: state.get.current().theme.group,
    toolbar: state.get.current().theme.toolbar
  };
};

;// CONCATENATED MODULE: ./src/component/stagedCustomTheme/index.js


const StagedCustomTheme = function(customThemeData) {

  this.theme = customThemeData || JSON.parse(JSON.stringify(customThemeDefault()));

  this.position = 0;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/customThemeTile/index.css
var customThemeTile = __webpack_require__(5151);
;// CONCATENATED MODULE: ./src/component/customThemeTile/index.css

            

var customThemeTile_options = {};

customThemeTile_options.insert = "head";
customThemeTile_options.singleton = false;

var customThemeTile_update = injectStylesIntoStyleTag_default()(customThemeTile/* default */.Z, customThemeTile_options);



/* harmony default export */ const component_customThemeTile = (customThemeTile/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/customThemeTile/index.js




























const CustomThemeTile = function({
  customThemeData = false
} = {}) {

  this.element = {
    tile: node('div|class:theme-custom-tile'),
    front: node('div|class:theme-custom-tile-front'),
    back: node('div|class:theme-custom-tile-back'),
    control: node('div|class:theme-custom-control'),
    preview: node('div|class:theme-custom-preview'),
    name: node('span|class:theme-custom-name'),
    custom: new Button({
      text: false,
      classList: ['theme-custom-button'],
      style: ['ring'],
      block: true,
      func: () => {

        const newCustomThemeData = JSON.parse(JSON.stringify(customThemeData));

        state.get.current().theme.color.range.primary.h = newCustomThemeData.theme.color.range.primary.h;

        state.get.current().theme.color.range.primary.s = newCustomThemeData.theme.color.range.primary.s;

        state.get.current().theme.color.contrast = newCustomThemeData.theme.color.contrast;

        state.get.current().theme.accent.hsl = newCustomThemeData.theme.accent.hsl;

        state.get.current().theme.accent.rgb = newCustomThemeData.theme.accent.rgb;

        state.get.current().theme.font = newCustomThemeData.theme.font;

        state.get.current().theme.background = newCustomThemeData.theme.background;

        state.get.current().theme.radius = newCustomThemeData.theme.radius;

        state.get.current().theme.shadow = newCustomThemeData.theme.shadow;

        state.get.current().theme.style = newCustomThemeData.theme.style;

        state.get.current().theme.shade = newCustomThemeData.theme.shade;

        state.get.current().theme.opacity = newCustomThemeData.theme.opacity;

        state.get.current().theme.layout = newCustomThemeData.theme.layout;

        state.get.current().theme.header = newCustomThemeData.theme.header;

        state.get.current().theme.bookmark = newCustomThemeData.theme.bookmark;

        state.get.current().theme.group = newCustomThemeData.theme.group;

        state.get.current().theme.toolbar = newCustomThemeData.theme.toolbar;

        theme_theme.color.render();

        theme_theme.font.display.load();

        theme_theme.font.ui.load();

        theme_theme.background.image.render();

        theme_theme.background.video.clear();

        theme_theme.background.video.render();

        themeSetting.control.style.update();

        themeSetting.control.color.range.primary.h.update();

        themeSetting.control.color.range.primary.s.update();

        themeSetting.control.color.contrast.update();

        themeSetting.control.accent.color.update();

        themeSetting.control.font.display.name.update();

        themeSetting.control.font.display.weight.update();

        themeSetting.control.font.display.style.update();

        themeSetting.control.font.ui.name.update();

        themeSetting.control.font.ui.weight.update();

        themeSetting.control.font.ui.style.update();

        themeSetting.control.radius.update();

        themeSetting.control.shadow.update();

        themeSetting.control.shade.opacity.update();

        themeSetting.control.shade.blur.update();

        themeSetting.control.opacity.general.update();

        themeSetting.control.layout.divider.size.update();

        themeSetting.control.header.color.by.update();

        themeSetting.control.header.color.color.update();

        themeSetting.control.header.color.opacity.update();

        themeSetting.control.header.color.collapse.update();

        themeSetting.control.bookmark.color.by.update();

        themeSetting.control.bookmark.color.color.update();

        themeSetting.control.bookmark.color.opacity.update();

        themeSetting.control.bookmark.color.collapse.update();

        themeSetting.control.bookmark.item.border.update();

        themeSetting.control.background.type.update();

        themeSetting.control.background.typeCollapse.update();

        themeSetting.control.background.color.update();

        themeSetting.control.background.gradient.angle.update();

        themeSetting.control.background.gradient.start.update();

        themeSetting.control.background.gradient.end.update();

        themeSetting.control.background.image.url.update();

        themeSetting.control.background.image.blur.update();

        themeSetting.control.background.image.grayscale.update();

        themeSetting.control.background.image.scale.update();

        themeSetting.control.background.image.accent.update();

        themeSetting.control.background.image.opacity.update();

        themeSetting.control.background.video.url.update();

        themeSetting.control.background.video.blur.update();

        themeSetting.control.background.video.grayscale.update();

        themeSetting.control.background.video.scale.update();

        themeSetting.control.background.video.accent.update();

        themeSetting.control.background.video.opacity.update();

        themeSetting.control.opacity.general.update();

        themeSetting.control.opacity.toolbar.update();

        themeSetting.control.opacity.bookmark.update();

        themeSetting.control.opacity.search.update();

        themeSetting.control.opacity.openAll.update();

        themeSetting.disable();

        applyCSSVar([
          'theme.accent.rgb.r',
          'theme.accent.rgb.g',
          'theme.accent.rgb.b',
          'theme.accent.hsl.h',
          'theme.accent.hsl.s',
          'theme.accent.hsl.l',
          'theme.font.display.weight',
          'theme.font.display.style',
          'theme.font.ui.weight',
          'theme.font.ui.style',
          'theme.opacity.general',
          'theme.background.color.rgb.r',
          'theme.background.color.rgb.g',
          'theme.background.color.rgb.b',
          'theme.background.color.hsl.h',
          'theme.background.color.hsl.s',
          'theme.background.color.hsl.l',
          'theme.background.image.blur',
          'theme.background.image.grayscale',
          'theme.background.image.scale',
          'theme.background.image.accent',
          'theme.background.image.opacity',
          'theme.background.image.vignette.opacity',
          'theme.background.image.vignette.start',
          'theme.background.image.vignette.end',
          'theme.background.video.blur',
          'theme.background.video.grayscale',
          'theme.background.video.scale',
          'theme.background.video.accent',
          'theme.background.video.opacity',
          'theme.background.video.vignette.opacity',
          'theme.background.video.vignette.start',
          'theme.background.video.vignette.end',
          'theme.background.gradient.angle',
          'theme.background.gradient.start.rgb.r',
          'theme.background.gradient.start.rgb.g',
          'theme.background.gradient.start.rgb.b',
          'theme.background.gradient.start.hsl.h',
          'theme.background.gradient.start.hsl.s',
          'theme.background.gradient.start.hsl.l',
          'theme.background.gradient.end.rgb.r',
          'theme.background.gradient.end.rgb.g',
          'theme.background.gradient.end.rgb.b',
          'theme.background.gradient.end.hsl.h',
          'theme.background.gradient.end.hsl.s',
          'theme.background.gradient.end.hsl.l',
          'theme.radius',
          'theme.shadow',
          'theme.shade.opacity',
          'theme.shade.blur',
          'theme.layout.divider.size',
          'theme.header.color.rgb.r',
          'theme.header.color.rgb.g',
          'theme.header.color.rgb.b',
          'theme.header.color.hsl.h',
          'theme.header.color.hsl.s',
          'theme.header.color.hsl.l',
          'theme.header.color.opacity',
          'theme.header.search.opacity',
          'theme.bookmark.color.rgb.r',
          'theme.bookmark.color.rgb.g',
          'theme.bookmark.color.rgb.b',
          'theme.bookmark.color.hsl.h',
          'theme.bookmark.color.hsl.s',
          'theme.bookmark.color.hsl.l',
          'theme.bookmark.color.opacity',
          'theme.bookmark.item.opacity',
          'theme.toolbar.opacity',
          'theme.group.openAll.opacity'
        ]);

        applyCSSClass([
          'theme.style',
          'theme.background.type',
          'theme.header.color.by',
          'theme.bookmark.color.by'
        ]);

        applyCSSState([
          'theme.layout.divider.size'
        ]);

        layout_layout.area.render();

        bookmark_bookmark.item.mod.applyVar('border', state.get.current().theme.bookmark.item.border);

        bookmark_bookmark.item.mod.applyVar('color.opacity', state.get.current().theme.bookmark.item.opacity);

        groupAndBookmark.render();

        toolbar.current.update.accent();

        toolbar.current.update.style();

        header_header.element.search.update.style();

        if (component_group_group.area.current.length > 0) {

          component_group_group.area.current[0].update.style();

        };

        data.save();

      }
    })
  };

  this.control = {};

  this.control.button = {
    edit: new Button({
      text: 'Edit this saved theme',
      srOnly: true,
      iconName: 'edit',
      style: ['link'],
      size: 'small',
      title: 'Edit this saved theme',
      classList: ['theme-custom-control-button', 'theme-custom-control-edit'],
      func: () => {

        menu.close();

        let newCustomThemeData = new StagedCustomTheme(JSON.parse(JSON.stringify(customThemeData.theme)));

        newCustomThemeData.position = JSON.parse(JSON.stringify(customThemeData.position));

        const bookmarkForm = new CustomThemeForm({ customThemeData: newCustomThemeData });

        const editModal = new Modal({
          heading: isValidString(customThemeData.theme.name) ? 'Edit ' + customThemeData.theme.name : 'Edit unnamed custom theme',
          content: bookmarkForm.form(),
          successText: 'Save',
          width: 'small',
          successAction: () => {

            customTheme.item.mod.edit(newCustomThemeData);

            data.save();

          }
        });

        editModal.open();

      }
    }),
    remove: new Button({
      text: 'Remove this saved theme',
      srOnly: true,
      iconName: 'cross',
      style: ['link'],
      size: 'small',
      title: 'Remove this saved theme',
      classList: ['theme-custom-control-button', 'theme-custom-control-remove'],
      func: () => {

        menu.close();

        const removeModal = new Modal({
          heading: isValidString(customThemeData.theme.name) ? 'Remove ' + customThemeData.theme.name : 'Remove unnamed custom theme',
          content: 'Are you sure you want to remove this saved theme? This can not be undone.',
          successText: 'Remove',
          width: 'small',
          successAction: () => {
            customTheme.item.mod.remove(customThemeData);
            data.save();
          }
        });

        removeModal.open();

      }
    })
  };

  this.control.disable = () => {
    for (var key in this.control.button) {
      this.control.button[key].disable();
    };
  };

  this.control.enable = () => {
    for (var key in this.control.button) {
      this.control.button[key].enable();
    };
  };

  this.previewTile = () => {

    const shadeSteps = 4;

    let hsl = customThemeData.theme.color.range.primary;

    hsl.l = Math.round(customThemeData.theme.color.contrast.start + ((customThemeData.theme.color.contrast.end - customThemeData.theme.color.contrast.start) / 2));

    let shadeStep = Math.round((customThemeData.theme.color.contrast.end - customThemeData.theme.color.contrast.start) / 10);

    for (let i = 1; i <= shadeSteps; i++) {

      let darken = () => { hsl.l = Math.round(hsl.l - shadeStep); };

      let lighten = () => { hsl.l = Math.round(hsl.l + shadeStep); };

      if (customThemeData.theme.style == 'dark') {

        darken();

      } else if (customThemeData.theme.style == 'light') {

        lighten();

      } else if (customThemeData.theme.style == 'system') {

        if (window.matchMedia('(prefers-color-scheme:dark)').matches) {
          darken();
        } else if (window.matchMedia('(prefers-color-scheme:light)').matches) {
          lighten();
        };

      };

      if (hsl.l < 0) { hsl.l = 0; };

      if (hsl.l > 100) { hsl.l = 100; };

      let rgb = convertColor.hsl.rgb(hsl);

      this.element.tile.style.setProperty('--theme-custom-background-0' + i + '-rgb-r', rgb.r);
      this.element.tile.style.setProperty('--theme-custom-background-0' + i + '-rgb-g', rgb.g);
      this.element.tile.style.setProperty('--theme-custom-background-0' + i + '-rgb-b', rgb.b);
      this.element.tile.style.setProperty('--theme-custom-background-0' + i + '-hsl-h', hsl.h);
      this.element.tile.style.setProperty('--theme-custom-background-0' + i + '-hsl-s', hsl.s);
      this.element.tile.style.setProperty('--theme-custom-background-0' + i + '-hsl-l', hsl.l);

      this.element.tile.style.setProperty('--theme-custom-background-0' + i, 'var(--theme-custom-background-0' + i + '-rgb-r), var(--theme-custom-background-0' + i + '-rgb-g), var(--theme-custom-background-0' + i + '-rgb-b)');

      this.element.preview.appendChild(node('span|class:theme-custom-background-0' + i));

    };

    this.element.tile.style.setProperty('--theme-custom-text', '0, 0%, calc(((((var(--theme-custom-background-01-rgb-r) * var(--theme-t-r)) + (var(--theme-custom-background-01-rgb-g) * var(--theme-t-g)) + (var(--theme-custom-background-01-rgb-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%)');

    this.element.tile.style.setProperty('--theme-custom-accent-rgb-r', customThemeData.theme.accent.rgb.r);
    this.element.tile.style.setProperty('--theme-custom-accent-rgb-g', customThemeData.theme.accent.rgb.g);
    this.element.tile.style.setProperty('--theme-custom-accent-rgb-b', customThemeData.theme.accent.rgb.b);

    this.element.tile.style.setProperty('--theme-custom-accent', 'var(--theme-custom-accent-rgb-r), var(--theme-custom-accent-rgb-g), var(--theme-custom-accent-rgb-b)');

    this.element.preview.appendChild(node('span|class:theme-custom-accent'));

    return node('div|class:theme-custom-tile')

  };

  this.assemble = () => {

    this.previewTile();

    this.element.custom.button.appendChild(this.element.preview);

    if (isValidString(customThemeData.theme.name)) {

      this.element.name.innerHTML = customThemeData.theme.name;

      this.element.custom.button.appendChild(this.element.name);

    };

    this.element.front.appendChild(this.element.custom.button);

    this.element.back.appendChild(this.element.control);

    this.element.control.appendChild(this.control.button.edit.button);

    this.element.control.appendChild(this.control.button.remove.button);

    this.element.tile.appendChild(this.element.back);

    this.element.tile.appendChild(this.element.front);

    if (state.get.current().theme.custom.edit) {
      this.control.enable();
    } else {
      this.control.disable();
    };

  };

  this.tile = () => {

    return this.element.tile;

  };

  this.assemble();

};

;// CONCATENATED MODULE: ./src/component/customTheme/index.js














const customTheme = {};

customTheme.tile = {
  current: []
};

customTheme.item = {
  mod: {
    add: (customThemeData) => {

      state.get.current().theme.custom.all.push(customThemeData.theme);

    },
    edit: (customThemeData) => {

      state.get.current().theme.custom.all.splice(customThemeData.position, 1);

      state.get.current().theme.custom.all.splice(customThemeData.position, 0, customThemeData.theme);

    },
    remove: (customThemeData) => {

      state.get.current().theme.custom.all.splice(customThemeData.position, 1);

    }
  },
  render: (container) => {

    customTheme.edit.close();

    customTheme.tile.current = [];

    state.get.current().theme.custom.all.forEach((item, i) => {

      const itemIndex = i;

      const currentCustomThemeData = new StagedCustomTheme(item);

      currentCustomThemeData.position = itemIndex;

      const themeCustomTile = new CustomThemeTile({
        customThemeData: currentCustomThemeData
      });

      customTheme.tile.current.push(themeCustomTile);

      container.appendChild(themeCustomTile.tile());

    });

    return container;

  }
};

customTheme.add = {
  mod: {
    open: () => { state.get.current().theme.custom.edit = true; },
    close: () => { state.get.current().theme.custom.edit = false; }
  },
  render: () => {

    const newCustomThemeData = new StagedCustomTheme();

    newCustomThemeData.position = state.get.current().theme.custom.all.length;

    const bookmarkForm = new CustomThemeForm({ customThemeData: newCustomThemeData });

    const addModal = new Modal({
      heading: 'Save current theme',
      content: bookmarkForm.form(),
      successText: 'Save',
      width: 'small',
      successAction: () => {
        customTheme.item.mod.add(newCustomThemeData);
        data.save();
      }
    });

    addModal.open();

  }
};

customTheme.edit = {
  open: () => {

    state.get.current().theme.custom.edit = true;

    customTheme.edit.render();

  },
  close: () => {

    state.get.current().theme.custom.edit = false;

    customTheme.edit.render();

  },
  toggle: () => {

    if (state.get.current().theme.custom.edit) {
      customTheme.edit.close();
    } else {
      customTheme.edit.open();
    };

  },
  render: () => {

    applyCSSState('theme.custom.edit');

    if (customTheme.tile.current.length > 0) {
      customTheme.tile.current.forEach((item, i) => {

        if (state.get.current().theme.custom.edit) {
          item.control.enable();
        } else {
          item.control.disable();
        };

      });
    };

  }
};



// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/presetThemeTile/index.css
var presetThemeTile = __webpack_require__(9);
;// CONCATENATED MODULE: ./src/component/presetThemeTile/index.css

            

var presetThemeTile_options = {};

presetThemeTile_options.insert = "head";
presetThemeTile_options.singleton = false;

var presetThemeTile_update = injectStylesIntoStyleTag_default()(presetThemeTile/* default */.Z, presetThemeTile_options);



/* harmony default export */ const component_presetThemeTile = (presetThemeTile/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/presetThemeTile/index.js
























const PresetThemeTile = function({
  presetThemeData = false
} = {}) {

  this.element = {
    tile: node('div|class:theme-preset-tile'),
    front: node('div|class:theme-preset-tile-front'),
    back: node('div|class:theme-preset-tile-back'),
    preview: node('div|class:theme-preset-preview'),
    name: node('span|class:theme-preset-name'),
    preset: new Button({
      text: false,
      classList: ['theme-preset-button'],
      style: ['ring'],
      block: true,
      func: () => {

        const newPresetData = JSON.parse(JSON.stringify(presetThemeData));

        state.get.current().theme.color.range.primary.h = newPresetData.color.range.primary.h;

        state.get.current().theme.color.range.primary.s = newPresetData.color.range.primary.s;

        state.get.current().theme.color.contrast = newPresetData.color.contrast;

        state.get.current().theme.accent.hsl = newPresetData.accent.hsl;

        state.get.current().theme.accent.rgb = newPresetData.accent.rgb;

        state.get.current().theme.font = newPresetData.font;

        state.get.current().theme.background = newPresetData.background;

        state.get.current().theme.radius = newPresetData.radius;

        state.get.current().theme.shadow = newPresetData.shadow;

        state.get.current().theme.style = newPresetData.style;

        state.get.current().theme.shade = newPresetData.shade;

        state.get.current().theme.opacity = newPresetData.opacity;

        state.get.current().theme.layout = newPresetData.layout;

        state.get.current().theme.header = newPresetData.header;

        state.get.current().theme.bookmark = newPresetData.bookmark;

        state.get.current().theme.group = newPresetData.group;

        state.get.current().theme.toolbar = newPresetData.toolbar;

        theme_theme.color.render();

        theme_theme.font.display.load();

        theme_theme.font.ui.load();

        theme_theme.background.image.render();

        theme_theme.background.video.clear();

        theme_theme.background.video.render();

        themeSetting.control.style.update();

        themeSetting.control.color.range.primary.h.update();

        themeSetting.control.color.range.primary.s.update();

        themeSetting.control.color.contrast.update();

        themeSetting.control.accent.color.update();

        themeSetting.control.font.display.name.update();

        themeSetting.control.font.display.weight.update();

        themeSetting.control.font.display.style.update();

        themeSetting.control.font.ui.name.update();

        themeSetting.control.font.ui.weight.update();

        themeSetting.control.font.ui.style.update();

        themeSetting.control.radius.update();

        themeSetting.control.shadow.update();

        themeSetting.control.shade.opacity.update();

        themeSetting.control.shade.blur.update();

        themeSetting.control.opacity.general.update();

        themeSetting.control.layout.divider.size.update();

        themeSetting.control.header.color.by.update();

        themeSetting.control.header.color.color.update();

        themeSetting.control.header.color.opacity.update();

        themeSetting.control.header.color.collapse.update();

        themeSetting.control.bookmark.color.by.update();

        themeSetting.control.bookmark.color.color.update();

        themeSetting.control.bookmark.color.opacity.update();

        themeSetting.control.bookmark.color.collapse.update();

        themeSetting.control.bookmark.item.border.update();

        themeSetting.control.background.type.update();

        themeSetting.control.background.typeCollapse.update();

        themeSetting.control.background.color.update();

        themeSetting.control.background.gradient.angle.update();

        themeSetting.control.background.gradient.start.update();

        themeSetting.control.background.gradient.end.update();

        themeSetting.control.background.image.url.update();

        themeSetting.control.background.image.blur.update();

        themeSetting.control.background.image.grayscale.update();

        themeSetting.control.background.image.scale.update();

        themeSetting.control.background.image.accent.update();

        themeSetting.control.background.image.opacity.update();

        themeSetting.control.background.image.vignette.opacity.update();

        themeSetting.control.background.image.vignette.start.update();

        themeSetting.control.background.image.vignette.end.update();

        themeSetting.control.background.video.url.update();

        themeSetting.control.background.video.blur.update();

        themeSetting.control.background.video.grayscale.update();

        themeSetting.control.background.video.scale.update();

        themeSetting.control.background.video.accent.update();

        themeSetting.control.background.video.opacity.update();

        themeSetting.control.background.video.vignette.opacity.update();

        themeSetting.control.background.video.vignette.start.update();

        themeSetting.control.background.video.vignette.end.update();

        themeSetting.control.opacity.general.update();

        themeSetting.control.opacity.toolbar.update();

        themeSetting.control.opacity.bookmark.update();

        themeSetting.control.opacity.search.update();

        themeSetting.control.opacity.openAll.update();

        themeSetting.disable();

        applyCSSVar([
          'theme.accent.rgb.r',
          'theme.accent.rgb.g',
          'theme.accent.rgb.b',
          'theme.accent.hsl.h',
          'theme.accent.hsl.s',
          'theme.accent.hsl.l',
          'theme.font.display.weight',
          'theme.font.display.style',
          'theme.font.ui.weight',
          'theme.font.ui.style',
          'theme.opacity.general',
          'theme.background.color.rgb.r',
          'theme.background.color.rgb.g',
          'theme.background.color.rgb.b',
          'theme.background.color.hsl.h',
          'theme.background.color.hsl.s',
          'theme.background.color.hsl.l',
          'theme.background.image.blur',
          'theme.background.image.grayscale',
          'theme.background.image.scale',
          'theme.background.image.accent',
          'theme.background.image.opacity',
          'theme.background.image.vignette.opacity',
          'theme.background.image.vignette.start',
          'theme.background.image.vignette.end',
          'theme.background.video.blur',
          'theme.background.video.grayscale',
          'theme.background.video.scale',
          'theme.background.video.accent',
          'theme.background.video.opacity',
          'theme.background.video.vignette.opacity',
          'theme.background.video.vignette.start',
          'theme.background.video.vignette.end',
          'theme.background.gradient.angle',
          'theme.background.gradient.start.rgb.r',
          'theme.background.gradient.start.rgb.g',
          'theme.background.gradient.start.rgb.b',
          'theme.background.gradient.start.hsl.h',
          'theme.background.gradient.start.hsl.s',
          'theme.background.gradient.start.hsl.l',
          'theme.background.gradient.end.rgb.r',
          'theme.background.gradient.end.rgb.g',
          'theme.background.gradient.end.rgb.b',
          'theme.background.gradient.end.hsl.h',
          'theme.background.gradient.end.hsl.s',
          'theme.background.gradient.end.hsl.l',
          'theme.radius',
          'theme.shadow',
          'theme.shade.opacity',
          'theme.shade.blur',
          'theme.layout.divider.size',
          'theme.header.color.rgb.r',
          'theme.header.color.rgb.g',
          'theme.header.color.rgb.b',
          'theme.header.color.hsl.h',
          'theme.header.color.hsl.s',
          'theme.header.color.hsl.l',
          'theme.header.color.opacity',
          'theme.header.search.opacity',
          'theme.bookmark.color.rgb.r',
          'theme.bookmark.color.rgb.g',
          'theme.bookmark.color.rgb.b',
          'theme.bookmark.color.hsl.h',
          'theme.bookmark.color.hsl.s',
          'theme.bookmark.color.hsl.l',
          'theme.bookmark.color.opacity',
          'theme.bookmark.item.opacity',
          'theme.toolbar.opacity',
          'theme.group.openAll.opacity'
        ]);

        applyCSSClass([
          'theme.style',
          'theme.background.type',
          'theme.header.color.by',
          'theme.bookmark.color.by'
        ]);

        applyCSSState([
          'theme.layout.divider.size'
        ]);

        layout_layout.area.render();

        bookmark_bookmark.item.mod.applyVar('border', state.get.current().theme.bookmark.item.border);

        bookmark_bookmark.item.mod.applyVar('color.opacity', state.get.current().theme.bookmark.item.opacity);

        groupAndBookmark.render();

        toolbar.current.update.accent();

        toolbar.current.update.style();

        header_header.element.search.update.style();

        if (component_group_group.area.current.length > 0) {

          component_group_group.area.current[0].update.style();

        };

        data.save();

      }
    })
  };

  this.previewTile = () => {

    const shadeSteps = 4;

    let hsl = presetThemeData.color.range.primary;

    hsl.l = Math.round(presetThemeData.color.contrast.start + ((presetThemeData.color.contrast.end - presetThemeData.color.contrast.start) / 2));

    let shadeStep = Math.round((presetThemeData.color.contrast.end - presetThemeData.color.contrast.start) / 10);

    for (let i = 1; i <= shadeSteps; i++) {

      let darken = () => { hsl.l = Math.round(hsl.l - shadeStep); };

      let lighten = () => { hsl.l = Math.round(hsl.l + shadeStep); };

      if (presetThemeData.style == 'dark') {

        darken();

      } else if (presetThemeData.style == 'light') {

        lighten();

      } else if (presetThemeData.style == 'system') {

        if (window.matchMedia('(prefers-color-scheme:dark)').matches) {
          darken();
        } else if (window.matchMedia('(prefers-color-scheme:light)').matches) {
          lighten();
        };

      };

      if (hsl.l < 0) { hsl.l = 0; };

      if (hsl.l > 100) { hsl.l = 100; };

      let rgb = convertColor.hsl.rgb(hsl);

      this.element.tile.style.setProperty('--theme-preset-background-0' + i + '-rgb-r', rgb.r);
      this.element.tile.style.setProperty('--theme-preset-background-0' + i + '-rgb-g', rgb.g);
      this.element.tile.style.setProperty('--theme-preset-background-0' + i + '-rgb-b', rgb.b);
      this.element.tile.style.setProperty('--theme-preset-background-0' + i + '-hsl-h', hsl.h);
      this.element.tile.style.setProperty('--theme-preset-background-0' + i + '-hsl-s', hsl.s);
      this.element.tile.style.setProperty('--theme-preset-background-0' + i + '-hsl-l', hsl.l);

      this.element.tile.style.setProperty('--theme-preset-background-0' + i, 'var(--theme-preset-background-0' + i + '-rgb-r), var(--theme-preset-background-0' + i + '-rgb-g), var(--theme-preset-background-0' + i + '-rgb-b)');

      this.element.preview.appendChild(node('span|class:theme-preset-background-0' + i));

    };

    this.element.tile.style.setProperty('--theme-preset-text', '0, 0%, calc(((((var(--theme-preset-background-01-rgb-r) * var(--theme-t-r)) + (var(--theme-preset-background-01-rgb-g) * var(--theme-t-g)) + (var(--theme-preset-background-01-rgb-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%)');

    this.element.tile.style.setProperty('--theme-preset-accent-rgb-r', presetThemeData.accent.rgb.r);
    this.element.tile.style.setProperty('--theme-preset-accent-rgb-g', presetThemeData.accent.rgb.g);
    this.element.tile.style.setProperty('--theme-preset-accent-rgb-b', presetThemeData.accent.rgb.b);

    this.element.tile.style.setProperty('--theme-preset-accent', 'var(--theme-preset-accent-rgb-r), var(--theme-preset-accent-rgb-g), var(--theme-preset-accent-rgb-b)');

    this.element.preview.appendChild(node('span|class:theme-preset-accent'));

    return node('div|class:theme-preset-tile')

  };

  this.assemble = () => {

    this.previewTile();

    this.element.preset.button.appendChild(this.element.preview);

    if (isValidString(presetThemeData.name)) {

      this.element.name.innerHTML = presetThemeData.name;

      this.element.preset.button.appendChild(this.element.name);

    };

    this.element.front.appendChild(this.element.preset.button);

    this.element.tile.appendChild(this.element.back);

    this.element.tile.appendChild(this.element.front);

  };

  this.tile = () => {

    return this.element.tile;

  };

  this.assemble();

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/accentPresetButton/index.css
var accentPresetButton = __webpack_require__(4017);
;// CONCATENATED MODULE: ./src/component/accentPresetButton/index.css

            

var accentPresetButton_options = {};

accentPresetButton_options.insert = "head";
accentPresetButton_options.singleton = false;

var accentPresetButton_update = injectStylesIntoStyleTag_default()(accentPresetButton/* default */.Z, accentPresetButton_options);



/* harmony default export */ const component_accentPresetButton = (accentPresetButton/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/accentPresetButton/index.js


















const AccentPresetButton = function({ presetData = false } = {}) {

  this.name = () => {

    let fullName = presetData.name;

    if (presetData.prefix) {
      fullName = presetData.prefix + ' ' + presetData.name.toLowerCase();
    };

    return fullName;

  };

  this.element = {
    button: new Button({
      text: this.name(),
      title: this.name(),
      srOnly: true,
      classList: ['theme-accent-preset-button', 'theme-accent-preset-type-' + presetData.type],
      func: () => {

        state.get.current().theme.accent.rgb = convertColor.hsl.rgb(presetData.hsl);

        state.get.current().theme.accent.hsl = presetData.hsl;

        applyCSSVar([
          'theme.accent.rgb.r',
          'theme.accent.rgb.g',
          'theme.accent.rgb.b',
          'theme.accent.hsl.h',
          'theme.accent.hsl.s',
          'theme.accent.hsl.l'
        ]);

        toolbar.current.update.style();

        toolbar.current.update.accent();

        themeSetting.control.accent.color.update();

        data.save();

      }
    }),
    preview: node('span|class:theme-accent-preset-preview')
  };

  this.previewTile = () => {

    this.element.preview.style.setProperty('--theme-accent-preset-color-hsl-h', presetData.hsl.h);

    this.element.preview.style.setProperty('--theme-accent-preset-color-hsl-s', presetData.hsl.s);

    this.element.preview.style.setProperty('--theme-accent-preset-color-hsl-l', presetData.hsl.l);

  };

  this.assemble = () => {

    this.previewTile();

    this.element.button.button.appendChild(this.element.preview);

  };

  this.button = () => {

    return this.element.button.button;

  };

  this.assemble();

};

;// CONCATENATED MODULE: ./src/component/control/sliderDouble/index.js

















const Control_sliderDouble = function({
  object = {},
  labelText = 'Name',
  left = {
    path: false,
    id: 'name',
    labelText: 'Name',
    hue: false,
    value: 0,
    defaultValue: false,
    min: 0,
    max: 100,
    step: 1,
    action: false,
    focusAction: false,
    blurAction: false,
    sliderAction: false,
    numberAction: false,
    resetAction: false,
    mouseDownAction: false,
    mouseUpAction: false
  },
  right = {
    path: false,
    id: 'name',
    labelText: 'Name',
    hue: false,
    value: 0,
    defaultValue: false,
    min: 0,
    max: 100,
    step: 1,
    action: false,
    focusAction: false,
    blurAction: false,
    sliderAction: false,
    numberAction: false,
    resetAction: false,
    mouseDownAction: false,
    mouseUpAction: false
  }
} = {}) {

  this.label = label_label({
    forInput: left.id,
    text: labelText
  });

  this.range = {
    left: new Control_slider({
      object: object,
      path: left.path,
      id: left.id,
      labelText: left.labelText,
      hue: left.hue,
      value: left.value,
      defaultValue: left.defaultValue,
      min: left.min,
      max: left.max,
      step: left.step,
      action: () => {

        if (get({ object: state.get.current(), path: left.path }) > get({ object: state.get.minMax(), path: left.path }).max - 10) {
          set({ object: state.get.current(), path: left.path, value: get({ object: state.get.minMax(), path: left.path }).max - 10 })
        };

        if (get({ object: state.get.current(), path: left.path }) >= get({ object: state.get.current(), path: right.path }) - 10) {
          set({ object: state.get.current(), path: right.path, value: get({ object: state.get.current(), path: left.path }) + 10 })
        };

        this.range.left.update();

        this.range.right.update();

        if (left.action) {
          left.action();
        };

      },
      focusAction: left.focusAction,
      blurAction: left.blurAction,
      sliderAction: left.sliderAction,
      numberAction: left.numberAction,
      resetAction: left.resetAction,
      mouseDownAction: left.mouseDownAction,
      mouseUpAction: left.mouseUpAction
    }),
    right: new Control_slider({
      object: object,
      path: right.path,
      id: right.id,
      labelText: right.labelText,
      hue: right.hue,
      value: right.value,
      defaultValue: right.defaultValue,
      min: right.min,
      max: right.max,
      step: right.step,
      action: () => {

        if (get({ object: state.get.current(), path: right.path }) < get({ object: state.get.minMax(), path: right.path }).min + 10) {
          set({ object: state.get.current(), path: right.path, value: get({ object: state.get.minMax(), path: right.path }).min + 10 })
        };

        if (get({ object: state.get.current(), path: right.path }) <= get({ object: state.get.current(), path: left.path }) + 10) {
          set({ object: state.get.current(), path: left.path, value: get({ object: state.get.current(), path: right.path }) - 10 })
        };

        this.range.left.update();

        this.range.right.update();

        if (right.action) {
          right.action();
        };

      },
      focusAction: right.focusAction,
      blurAction: right.blurAction,
      sliderAction: right.sliderAction,
      numberAction: right.numberAction,
      resetAction: right.resetAction,
      mouseDownAction: right.mouseDownAction,
      mouseUpAction: right.mouseUpAction
    })
  };

  this.wrap = () => {

    const leftNumberReset = group_group({
      children: [
        this.range.left.number
      ]
    });

    if (left.defaultValue || (typeof left.defaultValue === 'number' && left.defaultValue === 0)) {
      leftNumberReset.prepend(this.range.left.reset.button);
    };

    const rightNumberReset = group_group({
      children: [
        this.range.right.number
      ]
    });

    if (right.defaultValue || (typeof right.defaultValue === 'number' && right.defaultValue === 0)) {
      rightNumberReset.appendChild(this.range.right.reset.button);
    };

    const wrap = wrap_wrap({
      children: [
        wrap_wrap({
          children: [
            this.label,
            node('div|class:slider-double', [
              this.range.left.range,
              this.range.right.range
            ])
          ]
        }),
        wrap_wrap({
          children: [
            group_group({
              block: true,
              justify: 'space-between',
              children: [
                leftNumberReset,
                rightNumberReset
              ]
            })
          ]
        })
      ]
    });

    return wrap;

  };

  this.update = ({
    delay = false
  } = {}) => {

    let delayedUpdate = null;

    const updateControl = () => {
      this.range.left.update();
      this.range.right.update();
    };

    if (delay) {
      clearTimeout(delayedUpdate);
      delayedUpdate = setTimeout(updateControl, 2000);
    } else {
      updateControl();
    };

  };

};

;// CONCATENATED MODULE: ./src/component/control/textReset/index.js















const Control_textReset = function({
  object = {},
  path = false,
  id = 'name',
  value = false,
  defaultValue = false,
  min = false,
  max = false,
  placeholder = false,
  classList = [],
  labelText = 'Name',
  srOnly = false,
  action = false
} = {}) {

  this.label = label_label({
    forInput: id,
    text: labelText
  });

  if (srOnly) {
    this.label.classList.add('sr-only')
  };

  this.text = text_text({
    id: id,
    classList: classList,
    func: () => {
      if (path) {
        set({
          object: object,
          path: path,
          value: this.text.value
        });
      };
      if (action) {
        action();
      };
    }
  });

  if (value) {
    this.text.value = value;
  };

  if (min) {
    this.text.min = min;
  };

  if (max) {
    this.text.max = max;
  };

  if (placeholder) {
    this.text.placeholder = placeholder;
  };

  this.reset = new Button({
    text: false,
    iconName: 'replay',
    style: ['line'],
    classList: ['form-group-item-small'],
    func: () => {
      set({
        object: object,
        path: path,
        value: JSON.parse(JSON.stringify(defaultValue))
      });
      this.update();
      if (action) {
        action();
      };
    }
  });

  this.update = () => {
    this.text.value = get({
      object: object,
      path: path,
    });
  };

  this.wrap = () => {
    return wrap_wrap({
      children: [
        this.label,
        group_group({
          direction: 'horizontal',
          block: true,
          children: [
            this.text,
            this.reset.button
          ]
        })
      ]
    });
  };

  this.disable = () => {
    this.label.classList.add('disabled');
    this.text.disabled = true;
    this.reset.disable();
  };

  this.enable = () => {
    this.label.classList.remove('disabled');
    this.text.disabled = false;
    this.reset.enable();
  };

};

;// CONCATENATED MODULE: ./src/component/control/textarea/index.js















const Control_textarea = function({
  object = {},
  path = false,
  id = 'name',
  value = false,
  min = false,
  max = false,
  placeholder = false,
  classList = [],
  labelText = 'Name',
  srOnly = false,
  action = false
} = {}) {

  this.label = label_label({
    forInput: id,
    text: labelText
  });

  if (srOnly) {
    this.label.classList.add('sr-only')
  };

  this.textarea = textarea_textarea({
    id: id,
    classList: classList,
    func: () => {

      if (path) {
        set({ object: object, path: path, value: this.textarea.value });
      };

      if (action) { action(); };

    }
  });

  if (value) {
    this.textarea.value = value;
  };

  if (min) {
    this.textarea.min = min;
  };

  if (max) {
    this.textarea.max = max;
  };

  if (placeholder) {
    this.textarea.placeholder = placeholder;
  };

  this.update = () => {

    this.textarea.value = get({ object: object, path: path });

  };

  this.wrap = () => {
    return wrap_wrap({
      children: [
        this.label,
        this.textarea
      ]
    })
  };

  this.disable = () => {
    this.label.classList.add('disabled');
    this.textarea.disabled = true;
  };

  this.enable = () => {
    this.label.classList.remove('disabled');
    this.textarea.disabled = false;
  };

};

;// CONCATENATED MODULE: ./src/component/menuContent/themeSetting/index.js
















































const themeSetting = {};

themeSetting.control = {
  preset: {},
  saved: {},
  style: {},
  colour: {},
  accent: {},
  font: {},
  radius: {},
  shadow: {},
  shade: {},
  opacity: {},
  layout: {},
  header: {},
  bookmark: {},
  background: {}
};

themeSetting.disable = () => {

  if (state.get.current().theme.accent.random.active) {
    themeSetting.control.accent.style.enable();
    themeSetting.control.accent.randomiseNow.enable();
  } else {
    themeSetting.control.accent.style.disable();
    themeSetting.control.accent.randomiseNow.disable();
  };

  if (state.get.current().theme.accent.cycle.active) {
    themeSetting.control.accent.cycle.speed.enable();
    themeSetting.control.accent.cycle.step.enable();
    themeSetting.control.accent.cycle.stepHelper.enable();
  } else {
    themeSetting.control.accent.cycle.speed.disable();
    themeSetting.control.accent.cycle.step.disable();
    themeSetting.control.accent.cycle.stepHelper.disable();
  };

  switch (state.get.current().theme.header.by) {

    case 'theme':
      themeSetting.control.header.color.color.disable();
      themeSetting.control.header.color.opacity.disable();
      break;

    case 'custom':
      themeSetting.control.header.color.color.enable();
      themeSetting.control.header.color.opacity.enable();
      break;

  };

  switch (state.get.current().theme.background.type) {

    case 'theme':
    case 'accent':
      themeSetting.control.background.color.disable();
      themeSetting.control.background.gradient.angle.disable();
      themeSetting.control.background.gradient.start.disable();
      themeSetting.control.background.gradient.end.disable();
      themeSetting.control.background.image.url.disable();
      themeSetting.control.background.image.urlHelper.disable();
      themeSetting.control.background.image.blur.disable();
      themeSetting.control.background.image.grayscale.disable();
      themeSetting.control.background.image.scale.disable();
      themeSetting.control.background.image.accent.disable();
      themeSetting.control.background.image.opacity.disable();
      themeSetting.control.background.image.vignette.opacity.disable();
      themeSetting.control.background.image.vignette.start.disable();
      themeSetting.control.background.image.vignette.end.disable();
      themeSetting.control.background.video.url.disable();
      themeSetting.control.background.video.urlHelper.disable();
      themeSetting.control.background.video.blur.disable();
      themeSetting.control.background.video.grayscale.disable();
      themeSetting.control.background.video.scale.disable();
      themeSetting.control.background.video.accent.disable();
      themeSetting.control.background.video.opacity.disable();
      themeSetting.control.background.video.vignette.opacity.disable();
      themeSetting.control.background.video.vignette.start.disable();
      themeSetting.control.background.video.vignette.end.disable();
      break;

    case 'color':
      themeSetting.control.background.color.enable();
      themeSetting.control.background.gradient.angle.disable();
      themeSetting.control.background.gradient.start.disable();
      themeSetting.control.background.gradient.end.disable();
      themeSetting.control.background.image.url.disable();
      themeSetting.control.background.image.urlHelper.disable();
      themeSetting.control.background.image.blur.disable();
      themeSetting.control.background.image.grayscale.disable();
      themeSetting.control.background.image.scale.disable();
      themeSetting.control.background.image.accent.disable();
      themeSetting.control.background.image.opacity.disable();
      themeSetting.control.background.image.vignette.opacity.disable();
      themeSetting.control.background.image.vignette.start.disable();
      themeSetting.control.background.image.vignette.end.disable();
      themeSetting.control.background.video.url.disable();
      themeSetting.control.background.video.urlHelper.disable();
      themeSetting.control.background.video.blur.disable();
      themeSetting.control.background.video.grayscale.disable();
      themeSetting.control.background.video.scale.disable();
      themeSetting.control.background.video.accent.disable();
      themeSetting.control.background.video.opacity.disable();
      themeSetting.control.background.video.vignette.opacity.disable();
      themeSetting.control.background.video.vignette.start.disable();
      themeSetting.control.background.video.vignette.end.disable();
      break;

    case 'gradient':
      themeSetting.control.background.color.disable();
      themeSetting.control.background.gradient.angle.enable();
      themeSetting.control.background.gradient.start.enable();
      themeSetting.control.background.gradient.end.enable();
      themeSetting.control.background.image.url.disable();
      themeSetting.control.background.image.urlHelper.disable();
      themeSetting.control.background.image.blur.disable();
      themeSetting.control.background.image.grayscale.disable();
      themeSetting.control.background.image.scale.disable();
      themeSetting.control.background.image.accent.disable();
      themeSetting.control.background.image.opacity.disable();
      themeSetting.control.background.image.vignette.opacity.disable();
      themeSetting.control.background.image.vignette.start.disable();
      themeSetting.control.background.image.vignette.end.disable();
      themeSetting.control.background.video.url.disable();
      themeSetting.control.background.video.urlHelper.disable();
      themeSetting.control.background.video.blur.disable();
      themeSetting.control.background.video.grayscale.disable();
      themeSetting.control.background.video.scale.disable();
      themeSetting.control.background.video.accent.disable();
      themeSetting.control.background.video.opacity.disable();
      themeSetting.control.background.video.vignette.opacity.disable();
      themeSetting.control.background.video.vignette.start.disable();
      themeSetting.control.background.video.vignette.end.disable();
      break;

    case 'image':
      themeSetting.control.background.color.disable();
      themeSetting.control.background.gradient.angle.disable();
      themeSetting.control.background.gradient.start.disable();
      themeSetting.control.background.gradient.end.disable();
      themeSetting.control.background.image.url.enable();
      themeSetting.control.background.image.urlHelper.enable();
      themeSetting.control.background.image.blur.enable();
      themeSetting.control.background.image.grayscale.enable();
      themeSetting.control.background.image.scale.enable();
      themeSetting.control.background.image.accent.enable();
      themeSetting.control.background.image.opacity.enable();
      themeSetting.control.background.image.vignette.opacity.enable();
      themeSetting.control.background.image.vignette.start.enable();
      themeSetting.control.background.image.vignette.end.enable();
      themeSetting.control.background.video.url.disable();
      themeSetting.control.background.video.urlHelper.disable();
      themeSetting.control.background.video.blur.disable();
      themeSetting.control.background.video.grayscale.disable();
      themeSetting.control.background.video.scale.disable();
      themeSetting.control.background.video.accent.disable();
      themeSetting.control.background.video.opacity.disable();
      themeSetting.control.background.video.vignette.opacity.disable();
      themeSetting.control.background.video.vignette.start.disable();
      themeSetting.control.background.video.vignette.end.disable();
      break;

    case 'video':
      themeSetting.control.background.color.disable();
      themeSetting.control.background.gradient.angle.disable();
      themeSetting.control.background.gradient.start.disable();
      themeSetting.control.background.gradient.end.disable();
      themeSetting.control.background.image.url.disable();
      themeSetting.control.background.image.urlHelper.disable();
      themeSetting.control.background.image.blur.disable();
      themeSetting.control.background.image.grayscale.disable();
      themeSetting.control.background.image.scale.disable();
      themeSetting.control.background.image.accent.disable();
      themeSetting.control.background.image.opacity.disable();
      themeSetting.control.background.image.vignette.opacity.disable();
      themeSetting.control.background.image.vignette.start.disable();
      themeSetting.control.background.image.vignette.end.disable();
      themeSetting.control.background.video.url.enable();
      themeSetting.control.background.video.urlHelper.enable();
      themeSetting.control.background.video.blur.enable();
      themeSetting.control.background.video.grayscale.enable();
      themeSetting.control.background.video.scale.enable();
      themeSetting.control.background.video.accent.enable();
      themeSetting.control.background.video.opacity.enable();
      themeSetting.control.background.video.vignette.opacity.enable();
      themeSetting.control.background.video.vignette.start.enable();
      themeSetting.control.background.video.vignette.end.enable();
      break;

  };

};

themeSetting.preset = (parent) => {

  themeSetting.control.preset.presetHelper = new Control_helperText({
    text: ['Applying a Preset will replace the current Colour, Accent, Font, Style, Radius, Shadow, Shade and Background.']
  });

  const preset = () => {

    const themePresetElement = node('div|class:theme-preset');

    themePreset.get().forEach((item, i) => {

      const presetTheme = new PresetThemeTile({
        presetThemeData: item
      });

      themePresetElement.appendChild(presetTheme.tile());

    });

    return themePresetElement;

  };

  parent.appendChild(
    node('div', [
      preset(),
      themeSetting.control.preset.presetHelper.wrap()
    ])
  );

};

themeSetting.saved = (parent) => {

  themeSetting.control.saved = {
    savedElement: node('div|class:theme-custom'),
    customHelper: new Control_helperText({
      text: ['Saving a Theme will record the current Colour, Accent, Font, Style, Radius, Shadow, Shade and Background.']
    }),
    saveButton: new Button({
      text: 'Save current theme',
      style: ['line'],
      func: () => {
        menu.close();
        customTheme.add.render();
      }
    }),
    edit: new Button({
      text: 'Edit',
      style: ['line'],
      func: () => {
        customTheme.edit.toggle();
        data.save();
      }
    })
  };

  if (state.get.current().theme.custom.all.length > 0) {

    parent.appendChild(
      node('div', [
        customTheme.item.render(themeSetting.control.saved.savedElement),
        node('hr'),
        wrap_wrap({
          children: [
            inline_inline({
              gap: 'small',
              children: [
                themeSetting.control.saved.saveButton.wrap(),
                themeSetting.control.saved.edit.wrap()
              ]
            })
          ]
        }),
        themeSetting.control.saved.customHelper.wrap()
      ])
    );

  } else {

    parent.appendChild(
      node('div', [
        wrap_wrap({
          children: [
            inline_inline({
              gap: 'small',
              children: [
                themeSetting.control.saved.saveButton.wrap()
              ]
            })
          ]
        }),
        themeSetting.control.saved.customHelper.wrap()
      ])
    );

  };

};

themeSetting.style = (parent) => {

  themeSetting.control.style = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'theme-style-dark', labelText: 'Dark mode', description: false, value: 'dark' },
      { id: 'theme-style-light', labelText: 'Light mode', description: false, value: 'light' },
      { id: 'theme-style-system', labelText: 'Automatic', description: 'Follow the system Light or Dark mode.', value: 'system' }
    ],
    groupName: 'theme-style',
    path: 'theme.style',
    action: () => {
      theme_theme.style.initial();
      applyCSSClass('theme.style');
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      themeSetting.control.style.wrap()
    ])
  );

};

themeSetting.colour = (parent) => {

  const shade = () => {

    const formSticky = sticky_sticky();

    const formGroup = group_group({
      block: true,
      border: true
    });

    const shadeCount = state.get.current().theme.color.shades;

    for (var i = 1; i <= shadeCount; i++) {
      let count = i;

      if (count < 10) {
        count = '0' + count;
      };

      formGroup.appendChild(
        node('div|class:form-group-text form-group-text-borderless', [
          node('div|class:theme-color-box theme-color-shade-' + count + '')
        ])
      );
    };

    formSticky.appendChild(formGroup);

    return formSticky;
  };

  themeSetting.control.color = {
    range: {
      primary: {
        h: new Control_slider({
          object: state.get.current(),
          path: 'theme.color.range.primary.h',
          id: 'theme-color-range-primary-h',
          labelText: 'Primary colour',
          hue: true,
          value: state.get.current().theme.color.range.primary.h,
          defaultValue: state.get.default().theme.color.range.primary.h,
          min: state.get.minMax().theme.color.range.primary.h.min,
          max: state.get.minMax().theme.color.range.primary.h.max,
          action: () => {
            theme_theme.color.render();
            data.save();
          }
        }),
        s: new Control_slider({
          object: state.get.current(),
          path: 'theme.color.range.primary.s',
          id: 'theme-color-range-primary-s',
          labelText: 'Saturation',
          value: state.get.current().theme.color.range.primary.s,
          defaultValue: state.get.default().theme.color.range.primary.s,
          min: state.get.minMax().theme.color.range.primary.s.min,
          max: state.get.minMax().theme.color.range.primary.s.max,
          action: () => {
            theme_theme.color.render();
            data.save();
          }
        })
      }
    },
    contrast: new Control_sliderDouble({
      object: state.get.current(),
      labelText: 'Contrast range',
      left: {
        path: 'theme.color.contrast.start',
        id: 'theme-color-contrast-start',
        labelText: 'Contrast start',
        value: state.get.current().theme.color.contrast.start,
        defaultValue: state.get.default().theme.color.contrast.start,
        min: state.get.minMax().theme.color.contrast.start.min,
        max: state.get.minMax().theme.color.contrast.start.max,
        action: () => {
          theme_theme.color.render();
          data.save();
        }
      },
      right: {
        path: 'theme.color.contrast.end',
        id: 'theme-color-contrast-end',
        labelText: 'Contrast end',
        value: state.get.current().theme.color.contrast.end,
        defaultValue: state.get.default().theme.color.contrast.end,
        min: state.get.minMax().theme.color.contrast.end.min,
        max: state.get.minMax().theme.color.contrast.end.max,
        action: () => {
          theme_theme.color.render();
          data.save();
        }
      }
    }),
    shade: {
      helper: new Control_helperText({
        text: [
          'Backgrounds, Bookmarks and Modals use shades from the left.',
          'Text and form elements use shades from the right.',
          'For a light look switch to the Light Style and then select a Primary colour. And vice versa for a dark look.'
        ]
      })
    }
  };

  parent.appendChild(
    node('div', [
      shade(),
      themeSetting.control.color.shade.helper.wrap(),
      node('hr'),
      themeSetting.control.color.range.primary.h.wrap(),
      themeSetting.control.color.range.primary.s.wrap(),
      themeSetting.control.color.contrast.wrap()
    ])
  );

};

themeSetting.accent = (parent) => {

  const preset = () => {

    const allPreset = accentPreset.get();

    const formWrap = wrap_wrap();

    const themeAccentPreset = node('div|class:theme-accent-preset');

    allPreset.forEach((item, i) => {

      const presetButton = new AccentPresetButton({
        presetData: item
      });

      themeAccentPreset.appendChild(presetButton.button());

    });

    formWrap.appendChild(themeAccentPreset);

    return formWrap;

  };

  themeSetting.control.accent.color = new Control_colorMixer({
    object: state.get.current(),
    path: 'theme.accent',
    id: 'theme-accent',
    labelText: 'Accent colour',
    defaultValue: state.get.default().theme.accent.rgb,
    minMaxObject: state.get.minMax(),
    action: () => {
      applyCSSVar([
        'theme.accent.rgb.r',
        'theme.accent.rgb.g',
        'theme.accent.rgb.b',
        'theme.accent.hsl.h',
        'theme.accent.hsl.s',
        'theme.accent.hsl.l'
      ]);
      toolbar.current.update.style();
      toolbar.current.update.accent();
      data.save();
    }
  });

  themeSetting.control.accent.style = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'theme-accent-random-style-any', labelText: 'Any', value: 'any' },
      { id: 'theme-accent-random-style-light', labelText: 'Light', value: 'light' },
      { id: 'theme-accent-random-style-dark', labelText: 'Dark', value: 'dark' },
      { id: 'theme-accent-random-style-pastel', labelText: 'Pastel', value: 'pastel' },
      { id: 'theme-accent-random-style-saturated', labelText: 'Saturated', value: 'saturated' },
    ],
    groupName: 'theme-accent-random-style',
    path: 'theme.accent.random.style',
    action: () => {
      data.save();
    }
  });

  themeSetting.control.accent.random = {};

  themeSetting.control.accent.random.active = new Control_checkbox({
    object: state.get.current(),
    path: 'theme.accent.random.active',
    id: 'theme-accent-random-active',
    labelText: 'Random Accent colour on load/refresh',
    action: () => {
      themeSetting.disable();
      themeSetting.control.accent.random.collapse.update();
      data.save();
    }
  });

  themeSetting.control.accent.randomiseNow = new Button({
    text: 'Randomise now',
    style: ['line'],
    func: () => {
      theme_theme.accent.random.render();
      applyCSSVar([
        'theme.accent.rgb.r',
        'theme.accent.rgb.g',
        'theme.accent.rgb.b',
        'theme.accent.hsl.h',
        'theme.accent.hsl.s',
        'theme.accent.hsl.l'
      ]);
      toolbar.current.update.style();
      toolbar.current.update.accent();
      themeSetting.control.accent.color.update();
      data.save();
    }
  });

  themeSetting.control.accent.random.area = node('div', [
    themeSetting.control.accent.style.inline(),
    themeSetting.control.accent.randomiseNow.wrap()
  ]);

  themeSetting.control.accent.random.collapse = new Collapse({
    type: 'checkbox',
    checkbox: themeSetting.control.accent.random.active,
    target: [{
      content: themeSetting.control.accent.random.area
    }]
  });

  themeSetting.control.accent.cycle = {};

  themeSetting.control.accent.cycle.active = new Control_checkbox({
    object: state.get.current(),
    path: 'theme.accent.cycle.active',
    id: 'theme-accent-random-cycle-active',
    labelText: 'Auto change Accent hue',
    action: () => {
      themeSetting.control.accent.cycle.collapse.update();
      theme_theme.accent.cycle.bind();
      themeSetting.disable();
      data.save();
    }
  });

  themeSetting.control.accent.cycle.speed = new Control_slider({
    object: state.get.current(),
    path: 'theme.accent.cycle.speed',
    id: 'theme-accent-random-cycle-speed',
    labelText: 'Change delay',
    value: state.get.current().theme.accent.cycle.speed,
    defaultValue: state.get.default().theme.accent.cycle.speed,
    min: state.get.minMax().theme.accent.cycle.speed.min,
    max: state.get.minMax().theme.accent.cycle.speed.max,
    action: () => {
      theme_theme.accent.cycle.bind();
      data.save();
    }
  });

  themeSetting.control.accent.cycle.step = new Control_slider({
    object: state.get.current(),
    path: 'theme.accent.cycle.step',
    id: 'theme-accent-random-cycle-step',
    labelText: 'Change steps',
    value: state.get.current().theme.accent.cycle.step,
    defaultValue: state.get.default().theme.accent.cycle.step,
    min: state.get.minMax().theme.accent.cycle.step.min,
    max: state.get.minMax().theme.accent.cycle.step.max,
    action: () => {
      theme_theme.accent.cycle.bind();
      data.save();
    }
  });

  themeSetting.control.accent.cycle.stepHelper = new Control_helperText({
    text: [
      'Take care as a small delay in Accent hue change may cause performance issues.',
      'Auto change Accent hue will not work when the Accent colour is a grey or black.'
    ]
  });

  themeSetting.control.accent.cycle.area = node('div', [
    themeSetting.control.accent.cycle.speed.wrap(),
    themeSetting.control.accent.cycle.step.wrap(),
    themeSetting.control.accent.cycle.stepHelper.wrap()
  ]);

  themeSetting.control.accent.cycle.collapse = new Collapse({
    type: 'checkbox',
    checkbox: themeSetting.control.accent.cycle.active,
    target: [{
      content: themeSetting.control.accent.cycle.area
    }]
  });

  parent.appendChild(
    node('div', [
      preset(),
      node('hr'),
      themeSetting.control.accent.color.wrap(),
      node('hr'),
      themeSetting.control.accent.random.active.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              themeSetting.control.accent.random.collapse.collapse()
            ]
          })
        ]
      }),
      node('hr'),
      themeSetting.control.accent.cycle.active.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              themeSetting.control.accent.cycle.collapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};

themeSetting.font = (parent) => {

  const fontWeight = { light: 300, regular: 400, bold: 700 };

  themeSetting.control.font.display = {
    name: new Control_textReset({
      object: state.get.current(),
      path: 'theme.font.display.name',
      id: 'theme-font-display-name',
      value: state.get.current().theme.font.display.name,
      defaultValue: state.get.default().theme.font.display.name,
      placeholder: 'Google font name',
      labelText: 'Display font',
      action: () => {
        theme_theme.font.display.delay();
        data.save();
      }
    }),
    nameHelper: new Control_helperText({
      text: [
        'Use a <a href="https://fonts.google.com/" target="_blank">Google Font</a> to customise the Clock, Date, Group names and Bookmark Letters.',
        'Add a font name as it appears on Google Fonts, including capital letters and spaces, eg: enter "Fredoka One" or "Kanit"',
        'Clear the field to use the default font "Fjalla One".'
      ]
    }),
    weight: new Control_slider({
      object: state.get.current(),
      path: 'theme.font.display.weight',
      id: 'theme-font-display-weight',
      labelText: 'Font weight',
      value: state.get.current().theme.font.display.weight,
      defaultValue: state.get.default().theme.font.display.weight,
      step: state.get.step().theme.font.display.weight,
      min: state.get.minMax().theme.font.display.weight.min,
      max: state.get.minMax().theme.font.display.weight.max,
      action: () => {
        applyCSSVar('theme.font.display.weight');
        data.save();
      }
    }),
    weightLight: new Button({
      text: 'Light',
      style: ['line'],
      func: () => {
        state.get.current().theme.font.display.weight = fontWeight.light;
        applyCSSVar('theme.font.display.weight');
        themeSetting.control.font.display.weight.update();
        data.save();
      }
    }),
    weightRegular: new Button({
      text: 'Regular',
      style: ['line'],
      func: () => {
        state.get.current().theme.font.display.weight = fontWeight.regular;
        applyCSSVar('theme.font.display.weight');
        themeSetting.control.font.display.weight.update();
        data.save();
      }
    }),
    weightBold: new Button({
      text: 'Bold',
      style: ['line'],
      func: () => {
        state.get.current().theme.font.display.weight = fontWeight.bold;
        applyCSSVar('theme.font.display.weight');
        themeSetting.control.font.display.weight.update();
        data.save();
      }
    }),
    weightHelper: new Control_helperText({
      text: ['Not all fonts support all weights. Refer to the Google Font page to see which are available.']
    }),
    style: new Control_radio({
      object: state.get.current(),
      radioGroup: [
        { id: 'theme-font-display-style-normal', labelText: 'Normal', value: 'normal' },
        { id: 'theme-font-display-style-italic', labelText: 'Italic', value: 'italic' }
      ],
      groupName: 'theme-font-display-style',
      path: 'theme.font.display.style',
      inputButton: true,
      inputHide: true,
      inputButtonStyle: ['line'],
      action: () => {
        applyCSSVar('theme.font.display.style');
        data.save();
      }
    })
  };

  themeSetting.control.font.ui = {
    name: new Control_textReset({
      object: state.get.current(),
      path: 'theme.font.ui.name',
      id: 'theme-font-ui-name',
      value: state.get.current().theme.font.ui.name,
      defaultValue: state.get.default().theme.font.ui.name,
      placeholder: 'Google font name',
      labelText: 'User interface font',
      action: () => {
        theme_theme.font.ui.delay();
        data.save();
      }
    }),
    nameHelper: new Control_helperText({
      text: [
        'Use a <a href="https://fonts.google.com/" target="_blank">Google Font</a> to customise the Bookmark name, URL and form elements.',
        'Add a font name as it appears on Google Fonts, including capital letters and spaces, eg: enter "Roboto", "Source Sans Pro" or "Noto Sans"',
        'Clear the field to use the default font "Open Sans".'
      ]
    }),
    weight: new Control_slider({
      object: state.get.current(),
      path: 'theme.font.ui.weight',
      id: 'theme-font-ui-weight',
      labelText: 'Font weight',
      value: state.get.current().theme.font.ui.weight,
      defaultValue: state.get.default().theme.font.ui.weight,
      step: state.get.step().theme.font.ui.weight,
      min: state.get.minMax().theme.font.ui.weight.min,
      max: state.get.minMax().theme.font.ui.weight.max,
      action: () => {
        applyCSSVar('theme.font.ui.weight');
        data.save();
      }
    }),
    weightLight: new Button({
      text: 'Light',
      style: ['line'],
      func: () => {
        state.get.current().theme.font.ui.weight = fontWeight.light;
        applyCSSVar('theme.font.ui.weight');
        themeSetting.control.font.ui.weight.update();
        data.save();
      }
    }),
    weightRegular: new Button({
      text: 'Regular',
      style: ['line'],
      func: () => {
        state.get.current().theme.font.ui.weight = fontWeight.regular;
        applyCSSVar('theme.font.ui.weight');
        themeSetting.control.font.ui.weight.update();
        data.save();
      }
    }),
    weightBold: new Button({
      text: 'Bold',
      style: ['line'],
      func: () => {
        state.get.current().theme.font.ui.weight = fontWeight.bold;
        applyCSSVar('theme.font.ui.weight');
        themeSetting.control.font.ui.weight.update();
        data.save();
      }
    }),
    weightHelper: new Control_helperText({
      text: ['Not all fonts support all weights. Refer to the Google Font page to see which are available.']
    }),
    style: new Control_radio({
      object: state.get.current(),
      radioGroup: [
        { id: 'theme-font-ui-style-normal', labelText: 'Normal', value: 'normal' },
        { id: 'theme-font-ui-style-italic', labelText: 'Italic', value: 'italic' }
      ],
      groupName: 'theme-font-ui-style',
      path: 'theme.font.ui.style',
      inputButton: true,
      inputHide: true,
      inputButtonStyle: ['line'],
      action: () => {
        applyCSSVar('theme.font.ui.style');
        data.save();
      }
    })
  };

  parent.appendChild(
    node('div', [
      themeSetting.control.font.display.name.wrap(),
      themeSetting.control.font.display.nameHelper.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              themeSetting.control.font.display.weight.wrap(),
              wrap_wrap({
                children: [
                  group_group({
                    children: [
                      themeSetting.control.font.display.weightLight.button,
                      themeSetting.control.font.display.weightRegular.button,
                      themeSetting.control.font.display.weightBold.button
                    ]
                  })
                ]
              }),
              themeSetting.control.font.display.style.inputButton(),
              themeSetting.control.font.display.weightHelper.wrap()
            ]
          })
        ]
      }),
      node('hr'),
      themeSetting.control.font.ui.name.wrap(),
      themeSetting.control.font.ui.nameHelper.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              themeSetting.control.font.ui.weight.wrap(),
              wrap_wrap({
                children: [
                  group_group({
                    children: [
                      themeSetting.control.font.ui.weightLight.button,
                      themeSetting.control.font.ui.weightRegular.button,
                      themeSetting.control.font.ui.weightBold.button
                    ]
                  })
                ]
              }),
              themeSetting.control.font.ui.style.inputButton(),
              themeSetting.control.font.ui.weightHelper.wrap()
            ]
          })
        ]
      })
    ])
  );

};

themeSetting.radius = (parent) => {

  themeSetting.control.radius = new Control_slider({
    object: state.get.current(),
    path: 'theme.radius',
    id: 'theme-radius',
    labelText: 'Corners radius',
    value: state.get.current().theme.radius,
    defaultValue: state.get.default().theme.radius,
    min: state.get.minMax().theme.radius.min,
    max: state.get.minMax().theme.radius.max,
    action: () => {
      applyCSSVar('theme.radius');
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      themeSetting.control.radius.wrap()
    ])
  );

};

themeSetting.shadow = (parent) => {

  themeSetting.control.shadow = new Control_slider({
    object: state.get.current(),
    path: 'theme.shadow',
    id: 'theme-shadow',
    labelText: 'Shadow size',
    value: state.get.current().theme.shadow,
    defaultValue: state.get.default().theme.shadow,
    min: state.get.minMax().theme.shadow.min,
    max: state.get.minMax().theme.shadow.max,
    action: () => {
      applyCSSVar('theme.shadow');
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      themeSetting.control.shadow.wrap()
    ])
  );

};

themeSetting.shade = (parent) => {

  themeSetting.control.shade = {
    opacity: new Control_slider({
      object: state.get.current(),
      path: 'theme.shade.opacity',
      id: 'theme.shade.opacity',
      labelText: 'Shade opacity',
      value: state.get.current().theme.shade.opacity,
      defaultValue: state.get.default().theme.shade.opacity,
      min: state.get.minMax().theme.shade.opacity.min,
      max: state.get.minMax().theme.shade.opacity.max,
      action: () => {
        applyCSSVar('theme.shade.opacity');
        data.save();
      }
    }),
    blur: new Control_slider({
      object: state.get.current(),
      path: 'theme.shade.blur',
      id: 'theme.shade.blur',
      labelText: 'Shade blur',
      value: state.get.current().theme.shade.blur,
      defaultValue: state.get.default().theme.shade.blur,
      min: state.get.minMax().theme.shade.blur.min,
      max: state.get.minMax().theme.shade.blur.max,
      action: () => {
        applyCSSVar('theme.shade.blur');
        data.save();
      }
    })
  };

  parent.appendChild(
    node('div', [
      themeSetting.control.shade.opacity.wrap(),
      themeSetting.control.shade.blur.wrap()
    ])
  );

};

themeSetting.opacity = (parent) => {

  themeSetting.control.opacity.general = new Control_slider({
    object: state.get.current(),
    path: 'theme.opacity.general',
    id: 'theme-opacity-general',
    labelText: 'All opacity',
    value: state.get.current().theme.opacity.general,
    defaultValue: state.get.default().theme.opacity.general,
    min: state.get.minMax().theme.opacity.general.min,
    max: state.get.minMax().theme.opacity.general.max,
    action: () => {

      state.get.current().theme.bookmark.item.opacity = state.get.current().theme.opacity.general;

      state.get.current().theme.toolbar.opacity = state.get.current().theme.opacity.general;

      state.get.current().theme.header.search.opacity = state.get.current().theme.opacity.general;

      state.get.current().theme.group.openAll.opacity = state.get.current().theme.opacity.general;

      themeSetting.control.opacity.toolbar.update();

      themeSetting.control.opacity.bookmark.update();

      themeSetting.control.opacity.search.update();

      themeSetting.control.opacity.openAll.update();

      applyCSSVar([
        'theme.opacity.general',
        'theme.toolbar.opacity',
        'theme.bookmark.item.opacity',
        'theme.header.search.opacity',
        'theme.group.openAll.opacity'
      ]);

      bookmark_bookmark.item.mod.applyVar('color.opacity', state.get.current().theme.bookmark.item.opacity);

      groupAndBookmark.render();

      toolbar.current.update.style();

      header_header.element.search.update.style();

      if (component_group_group.area.current.length > 0) {

        component_group_group.area.current[0].update.style();

      };

      data.save();

    }
  });

  themeSetting.control.opacity.generalHelper = new Control_helperText({
    text: ['Change the opacity of Search bar, Bookmarks, Group controls and the Toolbar.', 'Opacity can also be changed when editing individual Bookmarks.']
  });

  themeSetting.control.opacity.toolbar = new Control_sliderSlim({
    object: state.get.current(),
    path: 'theme.toolbar.opacity',
    id: 'theme-toolbar-opacity',
    labelText: 'Toolbar',
    value: state.get.current().theme.toolbar.opacity,
    defaultValue: state.get.default().theme.toolbar.opacity,
    min: state.get.minMax().theme.toolbar.opacity.min,
    max: state.get.minMax().theme.toolbar.opacity.max,
    action: () => {

      applyCSSVar('theme.toolbar.opacity');

      toolbar.current.update.style();

      data.save();

    }
  });

  themeSetting.control.opacity.bookmark = new Control_sliderSlim({
    object: state.get.current(),
    path: 'theme.bookmark.item.opacity',
    id: 'theme-bookmark-item-opacity',
    labelText: 'Bookmark',
    value: state.get.current().theme.bookmark.item.opacity,
    defaultValue: state.get.default().theme.bookmark.item.opacity,
    min: state.get.minMax().theme.bookmark.item.opacity.min,
    max: state.get.minMax().theme.bookmark.item.opacity.max,
    action: () => {

      applyCSSVar('theme.bookmark.item.opacity');

      bookmark_bookmark.item.mod.applyVar('color.opacity', state.get.current().theme.bookmark.item.opacity);

      groupAndBookmark.render();

      data.save();

    }
  });

  themeSetting.control.opacity.search = new Control_sliderSlim({
    object: state.get.current(),
    path: 'theme.header.search.opacity',
    id: 'theme-header-search-opacity',
    labelText: 'Search box',
    value: state.get.current().theme.header.search.opacity,
    defaultValue: state.get.default().theme.header.search.opacity,
    min: state.get.minMax().theme.header.search.opacity.min,
    max: state.get.minMax().theme.header.search.opacity.max,
    action: () => {

      applyCSSVar('theme.header.search.opacity');

      header_header.element.search.update.style();

      data.save();

    }
  });

  themeSetting.control.opacity.openAll = new Control_sliderSlim({
    object: state.get.current(),
    path: 'theme.group.openAll.opacity',
    id: 'theme-group-open-all-opacity',
    labelText: 'Open all',
    value: state.get.current().theme.group.openAll.opacity,
    defaultValue: state.get.default().theme.group.openAll.opacity,
    min: state.get.minMax().theme.group.openAll.opacity.min,
    max: state.get.minMax().theme.group.openAll.opacity.max,
    action: () => {

      applyCSSVar('theme.group.openAll.opacity');

      if (component_group_group.area.current.length > 0) {

        component_group_group.area.current[0].update.style();

      };

      data.save();

    }
  });

  parent.appendChild(
    node('div', [
      themeSetting.control.opacity.general.wrap(),
      themeSetting.control.opacity.generalHelper.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              themeSetting.control.opacity.toolbar.wrap(),
              themeSetting.control.opacity.bookmark.wrap(),
              themeSetting.control.opacity.search.wrap(),
              themeSetting.control.opacity.openAll.wrap()
            ]
          })
        ]
      })
    ])
  );

};

themeSetting.background = (parent) => {

  const updateVideoPlayState = () => {

    if (theme_theme.background.element.video) {
      if (themeSetting.control.background.type.value() === 'video') {
        theme_theme.background.element.video.play();
      } else {
        theme_theme.background.element.video.pause();
      };
    };

  };

  themeSetting.control.background = {
    type: new Control_radio({
      object: state.get.current(),
      radioGroup: [
        { id: 'theme-background-type-theme', labelText: 'Background by Theme', description: 'Use the Background colour defined by the Theme.', value: 'theme' },
        { id: 'theme-background-type-accent', labelText: 'Background by Accent', description: 'Use the Accent colour for the Background.', value: 'accent' },
        { id: 'theme-background-type-color', labelText: 'Custom colour', value: 'color' },
        { id: 'theme-background-type-gradient', labelText: 'Gradient', value: 'gradient' },
        { id: 'theme-background-type-image', labelText: 'Image', value: 'image' },
        { id: 'theme-background-type-video', labelText: 'Video', value: 'video' }
      ],
      groupName: 'theme-background-type',
      path: 'theme.background.type',
      action: () => {
        applyCSSClass('theme.background.type');
        themeSetting.control.background.typeCollapse.update();
        toolbar.current.update.style();
        themeSetting.disable();
        updateVideoPlayState();
        data.save();
      }
    }),
    color: new Control_colorMixer({
      object: state.get.current(),
      path: 'theme.background.color',
      id: 'theme-background-color',
      labelText: 'Background colour',
      defaultValue: state.get.default().theme.background.color.rgb,
      minMaxObject: state.get.minMax(),
      action: () => {
        applyCSSVar([
          'theme.background.color.rgb.r',
          'theme.background.color.rgb.g',
          'theme.background.color.rgb.b',
          'theme.background.color.hsl.h',
          'theme.background.color.hsl.s',
          'theme.background.color.hsl.l'
        ]);
        toolbar.current.update.style();
        data.save();
      }
    }),
    gradient: {
      angle: new Control_slider({
        object: state.get.current(),
        path: 'theme.background.gradient.angle',
        id: 'theme-background-gradient-angle',
        labelText: 'Background gradient angle',
        value: state.get.current().theme.background.gradient.angle,
        defaultValue: state.get.default().theme.background.gradient.angle,
        min: state.get.minMax().theme.background.gradient.angle.min,
        max: state.get.minMax().theme.background.gradient.angle.max,
        action: () => {
          applyCSSVar('theme.background.gradient.angle');
          toolbar.current.update.style();
          data.save();
        }
      }),
      start: new Control_colorMixer({
        object: state.get.current(),
        path: 'theme.background.gradient.start',
        id: 'theme-background-gradient-start',
        labelText: 'Background gradient start',
        defaultValue: state.get.default().theme.background.gradient.start.rgb,
        minMaxObject: state.get.minMax(),
        action: () => {
          applyCSSVar([
            'theme.background.gradient.start.rgb.r',
            'theme.background.gradient.start.rgb.g',
            'theme.background.gradient.start.rgb.b',
            'theme.background.gradient.start.hsl.h',
            'theme.background.gradient.start.hsl.s',
            'theme.background.gradient.start.hsl.l'
          ]);
          toolbar.current.update.style();
          data.save();
        }
      }),
      end: new Control_colorMixer({
        object: state.get.current(),
        path: 'theme.background.gradient.end',
        id: 'theme-background-gradient-end',
        labelText: 'Background gradient end',
        defaultValue: state.get.default().theme.background.gradient.end.rgb,
        minMaxObject: state.get.minMax(),
        action: () => {
          applyCSSVar([
            'theme.background.gradient.end.rgb.r',
            'theme.background.gradient.end.rgb.g',
            'theme.background.gradient.end.rgb.b',
            'theme.background.gradient.end.hsl.h',
            'theme.background.gradient.end.hsl.s',
            'theme.background.gradient.end.hsl.l'
          ]);
          toolbar.current.update.style();
          data.save();
        }
      })
    },
    image: {
      url: new Control_textarea({
        object: state.get.current(),
        path: 'theme.background.image.url',
        id: 'theme-background-image-url',
        value: state.get.current().theme.background.image.url,
        placeholder: 'https://www.example.com/image.jpg',
        labelText: 'URL',
        action: () => {
          theme_theme.background.image.render();
          data.save();
        }
      }),
      urlHelper: new Control_helperText({
        text: [
          'Add more than one URL separated by spaces or on new lines for a random background image on load.',
          'Unsplash can be used for random images, eg:',
          'https://source.unsplash.com/random/1920x1080/?night,day,sky',
          'Change parameters after .../random/ for more options. Loading times may vary.'
        ]
      }),
      blur: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.image.blur',
        id: 'theme-background-image-blur',
        labelText: 'Blur',
        value: state.get.current().theme.background.image.blur,
        defaultValue: state.get.default().theme.background.image.blur,
        min: state.get.minMax().theme.background.image.blur.min,
        max: state.get.minMax().theme.background.image.blur.max,
        action: () => {
          applyCSSVar('theme.background.image.blur');
          data.save();
        }
      }),
      grayscale: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.image.grayscale',
        id: 'theme-background-image-grayscale',
        labelText: 'Grayscale',
        value: state.get.current().theme.background.image.grayscale,
        defaultValue: state.get.default().theme.background.image.grayscale,
        min: state.get.minMax().theme.background.image.grayscale.min,
        max: state.get.minMax().theme.background.image.grayscale.max,
        action: () => {
          applyCSSVar('theme.background.image.grayscale');
          data.save();
        }
      }),
      scale: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.image.scale',
        id: 'theme-background-image-scale',
        labelText: 'Scale',
        value: state.get.current().theme.background.image.scale,
        defaultValue: state.get.default().theme.background.image.scale,
        min: state.get.minMax().theme.background.image.scale.min,
        max: state.get.minMax().theme.background.image.scale.max,
        action: () => {
          applyCSSVar('theme.background.image.scale');
          data.save();
        }
      }),
      accent: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.image.accent',
        id: 'theme-background-image-accent',
        labelText: 'Accent',
        value: state.get.current().theme.background.image.accent,
        defaultValue: state.get.default().theme.background.image.accent,
        min: state.get.minMax().theme.background.image.accent.min,
        max: state.get.minMax().theme.background.image.accent.max,
        action: () => {
          applyCSSVar('theme.background.image.accent');
          data.save();
        }
      }),
      opacity: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.image.opacity',
        id: 'theme-background-image-opacity',
        labelText: 'Opacity',
        value: state.get.current().theme.background.image.opacity,
        defaultValue: state.get.default().theme.background.image.opacity,
        min: state.get.minMax().theme.background.image.opacity.min,
        max: state.get.minMax().theme.background.image.opacity.max,
        action: () => {
          applyCSSVar('theme.background.image.opacity');
          data.save();
        }
      }),
      vignette: {
        opacity: new Control_sliderSlim({
          object: state.get.current(),
          path: 'theme.background.image.vignette.opacity',
          id: 'theme-background-image-vignette-opacity',
          labelText: 'Vignette',
          value: state.get.current().theme.background.image.vignette.opacity,
          defaultValue: state.get.default().theme.background.image.vignette.opacity,
          min: state.get.minMax().theme.background.image.vignette.opacity.min,
          max: state.get.minMax().theme.background.image.vignette.opacity.max,
          action: () => {
            applyCSSVar('theme.background.image.vignette.opacity');
            data.save();
          }
        }),
        start: new Control_sliderSlim({
          object: state.get.current(),
          path: 'theme.background.image.vignette.start',
          id: 'theme-background-image-vignette-start',
          labelText: 'Start',
          value: state.get.current().theme.background.image.vignette.start,
          defaultValue: state.get.default().theme.background.image.vignette.start,
          min: state.get.minMax().theme.background.image.vignette.start.min,
          max: state.get.minMax().theme.background.image.vignette.start.max,
          action: () => {

            applyCSSVar('theme.background.image.vignette.start');

            if (state.get.current().theme.background.image.vignette.end > state.get.current().theme.background.image.vignette.start) {

              state.get.current().theme.background.image.vignette.end = state.get.current().theme.background.image.vignette.start;

              applyCSSVar('theme.background.image.vignette.end');

              themeSetting.control.background.image.vignette.end.update();

            };

            data.save();

          }
        }),
        end: new Control_sliderSlim({
          object: state.get.current(),
          path: 'theme.background.image.vignette.end',
          id: 'theme-background-image-vignette-end',
          labelText: 'End',
          value: state.get.current().theme.background.image.vignette.end,
          defaultValue: state.get.default().theme.background.image.vignette.end,
          min: state.get.minMax().theme.background.image.vignette.end.min,
          max: state.get.minMax().theme.background.image.vignette.end.max,
          action: () => {

            applyCSSVar('theme.background.image.vignette.end');

            if (state.get.current().theme.background.image.vignette.start < state.get.current().theme.background.image.vignette.end) {

              state.get.current().theme.background.image.vignette.start = state.get.current().theme.background.image.vignette.end;

              applyCSSVar('theme.background.image.vignette.start');

              themeSetting.control.background.image.vignette.start.update();

            };

            data.save();

          }
        })
      }
    },
    video: {
      url: new Control_textarea({
        object: state.get.current(),
        path: 'theme.background.video.url',
        id: 'theme-background-video-url',
        value: state.get.current().theme.background.video.url,
        placeholder: 'https://www.example.com/video.mp4',
        labelText: 'URL',
        action: () => {
          theme_theme.background.video.clear();
          theme_theme.background.video.render();
          data.save();
        }
      }),
      urlHelper: new Control_helperText({
        text: [
          'Background video only supports a direct URL to a video file. Supports MP4 and WebM format.', 'YouTube page URLs can not be used.',
          'Add more than one URL separated by spaces or on new lines for a random background video on load.'
        ]
      }),
      blur: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.video.blur',
        id: 'theme-background-video-blur',
        labelText: 'Blur',
        value: state.get.current().theme.background.video.blur,
        defaultValue: state.get.default().theme.background.video.blur,
        min: state.get.minMax().theme.background.video.blur.min,
        max: state.get.minMax().theme.background.video.blur.max,
        action: () => {
          applyCSSVar('theme.background.video.blur');
          data.save();
        }
      }),
      grayscale: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.video.grayscale',
        id: 'theme-background-video-grayscale',
        labelText: 'Grayscale',
        value: state.get.current().theme.background.video.grayscale,
        defaultValue: state.get.default().theme.background.video.grayscale,
        min: state.get.minMax().theme.background.video.grayscale.min,
        max: state.get.minMax().theme.background.video.grayscale.max,
        action: () => {
          applyCSSVar('theme.background.video.grayscale');
          data.save();
        }
      }),
      scale: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.video.scale',
        id: 'theme-background-video-scale',
        labelText: 'Scale',
        value: state.get.current().theme.background.video.scale,
        defaultValue: state.get.default().theme.background.video.scale,
        min: state.get.minMax().theme.background.video.scale.min,
        max: state.get.minMax().theme.background.video.scale.max,
        action: () => {
          applyCSSVar('theme.background.video.scale');
          data.save();
        }
      }),
      accent: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.video.accent',
        id: 'theme-background-video-accent',
        labelText: 'Accent',
        value: state.get.current().theme.background.video.accent,
        defaultValue: state.get.default().theme.background.video.accent,
        min: state.get.minMax().theme.background.video.accent.min,
        max: state.get.minMax().theme.background.video.accent.max,
        action: () => {
          applyCSSVar('theme.background.video.accent');
          data.save();
        }
      }),
      opacity: new Control_sliderSlim({
        object: state.get.current(),
        path: 'theme.background.video.opacity',
        id: 'theme-background-video-opacity',
        labelText: 'Opacity',
        value: state.get.current().theme.background.video.opacity,
        defaultValue: state.get.default().theme.background.video.opacity,
        min: state.get.minMax().theme.background.video.opacity.min,
        max: state.get.minMax().theme.background.video.opacity.max,
        action: () => {
          applyCSSVar('theme.background.video.opacity');
          data.save();
        }
      }),
      vignette: {
        opacity: new Control_sliderSlim({
          object: state.get.current(),
          path: 'theme.background.video.vignette.opacity',
          id: 'theme-background-video-vignette-opacity',
          labelText: 'Vignette',
          value: state.get.current().theme.background.video.vignette.opacity,
          defaultValue: state.get.default().theme.background.video.vignette.opacity,
          min: state.get.minMax().theme.background.video.vignette.opacity.min,
          max: state.get.minMax().theme.background.video.vignette.opacity.max,
          action: () => {
            applyCSSVar('theme.background.video.vignette.opacity');
            data.save();
          }
        }),
        start: new Control_sliderSlim({
          object: state.get.current(),
          path: 'theme.background.video.vignette.start',
          id: 'theme-background-video-vignette-start',
          labelText: 'Start',
          value: state.get.current().theme.background.video.vignette.start,
          defaultValue: state.get.default().theme.background.video.vignette.start,
          min: state.get.minMax().theme.background.video.vignette.start.min,
          max: state.get.minMax().theme.background.video.vignette.start.max,
          action: () => {

            applyCSSVar('theme.background.video.vignette.start');

            if (state.get.current().theme.background.video.vignette.end > state.get.current().theme.background.video.vignette.start) {

              state.get.current().theme.background.video.vignette.end = state.get.current().theme.background.video.vignette.start;

              applyCSSVar('theme.background.video.vignette.end');

              themeSetting.control.background.video.vignette.end.update();

            };

            data.save();

          }
        }),
        end: new Control_sliderSlim({
          object: state.get.current(),
          path: 'theme.background.video.vignette.end',
          id: 'theme-background-video-vignette-end',
          labelText: 'End',
          value: state.get.current().theme.background.video.vignette.end,
          defaultValue: state.get.default().theme.background.video.vignette.end,
          min: state.get.minMax().theme.background.video.vignette.end.min,
          max: state.get.minMax().theme.background.video.vignette.end.max,
          action: () => {

            applyCSSVar('theme.background.video.vignette.end');

            if (state.get.current().theme.background.video.vignette.start < state.get.current().theme.background.video.vignette.end) {

              state.get.current().theme.background.video.vignette.start = state.get.current().theme.background.video.vignette.end;

              applyCSSVar('theme.background.video.vignette.start');

              themeSetting.control.background.video.vignette.start.update();

            };

            data.save();

          }
        })
      }
    }
  };

  const themeBackgroundColorArea = node('div', [
    themeSetting.control.background.color.wrap()
  ]);

  const themeBackgroundGradientArea = node('div', [
    themeSetting.control.background.gradient.angle.wrap(),
    themeSetting.control.background.gradient.start.wrap(),
    themeSetting.control.background.gradient.end.wrap()
  ]);

  const themeBackgroundImageArea = node('div', [
    themeSetting.control.background.image.url.wrap(),
    themeSetting.control.background.image.urlHelper.wrap(),
    themeSetting.control.background.image.blur.wrap(),
    themeSetting.control.background.image.grayscale.wrap(),
    themeSetting.control.background.image.scale.wrap(),
    themeSetting.control.background.image.accent.wrap(),
    themeSetting.control.background.image.opacity.wrap(),
    themeSetting.control.background.image.vignette.opacity.wrap(),
    wrap_wrap({
      children: [
        indent_indent({
          children: [
            themeSetting.control.background.image.vignette.start.wrap(),
            themeSetting.control.background.image.vignette.end.wrap()
          ]
        })
      ]
    })
  ]);

  const themeBackgroundVideoArea = node('div', [
    themeSetting.control.background.video.url.wrap(),
    themeSetting.control.background.video.urlHelper.wrap(),
    themeSetting.control.background.video.blur.wrap(),
    themeSetting.control.background.video.grayscale.wrap(),
    themeSetting.control.background.video.scale.wrap(),
    themeSetting.control.background.video.accent.wrap(),
    themeSetting.control.background.video.opacity.wrap(),
    themeSetting.control.background.video.vignette.opacity.wrap(),
    wrap_wrap({
      children: [
        indent_indent({
          children: [
            themeSetting.control.background.video.vignette.start.wrap(),
            themeSetting.control.background.video.vignette.end.wrap()
          ]
        })
      ]
    })
  ]);

  themeSetting.control.background.typeCollapse = new Collapse({
    type: 'radio',
    radioGroup: themeSetting.control.background.type,
    target: [{
      id: themeSetting.control.background.type.radioSet[2].radio.value,
      content: themeBackgroundColorArea
    }, {
      id: themeSetting.control.background.type.radioSet[3].radio.value,
      content: themeBackgroundGradientArea
    }, {
      id: themeSetting.control.background.type.radioSet[4].radio.value,
      content: themeBackgroundImageArea
    }, {
      id: themeSetting.control.background.type.radioSet[5].radio.value,
      content: themeBackgroundVideoArea
    }]
  });

  parent.appendChild(
    node('div', [
      themeSetting.control.background.type.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              themeSetting.control.background.typeCollapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};

themeSetting.layout = (parent) => {

  themeSetting.control.layout.divider = {
    size: new Control_slider({
      object: state.get.current(),
      path: 'theme.layout.divider.size',
      id: 'theme.layout-divider-size',
      labelText: 'Divider between Header and Bookmark area',
      value: state.get.current().theme.layout.divider.size,
      defaultValue: state.get.default().theme.layout.divider.size,
      min: state.get.minMax().theme.layout.divider.size.min,
      max: state.get.minMax().theme.layout.divider.size.max,
      action: () => {
        applyCSSVar([
          'theme.layout.divider.size'
        ]);
        applyCSSState([
          'theme.layout.divider.size'
        ]);
        layout_layout.area.render();
        data.save();
      }
    })
  };

  parent.appendChild(
    node('div', [
      themeSetting.control.layout.divider.size.wrap()
    ])
  );

};

themeSetting.header = (parent) => {

  themeSetting.control.header.color = {};

  themeSetting.control.header.color.by = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'theme-header-by-theme', labelText: 'Transparent', description: 'No background colour behind the Header area.', value: 'theme' },
      { id: 'theme-header-by-custom', labelText: 'Custom colour', description: 'Use a custom colour behind the Header area.', value: 'custom' }
    ],
    label: 'Header background colour',
    groupName: 'theme-header-by',
    path: 'theme.header.color.by',
    action: () => {
      applyCSSClass('theme.header.color.by');
      themeSetting.disable();
      themeSetting.control.header.color.collapse.update();
      data.save();
    }
  });

  themeSetting.control.header.color.color = new Control_colorMixer({
    object: state.get.current(),
    path: 'theme.header.color',
    id: 'theme-header-color',
    labelText: 'Header area background colour',
    defaultValue: state.get.default().theme.header.color.rgb,
    minMaxObject: state.get.minMax(),
    action: () => {
      applyCSSVar([
        'theme.header.color.rgb.r',
        'theme.header.color.rgb.g',
        'theme.header.color.rgb.b',
        'theme.header.color.hsl.h',
        'theme.header.color.hsl.s',
        'theme.header.color.hsl.l'
      ]);
      data.save();
    }
  });

  themeSetting.control.header.color.opacity = new Control_slider({
    object: state.get.current(),
    path: 'theme.header.color.opacity',
    id: 'theme-header-color-opacity',
    labelText: 'Background opacity',
    value: state.get.current().theme.header.color.opacity,
    defaultValue: state.get.default().theme.header.color.opacity,
    min: state.get.minMax().theme.header.color.opacity.min,
    max: state.get.minMax().theme.header.color.opacity.max,
    action: () => {
      applyCSSVar([
        'theme.header.color.opacity'
      ]);
      data.save();
    }
  });

  themeSetting.control.header.color.area = node('div', [
    themeSetting.control.header.color.color.wrap(),
    themeSetting.control.header.color.opacity.wrap()
  ]);

  themeSetting.control.header.color.collapse = new Collapse({
    type: 'radio',
    radioGroup: themeSetting.control.header.color.by,
    target: [{
      id: themeSetting.control.header.color.by.radioSet[1].radio.value,
      content: themeSetting.control.header.color.area
    }]
  });

  parent.appendChild(
    node('div', [
      themeSetting.control.header.color.by.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              themeSetting.control.header.color.collapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};

themeSetting.bookmark = (parent) => {

  themeSetting.control.bookmark.color = {};

  themeSetting.control.bookmark.color.by = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'theme-bookmark-by-theme', labelText: 'Transparent', description: 'No background colour behind the Bookmark area.', value: 'theme' },
      { id: 'theme-bookmark-by-custom', labelText: 'Custom colour', description: 'Use a custom colour behind the Bookmark area.', value: 'custom' }
    ],
    label: 'Bookmark area background colour',
    groupName: 'theme-bookmark-by',
    path: 'theme.bookmark.color.by',
    action: () => {
      applyCSSClass('theme.bookmark.color.by');
      themeSetting.disable();
      themeSetting.control.bookmark.color.collapse.update();
      data.save();
    }
  });

  themeSetting.control.bookmark.color.color = new Control_colorMixer({
    object: state.get.current(),
    path: 'theme.bookmark.color',
    id: 'theme-bookmark-color',
    labelText: 'Header area background colour',
    defaultValue: state.get.default().theme.bookmark.color.rgb,
    minMaxObject: state.get.minMax(),
    action: () => {
      applyCSSVar([
        'theme.bookmark.color.rgb.r',
        'theme.bookmark.color.rgb.g',
        'theme.bookmark.color.rgb.b',
        'theme.bookmark.color.hsl.h',
        'theme.bookmark.color.hsl.s',
        'theme.bookmark.color.hsl.l'
      ]);
      data.save();
    }
  });

  themeSetting.control.bookmark.color.opacity = new Control_slider({
    object: state.get.current(),
    path: 'theme.bookmark.color.opacity',
    id: 'theme-bookmark-color-opacity',
    labelText: 'Background opacity',
    value: state.get.current().theme.bookmark.color.opacity,
    defaultValue: state.get.default().theme.bookmark.color.opacity,
    min: state.get.minMax().theme.bookmark.color.opacity.min,
    max: state.get.minMax().theme.bookmark.color.opacity.max,
    action: () => {
      applyCSSVar([
        'theme.bookmark.color.opacity'
      ]);
      data.save();
    }
  });

  themeSetting.control.bookmark.color.area = node('div', [
    themeSetting.control.bookmark.color.color.wrap(),
    themeSetting.control.bookmark.color.opacity.wrap()
  ]);

  themeSetting.control.bookmark.color.collapse = new Collapse({
    type: 'radio',
    radioGroup: themeSetting.control.bookmark.color.by,
    target: [{
      id: themeSetting.control.bookmark.color.by.radioSet[1].radio.value,
      content: themeSetting.control.bookmark.color.area
    }]
  });

  themeSetting.control.bookmark.item = {};

  themeSetting.control.bookmark.item.border = new Control_slider({
    object: state.get.current(),
    path: 'theme.bookmark.item.border',
    id: 'theme-bookmark-item-border',
    labelText: 'Bookmark border',
    value: state.get.current().theme.bookmark.item.border,
    defaultValue: state.get.default().theme.bookmark.item.border,
    min: state.get.minMax().theme.bookmark.item.border.min,
    max: state.get.minMax().theme.bookmark.item.border.max,
    action: () => {
      bookmark_bookmark.item.mod.applyVar('border', state.get.current().theme.bookmark.item.border);
      groupAndBookmark.render();
      data.save();
    }
  });

  themeSetting.control.bookmark.item.borderHelper = new Control_helperText({
    text: ['Bookmark border can also be changed when editing individual Bookmarks.', 'The colour of the Border is defined by the Accent which can also be changed when editing individual Bookmarks.']
  });

  themeSetting.control.bookmark.item.rainbow = new Button({
    text: 'Apply unique accent to each',
    style: ['line'],
    func: () => {
      theme_theme.accent.rainbow.render();
      data.save();
    }
  });

  themeSetting.control.bookmark.item.rainbowHelper = new Control_helperText({
    text: ['Bookmark custom Accent can also be changed when editing individual Bookmarks.']
  });

  parent.appendChild(
    node('div', [
      themeSetting.control.bookmark.color.by.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              themeSetting.control.bookmark.color.collapse.collapse()
            ]
          })
        ]
      }),
      node('hr'),
      themeSetting.control.bookmark.item.border.wrap(),
      themeSetting.control.bookmark.item.borderHelper.wrap(),
      node('hr'),
      themeSetting.control.bookmark.item.rainbow.wrap(),
      themeSetting.control.bookmark.item.rainbowHelper.wrap()
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/video/index.js








const Video = function({
  url = false
} = {}) {

  this.video = node('video|autoplay,loop,muted');

  this.source = node('source');

  this.video.appendChild(this.source);

  this.play = () => {
    this.video.play();
  };

  this.pause = () => {
    var playPromise = this.video.play();

    if (playPromise !== undefined) {
      playPromise.then(() => {
        this.video.pause();
      });
    };
  };

  this.assemble = () => {

    this.video.muted = true;

    this.video.loop = true;

    this.video.autoplay = true;

    if (url.includes('mp4') || url.endsWith('mp4')) {

      this.source.type = 'video/mp4';

    } else if (url.includes('webm') || url.endsWith('webm')) {

      this.source.type = 'video/webm';

    };

    if (isValidString(url)) {

      this.source.src = url;

    };

  };

  this.assemble();

};

// EXTERNAL MODULE: ./node_modules/webfontloader/webfontloader.js
var webfontloader = __webpack_require__(5933);
var webfontloader_default = /*#__PURE__*/__webpack_require__.n(webfontloader);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/theme/index.css
var theme = __webpack_require__(8776);
;// CONCATENATED MODULE: ./src/component/theme/index.css

            

var theme_options = {};

theme_options.insert = "head";
theme_options.singleton = false;

var theme_update = injectStylesIntoStyleTag_default()(theme/* default */.Z, theme_options);



/* harmony default export */ const component_theme = (theme/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/theme/index.js
























const theme_theme = {};

theme_theme.font = {};

theme_theme.font.display = {
  timer: false,
  delay: () => {

    clearTimeout(theme_theme.font.display.timer);

    theme_theme.font.display.timer = setTimeout(theme_theme.font.display.load, 600);

  },
  load: () => {

    const displayFont = trimString(state.get.current().theme.font.display.name);

    if (isValidString(displayFont)) {

      webfontloader_default().load({
        // fontloading: (familyName, fvd) => { console.log('fontloading:', familyName); },
        google: { families: [trimString(displayFont) + ':100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i'] }
      });

    };

    theme_theme.font.display.render();

  },
  render: () => {

    const html = document.querySelector('html');

    if (isValidString(trimString(state.get.current().theme.font.display.name))) {

      html.style.setProperty('--theme-font-display-name', '"' + trimString(state.get.current().theme.font.display.name) + '", "Fjalla One", sans-serif');

    } else {

      html.style.removeProperty('--theme-font-display-name');

    };

  }
};

theme_theme.font.ui = {
  timer: false,
  delay: () => {

    clearTimeout(theme_theme.font.ui.timer);

    theme_theme.font.ui.timer = setTimeout(theme_theme.font.ui.load, 600);

  },
  load: () => {

    const uiFont = trimString(state.get.current().theme.font.ui.name);

    if (isValidString(uiFont)) {

      webfontloader_default().load({
        // fontloading: (familyName, fvd) => { console.log('fontloading:', familyName); },
        google: { families: [trimString(uiFont) + ':100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i'] }
      });

    };

    theme_theme.font.ui.render();

  },
  render: () => {

    const html = document.querySelector('html');

    if (isValidString(trimString(state.get.current().theme.font.ui.name))) {

      html.style.setProperty('--theme-font-ui-name', '"' + trimString(state.get.current().theme.font.ui.name) + '", "Open Sans", sans-serif');

    } else {

      html.style.removeProperty('--theme-font-ui-name');

    };

  }
};

theme_theme.color = {
  render: () => {

    const html = document.querySelector('html');

    const head = document.querySelector('head');

    let shades = (state.get.current().theme.color.contrast.end - state.get.current().theme.color.contrast.start) / (state.get.current().theme.color.shades - 1);

    for (var type in state.get.current().theme.color.range) {

      for (var i = 0; i < state.get.current().theme.color.shades; i++) {

        let hsl = JSON.parse(JSON.stringify(state.get.current().theme.color.range[type]));

        hsl.l = Math.round((shades * i) + state.get.current().theme.color.contrast.start);

        let rgb = convertColor.hsl.rgb(hsl);

        for (var key in rgb) {
          html.style.setProperty(`--theme-${type}-${i + 1}-${key}`, rgb[key]);
        };

        for (var key in hsl) {
          html.style.setProperty(`--theme-${type}-${i + 1}-${key}`, hsl[key]);
        };

      };

    };

    for (let i = 1; i <= state.get.current().theme.color.shades; i++) {
      html.style.setProperty(`--theme-primary-${i}`, `var(--theme-primary-${i}-h), calc(var(--theme-primary-${i}-s) * 1%), calc(var(--theme-primary-${i}-l) * 1%)`);
    };

  }
};

theme_theme.accent = {};

theme_theme.accent.random = {
  render: () => {

    if (state.get.current().theme.accent.random.active) {

      const randomAccentType = {
        any: () => { return { h: randomNumber(0, 360), s: randomNumber(0, 100), l: randomNumber(0, 100) }; },
        light: () => { return { h: randomNumber(0, 360), s: randomNumber(50, 90), l: randomNumber(50, 90) }; },
        dark: () => { return { h: randomNumber(0, 360), s: randomNumber(10, 50), l: randomNumber(10, 50) }; },
        pastel: () => { return { h: randomNumber(0, 360), s: 50, l: 80 }; },
        saturated: () => { return { h: randomNumber(0, 360), s: 100, l: 50 }; }
      };

      const hsl = randomAccentType[state.get.current().theme.accent.random.style]();

      const rgb = convertColor.hsl.rgb(hsl);

      state.get.current().theme.accent.rgb = rgb;

      state.get.current().theme.accent.hsl = hsl;

    };

  }
};

theme_theme.accent.rainbow = {
  render: () => {

    const units = 360 / bookmark_bookmark.count();

    let degree = 0;

    bookmark_bookmark.all.forEach((item, i) => {

      item.items.forEach((item, i) => {

        item.accent.by = "custom";

        item.accent.hsl = { h: Math.round(degree), s: 100, l: 50 };

        item.accent.rgb = convertColor.hsl.rgb(item.accent.hsl);

        degree = degree + units;

      });

    });

    groupAndBookmark.render();

  }
};

theme_theme.accent.cycle = {
  timer: false,
  bind: () => {

    if (state.get.current().theme.accent.cycle.active) {

      clearInterval(theme_theme.accent.cycle.timer);

      theme_theme.accent.cycle.timer = setInterval(() => {

        theme_theme.accent.cycle.render();

        if (state.get.current().menu) {
          themeSetting.control.accent.color.update();
        };

        if (state.get.current().toolbar.accent.show) {
          toolbar.current.update.accent();
        };

      }, state.get.current().theme.accent.cycle.speed);

    } else {

      clearInterval(theme_theme.accent.cycle.timer);

      theme_theme.accent.cycle.timer = false;

    };

  },
  render: () => {

    let newValue = state.get.current().theme.accent.hsl.h + state.get.current().theme.accent.cycle.step;

    if (newValue > 359) { newValue = 0; };

    state.get.current().theme.accent.hsl.h = newValue;

    state.get.current().theme.accent.rgb = convertColor.hsl.rgb(state.get.current().theme.accent.hsl);

    applyCSSVar([
      'theme.accent.rgb.r',
      'theme.accent.rgb.g',
      'theme.accent.rgb.b',
      'theme.accent.hsl.h',
      'theme.accent.hsl.s',
      'theme.accent.hsl.l'
    ]);

  }
};

theme_theme.style = {
  bind: () => {
    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (event) => {
      theme_theme.style.initial();
    });
  },
  initial: () => {
    switch (state.get.current().theme.style) {

      case 'dark':
      case 'light':

        localStorage.setItem(appName + 'Style', state.get.current().theme.style);
        break;

      case 'system':

        if (window.matchMedia('(prefers-color-scheme:dark)').matches) {
          localStorage.setItem(appName + 'Style', 'dark');
        } else if (window.matchMedia('(prefers-color-scheme:light)').matches) {
          localStorage.setItem(appName + 'Style', 'light');
        };
        break;

    };
  },
  dark: () => {
    state.get.current().theme.style = 'dark';
    theme_theme.style.initial();
    applyCSSClass('theme.style');
  },
  light: () => {
    state.get.current().theme.style = 'light';
    theme_theme.style.initial();
    applyCSSClass('theme.style');
  },
  toggle: () => {
    switch (state.get.current().theme.style) {

      case 'dark':
        theme_theme.style.light();
        break;

      case 'light':
        theme_theme.style.dark();
        break;

    };
  }
};

theme_theme.background = {
  element: {
    background: node('div|class:background'),
    type: {
      theme: node('div|class:theme-background-type theme-background-type-theme'),
      accent: node('div|class:theme-background-type theme-background-type-accent'),
      color: node('div|class:theme-background-type theme-background-type-color'),
      gradient: node('div|class:theme-background-type theme-background-type-gradient'),
      image: {
        imageElement: node('div|class:theme-background-type theme-background-type-image'),
        wrap: node('div|class:theme-background-type-image-wrap'),
        accent: node('div|class:theme-background-type-image-accent'),
        vignette: node('div|class:theme-background-type-image-vignette')
      },
      video: {
        videoElement: node('div|class:theme-background-type theme-background-type-video'),
        wrap: node('div|class:theme-background-type-video-wrap'),
        accent: node('div|class:theme-background-type-video-accent'),
        vignette: node('div|class:theme-background-type-video-vignette')
      },
    },
    video: false
  }
};

theme_theme.background.area = {
  render: () => {

    const backgroundElement = node('div|class:background');

    state.get.option().theme.background.type.forEach((item, i) => {

      switch (item) {

        case 'image':

          theme_theme.background.element.type.image.imageElement.appendChild(theme_theme.background.element.type.image.wrap);
          theme_theme.background.element.type.image.imageElement.appendChild(theme_theme.background.element.type.image.accent);
          theme_theme.background.element.type.image.imageElement.appendChild(theme_theme.background.element.type.image.vignette);
          theme_theme.background.element.background.appendChild(theme_theme.background.element.type.image.imageElement);

          break;

        case 'video':

          theme_theme.background.element.type.video.videoElement.appendChild(theme_theme.background.element.type.video.wrap);
          theme_theme.background.element.type.video.videoElement.appendChild(theme_theme.background.element.type.video.accent);
          theme_theme.background.element.type.video.videoElement.appendChild(theme_theme.background.element.type.video.vignette);
          theme_theme.background.element.background.appendChild(theme_theme.background.element.type.video.videoElement);

          break;

        default:

          theme_theme.background.element.background.appendChild(theme_theme.background.element.type[item]);

      };

    });

    document.querySelector('body').appendChild(theme_theme.background.element.background);

  }
};

theme_theme.background.image = {
  render: () => {

    const html = document.querySelector('html');

    if (isValidString(state.get.current().theme.background.image.url)) {

      const allUrls = trimString(state.get.current().theme.background.image.url).split(/\s+/).filter((item) => { return item != ''; });

      html.style.setProperty('--theme-background-image', 'url(' + allUrls[Math.floor(Math.random() * allUrls.length)] + ')');

    } else {

      html.style.removeProperty('--theme-background-image');

    };

  }
};

theme_theme.background.video = {
  render: () => {

    if (isValidString(state.get.current().theme.background.video.url)) {

      const allUrls = trimString(state.get.current().theme.background.video.url).split(/\s+/).filter((item) => { return item != ''; });

      theme_theme.background.element.video = new Video({
        url: allUrls[Math.floor(Math.random() * allUrls.length)]
      });

      theme_theme.background.element.type.video.wrap.appendChild(theme_theme.background.element.video.video);

    } else {

      theme_theme.background.video.clear();

    };

  },
  clear: () => {

    theme_theme.background.element.video = false;

    if (theme_theme.background.element.type.video.wrap.lastChild) {

      clearChildNode(theme_theme.background.element.type.video.wrap);

    };

  }
};

theme_theme.init = () => {
  theme_theme.style.initial();
  theme_theme.style.bind();
  theme_theme.color.render();
  theme_theme.accent.random.render();
  theme_theme.accent.cycle.bind();
  theme_theme.font.display.load();
  theme_theme.font.ui.load();
  theme_theme.background.area.render();
  theme_theme.background.image.render();
  theme_theme.background.video.render();
  applyCSSVar([
    'theme.accent.rgb.r',
    'theme.accent.rgb.g',
    'theme.accent.rgb.b',
    'theme.accent.hsl.h',
    'theme.accent.hsl.s',
    'theme.accent.hsl.l',
    'theme.font.display.weight',
    'theme.font.display.style',
    'theme.font.ui.weight',
    'theme.font.ui.style',
    'theme.opacity.general',
    'theme.background.color.rgb.r',
    'theme.background.color.rgb.g',
    'theme.background.color.rgb.b',
    'theme.background.color.hsl.h',
    'theme.background.color.hsl.s',
    'theme.background.color.hsl.l',
    'theme.background.image.blur',
    'theme.background.image.grayscale',
    'theme.background.image.scale',
    'theme.background.image.accent',
    'theme.background.image.opacity',
    'theme.background.image.vignette.opacity',
    'theme.background.image.vignette.start',
    'theme.background.image.vignette.end',
    'theme.background.video.blur',
    'theme.background.video.grayscale',
    'theme.background.video.scale',
    'theme.background.video.accent',
    'theme.background.video.opacity',
    'theme.background.video.vignette.opacity',
    'theme.background.video.vignette.start',
    'theme.background.video.vignette.end',
    'theme.background.gradient.angle',
    'theme.background.gradient.start.rgb.r',
    'theme.background.gradient.start.rgb.g',
    'theme.background.gradient.start.rgb.b',
    'theme.background.gradient.start.hsl.h',
    'theme.background.gradient.start.hsl.s',
    'theme.background.gradient.start.hsl.l',
    'theme.background.gradient.end.rgb.r',
    'theme.background.gradient.end.rgb.g',
    'theme.background.gradient.end.rgb.b',
    'theme.background.gradient.end.hsl.h',
    'theme.background.gradient.end.hsl.s',
    'theme.background.gradient.end.hsl.l',
    'theme.radius',
    'theme.shadow',
    'theme.shade.opacity',
    'theme.shade.blur',
    'theme.layout.divider.size',
    'theme.header.color.rgb.r',
    'theme.header.color.rgb.g',
    'theme.header.color.rgb.b',
    'theme.header.color.hsl.h',
    'theme.header.color.hsl.s',
    'theme.header.color.hsl.l',
    'theme.header.color.opacity',
    'theme.header.search.opacity',
    'theme.bookmark.color.rgb.r',
    'theme.bookmark.color.rgb.g',
    'theme.bookmark.color.rgb.b',
    'theme.bookmark.color.hsl.h',
    'theme.bookmark.color.hsl.s',
    'theme.bookmark.color.hsl.l',
    'theme.bookmark.color.opacity',
    'theme.bookmark.item.opacity',
    'theme.toolbar.opacity',
    'theme.group.openAll.opacity'
  ]);
  applyCSSClass([
    'theme.style',
    'theme.background.type',
    'theme.header.color.by',
    'theme.bookmark.color.by'
  ]);
  applyCSSState([
    'theme.layout.divider.size'
  ]);
};



;// CONCATENATED MODULE: ./src/component/pageLock/index.js


const pageLock = {};

pageLock.render = () => {

  const html = document.querySelector('html');

  if (state.get.current().modal || state.get.current().menu) {
    html.classList.add('is-scroll-disabled');
  } else {
    html.classList.remove('is-scroll-disabled');
  };

};

pageLock.init = () => {
  state.get.current().modal = false;
  state.get.current().menu = false;
};



// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/shade/index.css
var shade = __webpack_require__(9888);
;// CONCATENATED MODULE: ./src/component/shade/index.css

            

var shade_options = {};

shade_options.insert = "head";
shade_options.singleton = false;

var shade_update = injectStylesIntoStyleTag_default()(shade/* default */.Z, shade_options);



/* harmony default export */ const component_shade = (shade/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/shade/index.js




const Shade = function() {

  this.element = {
    shade: node('div|class:shade')
  };

  this.open = () => {
    const body = document.querySelector('body');

    this.element.shade.classList.add('is-transparent');

    this.element.shade.addEventListener('transitionend', (event) => {
      if (event.propertyName === 'opacity' && getComputedStyle(this.element.shade).opacity == 0) {
        body.removeChild(this.element.shade);
      };
    });

    body.appendChild(this.element.shade);

    getComputedStyle(this.element.shade).opacity;

    this.element.shade.classList.remove('is-transparent');

    this.element.shade.classList.add('is-opaque');
  };

  this.close = () => {

    this.element.shade.classList.remove('is-opaque');

    this.element.shade.classList.add('is-transparent');

    clearTimeout(this.delayedForceRemove);

    this.delayedForceRemove = setTimeout(() => {

      const body = document.querySelector('body');

      if (body.contains(this.element.shade)) {
        body.removeChild(this.element.shade)
      };

    }, 6000);

  };

  this.delayedForceRemove = null;

  this.shade = () => {
    return this.element.shade;
  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/menuNav/index.css
var menuNav = __webpack_require__(8765);
;// CONCATENATED MODULE: ./src/component/menuNav/index.css

            

var menuNav_options = {};

menuNav_options.insert = "head";
menuNav_options.singleton = false;

var menuNav_update = injectStylesIntoStyleTag_default()(menuNav/* default */.Z, menuNav_options);



/* harmony default export */ const component_menuNav = (menuNav/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/menuNav/index.js








const MenuNav = function({
  navData = {},
  action = false
} = {}) {

  this.state = {
    current: {},
    set: () => {

      navData.forEach((item, i) => {

        this.state.current[this.makeId(item.name)] = item.active;

      });

    },
    toggle: (name) => {

      for (let key in this.state.current) {
        this.state.current[key] = false;
      };

      this.state.current[this.makeId(name)] = true;

      navData.forEach((item, i) => {

        item.active = false;

        if (item.name === name) {
          item.active = true;
        };

      });

    }
  };

  this.makeId = (name) => {
    return name.split(' ')[0].toLowerCase();
  };

  this.element = {
    nav: node('div|class:menu-nav'),
    item: [],
  };

  this.init = () => {

    this.element.item.forEach((item, i) => {
      if (item.subLevel) {
        item.subLevel.classList.add('active');
        item.subLevel.setAttribute('style', '--menu-subnav-height: ' + item.subLevel.getBoundingClientRect().height + 'px;');
        item.subLevel.classList.remove('active');
      };
    });

    this.update();

  };

  this.update = () => {
    navData.forEach((item, i) => {

      if (this.state.current[this.makeId(item.name)]) {

        this.element.item[i].menuNavItem.classList.add('active');
        this.element.item[i].topLevel.classList.add('active');

        if (item.sub) {
          this.element.item[i].subLevel.classList.add('active');
        };

        if (this.element.item[i].subLevelItem.length > 0) {
          this.element.item[i].subLevelItem.forEach((item, i) => {
            item.tabIndex = 1;
          });
        };

      } else {
        this.element.item[i].menuNavItem.classList.remove('active');
        this.element.item[i].topLevel.classList.remove('active');

        if (item.sub) {
          this.element.item[i].subLevel.classList.remove('active');
        };

        if (this.element.item[i].subLevelItem.length > 0) {
          this.element.item[i].subLevelItem.forEach((item, i) => {
            item.tabIndex = -1;
          });
        };

      };

    });
  };

  this.nav = () => {

    return this.element.nav;

  };

  this.assemble = () => {

    navData.forEach((item, i) => {

      const navItem = {
        topLevel: false,
        subLevel: false,
        subLevelItem: []
      };

      const navButton = new Button({
        text: item.name,
        style: ['link'],
        block: true,
        classList: ['menu-nav-tab'],
        func: () => {

          this.state.toggle(item.name);

          this.update();

          if (action) {
            action();
          };

        }
      });

      navItem.topLevel = navButton.button;

      if (item.sub) {

        const subNav = node('div|class:menu-subnav');

        item.sub.forEach((item, i) => {

          const subLevelLink = node('a:' + item + '|href:#menu-content-item-' + this.makeId(item) + ',class:menu-nav-sub button button-link button-small,tabindex:1');

          subNav.appendChild(subLevelLink);

          navItem.subLevelItem.push(subLevelLink);

        });

        navItem.subLevel = subNav;

      };

      this.element.item.push(navItem);

    });

    this.element.item.forEach((item, i) => {

      item.menuNavItem = node('div|class:menu-nav-item');

      item.menuNavItem.appendChild(item.topLevel);

      if (item.subLevel) {
        item.menuNavItem.appendChild(item.subLevel);
      };

      this.element.nav.appendChild(item.menuNavItem);

    });

  };

  this.state.set();

  this.assemble();

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/menuClose/index.css
var menuClose = __webpack_require__(229);
;// CONCATENATED MODULE: ./src/component/menuClose/index.css

            

var menuClose_options = {};

menuClose_options.insert = "head";
menuClose_options.singleton = false;

var menuClose_update = injectStylesIntoStyleTag_default()(menuClose/* default */.Z, menuClose_options);



/* harmony default export */ const component_menuClose = (menuClose/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/menuClose/index.js








const MenuClose = function() {

  this.element = {
    close: node('div|class:menu-close')
  };

  this.button = new Button({
    text: 'Close settings menu',
    srOnly: true,
    style: ['link'],
    iconName: 'cross',
    classList: ['menu-close-button'],
    func: () => {
      menu.close();
    }
  });

  this.assemble = () => {

    this.element.close.appendChild(this.button.button);

  };

  this.close = () => {

    return this.element.close;

  };

  this.assemble();

};

;// CONCATENATED MODULE: ./src/component/menuContent/formSetting/index.js








































const formSetting = {};

formSetting.state = {
  input: {
    radio: { a: 'a', b: 'a', c: 'a', d: 'a', e: 'a', grid3x3: 'a', grid3x1: 'a', grid1x3: 'a' },
    checkbox: { a: true, b: true, c: false }
  }
};

formSetting.control = {
  input: {},
  button: {}
};

formSetting.input = (parent) => {

  formSetting.input.radio = {
    a: new Control_radio({
      object: formSetting.state,
      radioGroup: [
        { id: 'input-radio-a-a', labelText: 'Radio A A', description: 'Description for radio A A.', value: 'a' },
        { id: 'input-radio-a-b', labelText: 'Radio A B', description: 'Description for radio A B.', value: 'b' },
        { id: 'input-radio-a-c', labelText: 'Radio A C', description: 'Description for radio A C.', value: 'c' }
      ],
      label: 'Radio group A',
      groupName: 'input-radio-a',
      path: 'input.radio.a',
      action: () => { console.log(formSetting.state); }
    }),
    b: new Control_radio({
      object: formSetting.state,
      radioGroup: [
        { id: 'input-radio-b-a', labelText: 'B A', value: 'a' },
        { id: 'input-radio-b-b', labelText: 'B B', value: 'b' },
        { id: 'input-radio-b-c', labelText: 'B C', value: 'c' }
      ],
      label: 'Radio group',
      groupName: 'input-radio-b',
      path: 'input.radio.b',
      action: () => { console.log(formSetting.state); }
    }),
    c: new Control_radio({
      object: formSetting.state,
      radioGroup: [
        { id: 'input-radio-c-a', labelText: 'C A', value: 'a' },
        { id: 'input-radio-c-b', labelText: 'C B', value: 'b' },
        { id: 'input-radio-c-c', labelText: 'C C', value: 'c' }
      ],
      label: 'Radio group',
      groupName: 'input-radio-c',
      path: 'input.radio.c',
      inputButton: true,
      action: () => { console.log(formSetting.state); }
    }),
    d: new Control_radio({
      object: formSetting.state,
      radioGroup: [
        { id: 'input-radio-d-a', labelText: 'D A', value: 'a' },
        { id: 'input-radio-d-b', labelText: 'D B', value: 'b' },
        { id: 'input-radio-d-c', labelText: 'D C', value: 'c' }
      ],
      label: 'Radio group',
      groupName: 'input-radio-d',
      path: 'input.radio.d',
      inputButton: true,
      inputButtonStyle: ['line'],
      action: () => { console.log(formSetting.state); }
    }),
    e: new Control_radio({
      object: formSetting.state,
      radioGroup: [
        { id: 'input-radio-e-a', labelText: 'E A', value: 'a' },
        { id: 'input-radio-e-b', labelText: 'E B', value: 'b' },
        { id: 'input-radio-e-c', labelText: 'E C', value: 'c' }
      ],
      label: 'Radio group',
      groupName: 'input-radio-e',
      path: 'input.radio.e',
      inputButton: true,
      inputHide: true,
      inputButtonStyle: ['ring'],
      action: () => { console.log(formSetting.state); }
    }),
    grid3x3: new Control_radioGrid({
      object: formSetting.state,
      radioGroup: [
        { id: 'input-radio-grid3x3-a', labelText: 'A', value: 'a', position: 1 },
        { id: 'input-radio-grid3x3-b', labelText: 'B', value: 'b', position: 2 },
        { id: 'input-radio-grid3x3-c', labelText: 'C', value: 'c', position: 3 },
        { id: 'input-radio-grid3x3-d', labelText: 'D', value: 'd', position: 4 },
        { id: 'input-radio-grid3x3-e', labelText: 'E', value: 'e', position: 5 },
        { id: 'input-radio-grid3x3-f', labelText: 'F', value: 'f', position: 6 },
        { id: 'input-radio-grid3x3-g', labelText: 'G', value: 'g', position: 7 },
        { id: 'input-radio-grid3x3-h', labelText: 'H', value: 'h', position: 8 },
        { id: 'input-radio-grid3x3-i', labelText: 'I', value: 'i', position: 9 }
      ],
      label: 'Radio group grid 3x3',
      groupName: 'input-radio-grid3x3',
      path: 'input.radio.grid3x3',
      gridSize: '3x3',
      action: () => { console.log(formSetting.state); }
    }),
    grid3x1: new Control_radioGrid({
      object: formSetting.state,
      radioGroup: [
        { id: 'input-radio-grid3x1-a', labelText: 'A', value: 'a', position: 1 },
        { id: 'input-radio-grid3x1-b', labelText: 'B', value: 'b', position: 2 },
        { id: 'input-radio-grid3x1-c', labelText: 'C', value: 'c', position: 3 }
      ],
      label: 'Radio group grid 3x1',
      groupName: 'input-radio-grid3x1',
      path: 'input.radio.grid3x1',
      gridSize: '3x1',
      action: () => { console.log(formSetting.state); }
    }),
    grid1x3: new Control_radioGrid({
      object: formSetting.state,
      radioGroup: [
        { id: 'input-radio-grid1x3-a', labelText: 'A', value: 'a', position: 1 },
        { id: 'input-radio-grid1x3-b', labelText: 'B', value: 'b', position: 2 },
        { id: 'input-radio-grid1x3-c', labelText: 'C', value: 'c', position: 3 }
      ],
      label: 'Radio group grid 1x3',
      groupName: 'input-radio-grid1x3',
      path: 'input.radio.grid1x3',
      gridSize: '1x3',
      action: () => { console.log(formSetting.state); }
    })
  };

  formSetting.input.checkbox = {
    a: new Control_checkbox({
      object: formSetting.state,
      id: 'input-checkbox-a',
      path: 'input.checkbox.a',
      labelText: 'Checkbox A',
      action: () => { console.log(formSetting.state); }
    }),
    b: new Control_checkbox({
      object: formSetting.state,
      id: 'input-checkbox-b',
      path: 'input.checkbox.b',
      labelText: 'Checkbox B',
      action: () => { console.log(formSetting.state); }
    }),
    c: new Control_checkbox({
      object: formSetting.state,
      id: 'input-checkbox-c',
      path: 'input.checkbox.c',
      labelText: 'Checkbox C',
      action: () => { console.log(formSetting.state); }
    })
  };

  parent.appendChild(
    node('div', [
      formSetting.input.radio.a.wrap(),
      node('hr'),
      formSetting.input.radio.b.inline(),
      formSetting.input.radio.c.inputButton(),
      formSetting.input.radio.d.inputButton(),
      formSetting.input.radio.e.inputButton(),
      node('hr'),
      formSetting.input.radio.grid3x3.wrap(),
      formSetting.input.radio.grid3x1.wrap(),
      formSetting.input.radio.grid1x3.wrap(),
      node('hr'),
      formSetting.input.checkbox.a.wrap(),
      formSetting.input.checkbox.b.wrap(),
      formSetting.input.checkbox.c.wrap()
    ])
  );

};

formSetting.button = (parent) => {

  formSetting.button = {
    small: new Button({ text: 'Small button', size: 'small' }),
    medium: new Button({ text: 'Medium button', size: 'medium' }),
    large: new Button({ text: 'Large button', size: 'large' }),
    ring: new Button({ text: 'Ring button', size: 'medium', style: ['ring'] }),
    line: new Button({ text: 'Line button', size: 'medium', style: ['line'] }),
    link: new Button({ text: 'Link button', size: 'medium', style: ['link'] })
  };

  parent.appendChild(
    node('div', [
      formSetting.button.small.wrap(),
      formSetting.button.medium.wrap(),
      formSetting.button.large.wrap(),
      formSetting.button.ring.wrap(),
      formSetting.button.line.wrap(),
      formSetting.button.link.wrap(),
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/debugSetting/index.js










































const debugSetting = {};

debugSetting.control = {
  alignment: {},
  name: {},
  open: {}
};

debugSetting.bookmark = (parent) => {

  debugSetting.bookmark.letter = new Button({
    text: 'Only letters',
    style: ['line'],
    func: () => {
      bookmark_bookmark.all.forEach(item => {
        item.items.forEach(item => {

          item.display.visual.type = 'letter';

        });
      });
      groupAndBookmark.render();
      data.save();
    }
  });

  debugSetting.bookmark.icon = new Button({
    text: 'Only icons',
    style: ['line'],
    func: () => {
      bookmark_bookmark.all.forEach(item => {
        item.items.forEach(item => {

          item.display.visual.type = 'icon';

        });
      });
      groupAndBookmark.render();
      data.save();
    }
  });

  debugSetting.bookmark.image = new Button({
    text: 'Only images',
    style: ['line'],
    func: () => {
      bookmark_bookmark.all.forEach(item => {
        item.items.forEach(item => {

          item.display.visual.type = 'image';

        });
      });
      groupAndBookmark.render();
      data.save();
    }
  });

  debugSetting.bookmark.image = new Button({
    text: 'Only images',
    style: ['line'],
    func: () => {
      bookmark_bookmark.all.forEach(item => {
        item.items.forEach(item => {

          item.display.visual.type = 'image';

        });
      });
      groupAndBookmark.render();
      data.save();
    }
  });

  debugSetting.bookmark.nameHide = new Button({
    text: 'Name hide',
    style: ['line'],
    func: () => {
      bookmark_bookmark.all.forEach(item => {
        item.items.forEach(item => {

          item.display.name.show = false;

        });
      });
      groupAndBookmark.render();
      data.save();
    }
  });

  debugSetting.bookmark.nameShow = new Button({
    text: 'Name show',
    style: ['line'],
    func: () => {
      bookmark_bookmark.all.forEach(item => {
        item.items.forEach(item => {

          item.display.name.show = true;

        });
      });
      groupAndBookmark.render();
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      wrap_wrap({
        children: [
          inline_inline({
            gap: 'small',
            wrap: true,
            equalGap: true,
            children: [
              debugSetting.bookmark.letter.wrap(),
              debugSetting.bookmark.icon.wrap(),
              debugSetting.bookmark.image.wrap(),
              debugSetting.bookmark.nameHide.wrap(),
              debugSetting.bookmark.nameShow.wrap(),
            ]
          })
        ]
      })
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/layoutSetting/index.js








































const layoutSetting = {};

layoutSetting.control = {
  scaling: {},
  area: {},
  padding: {},
  gutter: {},
  alignment: {},
  page: {}
};

layoutSetting.disable = () => {

  if (state.get.current().bookmark.show) {

    layoutSetting.control.area.bookmark.width.enable();
    layoutSetting.control.area.bookmark.justify.enable();
    layoutSetting.control.area.bookmark.justifyHelper1.enable();

  } else {

    layoutSetting.control.area.bookmark.width.disable();
    layoutSetting.control.area.bookmark.justify.disable();
    layoutSetting.control.area.bookmark.justifyHelper1.disable();

  };

  if (state.get.current().bookmark.show) {

    switch (state.get.current().layout.direction) {

      case 'vertical':
        layoutSetting.control.area.header.justify.enable();
        layoutSetting.control.area.header.justifyHelper1.enable();
        layoutSetting.control.area.bookmark.justify.enable();
        layoutSetting.control.area.bookmark.justifyHelper1.enable();
        break;

      case 'horizontal':
        layoutSetting.control.area.header.justify.disable();
        layoutSetting.control.area.header.justifyHelper1.disable();
        layoutSetting.control.area.bookmark.justify.disable();
        layoutSetting.control.area.bookmark.justifyHelper1.disable();
        break;

    };

  };


  if (state.get.current().header.order.length > 0) {

    layoutSetting.control.area.header.width.enable();
    layoutSetting.control.area.header.justify.enable();
    layoutSetting.control.area.header.justifyHelper1.enable();

  } else {

    layoutSetting.control.area.header.width.disable();
    layoutSetting.control.area.header.justify.disable();
    layoutSetting.control.area.header.justifyHelper1.disable();

  };

};

layoutSetting.edge = {
  scaling: {},
  area: {},
  padding: {},
  gutter: {},
  alignment: {}
};

layoutSetting.scaling = (parent) => {

  layoutSetting.edge.scaling.size = new Edge({ primary: layout_layout.element.layout });

  layoutSetting.control.scaling.size = new Control_slider({
    object: state.get.current(),
    path: 'layout.size',
    id: 'layout-size',
    labelText: 'Global size',
    value: state.get.current().layout.size,
    defaultValue: state.get.default().layout.size,
    min: state.get.minMax().layout.size.min,
    max: state.get.minMax().layout.size.max,
    action: () => {
      applyCSSVar('layout.size');
      data.save();
    },
    sliderAction: () => {
      layoutSetting.edge.scaling.size.track();
    },
    mouseDownAction: () => {
      layoutSetting.edge.scaling.size.show();
    },
    mouseUpAction: () => {
      layoutSetting.edge.scaling.size.hide();
    }
  });

  parent.appendChild(
    node('div', [
      layoutSetting.control.scaling.size.wrap()
    ])
  );

};

layoutSetting.area = (parent) => {

  layoutSetting.edge.area.width = new Edge({ primary: layout_layout.element.layout });

  layoutSetting.edge.area.header = new Edge({ primary: header_header.element.area, secondary: [layout_layout.element.layout] });

  layoutSetting.edge.area.bookmark = new Edge({ primary: bookmark_bookmark.element.area, secondary: [layout_layout.element.layout] });

  layoutSetting.control.area.width = new Control_slider({
    object: state.get.current(),
    path: 'layout.width',
    id: 'layout-width',
    labelText: 'Layout area width',
    value: state.get.current().layout.width,
    defaultValue: state.get.default().layout.width,
    min: state.get.minMax().layout.width.min,
    max: state.get.minMax().layout.width.max,
    action: () => {
      applyCSSVar('layout.width');
      data.save();
    },
    sliderAction: () => {
      layoutSetting.edge.area.width.track();
    },
    mouseDownAction: () => {
      layoutSetting.edge.area.width.show();
    },
    mouseUpAction: () => {
      layoutSetting.edge.area.width.hide();
    }
  });

  layoutSetting.control.area.header = {
    width: new Control_slider({
      object: state.get.current(),
      path: 'layout.area.header.width',
      id: 'layout-area-header-width',
      labelText: 'Header area width',
      value: state.get.current().layout.area.header.width,
      defaultValue: state.get.default().layout.area.header.width,
      min: state.get.minMax().layout.area.header.width.min,
      max: state.get.minMax().layout.area.header.width.max,
      action: () => {
        applyCSSVar('layout.area.header.width');
        data.save();
      },
      sliderAction: () => {
        layoutSetting.edge.area.header.track();
      },
      mouseDownAction: () => {
        layoutSetting.edge.area.header.show();
      },
      mouseUpAction: () => {
        layoutSetting.edge.area.header.hide();
      }
    }),
    justify: new Control_radioGrid({
      object: state.get.current(),
      radioGroup: [
        { id: 'layout-area-header-justify-left', labelText: 'Left', value: 'left', position: 1 },
        { id: 'layout-area-header-justify-center', labelText: 'Center', value: 'center', position: 2 },
        { id: 'layout-area-header-justify-right', labelText: 'Right', value: 'right', position: 3 }
      ],
      label: 'Header area alignment',
      groupName: 'layout-area-header-justify',
      path: 'layout.area.header.justify',
      gridSize: '3x1',
      action: () => {
        applyCSSClass('layout.area.header.justify');
        data.save();
      }
    }),
    justifyHelper1: new Control_helperText({
      text: ['Effects may not be visible if the Header Area is full width.']
    }),
    justifyHelper2: new Control_helperText({
      text: ['Only available when <a href="#layout-direction-horizontal">Layout Direction</a> is Vertical and Header items are shown.']
    })
  };

  layoutSetting.control.area.bookmark = {
    width: new Control_slider({
      object: state.get.current(),
      path: 'layout.area.bookmark.width',
      id: 'layout-area-bookmark-width',
      labelText: 'Bookmark area width',
      value: state.get.current().layout.area.bookmark.width,
      defaultValue: state.get.default().layout.area.bookmark.width,
      min: state.get.minMax().layout.area.bookmark.width.min,
      max: state.get.minMax().layout.area.bookmark.width.max,
      action: () => {
        applyCSSVar('layout.area.bookmark.width');
        data.save();
      },
      sliderAction: () => {
        layoutSetting.edge.area.bookmark.track();
      },
      mouseDownAction: () => {
        layoutSetting.edge.area.bookmark.show();
      },
      mouseUpAction: () => {
        layoutSetting.edge.area.bookmark.hide();
      }
    }),
    justify: new Control_radioGrid({
      object: state.get.current(),
      radioGroup: [
        { id: 'layout-area-bookmark-justify-left', labelText: 'Left', value: 'left', position: 1 },
        { id: 'layout-area-bookmark-justify-center', labelText: 'Center', value: 'center', position: 2 },
        { id: 'layout-area-bookmark-justify-right', labelText: 'Right', value: 'right', position: 3 }
      ],
      label: 'Bookmark area alignment',
      groupName: 'layout-area-bookmark-justify',
      path: 'layout.area.bookmark.justify',
      gridSize: '3x1',
      action: () => {
        applyCSSClass('layout.area.bookmark.justify');
        data.save();
      }
    }),
    justifyHelper1: new Control_helperText({
      text: ['Effects may not be visible if the Bookmark Area is full width.']
    }),
    justifyHelper2: new Control_helperText({
      text: ['Only available when <a href="#layout-direction-horizontal">Layout Direction</a> is Vertical and Bookmarks are shown.']
    })
  };

  parent.appendChild(
    node('div', [
      layoutSetting.control.area.width.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              node('hr'),
              layoutSetting.control.area.header.width.wrap(),
              layoutSetting.control.area.header.justify.wrap(),
              layoutSetting.control.area.header.justifyHelper1.wrap(),
              layoutSetting.control.area.header.justifyHelper2.wrap(),
              node('hr'),
              layoutSetting.control.area.bookmark.width.wrap(),
              layoutSetting.control.area.bookmark.justify.wrap(),
              layoutSetting.control.area.bookmark.justifyHelper1.wrap(),
              layoutSetting.control.area.bookmark.justifyHelper2.wrap()
            ]
          })
        ]
      })
    ])
  );

};

layoutSetting.padding = (parent) => {

  layoutSetting.edge.padding = new Edge({ primary: layout_layout.element.layout, secondary: [header_header.element.header, bookmark_bookmark.element.group] });

  layoutSetting.control.padding = new Control_slider({
    object: state.get.current(),
    path: 'layout.padding',
    id: 'layout-padding',
    labelText: 'Space around Header and Bookmark Area',
    value: state.get.current().layout.padding,
    defaultValue: state.get.default().layout.padding,
    min: state.get.minMax().layout.padding.min,
    max: state.get.minMax().layout.padding.max,
    action: () => {
      applyCSSVar('layout.padding');
      data.save();
    },
    sliderAction: () => {
      layoutSetting.edge.padding.track();
    },
    mouseDownAction: () => {
      layoutSetting.edge.padding.show();
    },
    mouseUpAction: () => {
      layoutSetting.edge.padding.hide();
    }
  });

  parent.appendChild(
    node('div', [
      layoutSetting.control.padding.wrap()
    ])
  );

};

layoutSetting.gutter = (parent) => {

  layoutSetting.edge.gutter = new Edge({ primary: layout_layout.element.layout, secondary: [header_header.element.header, bookmark_bookmark.element.group] });

  layoutSetting.control.gutter = new Control_slider({
    object: state.get.current(),
    path: 'layout.gutter',
    id: 'layout-gutter',
    labelText: 'Space between Header and Bookmark items',
    value: state.get.current().layout.gutter,
    defaultValue: state.get.default().layout.gutter,
    min: state.get.minMax().layout.gutter.min,
    max: state.get.minMax().layout.gutter.max,
    action: () => {
      applyCSSVar('layout.gutter');
      data.save();
    },
    sliderAction: () => {
      layoutSetting.edge.gutter.track();
    },
    mouseDownAction: () => {
      layoutSetting.edge.gutter.show();
    },
    mouseUpAction: () => {
      layoutSetting.edge.gutter.hide();
    }
  });

  parent.appendChild(
    node('div', [
      layoutSetting.control.gutter.wrap()
    ])
  );

};

layoutSetting.alignment = (parent) => {

  layoutSetting.control.alignment.alignment = new Control_radioGrid({
    object: state.get.current(),
    radioGroup: [
      { id: 'layout-alignment-top-left', labelText: 'Top Left', value: 'top-left', position: 1 },
      { id: 'layout-alignment-top-center', labelText: 'Top Center', value: 'top-center', position: 2 },
      { id: 'layout-alignment-top-right', labelText: 'Top Right', value: 'top-right', position: 3 },
      { id: 'layout-alignment-center-left', labelText: 'Center Left', value: 'center-left', position: 4 },
      { id: 'layout-alignment-center-center', labelText: 'Center Center', value: 'center-center', position: 5 },
      { id: 'layout-alignment-center-right', labelText: 'Center Right', value: 'center-right', position: 6 },
      { id: 'layout-alignment-bottom-left', labelText: 'Bottom Left', value: 'bottom-left', position: 7 },
      { id: 'layout-alignment-bottom-center', labelText: 'Bottom Center', value: 'bottom-center', position: 8 },
      { id: 'layout-alignment-bottom-right', labelText: 'Bottom Right', value: 'bottom-right', position: 9 }
    ],
    label: 'Area alignment',
    groupName: 'layout-alignment',
    path: 'layout.alignment',
    gridSize: '3x3',
    action: () => {
      applyCSSClass('layout.alignment');
      data.save();
    }
  });

  layoutSetting.control.alignment.direction = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'layout-direction-horizontal', labelText: 'Align horizontal', description: 'Stack the Header and Bookmarks in a row side by side.', value: 'horizontal' },
      { id: 'layout-direction-vertical', labelText: 'Align vertical', description: 'Stack the Header and Bookmarks in a column one above the other.', value: 'vertical' }
    ],
    groupName: 'layout-direction',
    path: 'layout.direction',
    action: () => {
      applyCSSClass('layout.direction');
      layoutSetting.disable();
      data.save();
    }
  });

  layoutSetting.control.alignment.order = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'layout-order-header-bookmark', labelText: 'Header then Bookmarks', description: 'Order the Header area to appear before the Bookmarks area.', value: 'header-bookmark' },
      { id: 'layout-order-bookmark-header', labelText: 'Bookmarks then Header', description: 'Order the Bookmarks area to appear before the Header area.', value: 'bookmark-header' }
    ],
    groupName: 'layout-order',
    path: 'layout.order',
    action: () => {
      layout_layout.area.assemble();
      applyCSSClass('layout.order');
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      layoutSetting.control.alignment.alignment.wrap(),
      node('hr'),
      layoutSetting.control.alignment.direction.wrap(),
      node('hr'),
      layoutSetting.control.alignment.order.wrap()
    ])
  );

};

layoutSetting.page = (parent) => {

  layoutSetting.control.page.title = new Control_textReset({
    object: state.get.current(),
    path: 'layout.title',
    id: 'layout-title',
    value: state.get.current().layout.title,
    defaultValue: state.get.default().layout.title,
    placeholder: 'New Tab',
    labelText: 'Title',
    action: () => {
      layout_layout.title.render();
      data.save();
    }
  });

  layoutSetting.control.page.scrollbar = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'layout-scrollbar-auto', labelText: 'Auto', value: 'auto' },
      { id: 'layout-scrollbar-thin', labelText: 'Thin', value: 'thin' },
      { id: 'layout-scrollbar-none', labelText: 'Hidden', value: 'none' }
    ],
    groupName: 'layout-scrollbar',
    path: 'layout.scrollbar',
    action: () => {
      applyCSSClass('layout.scrollbar');
      data.save();
    }
  });

  layoutSetting.control.page.scrollbarHelper = new Control_helperText({
    text: ['Not supported by all browsers.']
  });

  layoutSetting.control.page.overscroll = new Control_checkbox({
    object: state.get.current(),
    path: 'layout.overscroll',
    id: 'layout-overscroll',
    labelText: 'Scroll past end',
    action: () => {
      applyCSSState('layout.overscroll');
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      layoutSetting.control.page.title.wrap(),
      node('hr'),
      layoutSetting.control.page.scrollbar.inline(),
      layoutSetting.control.page.scrollbarHelper.wrap(),
      node('hr'),
      layoutSetting.control.page.overscroll.wrap()
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/groupSetting/index.js










































const groupSetting = {};

groupSetting.control = {
  alignment: {},
  name: {},
  open: {}
};

groupSetting.edge = {
  name: {},
  open: {}
};

groupSetting.disable = () => {

  if (state.get.current().bookmark.show) {
    groupSetting.control.alignment.justify.enable();
    groupSetting.control.alignment.order.enable();
    groupSetting.control.name.size.enable();
    groupSetting.control.name.hide.enable();
    groupSetting.control.name.show.enable();
    groupSetting.control.name.helper.enable();
    groupSetting.control.open.size.enable();
    groupSetting.control.open.hide.enable();
    groupSetting.control.open.show.enable();
    groupSetting.control.open.helper.enable();
  } else {
    groupSetting.control.alignment.justify.disable();
    groupSetting.control.alignment.order.disable();
    groupSetting.control.name.size.disable();
    groupSetting.control.name.hide.disable();
    groupSetting.control.name.show.disable();
    groupSetting.control.name.helper.disable();
    groupSetting.control.open.size.disable();
    groupSetting.control.open.hide.disable();
    groupSetting.control.open.show.disable();
    groupSetting.control.open.helper.disable();
  };

};

groupSetting.alignment = (parent) => {

  groupSetting.control.alignment.justify = new Control_radioGrid({
    object: state.get.current(),
    radioGroup: [
      { id: 'group-area-justify-left', labelText: 'Left', value: 'left', position: 1 },
      { id: 'group-area-justify-center', labelText: 'Center', value: 'center', position: 2 },
      { id: 'group-area-justify-right', labelText: 'Right', value: 'right', position: 3 }
    ],
    label: 'Group details area alignment',
    groupName: 'group-area-justify',
    path: 'group.area.justify',
    gridSize: '3x1',
    action: () => {
      applyCSSClass('group.area.justify');
      data.save();
    }
  });

  groupSetting.control.alignment.order = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'group-order-header-body', labelText: 'Group details then Bookmarks', description: 'Order the Group details area to appear before the Bookmarks area.', value: 'header-body' },
      { id: 'group-order-body-header', labelText: 'Bookmarks then Group details', description: 'Order the Bookmarks area to appear before the Group details area.', value: 'body-header' }
    ],
    groupName: 'group-order',
    path: 'group.order',
    action: () => {
      applyCSSClass('group.order');
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      groupSetting.control.alignment.justify.wrap(),
      node('hr'),
      groupSetting.control.alignment.order.wrap()
    ])
  );

};

groupSetting.name = (parent) => {

  if (state.get.current().bookmark.show && bookmark_bookmark.all[0].name.show && component_group_group.area.current.length > 0) {

    groupSetting.edge.name.size = new Edge({ primary: component_group_group.area.current[0].element.name.name, secondary: [component_group_group.area.current[0].element.header] });

  };

  groupSetting.control.name.size = new Control_slider({
    object: state.get.current(),
    path: 'group.name.size',
    id: 'group-name-size',
    labelText: 'Name size',
    value: state.get.current().group.name.size,
    defaultValue: state.get.default().group.name.size,
    min: state.get.minMax().group.name.size.min,
    max: state.get.minMax().group.name.size.max,
    action: () => {
      applyCSSVar('group.name.size');
      data.save();
    },
    sliderAction: () => {
      if (state.get.current().bookmark.show && component_group_group.area.current.length > 0 && bookmark_bookmark.all[0].name.show && groupSetting.edge.name.size) { groupSetting.edge.name.size.track(); };
    },
    mouseDownAction: () => {
      if (state.get.current().bookmark.show && component_group_group.area.current.length > 0 && bookmark_bookmark.all[0].name.show && groupSetting.edge.name.size) { groupSetting.edge.name.size.show(); };
    },
    mouseUpAction: () => {
      if (state.get.current().bookmark.show && component_group_group.area.current.length > 0 && bookmark_bookmark.all[0].name.show && groupSetting.edge.name.size) { groupSetting.edge.name.size.hide(); };
    }
  });

  groupSetting.control.name.hide = new Button({
    text: 'Show all',
    style: ['line'],
    func: () => {

      bookmark_bookmark.all.forEach(item => { item.name.show = true; });

      groupAndBookmark.render();

      if (groupSetting.edge.name.size) {

        if (state.get.current().bookmark.show && component_group_group.area.current.length > 0) {

          groupSetting.edge.name.size.update.primary(component_group_group.area.current[0].element.name.name);

          groupSetting.edge.name.size.update.secondary([component_group_group.area.current[0].element.header]);

        };

      } else {

        groupSetting.edge.name.size = new Edge({ primary: component_group_group.area.current[0].element.name.name, secondary: [component_group_group.area.current[0].element.header] });

      };

      if (groupSetting.edge.open.size) {

        if (state.get.current().bookmark.show && component_group_group.area.current.length > 0) {

          groupSetting.edge.open.size.update.primary(component_group_group.area.current[0].openAll.button.button);

          groupSetting.edge.open.size.update.secondary([component_group_group.area.current[0].element.header]);

        };

      } else {

        groupSetting.edge.open.size = new Edge({ primary: component_group_group.area.current[0].openAll.button.button, secondary: [component_group_group.area.current[0].element.header] });

      };

      data.save();

    }
  });

  groupSetting.control.name.show = new Button({
    text: 'Hide all',
    style: ['line'],
    func: () => {

      bookmark_bookmark.all.forEach(item => { item.name.show = false; });

      groupAndBookmark.render();

      if (groupSetting.edge.name.size) {

        if (state.get.current().bookmark.show && component_group_group.area.current.length > 0) {

          groupSetting.edge.name.size.update.primary(component_group_group.area.current[0].element.name.name);

          groupSetting.edge.name.size.update.secondary([component_group_group.area.current[0].element.header]);

        };

      } else {

        groupSetting.edge.name.size = new Edge({ primary: component_group_group.area.current[0].element.name.name, secondary: [component_group_group.area.current[0].element.header] });

      };

      if (groupSetting.edge.open.size) {

        if (state.get.current().bookmark.show && component_group_group.area.current.length > 0) {

          groupSetting.edge.open.size.update.primary(component_group_group.area.current[0].openAll.button.button);

          groupSetting.edge.open.size.update.secondary([component_group_group.area.current[0].element.header]);

        };

      } else {

        groupSetting.edge.open.size = new Edge({ primary: component_group_group.area.current[0].openAll.button.button, secondary: [component_group_group.area.current[0].element.header] });

      };

      data.save();

    }
  });

  groupSetting.control.name.helper = new Control_helperText({
    text: ['Group Names can also be changed by editing individual Groups.']
  });

  parent.appendChild(
    node('div', [
      groupSetting.control.name.size.wrap(),
      inline_inline({
        children: [
          groupSetting.control.name.hide.wrap(),
          groupSetting.control.name.show.wrap()
        ]
      }),
      groupSetting.control.name.helper.wrap()
    ])
  );

};

groupSetting.open = (parent) => {

  if (state.get.current().bookmark.show && bookmark_bookmark.all[0].openAll.show && component_group_group.area.current.length > 0) {

    groupSetting.edge.open.size = new Edge({ primary: component_group_group.area.current[0].openAll.button.button, secondary: [component_group_group.area.current[0].element.header] });

  };

  groupSetting.control.open.size = new Control_slider({
    object: state.get.current(),
    path: 'group.openAll.size',
    id: 'group-openAll-size',
    labelText: 'Open all size',
    value: state.get.current().group.openAll.size,
    defaultValue: state.get.default().group.openAll.size,
    min: state.get.minMax().group.openAll.size.min,
    max: state.get.minMax().group.openAll.size.max,
    action: () => {
      applyCSSVar('group.openAll.size');
      data.save();
    },
    sliderAction: () => {
      if (state.get.current().bookmark.show && component_group_group.area.current.length > 0 && bookmark_bookmark.all[0].openAll.show && groupSetting.edge.open.size) { groupSetting.edge.open.size.track(); };
    },
    mouseDownAction: () => {
      if (state.get.current().bookmark.show && component_group_group.area.current.length > 0 && bookmark_bookmark.all[0].openAll.show && groupSetting.edge.open.size) { groupSetting.edge.open.size.show(); };
    },
    mouseUpAction: () => {
      if (state.get.current().bookmark.show && component_group_group.area.current.length > 0 && bookmark_bookmark.all[0].openAll.show && groupSetting.edge.open.size) { groupSetting.edge.open.size.hide(); };
    }
  });

  groupSetting.control.open.hide = new Button({
    text: 'Show all',
    style: ['line'],
    func: () => {

      bookmark_bookmark.all.forEach(item => { item.openAll.show = true; });

      groupAndBookmark.render();

      if (groupSetting.edge.name.size) {

        if (state.get.current().bookmark.show && component_group_group.area.current.length > 0) {

          groupSetting.edge.name.size.update.primary(component_group_group.area.current[0].element.name.name);

          groupSetting.edge.name.size.update.secondary([component_group_group.area.current[0].element.header]);

        };

      } else {

        groupSetting.edge.name.size = new Edge({ primary: component_group_group.area.current[0].element.name.name, secondary: [component_group_group.area.current[0].element.header] });

      };

      if (groupSetting.edge.open.size) {

        if (state.get.current().bookmark.show && component_group_group.area.current.length > 0) {

          groupSetting.edge.open.size.update.primary(component_group_group.area.current[0].openAll.button.button);

          groupSetting.edge.open.size.update.secondary([component_group_group.area.current[0].element.header]);

        };

      } else {

        groupSetting.edge.open.size = new Edge({ primary: component_group_group.area.current[0].openAll.button.button, secondary: [component_group_group.area.current[0].element.header] });

      };

      data.save();

    }
  });

  groupSetting.control.open.show = new Button({
    text: 'Hide all',
    style: ['line'],
    func: () => {

      bookmark_bookmark.all.forEach(item => { item.openAll.show = false; });

      groupAndBookmark.render();

      if (groupSetting.edge.name.size) {

        if (state.get.current().bookmark.show && component_group_group.area.current.length > 0) {

          groupSetting.edge.name.size.update.primary(component_group_group.area.current[0].element.name.name);

          groupSetting.edge.name.size.update.secondary([component_group_group.area.current[0].element.header]);

        };

      } else {

        groupSetting.edge.name.size = new Edge({ primary: component_group_group.area.current[0].element.name.name, secondary: [component_group_group.area.current[0].element.header] });

      };

      if (groupSetting.edge.open.size) {

        if (state.get.current().bookmark.show && component_group_group.area.current.length > 0) {

          groupSetting.edge.open.size.update.primary(component_group_group.area.current[0].openAll.button.button);

          groupSetting.edge.open.size.update.secondary([component_group_group.area.current[0].element.header]);

        };

      } else {

        groupSetting.edge.open.size = new Edge({ primary: component_group_group.area.current[0].openAll.button.button, secondary: [component_group_group.area.current[0].element.header] });

      };

      data.save();

    }
  });

  groupSetting.control.open.helper = new Control_helperText({
    text: ['Group Names can also be changed by editing individual Groups.']
  });

  parent.appendChild(
    node('div', [
      groupSetting.control.open.size.wrap(),
      inline_inline({
        children: [
          groupSetting.control.open.hide.wrap(),
          groupSetting.control.open.show.wrap()
        ]
      }),
      groupSetting.control.open.helper.wrap()
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/bookmarkSetting/index.js









































const bookmarkSetting = {};

bookmarkSetting.control = {
  general: {},
  style: {},
  orientation: {},
  sort: {}
};

bookmarkSetting.disable = () => {

  if (state.get.current().bookmark.show) {
    bookmarkSetting.control.general.size.enable();
    bookmarkSetting.control.general.urlShow.enable();
    bookmarkSetting.control.general.lineShow.enable();
    bookmarkSetting.control.general.shadowShow.enable();
    bookmarkSetting.control.general.hoverScaleShow.enable();
    bookmarkSetting.control.general.newTab.enable();
    bookmarkSetting.control.style.enable();
    bookmarkSetting.control.orientation.orientationElement.enable();
    bookmarkSetting.control.orientation.orientationHelper.enable();
    bookmarkSetting.control.sort.letter.enable();
    bookmarkSetting.control.sort.icon.enable();
    bookmarkSetting.control.sort.name.enable();
  } else {
    bookmarkSetting.control.general.size.disable();
    bookmarkSetting.control.general.urlShow.disable();
    bookmarkSetting.control.general.lineShow.disable();
    bookmarkSetting.control.general.shadowShow.disable();
    bookmarkSetting.control.general.hoverScaleShow.disable();
    bookmarkSetting.control.general.newTab.disable();
    bookmarkSetting.control.style.disable();
    bookmarkSetting.control.orientation.orientationElement.disable();
    bookmarkSetting.control.orientation.orientationHelper.disable();
    bookmarkSetting.control.sort.letter.disable();
    bookmarkSetting.control.sort.icon.disable();
    bookmarkSetting.control.sort.name.disable();
  };

};

bookmarkSetting.edge = {
  general: {},
  style: {},
  orientation: {}
};

bookmarkSetting.general = (parent) => {

  if (state.get.current().bookmark.show && bookmark_bookmark.tile.current.length > 0) {

    bookmarkSetting.edge.general.size = new Edge({ primary: bookmark_bookmark.tile.current[0].tile(), secondary: [bookmark_bookmark.element.area] });

  };

  bookmarkSetting.control.general.show = new Control_checkbox({
    object: state.get.current(),
    id: 'bookmark-show',
    path: 'bookmark.show',
    labelText: 'Show Bookmarks',
    action: () => {

      layout_layout.area.assemble();

      applyCSSState('bookmark.show');

      bookmarkSetting.disable();

      if (bookmarkSetting.edge.general.size) {

        if (state.get.current().bookmark.show && bookmark_bookmark.tile.current.length > 0) {

          bookmarkSetting.edge.general.size.update.primary(bookmark_bookmark.tile.current[0].tile());

        };

      } else {

        bookmarkSetting.edge.general.size = new Edge({ primary: bookmark_bookmark.tile.current[0].tile(), secondary: [bookmark_bookmark.element.area] });

      };

      bookmarkSetting.control.general.collapse.update();

      data.save();

    }
  });

  bookmarkSetting.control.general.urlShow = new Control_checkbox({
    object: state.get.current(),
    id: 'bookmark-url-show',
    path: 'bookmark.url.show',
    labelText: 'Show URL on Bookmark hover',
    action: () => {
      applyCSSState('bookmark.url.show');
      data.save();
    }
  });

  bookmarkSetting.control.general.lineShow = new Control_checkbox({
    object: state.get.current(),
    id: 'bookmark-line-show',
    path: 'bookmark.line.show',
    labelText: 'Show Bookmark line',
    action: () => {
      applyCSSState('bookmark.line.show');
      data.save();
    }
  });

  bookmarkSetting.control.general.shadowShow = new Control_checkbox({
    object: state.get.current(),
    id: 'bookmark-shadow-show',
    path: 'bookmark.shadow.show',
    labelText: 'Show shadow on Bookmark hover',
    description: 'Effects may not be visible if Theme Shadow is set to 0.',
    action: () => {
      applyCSSState('bookmark.shadow.show');
      data.save();
    }
  });

  bookmarkSetting.control.general.hoverScaleShow = new Control_checkbox({
    object: state.get.current(),
    id: 'bookmark-hoverScale-show',
    path: 'bookmark.hoverScale.show',
    labelText: 'Grow on Bookmark hover',
    action: () => {
      applyCSSState('bookmark.hoverScale.show');
      data.save();
    }
  });

  bookmarkSetting.control.general.newTab = new Control_checkbox({
    object: state.get.current(),
    id: 'bookmark-newTab',
    path: 'bookmark.newTab',
    labelText: 'Open Bookmarks in a new tab',
    action: () => {
      groupAndBookmark.render();
      data.save();
    }
  });

  bookmarkSetting.control.general.size = new Control_slider({
    object: state.get.current(),
    path: 'bookmark.size',
    id: 'bookmark-size',
    labelText: 'Bookmark size',
    value: state.get.current().bookmark.size,
    defaultValue: state.get.default().bookmark.size,
    min: state.get.minMax().bookmark.size.min,
    max: state.get.minMax().bookmark.size.max,
    action: () => {
      applyCSSVar('bookmark.size');
      data.save();
    },
    sliderAction: () => {
      if (state.get.current().bookmark.show && bookmark_bookmark.tile.current.length > 0 && bookmarkSetting.edge.general.size) { bookmarkSetting.edge.general.size.track(); };
    },
    mouseDownAction: () => {
      if (state.get.current().bookmark.show && bookmark_bookmark.tile.current.length > 0 && bookmarkSetting.edge.general.size) { bookmarkSetting.edge.general.size.show(); };
    },
    mouseUpAction: () => {
      if (state.get.current().bookmark.show && bookmark_bookmark.tile.current.length > 0 && bookmarkSetting.edge.general.size) { bookmarkSetting.edge.general.size.hide(); };
    }
  });

  bookmarkSetting.control.general.area = node('div', [
    bookmarkSetting.control.general.urlShow.wrap(),
    bookmarkSetting.control.general.lineShow.wrap(),
    bookmarkSetting.control.general.shadowShow.wrap(),
    bookmarkSetting.control.general.hoverScaleShow.wrap(),
    bookmarkSetting.control.general.newTab.wrap(),
    bookmarkSetting.control.general.size.wrap()
  ]);

  bookmarkSetting.control.general.collapse = new Collapse({
    type: 'checkbox',
    checkbox: bookmarkSetting.control.general.show,
    target: [{
      content: bookmarkSetting.control.general.area
    }]
  });

  parent.appendChild(
    node('div', [
      bookmarkSetting.control.general.show.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              bookmarkSetting.control.general.collapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};

bookmarkSetting.style = (parent) => {

  bookmarkSetting.control.style = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'bookmark-style-block', labelText: 'Block', description: 'Square shaped Bookmark tiles.', value: 'block' },
      { id: 'bookmark-style-list', labelText: 'List', description: 'Short and wide Bookmark tiles.', value: 'list' }
    ],
    groupName: 'bookmark-style',
    path: 'bookmark.style',
    action: () => {

      switch (state.get.current().bookmark.style) {

        case 'block':
          bookmark_bookmark.direction.mod.vertical();
          break;

        case 'list':
          bookmark_bookmark.direction.mod.horizontal();
          break;

      };

      applyCSSClass('bookmark.style');

      groupAndBookmark.render();

      data.save();

    }
  });

  parent.appendChild(
    node('div', [
      bookmarkSetting.control.style.wrap(),
    ])
  );

};

bookmarkSetting.orientation = (parent) => {

  bookmarkSetting.control.orientation.orientationElement = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'bookmark-orientation-top', labelText: 'Top', value: 'top' },
      { id: 'bookmark-orientation-bottom', labelText: 'Bottom', value: 'bottom' }
    ],
    groupName: 'bookmark-orientation',
    path: 'bookmark.orientation',
    action: () => {
      applyCSSClass('bookmark.orientation');
      data.save();
    }
  });

  bookmarkSetting.control.orientation.orientationHelper = new Control_helperText({
    text: ['Display the URL and Controls either at the top or bottom of a Bookmark Tile.']
  });

  parent.appendChild(
    node('div', [
      bookmarkSetting.control.orientation.orientationElement.inline(),
      bookmarkSetting.control.orientation.orientationHelper.wrap()
    ])
  );

};

bookmarkSetting.sort = (parent) => {

  bookmarkSetting.control.sort.letter = new Button({
    text: 'By letter',
    style: ['line'],
    func: () => {
      bookmark_bookmark.item.mod.sort.letter();
      groupAndBookmark.render();
      data.save();
    }
  });

  bookmarkSetting.control.sort.icon = new Button({
    text: 'By icon',
    style: ['line'],
    func: () => {
      bookmark_bookmark.item.mod.sort.icon();
      groupAndBookmark.render();
      data.save();
    }
  });

  bookmarkSetting.control.sort.name = new Button({
    text: 'By name',
    style: ['line'],
    func: () => {
      bookmark_bookmark.item.mod.sort.name();
      groupAndBookmark.render();
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      wrap_wrap({
        children: [
          inline_inline({
            gap: 'small',
            children: [
              bookmarkSetting.control.sort.letter.wrap(),
              bookmarkSetting.control.sort.icon.wrap(),
              bookmarkSetting.control.sort.name.wrap()
            ]
          })
        ]
      })
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/searchEnginePreset/index.js
const searchEnginePreset = {
  google: { url: 'https://www.google.com/search', name: 'Google' },
  duckduckgo: { url: 'https://duckduckgo.com/', name: 'DuckDuckGo' },
  youtube: { url: 'https://www.youtube.com/results?search_query=', name: 'YouTube' },
  giphy: { url: 'https://giphy.com/search/', name: 'Giphy' },
  bing: { url: 'https://www.bing.com/search?q=', name: 'Bing' }
};

;// CONCATENATED MODULE: ./src/component/menuContent/headerSetting/index.js









































const headerSetting = {};

headerSetting.control = {
  area: {},
  greeting: {},
  transitional: {},
  clock: {},
  date: {},
  search: {}
};

headerSetting.disable = () => {

  if (state.get.current().header.greeting.show) {
    headerSetting.control.greeting.size.enable();
    headerSetting.control.greeting.newLine.enable();
    headerSetting.control.greeting.type.enable();
    headerSetting.control.greeting.name.enable();
  } else {
    headerSetting.control.greeting.size.disable();
    headerSetting.control.greeting.newLine.disable();
    headerSetting.control.greeting.type.disable();
    headerSetting.control.greeting.name.disable();
  };

  if (state.get.current().header.greeting.show) {

    switch (state.get.current().header.greeting.type) {

      case 'good':
      case 'hello':
      case 'hi':
        headerSetting.control.greeting.custom.text.disable();
        break;

      case 'custom':
        headerSetting.control.greeting.custom.text.enable();
        break;

    };

  } else {

    headerSetting.control.greeting.custom.text.disable();

  };

  if (state.get.current().header.clock.second.show ||
    state.get.current().header.clock.minute.show ||
    state.get.current().header.clock.hour.show) {

    headerSetting.control.clock.hour24.show.enable();
    headerSetting.control.clock.size.enable();
    headerSetting.control.clock.newLine.enable();

    if (state.get.current().header.clock.second.show) {
      headerSetting.control.clock.second.display.enable();
    } else {
      headerSetting.control.clock.second.display.disable();
    };

    if (state.get.current().header.clock.hour.show) {
      headerSetting.control.clock.hour.display.enable();
    } else {
      headerSetting.control.clock.hour.display.disable();
    };

    if (state.get.current().header.clock.second.show) {
      headerSetting.control.clock.second.display.enable();
    } else {
      headerSetting.control.clock.second.display.disable();
    };

    if (state.get.current().header.clock.hour24.show) {
      headerSetting.control.clock.meridiem.show.disable();
    } else {
      headerSetting.control.clock.meridiem.show.enable();
    };

  } else {

    headerSetting.control.clock.hour24.show.disable();
    headerSetting.control.clock.meridiem.show.disable();
    headerSetting.control.clock.size.disable();
    headerSetting.control.clock.newLine.disable();

  };

  if ([state.get.current().header.clock.second.show, state.get.current().header.clock.minute.show, state.get.current().header.clock.hour.show].filter(Boolean).length > 1) {

    headerSetting.control.clock.separator.show.enable();

  } else {

    headerSetting.control.clock.separator.show.disable();

  };

  if (
    [state.get.current().header.clock.second.show, state.get.current().header.clock.minute.show, state.get.current().header.clock.hour.show].filter(Boolean).length > 1 &&
    state.get.current().header.clock.separator.show
  ) {

    headerSetting.control.clock.separator.text.enable();

  } else {

    headerSetting.control.clock.separator.text.disable();

  };

  if (
    (state.get.current().header.clock.second.show && state.get.current().header.clock.minute.show) ||
    (state.get.current().header.clock.second.show && state.get.current().header.clock.hour.show) ||
    (state.get.current().header.clock.minute.show && state.get.current().header.clock.hour.show)
  ) {

    headerSetting.control.clock.separator.show.enable();

  } else {

    headerSetting.control.clock.separator.show.disable();

  };

  if (
    ((state.get.current().header.clock.second.show && state.get.current().header.clock.minute.show) ||
      (state.get.current().header.clock.second.show && state.get.current().header.clock.hour.show) ||
      (state.get.current().header.clock.minute.show && state.get.current().header.clock.hour.show)) &&
    state.get.current().header.clock.separator.show
  ) {

    headerSetting.control.clock.separator.text.enable();

  } else {

    headerSetting.control.clock.separator.text.disable();

  };

  if (state.get.current().header.date.day.show ||
    state.get.current().header.date.date.show ||
    state.get.current().header.date.month.show ||
    state.get.current().header.date.year.show) {

    headerSetting.control.date.size.enable();
    headerSetting.control.date.newLine.enable();

  } else {

    headerSetting.control.date.size.disable();
    headerSetting.control.date.newLine.disable();

  };

  if (state.get.current().header.date.date.show && state.get.current().header.date.month.show) {

    headerSetting.control.date.format.enable();

  } else {

    headerSetting.control.date.format.disable();

  };

  if (state.get.current().header.date.day.show) {

    headerSetting.control.date.day.display.enable();

    switch (state.get.current().header.date.day.display) {

      case 'word':
        headerSetting.control.date.day.length.enable();
        headerSetting.control.date.day.weekStart.disable();
        break;

      case 'number':
        headerSetting.control.date.day.length.disable();
        headerSetting.control.date.day.weekStart.enable();
        break;

    };

  } else {

    headerSetting.control.date.day.display.disable();
    headerSetting.control.date.day.length.disable();
    headerSetting.control.date.day.weekStart.disable();

  };

  if (state.get.current().header.date.date.show) {

    headerSetting.control.date.date.display.enable();
    headerSetting.control.date.date.ordinal.enable();

  } else {

    headerSetting.control.date.date.display.disable();
    headerSetting.control.date.date.ordinal.disable();

  };

  if (state.get.current().header.date.month.show) {

    switch (state.get.current().header.date.month.display) {

      case 'word':
        headerSetting.control.date.month.ordinal.disable();
        headerSetting.control.date.month.length.enable();
        break;

      case 'number':
        headerSetting.control.date.month.ordinal.enable();
        headerSetting.control.date.month.length.disable();
        break;

    };

    headerSetting.control.date.month.display.enable();

  } else {

    headerSetting.control.date.month.display.disable();
    headerSetting.control.date.month.ordinal.disable();
    headerSetting.control.date.month.length.disable();

  };

  if (state.get.current().header.date.year.show) {

    headerSetting.control.date.year.display.enable();

  } else {

    headerSetting.control.date.year.display.disable();

  };

  if ([state.get.current().header.date.day.show, state.get.current().header.date.date.show, state.get.current().header.date.month.show, state.get.current().header.date.year.show].filter(Boolean).length > 1) {

    headerSetting.control.date.separator.show.enable();

  } else {

    headerSetting.control.date.separator.show.disable();

  };

  if (
    [state.get.current().header.date.day.show, state.get.current().header.date.date.show, state.get.current().header.date.month.show, state.get.current().header.date.year.show].filter(Boolean).length > 1 &&
    state.get.current().header.date.separator.show
  ) {

    headerSetting.control.date.separator.text.enable();

  } else {

    headerSetting.control.date.separator.text.disable();

  };

  if (
    state.get.current().header.clock.second.show ||
    state.get.current().header.clock.minute.show ||
    state.get.current().header.clock.hour.show ||
    state.get.current().header.date.day.show ||
    state.get.current().header.date.date.show ||
    state.get.current().header.date.month.show ||
    state.get.current().header.date.year.show
  ) {
    headerSetting.control.transitional.show.enable();
    headerSetting.control.transitional.newLine.enable();
  } else {
    headerSetting.control.transitional.show.disable();
    headerSetting.control.transitional.newLine.disable();
  };

  if ((
      state.get.current().header.clock.second.show ||
      state.get.current().header.clock.minute.show ||
      state.get.current().header.clock.hour.show ||
      state.get.current().header.date.day.show ||
      state.get.current().header.date.date.show ||
      state.get.current().header.date.month.show ||
      state.get.current().header.date.year.show
    ) &&
    state.get.current().header.transitional.show) {
    headerSetting.control.transitional.type.enable();
    headerSetting.control.transitional.size.enable();
    headerSetting.control.transitional.newLine.enable();
  } else {
    headerSetting.control.transitional.type.disable();
    headerSetting.control.transitional.size.disable();
    headerSetting.control.transitional.newLine.disable();
  };

  if (state.get.current().header.search.show) {
    headerSetting.control.search.width.by.enable();
    headerSetting.control.search.newTab.enable();
    headerSetting.control.search.size.enable();
    headerSetting.control.search.newLine.enable();
  } else {
    headerSetting.control.search.width.by.disable();
    headerSetting.control.search.newTab.disable();
    headerSetting.control.search.size.disable();
    headerSetting.control.search.newLine.disable();
  };

  if (state.get.current().header.search.show) {

    switch (state.get.current().header.search.width.by) {

      case 'auto':
        headerSetting.control.search.width.size.disable();
        break;


      case 'custom':
        headerSetting.control.search.width.size.enable();
        break;

    };

  } else {

    headerSetting.control.search.width.size.disable();

  };

  switch (state.get.current().header.search.engine.selected) {

    case 'custom':
      headerSetting.control.search.engine.custom.name.enable();
      headerSetting.control.search.engine.custom.url.enable();
      headerSetting.control.search.engine.custom.urlHelper.enable();
      headerSetting.control.search.engine.custom.queryName.enable();
      headerSetting.control.search.engine.custom.queryNameHelper.enable();
      break;

    default:
      headerSetting.control.search.engine.custom.name.disable();
      headerSetting.control.search.engine.custom.url.disable();
      headerSetting.control.search.engine.custom.urlHelper.disable();
      headerSetting.control.search.engine.custom.queryName.disable();
      headerSetting.control.search.engine.custom.queryNameHelper.disable();
      break;

  };

};

headerSetting.edge = {
  area: {},
  greeting: {},
  transitional: {},
  clock: {},
  date: {},
  search: {}
};

headerSetting.update = () => {

  for (let key in headerSetting.control) {

    headerSetting.control[key].forEach((item, i) => {
      item.update();
    });

  };

};

headerSetting.area = (parent) => {

  headerSetting.area.alignment = new Control_radioGrid({
    object: state.get.current(),
    radioGroup: [
      { id: 'header-item-justify-left', labelText: 'Left', value: 'left', position: 1 },
      { id: 'header-item-justify-center', labelText: 'Center', value: 'center', position: 2 },
      { id: 'header-item-justify-right', labelText: 'Right', value: 'right', position: 3 }
    ],
    label: 'Header item alignment',
    groupName: 'header-item-justify',
    path: 'header.item.justify',
    gridSize: '3x1',
    action: () => {
      applyCSSClass('header.item.justify');
      data.save();
    }
  });

  headerSetting.area.alignmentHelper = new Control_helperText({
    text: ['Effects may not be visible if the <a href="#menu-content-item-search">Search box size</a> size is set to Auto and grows to fill available space.']
  });

  parent.appendChild(
    node('div', [
      headerSetting.area.alignment.wrap(),
      headerSetting.area.alignmentHelper.wrap()
    ])
  );

};

headerSetting.greeting = (parent) => {

  headerSetting.edge.greeting.size = new Edge({ primary: header_header.element.greeting.greeting(), secondary: [header_header.element.area] });

  headerSetting.control.greeting.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.greeting.show',
    id: 'header-greeting-show',
    labelText: 'Show Greeting',
    action: function() {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.greeting.collapse.update();
      data.save();
    }
  });

  headerSetting.control.greeting.size = new Control_sliderSlim({
    object: state.get.current(),
    path: 'header.greeting.size',
    id: 'header-greeting-size',
    labelText: 'Size',
    value: state.get.current().header.greeting.size,
    defaultValue: state.get.default().header.greeting.size,
    min: state.get.minMax().header.greeting.size.min,
    max: state.get.minMax().header.greeting.size.max,
    action: () => {
      applyCSSVar('header.greeting.size');
      data.save();
    },
    sliderAction: () => {
      headerSetting.edge.greeting.size.track();
    },
    mouseDownAction: () => {
      headerSetting.edge.greeting.size.show();
    },
    mouseUpAction: () => {
      headerSetting.edge.greeting.size.hide();
    }
  });

  headerSetting.control.greeting.newLine = new Control_checkbox({
    object: state.get.current(),
    path: 'header.greeting.newLine',
    id: 'header-greeting-newLine',
    labelText: 'New line',
    description: 'Force on to a new line and seperate from other Header items.',
    action: function() {
      applyCSSState('header.greeting.newLine');
      data.save();
    }
  });

  headerSetting.control.greeting.type = new Control_radio({
    object: state.get.current(),
    label: 'Wording',
    radioGroup: [
      { id: 'header-greeting-type-good', labelText: '"Good morning..."', value: 'good' },
      { id: 'header-greeting-type-hello', labelText: '"Hello..."', value: 'hello' },
      { id: 'header-greeting-type-hi', labelText: '"Hi..."', value: 'hi' },
      { id: 'header-greeting-type-custom', labelText: 'Custom', value: 'custom' }
    ],
    groupName: 'header-greeting-type',
    path: 'header.greeting.type',
    action: () => {
      header_header.element.greeting.update();
      headerSetting.control.greeting.custom.collapse.update();
      headerSetting.disable();
      data.save();
    }
  });

  headerSetting.control.greeting.custom = {};

  headerSetting.control.greeting.custom.text = new Control_text({
    object: state.get.current(),
    path: 'header.greeting.custom',
    id: 'header-greeting-custom',
    value: state.get.current().header.greeting.custom,
    placeholder: 'Howdy',
    labelText: 'Custom greeting text',
    srOnly: true,
    action: () => {
      header_header.element.greeting.update();
      data.save();
    }
  });

  headerSetting.control.greeting.custom.area = node('div', [
    headerSetting.control.greeting.custom.text.wrap()
  ]);

  headerSetting.control.greeting.custom.collapse = new Collapse({
    type: 'radio',
    radioGroup: headerSetting.control.greeting.type,
    target: [{
      id: headerSetting.control.greeting.type.radioSet[headerSetting.control.greeting.type.radioSet.length - 1].radio.value,
      content: headerSetting.control.greeting.custom.area
    }]
  });

  headerSetting.control.greeting.name = new Control_text({
    object: state.get.current(),
    path: 'header.greeting.name',
    id: 'header-greeting-name',
    value: state.get.current().header.greeting.name,
    placeholder: 'Nickname, alias or superhero name',
    labelText: 'Name',
    action: () => {
      header_header.element.greeting.update();
      data.save();
    }
  });

  headerSetting.control.greeting.area = node('div', [
    headerSetting.control.greeting.type.wrap(),
    wrap_wrap({
      children: [
        indent_indent({
          children: [
            headerSetting.control.greeting.custom.collapse.collapse()
          ]
        })
      ]
    }),
    node('hr'),
    headerSetting.control.greeting.name.wrap(),
    node('hr'),
    headerSetting.control.greeting.size.wrap(),
    headerSetting.control.greeting.newLine.wrap()
  ]);

  headerSetting.control.greeting.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.greeting.show,
    target: [{
      content: headerSetting.control.greeting.area
    }]
  });

  parent.appendChild(
    node('div', [
      headerSetting.control.greeting.show.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              headerSetting.control.greeting.collapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};

headerSetting.transitional = (parent) => {

  headerSetting.edge.transitional.size = new Edge({ primary: header_header.element.transitional.transitional(), secondary: [header_header.element.area] });

  headerSetting.control.transitional.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.transitional.show',
    id: 'header-transitional-show',
    labelText: 'Show Transitional words',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.transitional.collapse.update();
      data.save();
    }
  });

  headerSetting.control.transitional.showHelper = new Control_helperText({
    text: ['Only available when Date or Time is shown.']
  });

  headerSetting.control.transitional.size = new Control_sliderSlim({
    object: state.get.current(),
    path: 'header.transitional.size',
    id: 'header-transitional-size',
    labelText: 'Size',
    value: state.get.current().header.transitional.size,
    defaultValue: state.get.default().header.transitional.size,
    min: state.get.minMax().header.transitional.size.min,
    max: state.get.minMax().header.transitional.size.max,
    action: () => {
      applyCSSVar('header.transitional.size');
      data.save();
    },
    sliderAction: () => {
      headerSetting.edge.transitional.size.track();
    },
    mouseDownAction: () => {
      headerSetting.edge.transitional.size.show();
    },
    mouseUpAction: () => {
      headerSetting.edge.transitional.size.hide();
    }
  });

  headerSetting.control.transitional.newLine = new Control_checkbox({
    object: state.get.current(),
    path: 'header.transitional.newLine',
    id: 'header-transitional-newLine',
    labelText: 'New line',
    description: 'Force on to a new line and seperate from other Header items.',
    action: function() {
      applyCSSState('header.transitional.newLine');
      data.save();
    }
  });

  headerSetting.control.transitional.type = new Control_radio({
    object: state.get.current(),
    label: 'Wording',
    radioGroup: [
      { id: 'header-transitional-type-timeanddate', labelText: '"The time and date is"', value: 'timeanddate' },
      { id: 'header-transitional-type-its', labelText: '"It\'s"', value: 'its' }
    ],
    groupName: 'header-transitional-type',
    path: 'header.transitional.type',
    action: () => {
      header_header.element.transitional.update();
      headerSetting.disable();
      data.save();
    }
  });

  headerSetting.control.transitional.area = node('div', [
    headerSetting.control.transitional.type.wrap(),
    node('hr'),
    headerSetting.control.transitional.size.wrap(),
    headerSetting.control.transitional.newLine.wrap()
  ]);

  headerSetting.control.transitional.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.transitional.show,
    target: [{
      content: headerSetting.control.transitional.area
    }]
  });

  parent.appendChild(
    node('div', [
      headerSetting.control.transitional.show.wrap(),
      headerSetting.control.transitional.showHelper.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              headerSetting.control.transitional.collapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};

headerSetting.clock = (parent) => {

  headerSetting.edge.clock.size = new Edge({ primary: header_header.element.clock.clock(), secondary: [header_header.element.area] });

  headerSetting.control.clock.hour = {};

  headerSetting.control.clock.hour.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.clock.hour.show',
    id: 'header-clock-hour-show',
    labelText: 'Show hours',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.clock.hour.collapse.update();
      headerSetting.control.clock.collapse.update();
      data.save();
    }
  });

  headerSetting.control.clock.hour.display = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'header-clock-hour-display-number', labelText: 'As number', value: 'number' },
      { id: 'header-clock-hour-display-word', labelText: 'As word', value: 'word' }
    ],
    groupName: 'header-clock-hour-display',
    path: 'header.clock.hour.display',
    action: () => {
      header_header.element.clock.update();
      data.save();
    }
  });

  headerSetting.control.clock.hour.area = node('div', [
    headerSetting.control.clock.hour.display.wrap()
  ]);

  headerSetting.control.clock.hour.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.clock.hour.show,
    target: [{
      content: headerSetting.control.clock.hour.area
    }]
  });

  headerSetting.control.clock.minute = {};

  headerSetting.control.clock.minute.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.clock.minute.show',
    id: 'header-clock-minute-show',
    labelText: 'Show minutes',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.clock.minute.collapse.update();
      headerSetting.control.clock.collapse.update();
      data.save();
    }
  });

  headerSetting.control.clock.minute.display = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'header-clock-minute-display-number', labelText: 'As number', value: 'number' },
      { id: 'header-clock-minute-display-word', labelText: 'As word', value: 'word' }
    ],
    groupName: 'header-clock-minute-display',
    path: 'header.clock.minute.display',
    action: () => {
      header_header.element.clock.update();
      data.save();
    }
  });

  headerSetting.control.clock.minute.area = node('div', [
    headerSetting.control.clock.minute.display.wrap()
  ]);

  headerSetting.control.clock.minute.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.clock.minute.show,
    target: [{
      content: headerSetting.control.clock.minute.area
    }]
  });

  headerSetting.control.clock.second = {};

  headerSetting.control.clock.second.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.clock.second.show',
    id: 'header-clock-second-show',
    labelText: 'Show seconds',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.clock.second.collapse.update();
      headerSetting.control.clock.collapse.update();
      data.save();
    }
  });

  headerSetting.control.clock.second.display = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'header-clock-second-display-number', labelText: 'As number', value: 'number' },
      { id: 'header-clock-second-display-word', labelText: 'As word', value: 'word' }
    ],
    groupName: 'header-clock-second-display',
    path: 'header.clock.second.display',
    action: () => {
      header_header.element.clock.update();
      data.save();
    }
  });

  headerSetting.control.clock.second.area = node('div', [
    headerSetting.control.clock.second.display.wrap()
  ]);

  headerSetting.control.clock.second.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.clock.second.show,
    target: [{
      content: headerSetting.control.clock.second.area
    }]
  });

  headerSetting.control.clock.hour24 = {
    show: new Control_checkbox({
      object: state.get.current(),
      path: 'header.clock.hour24.show',
      id: 'header-clock-hour24-show',
      labelText: '24 hours',
      action: function() {
        header_header.element.clock.update();
        headerSetting.disable();
        data.save();
      }
    })
  };

  headerSetting.control.clock.meridiem = {
    show: new Control_checkbox({
      object: state.get.current(),
      path: 'header.clock.meridiem.show',
      id: 'header-clock-meridiem-show',
      labelText: 'AM / PM',
      action: function() {
        header_header.element.clock.update();
        data.save();
      }
    })
  };

  headerSetting.control.clock.size = new Control_sliderSlim({
    object: state.get.current(),
    path: 'header.clock.size',
    id: 'header-clock-size',
    labelText: 'Size',
    value: state.get.current().header.clock.size,
    defaultValue: state.get.default().header.clock.size,
    min: state.get.minMax().header.clock.size.min,
    max: state.get.minMax().header.clock.size.max,
    action: () => {
      applyCSSVar('header.clock.size');
      data.save();
    },
    sliderAction: () => {
      headerSetting.edge.clock.size.track();
    },
    mouseDownAction: () => {
      headerSetting.edge.clock.size.show();
    },
    mouseUpAction: () => {
      headerSetting.edge.clock.size.hide();
    }
  });

  headerSetting.control.clock.newLine = new Control_checkbox({
    object: state.get.current(),
    path: 'header.clock.newLine',
    id: 'header-clock-newLine',
    labelText: 'New line',
    description: 'Force on to a new line and seperate from other Header items.',
    action: function() {
      applyCSSState('header.clock.newLine');
      data.save();
    }
  });

  headerSetting.control.clock.separator = {};

  headerSetting.control.clock.separator.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.clock.separator.show',
    id: 'header-clock-separator-show',
    labelText: 'Show separator',
    action: () => {
      header_header.element.clock.update();
      headerSetting.control.clock.separator.collapse.update();
      headerSetting.disable();
      data.save();
    }
  });

  headerSetting.control.clock.separator.text = new Control_textReset({
    object: state.get.current(),
    path: 'header.clock.separator.text',
    id: 'header-clock-separator-text',
    value: state.get.current().header.clock.separator.text,
    defaultValue: state.get.default().header.clock.separator.text,
    placeholder: ':',
    labelText: 'Separator character',
    srOnly: true,
    action: () => {
      header_header.element.clock.update();
      data.save();
    }
  });

  headerSetting.control.clock.separator.area = node('div', [
    headerSetting.control.clock.separator.text.wrap()
  ]);

  headerSetting.control.clock.separator.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.clock.separator.show,
    target: [{
      content: headerSetting.control.clock.separator.area
    }]
  });

  headerSetting.control.clock.area = node('div', [
    node('hr'),
    headerSetting.control.clock.separator.show.wrap(),
    wrap_wrap({
      children: [
        indent_indent({
          children: [
            headerSetting.control.clock.separator.collapse.collapse()
          ]
        })
      ]
    }),
    node('hr'),
    headerSetting.control.clock.hour24.show.wrap(),
    headerSetting.control.clock.meridiem.show.wrap(),
    node('hr'),
    headerSetting.control.clock.size.wrap(),
    headerSetting.control.clock.newLine.wrap()
  ]);

  headerSetting.control.clock.collapse = new Collapse({
    type: 'checkbox',
    checkbox: [headerSetting.control.clock.hour.show, headerSetting.control.clock.minute.show, headerSetting.control.clock.second.show],
    target: [{
      content: headerSetting.control.clock.area
    }]
  });

  parent.appendChild(
    node('div', [
      headerSetting.control.clock.hour.show.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              headerSetting.control.clock.hour.collapse.collapse()
            ]
          })
        ]
      }),
      headerSetting.control.clock.minute.show.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              headerSetting.control.clock.minute.collapse.collapse()
            ]
          })
        ]
      }),
      headerSetting.control.clock.second.show.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              headerSetting.control.clock.second.collapse.collapse()
            ]
          })
        ]
      }),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              headerSetting.control.clock.collapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};

headerSetting.date = (parent) => {

  headerSetting.edge.date.size = new Edge({ primary: header_header.element.date.date(), secondary: [header_header.element.area] });

  headerSetting.control.date.day = {};

  headerSetting.control.date.day.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.date.day.show',
    id: 'header-date-day-show',
    labelText: 'Show Day',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.date.day.collapse.update();
      headerSetting.control.date.collapse.update();
      data.save();
    }
  });

  headerSetting.control.date.day.display = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'header-date-day-display-number', labelText: 'As number', value: 'number' },
      { id: 'header-date-day-display-word', labelText: 'As word', value: 'word' }
    ],
    groupName: 'header-date-day-display',
    path: 'header.date.day.display',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      data.save();
    }
  });

  headerSetting.control.date.day.weekStart = new Control_radio({
    object: state.get.current(),
    label: 'Start of the week',
    radioGroup: [
      { id: 'header-date-day-week-start-monday', labelText: 'Monday', value: 'monday' },
      { id: 'header-date-day-week-start-sunday', labelText: 'Sunday', value: 'sunday' }
    ],
    groupName: 'header-date-day-week-start',
    path: 'header.date.day.weekStart',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      data.save();
    }
  });

  headerSetting.control.date.day.length = new Control_radio({
    object: state.get.current(),
    label: 'Word length',
    radioGroup: [
      { id: 'header-date-day-length-long', labelText: 'Long', value: 'long' },
      { id: 'header-date-day-length-short', labelText: 'Short', value: 'short' }
    ],
    groupName: 'header-date-day-length',
    path: 'header.date.day.length',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      data.save();
    }
  });

  headerSetting.control.date.day.area = node('div', [
    headerSetting.control.date.day.display.radioSet[0].wrap(),
    wrap_wrap({ children: [indent_indent({ children: [headerSetting.control.date.day.weekStart.wrap()] })] }),
    headerSetting.control.date.day.display.radioSet[1].wrap(),
    wrap_wrap({ children: [indent_indent({ children: [headerSetting.control.date.day.length.wrap()] })] })
  ]);

  headerSetting.control.date.day.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.date.day.show,
    target: [{
      content: headerSetting.control.date.day.area
    }]
  });

  headerSetting.control.date.date = {};

  headerSetting.control.date.date.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.date.date.show',
    id: 'header-date-date-show',
    labelText: 'Show Date',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.date.date.collapse.update();
      headerSetting.control.date.collapse.update();
      data.save();
    }
  });

  headerSetting.control.date.date.display = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'header-date-date-display-number', labelText: 'As number', value: 'number' },
      { id: 'header-date-date-display-word', labelText: 'As word', value: 'word' }
    ],
    groupName: 'header-date-date-display',
    path: 'header.date.date.display',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      data.save();
    }
  });

  headerSetting.control.date.date.ordinal = new Control_checkbox({
    object: state.get.current(),
    path: 'header.date.date.ordinal',
    id: 'header-date-date-ordinal',
    labelText: 'Ordinal numbers',
    action: () => {
      header_header.element.date.update();
      data.save();
    }
  });

  headerSetting.control.date.date.area = node('div', [
    headerSetting.control.date.date.display.wrap(),
    headerSetting.control.date.date.ordinal.wrap()
  ]);

  headerSetting.control.date.date.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.date.date.show,
    target: [{
      content: headerSetting.control.date.date.area
    }]
  });

  headerSetting.control.date.month = {};

  headerSetting.control.date.month.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.date.month.show',
    id: 'header-date-month-show',
    labelText: 'Show Month',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.date.month.collapse.update();
      headerSetting.control.date.collapse.update();
      data.save();
    }
  });

  headerSetting.control.date.month.display = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'header-date-month-display-number', labelText: 'As number', value: 'number' },
      { id: 'header-date-month-display-word', labelText: 'As word', value: 'word' }
    ],
    groupName: 'header-date-month-display',
    path: 'header.date.month.display',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      data.save();
    }
  });

  headerSetting.control.date.month.length = new Control_radio({
    object: state.get.current(),
    label: 'Word length',
    radioGroup: [
      { id: 'header-date-month-length-long', labelText: 'Long', value: 'long' },
      { id: 'header-date-month-length-short', labelText: 'Short', value: 'short' }
    ],
    groupName: 'header-date-month-length',
    path: 'header.date.month.length',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      data.save();
    }
  });

  headerSetting.control.date.month.ordinal = new Control_checkbox({
    object: state.get.current(),
    path: 'header.date.month.ordinal',
    id: 'header-date-month-ordinal',
    labelText: 'Ordinal numbers',
    action: () => {
      header_header.element.date.update();
      data.save();
    }
  });

  headerSetting.control.date.month.area = node('div', [
    headerSetting.control.date.month.display.radioSet[0].wrap(),
    wrap_wrap({ children: [indent_indent({ children: [headerSetting.control.date.month.ordinal.wrap()] })] }),
    headerSetting.control.date.month.display.radioSet[1].wrap(),
    wrap_wrap({ children: [indent_indent({ children: [headerSetting.control.date.month.length.wrap()] })] })
  ]);

  headerSetting.control.date.month.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.date.month.show,
    target: [{
      content: headerSetting.control.date.month.area
    }]
  });

  headerSetting.control.date.year = {};

  headerSetting.control.date.year.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.date.year.show',
    id: 'header-date-year-show',
    labelText: 'Show Year',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.date.year.collapse.update();
      headerSetting.control.date.collapse.update();
      data.save();
    }
  });

  headerSetting.control.date.year.display = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'header-date-year-display-number', labelText: 'As number', value: 'number' },
      { id: 'header-date-year-display-word', labelText: 'As word', value: 'word' }
    ],
    groupName: 'header-date-year-display',
    path: 'header.date.year.display',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      data.save();
    }
  });

  headerSetting.control.date.year.area = node('div', [
    headerSetting.control.date.year.display.wrap()
  ]);

  headerSetting.control.date.year.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.date.year.show,
    target: [{
      content: headerSetting.control.date.year.area
    }]
  });

  headerSetting.control.date.separator = {};

  headerSetting.control.date.separator.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.date.separator.show',
    id: 'header-date-separator-show',
    labelText: 'Show separator',
    action: () => {
      header_header.element.date.update();
      headerSetting.control.date.separator.collapse.update();
      headerSetting.disable();
      data.save();
    }
  });

  headerSetting.control.date.separator.text = new Control_textReset({
    object: state.get.current(),
    path: 'header.date.separator.text',
    id: 'header-date-separator-text',
    value: state.get.current().header.date.separator.text,
    defaultValue: state.get.default().header.date.separator.text,
    placeholder: ':',
    labelText: 'Separator character',
    srOnly: true,
    action: () => {
      header_header.element.date.update();
      data.save();
    }
  });

  headerSetting.control.date.separator.area = node('div', [
    headerSetting.control.date.separator.text.wrap()
  ]);

  headerSetting.control.date.separator.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.date.separator.show,
    target: [{
      content: headerSetting.control.date.separator.area
    }]
  });

  headerSetting.control.date.format = new Control_radio({
    object: state.get.current(),
    label: 'Format',
    radioGroup: [
      { id: 'header-date-format-date-month', labelText: 'Date / Month', value: 'date-month' },
      { id: 'header-date-format-month-date', labelText: 'Month / Date', value: 'month-date' }
    ],
    groupName: 'header-date-format',
    path: 'header.date.format',
    action: () => {
      header_header.element.date.update();
      data.save();
    }
  });

  headerSetting.control.date.size = new Control_sliderSlim({
    object: state.get.current(),
    path: 'header.date.size',
    id: 'header-date-size',
    labelText: 'Size',
    value: state.get.current().header.date.size,
    defaultValue: state.get.default().header.date.size,
    min: state.get.minMax().header.date.size.min,
    max: state.get.minMax().header.date.size.max,
    action: () => {
      applyCSSVar('header.date.size');
      data.save();
    },
    sliderAction: () => {
      headerSetting.edge.date.size.track();
    },
    mouseDownAction: () => {
      headerSetting.edge.date.size.show();
    },
    mouseUpAction: () => {
      headerSetting.edge.date.size.hide();
    }
  });

  headerSetting.control.date.newLine = new Control_checkbox({
    object: state.get.current(),
    path: 'header.date.newLine',
    id: 'header-date-newLine',
    labelText: 'New line',
    description: 'Force on to a new line and seperate from other Header items.',
    action: function() {
      applyCSSState('header.date.newLine');
      data.save();
    }
  });

  headerSetting.control.date.area = node('div', [
    node('hr'),
    headerSetting.control.date.separator.show.wrap(),
    wrap_wrap({
      children: [
        indent_indent({
          children: [
            headerSetting.control.date.separator.collapse.collapse()
          ]
        })
      ]
    }),
    node('hr'),
    headerSetting.control.date.format.wrap(),
    node('hr'),
    headerSetting.control.date.size.wrap(),
    headerSetting.control.date.newLine.wrap()
  ]);

  headerSetting.control.date.collapse = new Collapse({
    type: 'checkbox',
    checkbox: [headerSetting.control.date.day.show, headerSetting.control.date.date.show, headerSetting.control.date.month.show, headerSetting.control.date.year.show],
    target: [{
      content: headerSetting.control.date.area
    }]
  });

  parent.appendChild(
    node('div', [
      headerSetting.control.date.day.show.wrap(),
      wrap_wrap({ children: [indent_indent({ children: [headerSetting.control.date.day.collapse.collapse()] })] }),
      headerSetting.control.date.date.show.wrap(),
      wrap_wrap({ children: [indent_indent({ children: [headerSetting.control.date.date.collapse.collapse()] })] }),
      headerSetting.control.date.month.show.wrap(),
      wrap_wrap({ children: [indent_indent({ children: [headerSetting.control.date.month.collapse.collapse()] })] }),
      headerSetting.control.date.year.show.wrap(),
      wrap_wrap({ children: [indent_indent({ children: [headerSetting.control.date.year.collapse.collapse()] })] }),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              headerSetting.control.date.collapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};

headerSetting.search = (parent) => {

  headerSetting.edge.search.size = new Edge({ primary: header_header.element.search.search(), secondary: [header_header.element.area] });

  headerSetting.control.search.show = new Control_checkbox({
    object: state.get.current(),
    path: 'header.search.show',
    id: 'header-search-show',
    labelText: 'Show Search',
    action: () => {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.disable();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      headerSetting.control.search.collapse.update();
      data.save();
    }
  });

  headerSetting.control.search.size = new Control_sliderSlim({
    object: state.get.current(),
    path: 'header.search.size',
    id: 'header-search-size',
    labelText: 'Size',
    value: state.get.current().header.search.size,
    defaultValue: state.get.default().header.search.size,
    min: state.get.minMax().header.search.size.min,
    max: state.get.minMax().header.search.size.max,
    action: () => {
      applyCSSVar('header.search.size');
      data.save();
    },
    sliderAction: () => {
      headerSetting.edge.search.size.track();
    },
    mouseDownAction: () => {
      headerSetting.edge.search.size.show();
    },
    mouseUpAction: () => {
      headerSetting.edge.search.size.hide();
    }
  });

  headerSetting.control.search.newTab = new Control_checkbox({
    object: state.get.current(),
    path: 'header.search.newTab',
    id: 'header-search-newTab',
    labelText: 'Open Search results in a new tab',
    action: function() {
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.render();
      layout_layout.area.assemble();
      headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
      headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
      headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
      headerSetting.edge.date.size.update.primary(header_header.element.date.date());
      headerSetting.edge.search.size.update.primary(header_header.element.search.search());
      data.save();
    }
  });

  headerSetting.control.search.newLine = new Control_checkbox({
    object: state.get.current(),
    path: 'header.search.newLine',
    id: 'header-search-newLine',
    labelText: 'New line',
    description: 'Force on to a new line and seperate from other Header items.',
    action: function() {
      applyCSSState('header.search.newLine');
      data.save();
    }
  });

  const searchEngineList = [];

  for (let key in searchEnginePreset) {

    searchEngineList.push({ id: `header-search-engine-selected-${key}`, labelText: searchEnginePreset[key].name, value: key });

  };

  searchEngineList.push({ id: 'header-search-engine-selected-custom', labelText: 'Custom', value: 'custom' })

  headerSetting.control.search.engine = {
    selected: new Control_radio({
      object: state.get.current(),
      label: 'Search engine',
      radioGroup: searchEngineList,
      groupName: 'header-search-engine-selected',
      path: 'header.search.engine.selected',
      action: () => {
        header_header.item.mod.order();
        header_header.item.clear();
        header_header.item.render();
        layout_layout.area.assemble();
        headerSetting.disable();
        headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
        headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
        headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
        headerSetting.edge.date.size.update.primary(header_header.element.date.date());
        headerSetting.edge.search.size.update.primary(header_header.element.search.search());
        headerSetting.control.search.engine.custom.collapse.update();
        data.save();
      }
    }),
    custom: {
      name: new Control_text({
        object: state.get.current(),
        path: 'header.search.engine.custom.name',
        id: 'header-search-engine-custom-name',
        value: state.get.current().header.search.engine.custom.name,
        placeholder: 'Search engine name',
        labelText: 'Name',
        action: () => {
          header_header.item.mod.order();
          header_header.item.clear();
          header_header.item.render();
          layout_layout.area.assemble();
          headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
          headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
          headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
          headerSetting.edge.date.size.update.primary(header_header.element.date.date());
          headerSetting.edge.search.size.update.primary(header_header.element.search.search());
          data.save();
        }
      }),
      url: new Control_text({
        object: state.get.current(),
        path: 'header.search.engine.custom.url',
        id: 'header-search-engine-custom-url',
        value: state.get.current().header.search.engine.custom.url,
        placeholder: 'HTTPS://',
        labelText: 'URL',
        action: () => {
          header_header.item.mod.order();
          header_header.item.clear();
          header_header.item.render();
          layout_layout.area.assemble();
          headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
          headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
          headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
          headerSetting.edge.date.size.update.primary(header_header.element.date.date());
          headerSetting.edge.search.size.update.primary(header_header.element.search.search());
          data.save();
        }
      }),
      urlHelper: new Control_helperText({
        text: ['Enter a web address with the search parameters, eg: "https://vimeo.com/search?q="', 'nightTab will add the search term entered into the Search box at the end of the above URL.']
      }),
      queryName: new Control_text({
        object: state.get.current(),
        path: 'header.search.engine.custom.queryName',
        id: 'header-search-engine-custom-queryName',
        value: state.get.current().header.search.engine.custom.queryName,
        placeholder: 'q',
        labelText: 'Name attribute',
        action: () => {
          header_header.item.mod.order();
          header_header.item.clear();
          header_header.item.render();
          layout_layout.area.assemble();
          headerSetting.edge.greeting.size.update.primary(header_header.element.greeting.greeting());
          headerSetting.edge.transitional.size.update.primary(header_header.element.transitional.transitional());
          headerSetting.edge.clock.size.update.primary(header_header.element.clock.clock());
          headerSetting.edge.date.size.update.primary(header_header.element.date.date());
          headerSetting.edge.search.size.update.primary(header_header.element.search.search());
          data.save();
        }
      }),
      queryNameHelper: new Control_helperText({
        text: ['Sets the name attribute on the Search input field.', 'This defines the name passed to the search engine when submitting. If not sure leave blank.']
      })
    }
  };

  headerSetting.control.search.engine.custom.area = node('div', [
    headerSetting.control.search.engine.custom.name.wrap(),
    headerSetting.control.search.engine.custom.url.wrap(),
    headerSetting.control.search.engine.custom.urlHelper.wrap(),
    headerSetting.control.search.engine.custom.queryName.wrap(),
    headerSetting.control.search.engine.custom.queryNameHelper.wrap()
  ]);

  headerSetting.control.search.engine.custom.collapse = new Collapse({
    type: 'radio',
    radioGroup: headerSetting.control.search.engine.selected,
    target: [{
      id: headerSetting.control.search.engine.selected.radioSet[headerSetting.control.search.engine.selected.radioSet.length - 1].radio.value,
      content: headerSetting.control.search.engine.custom.area
    }]
  });

  headerSetting.control.search.text = {
    justify: new Control_radioGrid({
      object: state.get.current(),
      radioGroup: [
        { id: 'header-search-text-justify-left', labelText: 'Left', value: 'left', position: 1 },
        { id: 'header-search-text-justify-center', labelText: 'Center', value: 'center', position: 2 },
        { id: 'header-search-text-justify-right', labelText: 'Right', value: 'right', position: 3 }
      ],
      label: 'Search text alignment',
      groupName: 'header-search-text-justify',
      path: 'header.search.text.justify',
      gridSize: '3x1',
      action: () => {
        applyCSSClass('header.search.text.justify');
        data.save();
      }
    })
  };

  headerSetting.control.search.width = {
    by: new Control_radio({
      object: state.get.current(),
      label: 'Search box width',
      radioGroup: [
        { id: 'header-search-width-by-auto', labelText: 'Auto width', description: 'Search box will grow to best fit available space.', value: 'auto' },
        { id: 'header-search-width-by-custom', labelText: 'Custom width', description: 'Define how wide the Search box should be inside the Header Area.', value: 'custom' }
      ],
      groupName: 'header-search-width-by',
      path: 'header.search.width.by',
      action: () => {
        applyCSSClass('header.search.width.by');
        headerSetting.disable();
        data.save();
      }
    }),
    size: new Control_sliderSlim({
      object: state.get.current(),
      path: 'header.search.width.size',
      id: 'header-search-size',
      labelText: 'Size',
      value: state.get.current().header.search.width.size,
      defaultValue: state.get.default().header.search.width.size,
      min: state.get.minMax().header.search.width.size.min,
      max: state.get.minMax().header.search.width.size.max,
      action: () => {
        applyCSSVar('header.search.width.size');
        data.save();
      },
      sliderAction: () => {
        headerSetting.edge.search.size.track();
      },
      mouseDownAction: () => {
        headerSetting.edge.search.size.show();
      },
      mouseUpAction: () => {
        headerSetting.edge.search.size.hide();
      }
    })
  };

  headerSetting.control.search.area = node('div', [
    headerSetting.control.search.width.by.wrap(),
    wrap_wrap({
      children: [
        indent_indent({
          children: [
            headerSetting.control.search.width.size.wrap()
          ]
        })
      ]
    }),
    node('hr'),
    headerSetting.control.search.engine.selected.wrap(),
    wrap_wrap({
      children: [
        indent_indent({
          children: [
            headerSetting.control.search.engine.custom.collapse.collapse()
          ]
        })
      ]
    }),
    node('hr'),
    headerSetting.control.search.text.justify.wrap(),
    node('hr'),
    headerSetting.control.search.newTab.wrap(),
    node('hr'),
    headerSetting.control.search.size.wrap(),
    headerSetting.control.search.newLine.wrap()
  ]);

  headerSetting.control.search.collapse = new Collapse({
    type: 'checkbox',
    checkbox: headerSetting.control.search.show,
    target: [{
      content: headerSetting.control.search.area
    }]
  });

  parent.appendChild(
    node('div', [
      headerSetting.control.search.show.wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              headerSetting.control.search.collapse.collapse()
            ]
          })
        ]
      })
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/toolbarSetting/index.js








































const toolbarSetting = {};

toolbarSetting.control = {
  size: {},
  opacity: {},
  location: {},
  position: {},
  controls: {}
};

toolbarSetting.disable = () => {

  switch (state.get.current().toolbar.location) {

    case 'corner':
      toolbarSetting.control.positionElement.enable();
      toolbarSetting.control.positionElementHelper1.enable();
      toolbarSetting.control.location.newLine.disable();
      break;

    case 'header':
      toolbarSetting.control.positionElement.disable();
      toolbarSetting.control.positionElementHelper1.disable();
      toolbarSetting.control.location.newLine.enable();
      break;

  };

};

toolbarSetting.edge = {
  size: false
};

toolbarSetting.size = (parent) => {

  switch (state.get.current().toolbar.location) {

    case 'header':
      toolbarSetting.edge.size = new Edge({ primary: toolbar.current.element.toolbar, secondary: [header_header.element.area] });
      break;

    case 'corner':
      toolbarSetting.edge.size = new Edge({ primary: toolbar.current.element.toolbar });
      break;

  };

  toolbarSetting.control.size = new Control_slider({
    object: state.get.current(),
    path: 'toolbar.size',
    id: 'toolbar-size',
    labelText: 'Toolbar size',
    value: state.get.current().toolbar.size,
    defaultValue: state.get.default().toolbar.size,
    min: state.get.minMax().toolbar.size.min,
    max: state.get.minMax().toolbar.size.max,
    action: () => {
      applyCSSVar('toolbar.size');
      data.save();
    },
    sliderAction: () => {
      toolbarSetting.edge.size.track();
    },
    mouseDownAction: () => {
      toolbarSetting.edge.size.show();
    },
    mouseUpAction: () => {
      toolbarSetting.edge.size.hide();
    }
  });

  parent.appendChild(
    node('div', [
      toolbarSetting.control.size.wrap()
    ])
  );
};

toolbarSetting.location = (parent) => {

  toolbarSetting.control.location.locationElement = new Control_radio({
    object: state.get.current(),
    radioGroup: [
      { id: 'toolbar-location-corner', labelText: 'In a corner', value: 'corner' },
      { id: 'toolbar-location-header', labelText: 'In the Header', value: 'header' }
    ],
    groupName: 'toolbar-location',
    path: 'toolbar.location',
    action: () => {
      toolbar.current.assemble();
      toolbar.current.update.location();
      toolbar.current.update.style();
      header_header.item.mod.order();
      header_header.item.clear();
      header_header.item.clear();
      header_header.item.render();
      toolbar.bar.render();
      layout_layout.area.assemble();
      toolbarSetting.disable();

      switch (state.get.current().toolbar.location) {

        case 'header':
          toolbarSetting.edge.size = new Edge({ primary: toolbar.current.element.toolbar, secondary: [layout_layout.element.header] });
          break;

        case 'corner':
          toolbarSetting.edge.size = new Edge({ primary: toolbar.current.element.toolbar });
          break;

      };

      data.save();
    }
  });

  toolbarSetting.control.location.locationHelper = new Control_helperText({
    text: ['Position the Toolbar inside the Header or in a corner of the window.']
  });

  toolbarSetting.control.location.newLine = new Control_checkbox({
    object: state.get.current(),
    path: 'toolbar.newLine',
    id: 'header-newLine',
    labelText: 'New line',
    description: 'Force on to a new line and seperate from other Header items.',
    action: function() {
      applyCSSState('toolbar.newLine');
      data.save();
    }
  });

  toolbarSetting.control.location.newLineHelper = new Control_helperText({
    text: ['Only available when the Toolbar is positioned inside the Header.']
  });

  parent.appendChild(
    node('div', [
      toolbarSetting.control.location.locationElement.inline(),
      toolbarSetting.control.location.locationHelper.wrap(),
      node('hr'),
      toolbarSetting.control.location.newLine.wrap(),
      toolbarSetting.control.location.newLineHelper.wrap()
    ])
  );

};

toolbarSetting.position = (parent) => {

  toolbarSetting.control.positionElement = new Control_radioGrid({
    object: state.get.current(),
    radioGroup: [
      { id: 'toolbar-position-top-left', labelText: 'Top left', value: 'top-left', position: 1 },
      { id: 'toolbar-position-top-right', labelText: 'Top right', value: 'top-right', position: 2 },
      { id: 'toolbar-position-bottom-left', labelText: 'Bottom left', value: 'bottom-left', position: 3 },
      { id: 'toolbar-position-bottom-right', labelText: 'Bottom right', value: 'bottom-right', position: 4 }
    ],
    label: 'Toolbar position',
    groupName: 'toolbar-position',
    path: 'toolbar.position',
    gridSize: '2x2',
    action: () => {
      toolbar.current.assemble();
      toolbar.current.update.position();
      toolbar.current.update.style();
      data.save();
    }
  });

  toolbarSetting.control.positionElementHelper1 = new Control_helperText({
    text: ['Position the Toolbar in one of the four corners of the window.']
  });

  toolbarSetting.control.positionElementHelper2 = new Control_helperText({
    text: ['Only available when the Toolbar is positioned in a corner.']
  });

  parent.appendChild(
    node('div', [
      toolbarSetting.control.positionElement.wrap(),
      toolbarSetting.control.positionElementHelper1.wrap(),
      toolbarSetting.control.positionElementHelper2.wrap()
    ])
  );

};

toolbarSetting.controls = (parent) => {

  toolbarSetting.control.controls.accent = new Control_checkbox({
    object: state.get.current(),
    id: 'toolbar-accent-show',
    path: 'toolbar.accent.show',
    labelText: 'Show Accent control',
    action: () => {
      toolbar.current.update.control();
      data.save();
    }
  });

  toolbarSetting.control.controls.add = new Control_checkbox({
    object: state.get.current(),
    id: 'toolbar-add-show',
    path: 'toolbar.add.show',
    labelText: 'Show Add control',
    action: () => {
      toolbar.current.update.control();
      data.save();
    }
  });

  toolbarSetting.control.controls.edit = new Control_checkbox({
    object: state.get.current(),
    id: 'toolbar-edit-show',
    path: 'toolbar.edit.show',
    labelText: 'Show Edit control',
    action: () => {
      toolbar.current.update.control();
      data.save();
    }
  });

  parent.appendChild(
    node('div', [
      toolbarSetting.control.controls.accent.wrap(),
      toolbarSetting.control.controls.add.wrap(),
      toolbarSetting.control.controls.edit.wrap()
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/dataSetting/index.js









































const dataSetting = {};

dataSetting.control = {
  import: {},
  backup: {},
  clear: {}
};

dataSetting.import = (parent) => {

  const importFeedback = feedback_feedback();

  data.feedback.empty.render(importFeedback);

  dataSetting.control.import.importElement = new Control_inputButton({
    id: 'import-data',
    type: 'file',
    inputHide: true,
    labelText: 'Import data',
    inputButtonStyle: ['line'],
    action: () => {
      data.import(dataSetting.control.import.importElement.input, importFeedback)
    }
  });

  dataSetting.control.import.importHelper = new Control_helperText({
    text: ['Restore a previously exported ' + appName + ' backup.']
  });

  parent.appendChild(
    node('div', [
      dataSetting.control.import.importElement.wrap(),
      dataSetting.control.import.importHelper.wrap(),
      wrap_wrap({
        children: [
          importFeedback
        ]
      })
    ])
  );

};

dataSetting.backup = (parent) => {

  dataSetting.control.backup.button = new Button({
    text: 'Export data',
    style: ['line'],
    func: () => {
      data.export();
    }
  });

  dataSetting.control.backup.buttonHelper = new Control_helperText({
    text: ['Download a backup of your ' + appName + ' Bookmarks and Settings.', 'This file can later be imported on this or another deivce.']
  });

  parent.appendChild(
    node('div', [
      dataSetting.control.backup.button.wrap(),
      dataSetting.control.backup.buttonHelper.wrap()
    ])
  );

};

dataSetting.clear = (parent) => {

  dataSetting.control.clear.button = new Button({
    text: 'Clear all data',
    style: ['line'],
    func: () => {
      menu.close();
      data.clear.render();
    }
  });

  dataSetting.control.clear.buttonHelper = new Control_helperText({
    text: ['Wipe all data and restore ' + appName + ' to the default state.']
  });

  parent.appendChild(
    node('div', [
      dataSetting.control.clear.button.wrap(),
      dataSetting.control.clear.buttonHelper.wrap()
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/firefoxSetting/index.js









































const firefoxSetting = {};

firefoxSetting.firefox = (parent) => {

  parent.appendChild(
    node('div', [
      complexNode({
        tag: 'p',
        text: 'Firefox does not allow addons to replace the "homepage". However there is a workaround:'
      }),
      wrap_wrap({
        children: [
          node('ol', [
            node('li:Open a new Firefox window'),
            node('li:Open Firefox <code>Preferences</code> and open a new tab (nightTab)'),
            node('li:In Firefox preferences under <code>Home</code>, change <code>Homepage and new windows</code> to <code>Custom URLs...</code>'),
            node('li:Then click <code>Use Current Page</code>'),
          ]),
          node('p:nightTab will now appear as the homepage.'),
        ]
      })
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/coffeeSetting/index.js









































const coffeeSetting = {};

coffeeSetting.coffee = (parent) => {

  parent.appendChild(
    node('div', [
      complexNode({
        tag: 'p',
        text: appName + ' is free, appreciation is welcome in the form of coffee!'
      }),
      wrap_wrap({
        children: [
          link_link.render({
            text: 'Buy me a coffee',
            href: 'https://www.buymeacoffee.com/zombieFox',
            iconName: 'coffee',
            iconPosition: 'left',
            linkButton: true,
            style: ['line'],
            classList: ['button-line', 'button-large', 'px-4', 'py-3']
          })
        ]
      })
    ])
  );

};



;// CONCATENATED MODULE: ./src/component/menuContent/appSetting/index.js









































const appSetting = {};

appSetting[appName.toLowerCase()] = (parent) => {

  parent.appendChild(
    node('div', [
      node('div|class:version', [
        logo_logo.render(),
        node('div|class:version-details', [
          node('h1:' + appName + '|class:version-app-name'),
          node('p:Version ' + version.number + '|class:version-number'),
          node('p:' + version.name + '|class:version-name small')
        ])
      ]),
      node('hr'),
      complexNode({ tag: 'p', text: 'Project repository on ', node: [link_link.render({ text: 'GitHub.', href: 'https://github.com/zombieFox/' + appName, openNew: true })] }),
      complexNode({ tag: 'p', text: 'For feedback and support, submit an <a tabindex="1" href="https://github.com/zombieFox/' + appName + '/issues" target="_blank">Issue</a> or check the <a tabindex="1" href="https://github.com/zombieFox/' + appName + '/wiki" target="_blank">Wiki</a>.' }),
      complexNode({ tag: 'p', text: appName + ' uses the <a tabindex="1" href="https://github.com/zombieFox/' + appName + '/blob/master/license" target="_blank">GNU General Public License v3.0</a>.' })
    ])
  );

};



// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/menuContent/index.css
var menuContent = __webpack_require__(1290);
;// CONCATENATED MODULE: ./src/component/menuContent/index.css

            

var menuContent_options = {};

menuContent_options.insert = "head";
menuContent_options.singleton = false;

var menuContent_update = injectStylesIntoStyleTag_default()(menuContent/* default */.Z, menuContent_options);



/* harmony default export */ const component_menuContent = (menuContent/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/menuContent/index.js




















const MenuContent = function({
  activeNavData = {},
  container = false
} = {}) {

  this.element = {
    content: (name) => {
      return node('div|id:menu-content-item-' + this.makeId(name) + ',class:menu-content-item');
    },
    header: (name) => {
      return node('div|class:menu-item-header', [
        node('h1:' + name + '|class:menu-item-header-text')
      ]);
    },
    form: ({ indent = false } = {}) => {

      const formElement = node('div|class:menu-item-form');

      if (indent) {
        formElement.classList.add('menu-item-form-indent');
      };

      return formElement;
    }
  };

  this.content = () => {

    if (activeNavData.sub && activeNavData.sub.length > 0) {

      activeNavData.sub.forEach((item, i) => {

        const menuContentItem = this.element.content(item);

        menuContentItem.appendChild(this.element.header(item));

        const formElement = this.element.form({ indent: true });

        switch (this.makeId(activeNavData.name)) {

          case 'form':
            formSetting[this.makeId(item)](formElement);
            break;

          case 'debug':
            debugSetting[this.makeId(item)](formElement);
            break;

          case 'layout':
            layoutSetting[this.makeId(item)](formElement);
            break;

          case 'group':
            groupSetting[this.makeId(item)](formElement);
            break;

          case 'bookmark':
            bookmarkSetting[this.makeId(item)](formElement);
            break;

          case 'header':
            headerSetting[this.makeId(item)](formElement);
            break;

          case 'toolbar':
            toolbarSetting[this.makeId(item)](formElement);
            break;

          case 'theme':
            themeSetting[this.makeId(item)](formElement);
            break;

          case 'data':
            dataSetting[this.makeId(item)](formElement);
            break;

        };

        menuContentItem.appendChild(formElement);

        container.appendChild(menuContentItem);

      });

      switch (this.makeId(activeNavData.name)) {

        case 'layout':
          layoutSetting.disable();
          break;

        case 'group':
          groupSetting.disable();
          break;

        case 'bookmark':
          bookmarkSetting.disable();
          break;

        case 'header':
          headerSetting.disable();
          break;

        case 'toolbar':
          toolbarSetting.disable();
          break;

        case 'theme':
          themeSetting.disable();
          break;

      };

    } else {

      const menuContentItem = this.element.content(activeNavData.name);

      let formElement;

      switch (this.makeId(activeNavData.name)) {

        case 'firefox':

          menuContentItem.appendChild(this.element.header(activeNavData.name));

          formElement = this.element.form({ indent: true });

          firefoxSetting[this.makeId(activeNavData.name)](formElement);

          break;

        case 'coffee':

          menuContentItem.appendChild(this.element.header(activeNavData.name));

          formElement = this.element.form({ indent: true });

          coffeeSetting[this.makeId(activeNavData.name)](formElement);

          break;

        case this.makeId(appName):

          formElement = this.element.form();

          appSetting[this.makeId(activeNavData.name)](formElement);

          break;

      };

      menuContentItem.appendChild(formElement);

      container.appendChild(menuContentItem);

    };

  };

  this.makeId = (name) => {
    return name.split(' ')[0].toLowerCase();
  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/menuFrame/index.css
var menuFrame = __webpack_require__(9782);
;// CONCATENATED MODULE: ./src/component/menuFrame/index.css

            

var menuFrame_options = {};

menuFrame_options.insert = "head";
menuFrame_options.singleton = false;

var menuFrame_update = injectStylesIntoStyleTag_default()(menuFrame/* default */.Z, menuFrame_options);



/* harmony default export */ const component_menuFrame = (menuFrame/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/menuFrame/index.js

















const MenuFrame = function({
  navData = []
} = {}) {

  this.element = {
    menu: node('section|class:menu'),
    area: node('div|class:menu-area'),
    content: node('div|class:menu-content')
  };

  this.menuNav = new MenuNav({
    navData: navData,
    action: () => {
      this.content();
      this.element.content.scrollTop = 0;
    }
  });

  this.menuClose = new MenuClose();

  this.shade = new Shade();

  this.class = () => {

    const html = document.querySelector('html');

    if (state.get.current().menu) {
      html.classList.add('is-menu-open');
    } else {
      html.classList.remove('is-menu-open');
    };

  };

  this.open = () => {

    state.get.current().menu = true;

    data.save();

    const body = document.querySelector('body');

    this.element.menu.classList.add('is-transparent');

    this.element.menu.addEventListener('transitionend', (event) => {

      if (event.propertyName === 'opacity' && getComputedStyle(this.element.menu).opacity == 0) {

        body.removeChild(this.element.menu);

      };

    });

    this.shade.open();

    this.assemble();

    body.appendChild(this.element.menu);

    getComputedStyle(this.element.menu).opacity;

    this.element.menu.classList.remove('is-transparent');

    this.element.menu.classList.add('is-opaque');

    this.bind.add();

    this.focus.set();

    this.menuNav.init();

    this.content();

    this.class();

    pageLock.render();

  };

  this.close = () => {

    state.get.current().menu = false;

    data.save();

    this.element.menu.classList.remove('is-opaque');

    this.element.menu.classList.add('is-transparent');

    this.bind.remove();

    this.shade.close();

    this.locationReset();

    this.class();

    pageLock.render();

    clearTimeout(this.delayedForceRemove);

    this.delayedForceRemove = setTimeout(() => {

      const body = document.querySelector('body');

      if (body.contains(this.element.menu)) {
        body.removeChild(this.element.menu)
      };

    }, 6000);

  };

  this.delayedForceRemove = null;

  this.locationReset = () => {

    const location = window.location;

    if ('pushState' in history) {
      history.pushState('', document.title, location.origin + location.pathname + location.search);
    };

  };

  this.bind = {
    add: () => {

      window.addEventListener('mouseup', this.clickOut);

      window.addEventListener('keydown', this.focus.loop);

      this.esc.add();

      this.ctrAltA.add();

      this.ctrAltG.add();

    },
    remove: () => {

      window.removeEventListener('mouseup', this.clickOut);

      window.removeEventListener('keydown', this.focus.loop);

      this.esc.remove();

      this.ctrAltA.remove();

      this.ctrAltG.remove();

    }
  };

  this.esc = new KeyboardShortcut({
    keycode: 27,
    action: () => {
      this.close();
    }
  });

  this.ctrAltA = new KeyboardShortcut({
    keycode: 65,
    ctrl: true,
    alt: true,
    action: () => {
      this.close();
    }
  });

  this.ctrAltG = new KeyboardShortcut({
    keycode: 71,
    ctrl: true,
    alt: true,
    action: () => {
      this.close();
    }
  });

  this.clickOut = (event) => {

    const path = event.path || (event.composedPath && event.composedPath());

    if (!path.includes(this.element.menu)) {
      this.close();
    };

  };

  this.focus = {
    set: () => {

      const allFocusElement = document.querySelector('.menu').querySelectorAll('[tabindex]');

      allFocusElement[0].focus();

    },
    loop: (event) => {

      const allFocusElement = document.querySelector('.menu').querySelectorAll('[tabindex]');

      if (allFocusElement.length > 0) {

        const firstElement = allFocusElement[0];

        const lastElement = allFocusElement[allFocusElement.length - 1];

        if (event.keyCode == 9 && event.shiftKey) {

          if (document.activeElement === firstElement) {
            lastElement.focus();

            event.preventDefault();
          }

        } else if (event.keyCode == 9) {

          if (document.activeElement === lastElement) {
            firstElement.focus();

            event.preventDefault();
          }

        };

      };

    }
  };

  this.assemble = () => {

    this.element.area.appendChild(this.menuNav.nav());

    this.element.area.appendChild(this.menuClose.close());

    this.element.area.appendChild(this.element.content);

    this.element.menu.appendChild(this.element.area);

  };

  this.content = () => {

    clearChildNode(this.element.content);

    navData.forEach((item, i) => {

      if (item.active) {

        if (item.overscroll) {
          this.element.content.classList.add('menu-content-overscroll');
        } else {
          this.element.content.classList.remove('menu-content-overscroll');
        };

        const menuContent = new MenuContent({
          activeNavData: item,
          container: this.element.content
        });

        menuContent.content();

      };

    });

  };

};

;// CONCATENATED MODULE: ./src/component/menu/index.js















const menu = {};

menu.navData = [
  // { name: 'Form', active: true, overscroll: true, sub: ['Input', 'Button'] },
  // { name: 'Debug', active: true, overscroll: true, sub: ['Bookmark'] },
  { name: 'Theme', active: true, overscroll: true, sub: ['Preset', 'Saved', 'Style', 'Accent', 'Colour', 'Font', 'Radius', 'Shadow', 'Shade', 'Opacity', 'Background', 'Layout', 'Header', 'Bookmark'] },
  { name: 'Layout', active: false, overscroll: true, sub: ['Scaling', 'Area', 'Padding', 'Gutter', 'Alignment', 'Page'] },
  { name: 'Header', active: false, overscroll: true, sub: ['Area', 'Greeting', 'Transitional words', 'Clock', 'Date', 'Search'] },
  { name: 'Bookmark', active: false, overscroll: true, sub: ['General', 'Style', 'Orientation', 'Sort'] },
  { name: 'Group', active: false, overscroll: true, sub: ['Alignment', 'Name', 'Open All'] },
  { name: 'Toolbar', active: false, overscroll: true, sub: ['Size', 'Location', 'Position', 'Controls'] },
  { name: 'Data', active: false, overscroll: true, sub: ['Import', 'Backup', 'Clear'] },
  { name: 'Coffee', active: false, overscroll: false },
  { name: appName, active: false, overscroll: false }
];

menu.mod = {};

menu.element = {
  frame: null
};

menu.firefoxSpecific = () => {

  const firefoxBrowser = typeof InstallTrigger !== "undefined";

  if (firefoxBrowser) {
    menu.navData.splice((menu.navData.length - 2), 0, { name: 'Firefox', active: false, overscroll: false })
  };

};

menu.open = () => {

  menu.element.frame = new MenuFrame({
    navData: menu.navData
  });

  menu.element.frame.open();

};

menu.close = () => {

  if (menu.element.frame) {
    menu.element.frame.close();
  };

};

menu.toggle = () => {

  if (state.get.current().menu) {
    menu.close();
  } else {
    menu.open();
  };

};

menu.init = () => {
  menu.firefoxSpecific();
};



// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/toolbarControl/index.css
var toolbarControl = __webpack_require__(7037);
;// CONCATENATED MODULE: ./src/component/toolbarControl/index.css

            

var toolbarControl_options = {};

toolbarControl_options.insert = "head";
toolbarControl_options.singleton = false;

var toolbarControl_update = injectStylesIntoStyleTag_default()(toolbarControl/* default */.Z, toolbarControl_options);



/* harmony default export */ const component_toolbarControl = (toolbarControl/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/toolbarControl/index.js






















const ToolbarControl = function() {

  this.element = {
    toolbar: node('div|class:toolbar'),
    control: node('div|class:toolbar-control'),
    group: group_group()
  };

  this.control = {};

  this.control.button = {
    accent: new Control_inputButton({
      object: state.get.current(),
      path: 'theme.accent',
      id: 'theme-accent-quick',
      type: 'color',
      labelText: 'Accent colour',
      srOnly: true,
      inputButtonStyle: ['dot', 'line'],
      inputButtonClassList: ['toolbar-item'],
      action: () => {
        applyCSSVar([
          'theme.accent.rgb.r',
          'theme.accent.rgb.g',
          'theme.accent.rgb.b',
          'theme.accent.hsl.h',
          'theme.accent.hsl.s',
          'theme.accent.hsl.l'
        ]);
        this.update.style();
        data.save();
      }
    }),
    add: new Dropdown({
      text: 'Add',
      buttonStyle: ['line'],
      buttonClassList: ['toolbar-item'],
      srOnly: true,
      iconName: 'add',
      menuItem: [
        { text: 'New Group', iconName: 'addFolder', action: () => { component_group_group.add.render(); } },
        { text: 'New Bookmark', iconName: 'addBookmark', action: () => { bookmark_bookmark.add.render(); } }
      ]
    }),
    edit: new Button({
      text: 'Enter edit bookmark mode',
      srOnly: true,
      iconName: 'edit',
      classList: ['toolbar-item'],
      style: ['line'],
      func: () => {
        bookmark_bookmark.edit.toggle();
        component_group_group.edit.toggle();
        header_header.edit.toggle();
        this.update.edit();
        data.save();
      }
    }),
    setting: new Button({
      text: 'Open settings menu',
      srOnly: true,
      iconName: 'settings',
      classList: ['toolbar-item'],
      style: ['line'],
      func: () => {
        menu.toggle();
      }
    })
  };

  this.assemble = () => {

    switch (state.get.current().toolbar.location) {

      case 'corner':

        switch (state.get.current().toolbar.position) {

          case 'top-right':
          case 'bottom-right':
            this.element.group.classList.remove('form-group-reverse');
            break;

          case 'top-left':
          case 'bottom-left':
            this.element.group.classList.add('form-group-reverse');
            break;

        };

        break;

      case 'header':
        this.element.group.classList.remove('form-group-reverse');
        break;

    };

    if (state.get.current().toolbar.accent.show) {

      this.element.group.appendChild(this.control.button.accent.button);

    } else {

      if (this.element.group.contains(this.control.button.accent.button)) {
        this.element.group.removeChild(this.control.button.accent.button);
      };

    };

    if (state.get.current().toolbar.add.show) {

      this.element.group.appendChild(this.control.button.add.toggle);

    } else {

      if (this.element.group.contains(this.control.button.add.toggle)) {
        this.element.group.removeChild(this.control.button.add.toggle);
      };

    };

    if (state.get.current().toolbar.edit.show) {

      this.element.group.appendChild(this.control.button.edit.button);

    } else {

      if (this.element.group.contains(this.control.button.edit.button)) {
        this.element.group.removeChild(this.control.button.edit.button);
      };

    };

    this.element.group.appendChild(this.control.button.setting.button);

    this.element.control.appendChild(this.element.group);

    this.element.toolbar.appendChild(this.element.control);

  };

  this.toolbar = () => {

    return this.element.toolbar;

  };

  this.update = {};

  this.update.style = () => {

    const html = document.querySelector('html');

    if (state.get.current().theme.toolbar.opacity < 40) {

      html.classList.add('is-toolbar-opacity-low');

    } else {

      html.classList.remove('is-toolbar-opacity-low');

    };

    const add = (rgb) => {

      this.element.toolbar.style.setProperty('--toolbar-color-r', rgb.r);
      this.element.toolbar.style.setProperty('--toolbar-color-g', rgb.g);
      this.element.toolbar.style.setProperty('--toolbar-color-b', rgb.b);

      this.element.toolbar.style.setProperty('--toolbar-color-text', '0, 0%, calc(((((var(--toolbar-color-r) * var(--theme-t-r)) + (var(--toolbar-color-g) * var(--theme-t-g)) + (var(--toolbar-color-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%)');

      this.element.toolbar.style.setProperty('--button-link-text', 'var(--toolbar-color-text)');
      this.element.toolbar.style.setProperty('--button-link-text-focus-hover', 'var(--toolbar-color-text)');
      this.element.toolbar.style.setProperty('--button-link-text-active', 'var(--toolbar-color-text)');

    };

    const remove = () => {

      this.element.toolbar.style.removeProperty('--toolbar-color-r');
      this.element.toolbar.style.removeProperty('--toolbar-color-g');
      this.element.toolbar.style.removeProperty('--toolbar-color-b');

      this.element.toolbar.style.removeProperty('--toolbar-color-text');

      this.element.toolbar.style.removeProperty('--button-link-text');
      this.element.toolbar.style.removeProperty('--button-link-text-focus-hover');
      this.element.toolbar.style.removeProperty('--button-link-text-active');

    };

    if (state.get.current().theme.toolbar.opacity < 40) {

      switch (state.get.current().theme.background.type) {

        case 'theme':
        case 'image':
        case 'video':

          remove();

          break;

        case 'accent':

          add(state.get.current().theme.accent.rgb);

          break;

        case 'color':

          add(state.get.current().theme.background.color.rgb);

          break;

        case 'gradient':

          switch (state.get.current().toolbar.location) {

            case 'corner':

              let angle = state.get.current().theme.background.gradient.angle;

              switch (state.get.current().toolbar.position) {

                case 'top-left':
                case 'top-right':
                  if (angle < 90) {
                    add(state.get.current().theme.background.gradient.end.rgb);
                  } else if (angle >= 90 && angle < 180) {
                    add(state.get.current().theme.background.gradient.start.rgb);
                  } else if (angle >= 180 && angle < 270) {
                    add(state.get.current().theme.background.gradient.start.rgb);
                  } else if (angle >= 270) {
                    add(state.get.current().theme.background.gradient.end.rgb);
                  };
                  break;

                case 'bottom-right':
                case 'bottom-left':
                  if (angle < 90) {
                    add(state.get.current().theme.background.gradient.start.rgb);
                  } else if (angle >= 90 && angle < 180) {
                    add(state.get.current().theme.background.gradient.end.rgb);
                  } else if (angle >= 180 && angle < 270) {
                    add(state.get.current().theme.background.gradient.end.rgb);
                  } else if (angle >= 270) {
                    add(state.get.current().theme.background.gradient.start.rgb);
                  };
                  break;

              };

              break;

            case 'header':

              remove();

              break;

          };

          break;

      };

      this.control.button.accent.inputButtonStyle.update(['dot', 'link']);
      this.control.button.edit.style.update(['line', 'link']);
      this.control.button.setting.style.update(['link']);
      this.control.button.add.buttonStyle.update(['link']);

    } else {

      remove();

      this.control.button.accent.inputButtonStyle.update(['dot', 'line']);
      this.control.button.edit.style.update(['line']);
      this.control.button.setting.style.update(['line']);
      this.control.button.add.buttonStyle.update(['line']);

    };

  };

  this.update.edit = () => {

    if (state.get.current().header.edit || state.get.current().group.edit || state.get.current().bookmark.edit) {

      this.control.button.edit.active();

    } else {

      this.control.button.edit.deactive();

    };

  };

  this.update.location = () => {

    applyCSSClass('toolbar.location');
    applyCSSState('toolbar.newLine');

  };

  this.update.position = () => {

    switch (state.get.current().toolbar.position) {

      case 'top-right':
      case 'bottom-right':
        this.element.group.classList.remove('form-group-reverse');
        break;

      case 'top-left':
      case 'bottom-left':
        this.element.group.classList.add('form-group-reverse');
        break;

    };

    applyCSSVar('toolbar.size');
    applyCSSClass('toolbar.position');

  };

  this.update.control = () => {
    this.assemble();
  };

  this.update.accent = () => {

    this.control.button.accent.update();

  };

  this.assemble();

  this.update.style();

  this.update.location();

  this.update.position();

  this.update.control();

};

;// CONCATENATED MODULE: ./src/component/toolbar/index.js








const toolbar = {};

toolbar.current = null;

toolbar.bar = {};

toolbar.bar.render = () => {

  const body = document.querySelector('body');

  switch (state.get.current().toolbar.location) {

    case 'corner':

      body.appendChild(toolbar.current.toolbar());

      break;

  };

};

toolbar.init = () => {
  toolbar.current = new ToolbarControl();
  toolbar.bar.render();
};



;// CONCATENATED MODULE: ./src/utility/wordNumber.js
const wordNumber = (number) => {

  const ten = 10;

  const oneHundred = 100;

  const oneThousand = 1000;

  const oneMillion = 1000000;

  const oneBillion = 1000000000; // 1,000,000,000 (9)

  const oneTrillion = 1000000000000; // 1,000,000,000,000 (12)

  const oneQuadrillion = 1000000000000000; // 1,000,000,000,000,000 (15)

  const max = 9007199254740992; // 9,007,199,254,740,992 (15)

  const lessThanTwenty = ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen', 'Nineteen'];

  const tenthsLessThanHundred = ['Zero', 'Ten', 'Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety'];


  const generateWords = function(number) {

    let remainder;

    let word;

    let words = arguments[1];

    // We’re done
    if (number === 0) {
      return !words ? 'Zero' : words.join(' ').replace(/,$/, '');
    };

    // First run
    if (!words) {
      words = [];
    };

    // If negative, prepend “minus”
    if (number < 0) {
      words.push('minus');
      number = Math.abs(number);
    };

    if (number < 20) {
      remainder = 0;
      word = lessThanTwenty[number];
    } else if (number < oneHundred) {
      remainder = number % ten;
      word = tenthsLessThanHundred[Math.floor(number / ten)];
      // In case of remainder, we need to handle it here to be able to add the “-”
      if (remainder) {
        word += '-' + lessThanTwenty[remainder];
        remainder = 0;
      };
    } else if (number < oneThousand) {
      remainder = number % oneHundred;
      word = generateWords(Math.floor(number / oneHundred)) + ' Hundred';
    } else if (number < oneMillion) {
      remainder = number % oneThousand;
      word = generateWords(Math.floor(number / oneThousand)) + ' Thousand,';
    } else if (number < oneBillion) {
      remainder = number % oneMillion;
      word = generateWords(Math.floor(number / oneMillion)) + ' Million,';
    } else if (number < oneTrillion) {
      remainder = number % oneBillion;
      word = generateWords(Math.floor(number / oneBillion)) + ' Billion,';
    } else if (number < oneQuadrillion) {
      remainder = number % oneTrillion;
      word = generateWords(Math.floor(number / oneTrillion)) + ' Trillion,';
    } else if (number <= max) {
      remainder = number % oneQuadrillion;
      word = generateWords(Math.floor(number / oneQuadrillion)) + ' Quadrillion,';
    };

    words.push(word);

    return generateWords(remainder, words);
  };

  var num = parseInt(number, 10);

  return generateWords(num);
};

// EXTERNAL MODULE: ./node_modules/moment/moment.js
var moment = __webpack_require__(381);
var moment_default = /*#__PURE__*/__webpack_require__.n(moment);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/clock/index.css
var clock = __webpack_require__(3816);
;// CONCATENATED MODULE: ./src/component/clock/index.css

            

var clock_options = {};

clock_options.insert = "head";
clock_options.singleton = false;

var clock_update = injectStylesIntoStyleTag_default()(clock/* default */.Z, clock_options);



/* harmony default export */ const component_clock = (clock/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/clock/index.js














const Clock = function({} = {}) {

  this.now;

  this.bind = {};

  this.bind.tick = () => {

    window.setInterval(() => {
      this.update();
    }, 1000);

  };

  this.element = {
    clock: node('div|class:clock'),
    hour: node('span|class:clock-item clock-hour'),
    minute: node('span|class:clock-item clock-minute'),
    second: node('span|class:clock-item clock-second'),
    meridiem: node('span|class:clock-item clock-meridiem')
  };

  this.string = {};

  this.string.hour = () => {

    let value;

    switch (state.get.current().header.clock.hour.display) {

      case 'word':

        value = this.now.hours();

        if (!state.get.current().header.clock.hour24.show && this.now.hours() > 12) {
          value = value - 12;
        };

        if (!state.get.current().header.clock.hour24.show && this.now.hours() == 0) {
          value = 12;
        };

        value = wordNumber(value);

        if (state.get.current().header.clock.hour24.show && this.now.hours() > 0 && this.now.hours() < 10) {
          value = 'Zero ' + value;
        };

        break;

      case 'number':

        value = this.now.hours();

        if (!state.get.current().header.clock.hour24.show && this.now.hours() > 12) {
          value = value - 12;
        };

        if (!state.get.current().header.clock.hour24.show && this.now.hours() == 0) {
          value = 12;
        };

        if (state.get.current().header.clock.hour24.show && this.now.hours() < 10) {
          value = '0' + value;
        };

        break;

    };

    return value;

  };

  this.string.minute = () => {

    let value;

    switch (state.get.current().header.clock.minute.display) {

      case 'word':

        value = wordNumber(this.now.minutes());

        if (this.now.minutes() > 0 && this.now.minutes() < 10) {
          value = 'Zero ' + value;
        };

        break;

      case 'number':

        value = this.now.minutes();

        if (this.now.minutes() < 10) {
          value = '0' + value;
        };

        break;

    };

    return value;

  };

  this.string.second = () => {

    let value;

    switch (state.get.current().header.clock.second.display) {

      case 'word':

        value = wordNumber(this.now.seconds());

        if (this.now.seconds() > 0 && this.now.seconds() < 10) {
          value = 'Zero ' + value;
        };

        break;

      case 'number':

        value = this.now.seconds();

        if (this.now.seconds() < 10) {
          value = '0' + value;
        };

        break;

    };

    return value;

  };

  this.string.meridiem = () => {

    return this.now.format('A');

  };

  this.assemble = () => {

    clearChildNode(this.element.clock);

    if (state.get.current().header.clock.hour.show) {
      this.element.clock.appendChild(this.element.hour);
    };

    if (state.get.current().header.clock.minute.show) {
      this.element.clock.appendChild(this.element.minute);
    };

    if (state.get.current().header.clock.second.show) {
      this.element.clock.appendChild(this.element.second);
    };

    if (!state.get.current().header.clock.hour24.show && state.get.current().header.clock.meridiem.show) {
      this.element.clock.appendChild(this.element.meridiem);
    };

    if (state.get.current().header.clock.separator.show) {

      let separatorCharacter;

      if (isValidString(state.get.current().header.clock.separator.text)) {
        separatorCharacter = trimString(state.get.current().header.clock.separator.text);
      } else {
        separatorCharacter = ':';
      };

      let parts = this.element.clock.querySelectorAll('span');

      if (parts.length > 1) {

        parts.forEach((item, i) => {

          if (i > 0 && item != this.element.meridiem) {

            let separator = complexNode({
              tag: 'span',
              text: separatorCharacter,
              attr: [{
                key: 'class',
                value: 'clock-item clock-separator'
              }]
            });

            this.element.clock.insertBefore(separator, item);

          };
        });

      };

    };

  };

  this.update = () => {

    this.assemble();

    this.now = moment_default()();

    if (state.get.current().header.clock.hour.show) {
      this.element.hour.innerHTML = this.string.hour();
    };

    if (state.get.current().header.clock.minute.show) {
      this.element.minute.innerHTML = this.string.minute();
    };

    if (state.get.current().header.clock.second.show) {
      this.element.second.innerHTML = this.string.second();
    };

    if (!state.get.current().header.clock.hour24.show && state.get.current().header.clock.meridiem.show) {
      this.element.meridiem.innerHTML = this.string.meridiem();
    };

  };

  this.assemble();

  this.update();

  this.bind.tick();

  this.clock = () => {
    return this.element.clock;
  };

};

;// CONCATENATED MODULE: ./src/utility/ordinalWord.js
const ordinalWord = (word) => {

  const endsWithDoubleZeroPattern = /(hundred|thousand|(m|b|tr|quadr)illion)$/;

  const endsWithTeenPattern = /teen$/;

  const endsWithYPattern = /y$/;

  const endsWithZeroThroughTwelvePattern = /(Zero|One|Two|Three|Four|Five|Six|Seven|Eight|Nine|Ten|Eleven|Twelve)$/;

  const ordinalLessThanThirteen = {
    Zero: 'Zeroth',
    One: 'First',
    Two: 'Second',
    Three: 'Third',
    Four: 'Fourth',
    Five: 'Fifth',
    Six: 'Sixth',
    Seven: 'Seventh',
    Eight: 'Eighth',
    Nine: 'Ninth',
    Ten: 'Tenth',
    Eleven: 'Eleventh',
    Twelve: 'Twelfth'
  };

  const replaceWithOrdinalVariant = (match, numberWord) => {
    return ordinalLessThanThirteen[numberWord];
  };

  // Ends with *00 (100, 1000, etc.) or *teen (13, 14, 15, 16, 17, 18, 19)
  if (endsWithDoubleZeroPattern.test(word) || endsWithTeenPattern.test(word)) {
    return word + 'th';
    // Ends with *y (20, 30, 40, 50, 60, 70, 80, 90)
  } else if (endsWithYPattern.test(word)) {
    return word.replace(endsWithYPattern, 'ieth');
    // Ends with one through twelve
  } else if (endsWithZeroThroughTwelvePattern.test(word)) {
    return word.replace(endsWithZeroThroughTwelvePattern, replaceWithOrdinalVariant);
  };

  return word;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/date/index.css
var date = __webpack_require__(8154);
;// CONCATENATED MODULE: ./src/component/date/index.css

            

var date_options = {};

date_options.insert = "head";
date_options.singleton = false;

var date_update = injectStylesIntoStyleTag_default()(date/* default */.Z, date_options);



/* harmony default export */ const component_date = (date/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/date/index.js














const date_Date = function({} = {}) {

  this.now;

  this.bind = {};

  this.bind.tick = () => {

    window.setInterval(() => {
      this.update();
    }, 1000);

  };

  this.element = {
    date: node('div|class:date'),
    day: node('span|class:date-item date-day'),
    dateOfMonth: node('span|class:date-item date-date'),
    month: node('span|class:date-item date-month'),
    year: node('span|class:date-item date-year')
  };

  this.string = {};

  this.string.day = () => {

    let value;

    switch (state.get.current().header.date.day.display) {

      case 'word':

        value = this.now.format('dddd');

        if (state.get.current().header.date.day.length == 'short') {
          value = value.substring(0, 3);
        };

        break;

      case 'number':

        value = this.now.day();

        if (state.get.current().header.date.day.weekStart == 'monday') {
          if (value == 0) {
            value = 7;
          };
        } else if (state.get.current().header.date.day.weekStart == 'sunday') {
          value = value + 1;
        };

        break;

    };

    return value;

  };

  this.string.dateOfMonth = () => {

    let value;

    switch (state.get.current().header.date.date.display) {

      case 'word':

        if (state.get.current().header.date.date.ordinal) {
          value = ordinalWord(wordNumber(this.now.date()));
        } else {
          value = wordNumber(this.now.date());
        };

        break;

      case 'number':

        if (state.get.current().header.date.date.ordinal) {
          value = this.now.format('Do');
        } else {
          value = this.now.format('D');
        };

        break;

    };

    return value;

  };

  this.string.month = () => {

    let value;

    switch (state.get.current().header.date.month.display) {

      case 'word':

        value = this.now.format('MMMM');
        if (state.get.current().header.date.month.length == 'short') {
          value = value.substring(0, 3);
        };

        break;

      case 'number':

        if (state.get.current().header.date.month.ordinal) {
          value = this.now.format('Mo');
        } else {
          value = this.now.format('M');
        };

        break;

    };

    return value;

  };

  this.string.year = () => {

    let value;

    switch (state.get.current().header.date.year.display) {

      case 'word':

        value = wordNumber(this.now.format('YYYY'));

        break;

      case 'number':

        value = this.now.format('YYYY');

        break;

    };

    return value;

  };

  this.assemble = () => {

    clearChildNode(this.element.date);

    if (state.get.current().header.date.day.show) {
      this.element.date.appendChild(this.element.day);
    };

    if (state.get.current().header.date.date.show && state.get.current().header.date.month.show) {

      switch (state.get.current().header.date.format) {

        case 'date-month':

          if (state.get.current().header.date.date.show) {
            this.element.date.appendChild(this.element.dateOfMonth);
          };

          if (state.get.current().header.date.month.show) {
            this.element.date.appendChild(this.element.month);
          };

          break;

        case 'month-date':

          if (state.get.current().header.date.month.show) {
            this.element.date.appendChild(this.element.month);
          };

          if (state.get.current().header.date.date.show) {
            this.element.date.appendChild(this.element.dateOfMonth);
          };

          break;

      };

    } else {

      if (state.get.current().header.date.date.show) {
        this.element.date.appendChild(this.element.dateOfMonth);
      };

      if (state.get.current().header.date.month.show) {
        this.element.date.appendChild(this.element.month);
      };

    };

    if (state.get.current().header.date.year.show) {
      this.element.date.appendChild(this.element.year);
    };

    if (state.get.current().header.date.separator.show) {

      let separatorCharacter;

      if (isValidString(state.get.current().header.date.separator.text)) {
        separatorCharacter = trimString(state.get.current().header.date.separator.text);
      } else {
        separatorCharacter = '/';
      };

      let parts = this.element.date.querySelectorAll('span');

      if (parts.length > 1) {

        parts.forEach((item, i) => {
          if (i > 0) {

            let separator = complexNode({
              tag: 'span',
              text: separatorCharacter,
              attr: [{
                key: 'class',
                value: 'date-item date-separator'
              }]
            });

            this.element.date.insertBefore(separator, item);

          };
        });

      };

    };

  };

  this.update = () => {

    this.assemble();

    this.now = moment_default()();

    if (state.get.current().header.date.day.show) {
      this.element.day.innerHTML = this.string.day();
    };

    if (state.get.current().header.date.date.show) {
      this.element.dateOfMonth.innerHTML = this.string.dateOfMonth();
    };

    if (state.get.current().header.date.month.show) {
      this.element.month.innerHTML = this.string.month();
    };

    if (state.get.current().header.date.year.show) {
      this.element.year.innerHTML = this.string.year();
    };

  };

  this.assemble();

  this.update();

  this.bind.tick();

  this.date = () => {
    return this.element.date;
  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/greeting/index.css
var greeting = __webpack_require__(5379);
;// CONCATENATED MODULE: ./src/component/greeting/index.css

            

var greeting_options = {};

greeting_options.insert = "head";
greeting_options.singleton = false;

var greeting_update = injectStylesIntoStyleTag_default()(greeting/* default */.Z, greeting_options);



/* harmony default export */ const component_greeting = (greeting/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/greeting/index.js











const Greeting = function({} = {}) {

  this.now;

  this.element = {
    greeting: node('div|class:greeting'),
    text: node('span|class:greeting-item greeting-text')
  };

  this.assemble = () => {

    if (state.get.current().header.greeting.show) {
      this.element.greeting.appendChild(this.element.text);
    };

  };

  this.message = ['Good night', 'Good morning', 'Good afternoon', 'Good evening'];

  this.update = () => {

    this.now = moment_default()();

    let value;

    switch (state.get.current().header.greeting.type) {

      case 'good':

        value = this.message[Math.floor(this.now.hours() / 6)];

        break;

      case 'hello':

        value = 'Hello';

        break;

      case 'hi':

        value = 'Hi';

        break;

      case 'custom':

        if (isValidString(state.get.current().header.greeting.custom)) {
          value = trimString(state.get.current().header.greeting.custom);
        } else {
          value = this.message[Math.floor(this.now.hours() / 6)];
        };

        break;

    };

    if (isValidString(state.get.current().header.greeting.name)) {

      if (state.get.current().header.greeting.type === 'custom') {
        if (isValidString(state.get.current().header.greeting.custom)) {
          value = value + ', ' + trimString(state.get.current().header.greeting.name)
        } else {
          value = value + ', ' + trimString(state.get.current().header.greeting.name)
        };
      } else {
        value = value + ', ' + trimString(state.get.current().header.greeting.name)
      };

    };

    this.element.text.innerHTML = value;

  };

  this.assemble();

  this.update();

  this.greeting = () => {
    return this.element.greeting;
  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/transitional/index.css
var transitional = __webpack_require__(1640);
;// CONCATENATED MODULE: ./src/component/transitional/index.css

            

var transitional_options = {};

transitional_options.insert = "head";
transitional_options.singleton = false;

var transitional_update = injectStylesIntoStyleTag_default()(transitional/* default */.Z, transitional_options);



/* harmony default export */ const component_transitional = (transitional/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/transitional/index.js











const Transitional = function({} = {}) {

  this.element = {
    transitional: node('div|class:transitional'),
    text: node('span|class:transitional-item transitional-text')
  };

  this.assemble = () => {

    if (state.get.current().header.transitional.show) {
      this.element.transitional.appendChild(this.element.text);
    };

  };

  this.update = () => {

    let value;

    switch (state.get.current().header.transitional.type) {
      case 'timeanddate':

        if ((state.get.current().header.date.day.show ||
            state.get.current().header.date.date.show ||
            state.get.current().header.date.month.show ||
            state.get.current().header.date.year.show) && (state.get.current().header.clock.second.show ||
            state.get.current().header.clock.minute.show ||
            state.get.current().header.clock.hour.show)) {
          if (state.get.current().header.date.day.show && !state.get.current().header.date.date.show && !state.get.current().header.date.month.show && !state.get.current().header.date.year.show) {

            value = 'The time and day is';

          } else {

            value = 'The time and date is';

          };
        } else if (
          state.get.current().header.date.day.show ||
          state.get.current().header.date.date.show ||
          state.get.current().header.date.month.show ||
          state.get.current().header.date.year.show
        ) {
          if (
            state.get.current().header.date.day.show &&
            !state.get.current().header.date.date.show &&
            !state.get.current().header.date.month.show &&
            !state.get.current().header.date.year.show
          ) {

            value = 'Today is';

          } else if (
            !state.get.current().header.date.day.show &&
            state.get.current().header.date.date.show &&
            !state.get.current().header.date.month.show &&
            !state.get.current().header.date.year.show
          ) {

            value = 'The date is';

          } else if (
            !state.get.current().header.date.day.show &&
            !state.get.current().header.date.date.show &&
            state.get.current().header.date.month.show &&
            !state.get.current().header.date.year.show
          ) {

            value = 'The month is';

          } else if (
            !state.get.current().header.date.day.show &&
            !state.get.current().header.date.date.show &&
            !state.get.current().header.date.month.show &&
            state.get.current().header.date.year.show
          ) {

            value = 'The year is';

          } else {

            value = 'The date is';

          };
        } else if (
          state.get.current().header.clock.second.show ||
          state.get.current().header.clock.minute.show ||
          state.get.current().header.clock.hour.show
        ) {

          value = 'The time is';

        };

        break;

      case 'its':
        value = 'It\'s';

        break;

    };

    this.element.text.innerHTML = value;

  };

  this.assemble();

  this.update();

  this.transitional = () => {
    return this.element.transitional;
  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/search/index.css
var search = __webpack_require__(5069);
;// CONCATENATED MODULE: ./src/component/search/index.css

            

var search_options = {};

search_options.insert = "head";
search_options.singleton = false;

var search_update = injectStylesIntoStyleTag_default()(search/* default */.Z, search_options);



/* harmony default export */ const component_search = (search/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/search/index.js




















const Search = function() {

  this.element = {
    search: node('div|class:search'),
    form: node('form|class:search-form,action,method:get'),
    submit: node('input|type:submit,value:Search,class:is-hidden'),
    input: new Control_text({
      object: state.get.current(),
      path: 'header.search.string',
      id: 'header-search-string',
      value: '',
      placeholder: 'Search Bookmarks or',
      labelText: 'Search',
      classList: ['search-input'],
      srOnly: true,
      action: () => {
        this.state();
        this.performSearch();
      }
    }),
    clear: new Button({
      text: 'Clear search',
      srOnly: true,
      iconName: 'cross',
      style: ['link'],
      title: 'Clear search',
      classList: ['search-clear'],
      func: () => {
        this.element.input.text.value = '';
        this.state();
        this.performSearch();
      }
    })
  };

  this.state = () => {

    if (isValidString(trimString(this.element.input.text.value))) {

      state.get.current().search = true;

    } else {

      state.get.current().search = false;

    };

    data.save();

  };

  this.placeholder = () => {

    let placeholder = '';

    if (state.get.current().bookmark.show) {
      placeholder = 'Find bookmarks or search';
    } else {
      placeholder = 'Search';
    };

    switch (state.get.current().header.search.engine.selected) {

      case 'custom':

        if (isValidString(state.get.current().header.search.engine.custom.name)) {

          placeholder = placeholder + ' ' + state.get.current().header.search.engine.custom.name;

        };

        break;

      default:

        placeholder = placeholder + ' ' + searchEnginePreset[state.get.current().header.search.engine.selected].name;

        break;

    };

    this.element.input.text.placeholder = placeholder;

  };

  this.delete = new KeyboardShortcut({ keycode: 8, action: () => { this.close(); } });

  this.engine = {};

  this.engine.set = () => {

    switch (state.get.current().header.search.engine.selected) {

      case 'custom':

        if (isValidString(state.get.current().header.search.engine.custom.queryName) && isValidString(state.get.current().header.search.engine.custom.url)) {

          this.element.input.text.name = state.get.current().header.search.engine.custom.queryName;

          this.element.form.setAttribute('action', state.get.current().header.search.engine.custom.url);

        } else {

          this.element.input.text.name = '';

          this.element.form.setAttribute('action', '');

        };

        break;

      default:

        this.element.input.text.name = 'q';

        this.element.form.setAttribute('action', searchEnginePreset[state.get.current().header.search.engine.selected].url);

        break;

    };

    if (state.get.current().header.search.newTab) {
      this.element.form.setAttribute("target", "_blank");
    };

  };

  this.engine.bind = () => {
    this.element.input.addEventListener();
  };

  this.performSearch = () => {

    const html = document.querySelector('html');

    if (state.get.current().search) {

      html.classList.add('is-search');

      const searchString = trimString(this.element.input.text.value).toLowerCase();

      bookmark_bookmark.all.forEach((item, i) => {

        item.items.forEach((item, i) => {

          item.searchMatch = false;

          let matchUrl = isValidString(item.url) && item.url.toLowerCase().includes(searchString);

          let matchName = isValidString(item.display.name.text) && trimString(item.display.name.text).toLowerCase().includes(searchString);

          if (matchUrl || matchName) {
            item.searchMatch = true;
          };

        });

      });

    } else {

      html.classList.remove('is-search');

      this.clearSearch();

    };

    groupAndBookmark.render();

  };

  this.clearSearch = () => {

    bookmark_bookmark.all.forEach((item, i) => {

      item.items.forEach((item, i) => {

        delete item.searchMatch;

      });

    });

    data.save();

  };

  this.assemble = () => {

    this.element.input.text.type = 'Search';

    this.element.form.appendChild(this.element.input.text);

    this.element.form.appendChild(this.element.submit);

    this.element.form.appendChild(this.element.clear.button);

    this.element.search.appendChild(this.element.form);

  };

  this.search = () => {

    return this.element.search;

  };

  this.resultCount = () => {

    const count = { total: 0, group: [] };

    bookmark_bookmark.all.forEach((item, i) => {

      count.group.push({
        bookmarkCount: item.items.length,
        searchMatch: 0
      })

      const groupIndex = i;

      item.items.forEach((item, i) => {

        if (item.searchMatch) { count.group[groupIndex].searchMatch++ };

      });

      count.total = count.total + count.group[groupIndex].searchMatch;

    });

    return count;

  };

  this.update = {};

  this.update.style = () => {

    const html = document.querySelector('html');

    if (state.get.current().theme.header.search.opacity < 40) {

      html.classList.add('is-header-search-opacity-low');

    } else {

      html.classList.remove('is-header-search-opacity-low');

    };

  };

  this.state();

  this.assemble();

  this.placeholder();

  this.engine.set();

  this.clearSearch();

  this.update.style();

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/headerItem/index.css
var headerItem = __webpack_require__(6782);
;// CONCATENATED MODULE: ./src/component/headerItem/index.css

            

var headerItem_options = {};

headerItem_options.insert = "head";
headerItem_options.singleton = false;

var headerItem_update = injectStylesIntoStyleTag_default()(headerItem/* default */.Z, headerItem_options);



/* harmony default export */ const component_headerItem = (headerItem/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/headerItem/index.js










const HeaderItem = function({
  name = false,
  index = false,
  child = false
} = {}) {

  this.element = {
    item: node('div|class:header-item header-item-' + name),
    content: node('div|class:header-item-content'),
    body: node('div|class:header-item-body'),
    control: {
      control: node('div|class:header-item-control'),
      group: node('div|class:header-item-control-group form-group form-group-horizontal')
    }
  };

  this.control = {};

  this.control.button = {
    sort: new Button({
      text: 'Drag header item to reorder',
      srOnly: true,
      iconName: 'drag',
      style: ['line'],
      title: 'Drag header item to reorder',
      classList: ['header-control-button', 'header-control-sort'],
    })
  };

  this.control.disable = () => {
    for (var key in this.control.button) {
      this.control.button[key].disable();
    };
  };

  this.control.enable = () => {
    for (var key in this.control.button) {
      this.control.button[key].enable();
    };
  };

  this.assemble = () => {
    this.element.control.group.appendChild(this.control.button.sort.button);

    this.element.control.control.appendChild(this.element.control.group);

    this.element.content.appendChild(this.element.control.control);

    if (child) {

      this.element.body.appendChild(child);

      this.element.content.appendChild(this.element.body);

    };

    this.element.item.appendChild(this.element.content);

  };

  this.item = () => {

    this.assemble();

    if (state.get.current().group.edit) {
      this.control.enable();
    } else {
      this.control.disable();
    };

    return this.element.item;

  };

};

;// CONCATENATED MODULE: ./node_modules/sortablejs/modular/sortable.esm.js
/**!
 * Sortable 1.13.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  }
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

var sortable_esm_version = "1.13.0";

function userAgent(pattern) {
  if (typeof window !== 'undefined' && window.navigator) {
    return !!
    /*@__PURE__*/
    navigator.userAgent.match(pattern);
  }
}

var IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i);
var sortable_esm_Edge = userAgent(/Edge/i);
var FireFox = userAgent(/firefox/i);
var Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);
var IOS = userAgent(/iP(ad|od|hone)/i);
var ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);

var captureMode = {
  capture: false,
  passive: false
};

function on(el, event, fn) {
  el.addEventListener(event, fn, !IE11OrLess && captureMode);
}

function off(el, event, fn) {
  el.removeEventListener(event, fn, !IE11OrLess && captureMode);
}

function matches(
/**HTMLElement*/
el,
/**String*/
selector) {
  if (!selector) return;
  selector[0] === '>' && (selector = selector.substring(1));

  if (el) {
    try {
      if (el.matches) {
        return el.matches(selector);
      } else if (el.msMatchesSelector) {
        return el.msMatchesSelector(selector);
      } else if (el.webkitMatchesSelector) {
        return el.webkitMatchesSelector(selector);
      }
    } catch (_) {
      return false;
    }
  }

  return false;
}

function getParentOrHost(el) {
  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;
}

function closest(
/**HTMLElement*/
el,
/**String*/
selector,
/**HTMLElement*/
ctx, includeCTX) {
  if (el) {
    ctx = ctx || document;

    do {
      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {
        return el;
      }

      if (el === ctx) break;
      /* jshint boss:true */
    } while (el = getParentOrHost(el));
  }

  return null;
}

var R_SPACE = /\s+/g;

function toggleClass(el, name, state) {
  if (el && name) {
    if (el.classList) {
      el.classList[state ? 'add' : 'remove'](name);
    } else {
      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');
      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');
    }
  }
}

function css(el, prop, val) {
  var style = el && el.style;

  if (style) {
    if (val === void 0) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        val = document.defaultView.getComputedStyle(el, '');
      } else if (el.currentStyle) {
        val = el.currentStyle;
      }

      return prop === void 0 ? val : val[prop];
    } else {
      if (!(prop in style) && prop.indexOf('webkit') === -1) {
        prop = '-webkit-' + prop;
      }

      style[prop] = val + (typeof val === 'string' ? '' : 'px');
    }
  }
}

function matrix(el, selfOnly) {
  var appliedTransforms = '';

  if (typeof el === 'string') {
    appliedTransforms = el;
  } else {
    do {
      var transform = css(el, 'transform');

      if (transform && transform !== 'none') {
        appliedTransforms = transform + ' ' + appliedTransforms;
      }
      /* jshint boss:true */

    } while (!selfOnly && (el = el.parentNode));
  }

  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  /*jshint -W056 */

  return matrixFn && new matrixFn(appliedTransforms);
}

function find(ctx, tagName, iterator) {
  if (ctx) {
    var list = ctx.getElementsByTagName(tagName),
        i = 0,
        n = list.length;

    if (iterator) {
      for (; i < n; i++) {
        iterator(list[i], i);
      }
    }

    return list;
  }

  return [];
}

function getWindowScrollingElement() {
  var scrollingElement = document.scrollingElement;

  if (scrollingElement) {
    return scrollingElement;
  } else {
    return document.documentElement;
  }
}
/**
 * Returns the "bounding client rect" of given element
 * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted
 * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container
 * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr
 * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone
 * @param  {[HTMLElement]} container              The parent the element will be placed in
 * @return {Object}                               The boundingClientRect of el, with specified adjustments
 */


function getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {
  if (!el.getBoundingClientRect && el !== window) return;
  var elRect, top, left, bottom, right, height, width;

  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {
    elRect = el.getBoundingClientRect();
    top = elRect.top;
    left = elRect.left;
    bottom = elRect.bottom;
    right = elRect.right;
    height = elRect.height;
    width = elRect.width;
  } else {
    top = 0;
    left = 0;
    bottom = window.innerHeight;
    right = window.innerWidth;
    height = window.innerHeight;
    width = window.innerWidth;
  }

  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {
    // Adjust for translate()
    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)
    // Not needed on <= IE11

    if (!IE11OrLess) {
      do {
        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {
          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container

          top -= containerRect.top + parseInt(css(container, 'border-top-width'));
          left -= containerRect.left + parseInt(css(container, 'border-left-width'));
          bottom = top + elRect.height;
          right = left + elRect.width;
          break;
        }
        /* jshint boss:true */

      } while (container = container.parentNode);
    }
  }

  if (undoScale && el !== window) {
    // Adjust for scale()
    var elMatrix = matrix(container || el),
        scaleX = elMatrix && elMatrix.a,
        scaleY = elMatrix && elMatrix.d;

    if (elMatrix) {
      top /= scaleY;
      left /= scaleX;
      width /= scaleX;
      height /= scaleY;
      bottom = top + height;
      right = left + width;
    }
  }

  return {
    top: top,
    left: left,
    bottom: bottom,
    right: right,
    width: width,
    height: height
  };
}
/**
 * Checks if a side of an element is scrolled past a side of its parents
 * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question
 * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')
 * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')
 * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element
 */


function isScrolledPast(el, elSide, parentSide) {
  var parent = getParentAutoScrollElement(el, true),
      elSideVal = getRect(el)[elSide];
  /* jshint boss:true */

  while (parent) {
    var parentSideVal = getRect(parent)[parentSide],
        visible = void 0;

    if (parentSide === 'top' || parentSide === 'left') {
      visible = elSideVal >= parentSideVal;
    } else {
      visible = elSideVal <= parentSideVal;
    }

    if (!visible) return parent;
    if (parent === getWindowScrollingElement()) break;
    parent = getParentAutoScrollElement(parent, false);
  }

  return false;
}
/**
 * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)
 * and non-draggable elements
 * @param  {HTMLElement} el       The parent element
 * @param  {Number} childNum      The index of the child
 * @param  {Object} options       Parent Sortable's options
 * @return {HTMLElement}          The child at index childNum, or null if not found
 */


function getChild(el, childNum, options) {
  var currentChild = 0,
      i = 0,
      children = el.children;

  while (i < children.length) {
    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {
      if (currentChild === childNum) {
        return children[i];
      }

      currentChild++;
    }

    i++;
  }

  return null;
}
/**
 * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)
 * @param  {HTMLElement} el       Parent element
 * @param  {selector} selector    Any other elements that should be ignored
 * @return {HTMLElement}          The last child, ignoring ghostEl
 */


function lastChild(el, selector) {
  var last = el.lastElementChild;

  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {
    last = last.previousElementSibling;
  }

  return last || null;
}
/**
 * Returns the index of an element within its parent for a selected set of
 * elements
 * @param  {HTMLElement} el
 * @param  {selector} selector
 * @return {number}
 */


function index(el, selector) {
  var index = 0;

  if (!el || !el.parentNode) {
    return -1;
  }
  /* jshint boss:true */


  while (el = el.previousElementSibling) {
    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {
      index++;
    }
  }

  return index;
}
/**
 * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.
 * The value is returned in real pixels.
 * @param  {HTMLElement} el
 * @return {Array}             Offsets in the format of [left, top]
 */


function getRelativeScrollOffset(el) {
  var offsetLeft = 0,
      offsetTop = 0,
      winScroller = getWindowScrollingElement();

  if (el) {
    do {
      var elMatrix = matrix(el),
          scaleX = elMatrix.a,
          scaleY = elMatrix.d;
      offsetLeft += el.scrollLeft * scaleX;
      offsetTop += el.scrollTop * scaleY;
    } while (el !== winScroller && (el = el.parentNode));
  }

  return [offsetLeft, offsetTop];
}
/**
 * Returns the index of the object within the given array
 * @param  {Array} arr   Array that may or may not hold the object
 * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find
 * @return {Number}      The index of the object in the array, or -1
 */


function indexOfObject(arr, obj) {
  for (var i in arr) {
    if (!arr.hasOwnProperty(i)) continue;

    for (var key in obj) {
      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);
    }
  }

  return -1;
}

function getParentAutoScrollElement(el, includeSelf) {
  // skip to window
  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();
  var elem = el;
  var gotSelf = false;

  do {
    // we don't need to get elem css if it isn't even overflowing in the first place (performance)
    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {
      var elemCSS = css(elem);

      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {
        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();
        if (gotSelf || includeSelf) return elem;
        gotSelf = true;
      }
    }
    /* jshint boss:true */

  } while (elem = elem.parentNode);

  return getWindowScrollingElement();
}

function extend(dst, src) {
  if (dst && src) {
    for (var key in src) {
      if (src.hasOwnProperty(key)) {
        dst[key] = src[key];
      }
    }
  }

  return dst;
}

function isRectEqual(rect1, rect2) {
  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);
}

var _throttleTimeout;

function throttle(callback, ms) {
  return function () {
    if (!_throttleTimeout) {
      var args = arguments,
          _this = this;

      if (args.length === 1) {
        callback.call(_this, args[0]);
      } else {
        callback.apply(_this, args);
      }

      _throttleTimeout = setTimeout(function () {
        _throttleTimeout = void 0;
      }, ms);
    }
  };
}

function cancelThrottle() {
  clearTimeout(_throttleTimeout);
  _throttleTimeout = void 0;
}

function scrollBy(el, x, y) {
  el.scrollLeft += x;
  el.scrollTop += y;
}

function clone(el) {
  var Polymer = window.Polymer;
  var $ = window.jQuery || window.Zepto;

  if (Polymer && Polymer.dom) {
    return Polymer.dom(el).cloneNode(true);
  } else if ($) {
    return $(el).clone(true)[0];
  } else {
    return el.cloneNode(true);
  }
}

function setRect(el, rect) {
  css(el, 'position', 'absolute');
  css(el, 'top', rect.top);
  css(el, 'left', rect.left);
  css(el, 'width', rect.width);
  css(el, 'height', rect.height);
}

function unsetRect(el) {
  css(el, 'position', '');
  css(el, 'top', '');
  css(el, 'left', '');
  css(el, 'width', '');
  css(el, 'height', '');
}

var expando = 'Sortable' + new Date().getTime();

function AnimationStateManager() {
  var animationStates = [],
      animationCallbackId;
  return {
    captureAnimationState: function captureAnimationState() {
      animationStates = [];
      if (!this.options.animation) return;
      var children = [].slice.call(this.el.children);
      children.forEach(function (child) {
        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;
        animationStates.push({
          target: child,
          rect: getRect(child)
        });

        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation


        if (child.thisAnimationDuration) {
          var childMatrix = matrix(child, true);

          if (childMatrix) {
            fromRect.top -= childMatrix.f;
            fromRect.left -= childMatrix.e;
          }
        }

        child.fromRect = fromRect;
      });
    },
    addAnimationState: function addAnimationState(state) {
      animationStates.push(state);
    },
    removeAnimationState: function removeAnimationState(target) {
      animationStates.splice(indexOfObject(animationStates, {
        target: target
      }), 1);
    },
    animateAll: function animateAll(callback) {
      var _this = this;

      if (!this.options.animation) {
        clearTimeout(animationCallbackId);
        if (typeof callback === 'function') callback();
        return;
      }

      var animating = false,
          animationTime = 0;
      animationStates.forEach(function (state) {
        var time = 0,
            target = state.target,
            fromRect = target.fromRect,
            toRect = getRect(target),
            prevFromRect = target.prevFromRect,
            prevToRect = target.prevToRect,
            animatingRect = state.rect,
            targetMatrix = matrix(target, true);

        if (targetMatrix) {
          // Compensate for current animation
          toRect.top -= targetMatrix.f;
          toRect.left -= targetMatrix.e;
        }

        target.toRect = toRect;

        if (target.thisAnimationDuration) {
          // Could also check if animatingRect is between fromRect and toRect
          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect
          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {
            // If returning to same place as started from animation and on same axis
            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);
          }
        } // if fromRect != toRect: animate


        if (!isRectEqual(toRect, fromRect)) {
          target.prevFromRect = fromRect;
          target.prevToRect = toRect;

          if (!time) {
            time = _this.options.animation;
          }

          _this.animate(target, animatingRect, toRect, time);
        }

        if (time) {
          animating = true;
          animationTime = Math.max(animationTime, time);
          clearTimeout(target.animationResetTimer);
          target.animationResetTimer = setTimeout(function () {
            target.animationTime = 0;
            target.prevFromRect = null;
            target.fromRect = null;
            target.prevToRect = null;
            target.thisAnimationDuration = null;
          }, time);
          target.thisAnimationDuration = time;
        }
      });
      clearTimeout(animationCallbackId);

      if (!animating) {
        if (typeof callback === 'function') callback();
      } else {
        animationCallbackId = setTimeout(function () {
          if (typeof callback === 'function') callback();
        }, animationTime);
      }

      animationStates = [];
    },
    animate: function animate(target, currentRect, toRect, duration) {
      if (duration) {
        css(target, 'transition', '');
        css(target, 'transform', '');
        var elMatrix = matrix(this.el),
            scaleX = elMatrix && elMatrix.a,
            scaleY = elMatrix && elMatrix.d,
            translateX = (currentRect.left - toRect.left) / (scaleX || 1),
            translateY = (currentRect.top - toRect.top) / (scaleY || 1);
        target.animatingX = !!translateX;
        target.animatingY = !!translateY;
        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');
        this.forRepaintDummy = repaint(target); // repaint

        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));
        css(target, 'transform', 'translate3d(0,0,0)');
        typeof target.animated === 'number' && clearTimeout(target.animated);
        target.animated = setTimeout(function () {
          css(target, 'transition', '');
          css(target, 'transform', '');
          target.animated = false;
          target.animatingX = false;
          target.animatingY = false;
        }, duration);
      }
    }
  };
}

function repaint(target) {
  return target.offsetWidth;
}

function calculateRealTime(animatingRect, fromRect, toRect, options) {
  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;
}

var plugins = [];
var defaults = {
  initializeByDefault: true
};
var PluginManager = {
  mount: function mount(plugin) {
    // Set default static properties
    for (var option in defaults) {
      if (defaults.hasOwnProperty(option) && !(option in plugin)) {
        plugin[option] = defaults[option];
      }
    }

    plugins.forEach(function (p) {
      if (p.pluginName === plugin.pluginName) {
        throw "Sortable: Cannot mount plugin ".concat(plugin.pluginName, " more than once");
      }
    });
    plugins.push(plugin);
  },
  pluginEvent: function pluginEvent(eventName, sortable, evt) {
    var _this = this;

    this.eventCanceled = false;

    evt.cancel = function () {
      _this.eventCanceled = true;
    };

    var eventNameGlobal = eventName + 'Global';
    plugins.forEach(function (plugin) {
      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable

      if (sortable[plugin.pluginName][eventNameGlobal]) {
        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({
          sortable: sortable
        }, evt));
      } // Only fire plugin event if plugin is enabled in this sortable,
      // and plugin has event defined


      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {
        sortable[plugin.pluginName][eventName](_objectSpread({
          sortable: sortable
        }, evt));
      }
    });
  },
  initializePlugins: function initializePlugins(sortable, el, defaults, options) {
    plugins.forEach(function (plugin) {
      var pluginName = plugin.pluginName;
      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;
      var initialized = new plugin(sortable, el, sortable.options);
      initialized.sortable = sortable;
      initialized.options = sortable.options;
      sortable[pluginName] = initialized; // Add default options from plugin

      _extends(defaults, initialized.defaults);
    });

    for (var option in sortable.options) {
      if (!sortable.options.hasOwnProperty(option)) continue;
      var modified = this.modifyOption(sortable, option, sortable.options[option]);

      if (typeof modified !== 'undefined') {
        sortable.options[option] = modified;
      }
    }
  },
  getEventProperties: function getEventProperties(name, sortable) {
    var eventProperties = {};
    plugins.forEach(function (plugin) {
      if (typeof plugin.eventProperties !== 'function') return;

      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));
    });
    return eventProperties;
  },
  modifyOption: function modifyOption(sortable, name, value) {
    var modifiedValue;
    plugins.forEach(function (plugin) {
      // Plugin must exist on the Sortable
      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin

      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {
        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);
      }
    });
    return modifiedValue;
  }
};

function dispatchEvent(_ref) {
  var sortable = _ref.sortable,
      rootEl = _ref.rootEl,
      name = _ref.name,
      targetEl = _ref.targetEl,
      cloneEl = _ref.cloneEl,
      toEl = _ref.toEl,
      fromEl = _ref.fromEl,
      oldIndex = _ref.oldIndex,
      newIndex = _ref.newIndex,
      oldDraggableIndex = _ref.oldDraggableIndex,
      newDraggableIndex = _ref.newDraggableIndex,
      originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      extraEventProperties = _ref.extraEventProperties;
  sortable = sortable || rootEl && rootEl[expando];
  if (!sortable) return;
  var evt,
      options = sortable.options,
      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !sortable_esm_Edge) {
    evt = new CustomEvent(name, {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent(name, true, true);
  }

  evt.to = toEl || rootEl;
  evt.from = fromEl || rootEl;
  evt.item = targetEl || rootEl;
  evt.clone = cloneEl;
  evt.oldIndex = oldIndex;
  evt.newIndex = newIndex;
  evt.oldDraggableIndex = oldDraggableIndex;
  evt.newDraggableIndex = newDraggableIndex;
  evt.originalEvent = originalEvent;
  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;

  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));

  for (var option in allEventProperties) {
    evt[option] = allEventProperties[option];
  }

  if (rootEl) {
    rootEl.dispatchEvent(evt);
  }

  if (options[onName]) {
    options[onName].call(sortable, evt);
  }
}

var pluginEvent = function pluginEvent(eventName, sortable) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      originalEvent = _ref.evt,
      data = _objectWithoutProperties(_ref, ["evt"]);

  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({
    dragEl: dragEl,
    parentEl: parentEl,
    ghostEl: ghostEl,
    rootEl: rootEl,
    nextEl: nextEl,
    lastDownEl: lastDownEl,
    cloneEl: cloneEl,
    cloneHidden: cloneHidden,
    dragStarted: moved,
    putSortable: putSortable,
    activeSortable: Sortable.active,
    originalEvent: originalEvent,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex,
    hideGhostForTarget: _hideGhostForTarget,
    unhideGhostForTarget: _unhideGhostForTarget,
    cloneNowHidden: function cloneNowHidden() {
      cloneHidden = true;
    },
    cloneNowShown: function cloneNowShown() {
      cloneHidden = false;
    },
    dispatchSortableEvent: function dispatchSortableEvent(name) {
      _dispatchEvent({
        sortable: sortable,
        name: name,
        originalEvent: originalEvent
      });
    }
  }, data));
};

function _dispatchEvent(info) {
  dispatchEvent(_objectSpread({
    putSortable: putSortable,
    cloneEl: cloneEl,
    targetEl: dragEl,
    rootEl: rootEl,
    oldIndex: oldIndex,
    oldDraggableIndex: oldDraggableIndex,
    newIndex: newIndex,
    newDraggableIndex: newDraggableIndex
  }, info));
}

var dragEl,
    parentEl,
    ghostEl,
    rootEl,
    nextEl,
    lastDownEl,
    cloneEl,
    cloneHidden,
    oldIndex,
    newIndex,
    oldDraggableIndex,
    newDraggableIndex,
    activeGroup,
    putSortable,
    awaitingDragStarted = false,
    ignoreNextClick = false,
    sortables = [],
    tapEvt,
    touchEvt,
    lastDx,
    lastDy,
    tapDistanceLeft,
    tapDistanceTop,
    moved,
    lastTarget,
    lastDirection,
    pastFirstInvertThresh = false,
    isCircumstantialInvert = false,
    targetMoveDistance,
    // For positioning ghost absolutely
ghostRelativeParent,
    ghostRelativeParentInitialScroll = [],
    // (left, top)
_silent = false,
    savedInputChecked = [];
/** @const */

var documentExists = typeof document !== 'undefined',
    PositionGhostAbsolutely = IOS,
    CSSFloatProperty = sortable_esm_Edge || IE11OrLess ? 'cssFloat' : 'float',
    // This will not pass for IE9, because IE9 DnD only works on anchors
supportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),
    supportCssPointerEvents = function () {
  if (!documentExists) return; // false when <= IE11

  if (IE11OrLess) {
    return false;
  }

  var el = document.createElement('x');
  el.style.cssText = 'pointer-events:auto';
  return el.style.pointerEvents === 'auto';
}(),
    _detectDirection = function _detectDirection(el, options) {
  var elCSS = css(el),
      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),
      child1 = getChild(el, 0, options),
      child2 = getChild(el, 1, options),
      firstChildCSS = child1 && css(child1),
      secondChildCSS = child2 && css(child2),
      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,
      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;

  if (elCSS.display === 'flex') {
    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';
  }

  if (elCSS.display === 'grid') {
    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';
  }

  if (child1 && firstChildCSS["float"] && firstChildCSS["float"] !== 'none') {
    var touchingSideChild2 = firstChildCSS["float"] === 'left' ? 'left' : 'right';
    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';
  }

  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';
},
    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {
  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,
      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,
      dragElOppLength = vertical ? dragRect.width : dragRect.height,
      targetS1Opp = vertical ? targetRect.left : targetRect.top,
      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,
      targetOppLength = vertical ? targetRect.width : targetRect.height;
  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;
},

/**
 * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.
 * @param  {Number} x      X position
 * @param  {Number} y      Y position
 * @return {HTMLElement}   Element of the first found nearest Sortable
 */
_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {
  var ret;
  sortables.some(function (sortable) {
    if (lastChild(sortable)) return;
    var rect = getRect(sortable),
        threshold = sortable[expando].options.emptyInsertThreshold,
        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,
        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;

    if (threshold && insideHorizontally && insideVertically) {
      return ret = sortable;
    }
  });
  return ret;
},
    _prepareGroup = function _prepareGroup(options) {
  function toFn(value, pull) {
    return function (to, from, dragEl, evt) {
      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;

      if (value == null && (pull || sameGroup)) {
        // Default pull value
        // Default pull and put value if same group
        return true;
      } else if (value == null || value === false) {
        return false;
      } else if (pull && value === 'clone') {
        return value;
      } else if (typeof value === 'function') {
        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);
      } else {
        var otherGroup = (pull ? to : from).options.group.name;
        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;
      }
    };
  }

  var group = {};
  var originalGroup = options.group;

  if (!originalGroup || _typeof(originalGroup) != 'object') {
    originalGroup = {
      name: originalGroup
    };
  }

  group.name = originalGroup.name;
  group.checkPull = toFn(originalGroup.pull, true);
  group.checkPut = toFn(originalGroup.put);
  group.revertClone = originalGroup.revertClone;
  options.group = group;
},
    _hideGhostForTarget = function _hideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', 'none');
  }
},
    _unhideGhostForTarget = function _unhideGhostForTarget() {
  if (!supportCssPointerEvents && ghostEl) {
    css(ghostEl, 'display', '');
  }
}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position


if (documentExists) {
  document.addEventListener('click', function (evt) {
    if (ignoreNextClick) {
      evt.preventDefault();
      evt.stopPropagation && evt.stopPropagation();
      evt.stopImmediatePropagation && evt.stopImmediatePropagation();
      ignoreNextClick = false;
      return false;
    }
  }, true);
}

var nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {
  if (dragEl) {
    evt = evt.touches ? evt.touches[0] : evt;

    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);

    if (nearest) {
      // Create imitation event
      var event = {};

      for (var i in evt) {
        if (evt.hasOwnProperty(i)) {
          event[i] = evt[i];
        }
      }

      event.target = event.rootEl = nearest;
      event.preventDefault = void 0;
      event.stopPropagation = void 0;

      nearest[expando]._onDragOver(event);
    }
  }
};

var _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {
  if (dragEl) {
    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);
  }
};
/**
 * @class  Sortable
 * @param  {HTMLElement}  el
 * @param  {Object}       [options]
 */


function Sortable(el, options) {
  if (!(el && el.nodeType && el.nodeType === 1)) {
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(el));
  }

  this.el = el; // root element

  this.options = options = _extends({}, options); // Export instance

  el[expando] = this;
  var defaults = {
    group: null,
    sort: true,
    disabled: false,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',
    swapThreshold: 1,
    // percentage; 0 <= x <= 1
    invertSwap: false,
    // invert always
    invertedSwapThreshold: null,
    // will be set to same as swapThreshold if default
    removeCloneOnHide: true,
    direction: function direction() {
      return _detectDirection(el, this.options);
    },
    ghostClass: 'sortable-ghost',
    chosenClass: 'sortable-chosen',
    dragClass: 'sortable-drag',
    ignore: 'a, img',
    filter: null,
    preventOnFilter: true,
    animation: 0,
    easing: null,
    setData: function setData(dataTransfer, dragEl) {
      dataTransfer.setData('Text', dragEl.textContent);
    },
    dropBubble: false,
    dragoverBubble: false,
    dataIdAttr: 'data-id',
    delay: 0,
    delayOnTouchOnly: false,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: false,
    fallbackClass: 'sortable-fallback',
    fallbackOnBody: false,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,
    emptyInsertThreshold: 5
  };
  PluginManager.initializePlugins(this, el, defaults); // Set default options

  for (var name in defaults) {
    !(name in options) && (options[name] = defaults[name]);
  }

  _prepareGroup(options); // Bind all private methods


  for (var fn in this) {
    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
      this[fn] = this[fn].bind(this);
    }
  } // Setup drag mode


  this.nativeDraggable = options.forceFallback ? false : supportDraggable;

  if (this.nativeDraggable) {
    // Touch start threshold cannot be greater than the native dragstart threshold
    this.options.touchStartThreshold = 1;
  } // Bind events


  if (options.supportPointer) {
    on(el, 'pointerdown', this._onTapStart);
  } else {
    on(el, 'mousedown', this._onTapStart);
    on(el, 'touchstart', this._onTapStart);
  }

  if (this.nativeDraggable) {
    on(el, 'dragover', this);
    on(el, 'dragenter', this);
  }

  sortables.push(this.el); // Restore sorting

  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager

  _extends(this, AnimationStateManager());
}

Sortable.prototype =
/** @lends Sortable.prototype */
{
  constructor: Sortable,
  _isOutsideThisEl: function _isOutsideThisEl(target) {
    if (!this.el.contains(target) && target !== this.el) {
      lastTarget = null;
    }
  },
  _getDirection: function _getDirection(evt, target) {
    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;
  },
  _onTapStart: function _onTapStart(
  /** Event|TouchEvent */
  evt) {
    if (!evt.cancelable) return;

    var _this = this,
        el = this.el,
        options = this.options,
        preventOnFilter = options.preventOnFilter,
        type = evt.type,
        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,
        target = (touch || evt).target,
        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,
        filter = options.filter;

    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.


    if (dragEl) {
      return;
    }

    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {
      return; // only left button and enabled
    } // cancel dnd if original target is content editable


    if (originalTarget.isContentEditable) {
      return;
    } // Safari ignores further event handling after mousedown


    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {
      return;
    }

    target = closest(target, options.draggable, el, false);

    if (target && target.animated) {
      return;
    }

    if (lastDownEl === target) {
      // Ignoring duplicate `down`
      return;
    } // Get the index of the dragged element within its parent


    oldIndex = index(target);
    oldDraggableIndex = index(target, options.draggable); // Check filter

    if (typeof filter === 'function') {
      if (filter.call(this, evt, target, this)) {
        _dispatchEvent({
          sortable: _this,
          rootEl: originalTarget,
          name: 'filter',
          targetEl: target,
          toEl: el,
          fromEl: el
        });

        pluginEvent('filter', _this, {
          evt: evt
        });
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    } else if (filter) {
      filter = filter.split(',').some(function (criteria) {
        criteria = closest(originalTarget, criteria.trim(), el, false);

        if (criteria) {
          _dispatchEvent({
            sortable: _this,
            rootEl: criteria,
            name: 'filter',
            targetEl: target,
            fromEl: el,
            toEl: el
          });

          pluginEvent('filter', _this, {
            evt: evt
          });
          return true;
        }
      });

      if (filter) {
        preventOnFilter && evt.cancelable && evt.preventDefault();
        return; // cancel dnd
      }
    }

    if (options.handle && !closest(originalTarget, options.handle, el, false)) {
      return;
    } // Prepare `dragstart`


    this._prepareDragStart(evt, touch, target);
  },
  _prepareDragStart: function _prepareDragStart(
  /** Event */
  evt,
  /** Touch */
  touch,
  /** HTMLElement */
  target) {
    var _this = this,
        el = _this.el,
        options = _this.options,
        ownerDocument = el.ownerDocument,
        dragStartFn;

    if (target && !dragEl && target.parentNode === el) {
      var dragRect = getRect(target);
      rootEl = el;
      dragEl = target;
      parentEl = dragEl.parentNode;
      nextEl = dragEl.nextSibling;
      lastDownEl = target;
      activeGroup = options.group;
      Sortable.dragged = dragEl;
      tapEvt = {
        target: dragEl,
        clientX: (touch || evt).clientX,
        clientY: (touch || evt).clientY
      };
      tapDistanceLeft = tapEvt.clientX - dragRect.left;
      tapDistanceTop = tapEvt.clientY - dragRect.top;
      this._lastX = (touch || evt).clientX;
      this._lastY = (touch || evt).clientY;
      dragEl.style['will-change'] = 'all';

      dragStartFn = function dragStartFn() {
        pluginEvent('delayEnded', _this, {
          evt: evt
        });

        if (Sortable.eventCanceled) {
          _this._onDrop();

          return;
        } // Delayed drag has been triggered
        // we can re-enable the events: touchmove/mousemove


        _this._disableDelayedDragEvents();

        if (!FireFox && _this.nativeDraggable) {
          dragEl.draggable = true;
        } // Bind the events: dragstart/dragend


        _this._triggerDragStart(evt, touch); // Drag start event


        _dispatchEvent({
          sortable: _this,
          name: 'choose',
          originalEvent: evt
        }); // Chosen item


        toggleClass(dragEl, options.chosenClass, true);
      }; // Disable "draggable"


      options.ignore.split(',').forEach(function (criteria) {
        find(dragEl, criteria.trim(), _disableDraggable);
      });
      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);
      on(ownerDocument, 'mouseup', _this._onDrop);
      on(ownerDocument, 'touchend', _this._onDrop);
      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)

      if (FireFox && this.nativeDraggable) {
        this.options.touchStartThreshold = 4;
        dragEl.draggable = true;
      }

      pluginEvent('delayStart', this, {
        evt: evt
      }); // Delay is impossible for native DnD in Edge or IE

      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(sortable_esm_Edge || IE11OrLess))) {
        if (Sortable.eventCanceled) {
          this._onDrop();

          return;
        } // If the user moves the pointer or let go the click or touch
        // before the delay has been reached:
        // disable the delayed drag


        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);
        on(ownerDocument, 'touchend', _this._disableDelayedDrag);
        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);
        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);
        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);
        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);
        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);
      } else {
        dragStartFn();
      }
    }
  },
  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(
  /** TouchEvent|PointerEvent **/
  e) {
    var touch = e.touches ? e.touches[0] : e;

    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {
      this._disableDelayedDrag();
    }
  },
  _disableDelayedDrag: function _disableDelayedDrag() {
    dragEl && _disableDraggable(dragEl);
    clearTimeout(this._dragStartTimer);

    this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function _disableDelayedDragEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._disableDelayedDrag);
    off(ownerDocument, 'touchend', this._disableDelayedDrag);
    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);
    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);
    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function _triggerDragStart(
  /** Event */
  evt,
  /** Touch */
  touch) {
    touch = touch || evt.pointerType == 'touch' && evt;

    if (!this.nativeDraggable || touch) {
      if (this.options.supportPointer) {
        on(document, 'pointermove', this._onTouchMove);
      } else if (touch) {
        on(document, 'touchmove', this._onTouchMove);
      } else {
        on(document, 'mousemove', this._onTouchMove);
      }
    } else {
      on(dragEl, 'dragend', this);
      on(rootEl, 'dragstart', this._onDragStart);
    }

    try {
      if (document.selection) {
        // Timeout neccessary for IE9
        _nextTick(function () {
          document.selection.empty();
        });
      } else {
        window.getSelection().removeAllRanges();
      }
    } catch (err) {}
  },
  _dragStarted: function _dragStarted(fallback, evt) {

    awaitingDragStarted = false;

    if (rootEl && dragEl) {
      pluginEvent('dragStarted', this, {
        evt: evt
      });

      if (this.nativeDraggable) {
        on(document, 'dragover', _checkOutsideTargetEl);
      }

      var options = this.options; // Apply effect

      !fallback && toggleClass(dragEl, options.dragClass, false);
      toggleClass(dragEl, options.ghostClass, true);
      Sortable.active = this;
      fallback && this._appendGhost(); // Drag start event

      _dispatchEvent({
        sortable: this,
        name: 'start',
        originalEvent: evt
      });
    } else {
      this._nulling();
    }
  },
  _emulateDragOver: function _emulateDragOver() {
    if (touchEvt) {
      this._lastX = touchEvt.clientX;
      this._lastY = touchEvt.clientY;

      _hideGhostForTarget();

      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
      var parent = target;

      while (target && target.shadowRoot) {
        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);
        if (target === parent) break;
        parent = target;
      }

      dragEl.parentNode[expando]._isOutsideThisEl(target);

      if (parent) {
        do {
          if (parent[expando]) {
            var inserted = void 0;
            inserted = parent[expando]._onDragOver({
              clientX: touchEvt.clientX,
              clientY: touchEvt.clientY,
              target: target,
              rootEl: parent
            });

            if (inserted && !this.options.dragoverBubble) {
              break;
            }
          }

          target = parent; // store last element
        }
        /* jshint boss:true */
        while (parent = parent.parentNode);
      }

      _unhideGhostForTarget();
    }
  },
  _onTouchMove: function _onTouchMove(
  /**TouchEvent*/
  evt) {
    if (tapEvt) {
      var options = this.options,
          fallbackTolerance = options.fallbackTolerance,
          fallbackOffset = options.fallbackOffset,
          touch = evt.touches ? evt.touches[0] : evt,
          ghostMatrix = ghostEl && matrix(ghostEl, true),
          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,
          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,
          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),
          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),
          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging

      if (!Sortable.active && !awaitingDragStarted) {
        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {
          return;
        }

        this._onDragStart(evt, true);
      }

      if (ghostEl) {
        if (ghostMatrix) {
          ghostMatrix.e += dx - (lastDx || 0);
          ghostMatrix.f += dy - (lastDy || 0);
        } else {
          ghostMatrix = {
            a: 1,
            b: 0,
            c: 0,
            d: 1,
            e: dx,
            f: dy
          };
        }

        var cssMatrix = "matrix(".concat(ghostMatrix.a, ",").concat(ghostMatrix.b, ",").concat(ghostMatrix.c, ",").concat(ghostMatrix.d, ",").concat(ghostMatrix.e, ",").concat(ghostMatrix.f, ")");
        css(ghostEl, 'webkitTransform', cssMatrix);
        css(ghostEl, 'mozTransform', cssMatrix);
        css(ghostEl, 'msTransform', cssMatrix);
        css(ghostEl, 'transform', cssMatrix);
        lastDx = dx;
        lastDy = dy;
        touchEvt = touch;
      }

      evt.cancelable && evt.preventDefault();
    }
  },
  _appendGhost: function _appendGhost() {
    // Bug if using scale(): https://stackoverflow.com/questions/2637058
    // Not being adjusted for
    if (!ghostEl) {
      var container = this.options.fallbackOnBody ? document.body : rootEl,
          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),
          options = this.options; // Position absolutely

      if (PositionGhostAbsolutely) {
        // Get relatively positioned parent
        ghostRelativeParent = container;

        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {
          ghostRelativeParent = ghostRelativeParent.parentNode;
        }

        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {
          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();
          rect.top += ghostRelativeParent.scrollTop;
          rect.left += ghostRelativeParent.scrollLeft;
        } else {
          ghostRelativeParent = getWindowScrollingElement();
        }

        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);
      }

      ghostEl = dragEl.cloneNode(true);
      toggleClass(ghostEl, options.ghostClass, false);
      toggleClass(ghostEl, options.fallbackClass, true);
      toggleClass(ghostEl, options.dragClass, true);
      css(ghostEl, 'transition', '');
      css(ghostEl, 'transform', '');
      css(ghostEl, 'box-sizing', 'border-box');
      css(ghostEl, 'margin', 0);
      css(ghostEl, 'top', rect.top);
      css(ghostEl, 'left', rect.left);
      css(ghostEl, 'width', rect.width);
      css(ghostEl, 'height', rect.height);
      css(ghostEl, 'opacity', '0.8');
      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');
      css(ghostEl, 'zIndex', '100000');
      css(ghostEl, 'pointerEvents', 'none');
      Sortable.ghost = ghostEl;
      container.appendChild(ghostEl); // Set transform-origin

      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');
    }
  },
  _onDragStart: function _onDragStart(
  /**Event*/
  evt,
  /**boolean*/
  fallback) {
    var _this = this;

    var dataTransfer = evt.dataTransfer;
    var options = _this.options;
    pluginEvent('dragStart', this, {
      evt: evt
    });

    if (Sortable.eventCanceled) {
      this._onDrop();

      return;
    }

    pluginEvent('setupClone', this);

    if (!Sortable.eventCanceled) {
      cloneEl = clone(dragEl);
      cloneEl.draggable = false;
      cloneEl.style['will-change'] = '';

      this._hideClone();

      toggleClass(cloneEl, this.options.chosenClass, false);
      Sortable.clone = cloneEl;
    } // #1143: IFrame support workaround


    _this.cloneId = _nextTick(function () {
      pluginEvent('clone', _this);
      if (Sortable.eventCanceled) return;

      if (!_this.options.removeCloneOnHide) {
        rootEl.insertBefore(cloneEl, dragEl);
      }

      _this._hideClone();

      _dispatchEvent({
        sortable: _this,
        name: 'clone'
      });
    });
    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events

    if (fallback) {
      ignoreNextClick = true;
      _this._loopId = setInterval(_this._emulateDragOver, 50);
    } else {
      // Undo what was set in _prepareDragStart before drag started
      off(document, 'mouseup', _this._onDrop);
      off(document, 'touchend', _this._onDrop);
      off(document, 'touchcancel', _this._onDrop);

      if (dataTransfer) {
        dataTransfer.effectAllowed = 'move';
        options.setData && options.setData.call(_this, dataTransfer, dragEl);
      }

      on(document, 'drop', _this); // #1276 fix:

      css(dragEl, 'transform', 'translateZ(0)');
    }

    awaitingDragStarted = true;
    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));
    on(document, 'selectstart', _this);
    moved = true;

    if (Safari) {
      css(document.body, 'user-select', 'none');
    }
  },
  // Returns true - if no further action is needed (either inserted or another condition)
  _onDragOver: function _onDragOver(
  /**Event*/
  evt) {
    var el = this.el,
        target = evt.target,
        dragRect,
        targetRect,
        revert,
        options = this.options,
        group = options.group,
        activeSortable = Sortable.active,
        isOwner = activeGroup === group,
        canSort = options.sort,
        fromSortable = putSortable || activeSortable,
        vertical,
        _this = this,
        completedFired = false;

    if (_silent) return;

    function dragOverEvent(name, extra) {
      pluginEvent(name, _this, _objectSpread({
        evt: evt,
        isOwner: isOwner,
        axis: vertical ? 'vertical' : 'horizontal',
        revert: revert,
        dragRect: dragRect,
        targetRect: targetRect,
        canSort: canSort,
        fromSortable: fromSortable,
        target: target,
        completed: completed,
        onMove: function onMove(target, after) {
          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);
        },
        changed: changed
      }, extra));
    } // Capture animation state


    function capture() {
      dragOverEvent('dragOverAnimationCapture');

      _this.captureAnimationState();

      if (_this !== fromSortable) {
        fromSortable.captureAnimationState();
      }
    } // Return invocation when dragEl is inserted (or completed)


    function completed(insertion) {
      dragOverEvent('dragOverCompleted', {
        insertion: insertion
      });

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        } else {
          activeSortable._showClone(_this);
        }

        if (_this !== fromSortable) {
          // Set ghost class to new sortable's ghost class
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);
          toggleClass(dragEl, options.ghostClass, true);
        }

        if (putSortable !== _this && _this !== Sortable.active) {
          putSortable = _this;
        } else if (_this === Sortable.active && putSortable) {
          putSortable = null;
        } // Animation


        if (fromSortable === _this) {
          _this._ignoreWhileAnimating = target;
        }

        _this.animateAll(function () {
          dragOverEvent('dragOverAnimationComplete');
          _this._ignoreWhileAnimating = null;
        });

        if (_this !== fromSortable) {
          fromSortable.animateAll();
          fromSortable._ignoreWhileAnimating = null;
        }
      } // Null lastTarget if it is not inside a previously swapped element


      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {
        lastTarget = null;
      } // no bubbling and not fallback


      if (!options.dragoverBubble && !evt.rootEl && target !== document) {
        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted


        !insertion && nearestEmptyInsertDetectEvent(evt);
      }

      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();
      return completedFired = true;
    } // Call when dragEl has been inserted


    function changed() {
      newIndex = index(dragEl);
      newDraggableIndex = index(dragEl, options.draggable);

      _dispatchEvent({
        sortable: _this,
        name: 'change',
        toEl: el,
        newIndex: newIndex,
        newDraggableIndex: newDraggableIndex,
        originalEvent: evt
      });
    }

    if (evt.preventDefault !== void 0) {
      evt.cancelable && evt.preventDefault();
    }

    target = closest(target, options.draggable, el, true);
    dragOverEvent('dragOver');
    if (Sortable.eventCanceled) return completedFired;

    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {
      return completed(false);
    }

    ignoreNextClick = false;

    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list
    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {
      vertical = this._getDirection(evt, target) === 'vertical';
      dragRect = getRect(dragEl);
      dragOverEvent('dragOverValid');
      if (Sortable.eventCanceled) return completedFired;

      if (revert) {
        parentEl = rootEl; // actualization

        capture();

        this._hideClone();

        dragOverEvent('revert');

        if (!Sortable.eventCanceled) {
          if (nextEl) {
            rootEl.insertBefore(dragEl, nextEl);
          } else {
            rootEl.appendChild(dragEl);
          }
        }

        return completed(true);
      }

      var elLastChild = lastChild(el, options.draggable);

      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {
        // If already at end of list: Do not insert
        if (elLastChild === dragEl) {
          return completed(false);
        } // assign target only if condition is true


        if (elLastChild && el === evt.target) {
          target = elLastChild;
        }

        if (target) {
          targetRect = getRect(target);
        }

        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {
          capture();
          el.appendChild(dragEl);
          parentEl = el; // actualization

          changed();
          return completed(true);
        }
      } else if (target.parentNode === el) {
        targetRect = getRect(target);
        var direction = 0,
            targetBeforeFirstSwap,
            differentLevel = dragEl.parentNode !== el,
            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),
            side1 = vertical ? 'top' : 'left',
            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),
            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;

        if (lastTarget !== target) {
          targetBeforeFirstSwap = targetRect[side1];
          pastFirstInvertThresh = false;
          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;
        }

        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);
        var sibling;

        if (direction !== 0) {
          // Check if target is beside dragEl in respective direction (ignoring hidden elements)
          var dragIndex = index(dragEl);

          do {
            dragIndex -= direction;
            sibling = parentEl.children[dragIndex];
          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));
        } // If dragEl is already beside target: Do not insert


        if (direction === 0 || sibling === target) {
          return completed(false);
        }

        lastTarget = target;
        lastDirection = direction;
        var nextSibling = target.nextElementSibling,
            after = false;
        after = direction === 1;

        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);

        if (moveVector !== false) {
          if (moveVector === 1 || moveVector === -1) {
            after = moveVector === 1;
          }

          _silent = true;
          setTimeout(_unsilent, 30);
          capture();

          if (after && !nextSibling) {
            el.appendChild(dragEl);
          } else {
            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);
          } // Undo chrome's scroll adjustment (has no effect on other browsers)


          if (scrolledPastTop) {
            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);
          }

          parentEl = dragEl.parentNode; // actualization
          // must be done before animation

          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {
            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);
          }

          changed();
          return completed(true);
        }
      }

      if (el.contains(dragEl)) {
        return completed(false);
      }
    }

    return false;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function _offMoveEvents() {
    off(document, 'mousemove', this._onTouchMove);
    off(document, 'touchmove', this._onTouchMove);
    off(document, 'pointermove', this._onTouchMove);
    off(document, 'dragover', nearestEmptyInsertDetectEvent);
    off(document, 'mousemove', nearestEmptyInsertDetectEvent);
    off(document, 'touchmove', nearestEmptyInsertDetectEvent);
  },
  _offUpEvents: function _offUpEvents() {
    var ownerDocument = this.el.ownerDocument;
    off(ownerDocument, 'mouseup', this._onDrop);
    off(ownerDocument, 'touchend', this._onDrop);
    off(ownerDocument, 'pointerup', this._onDrop);
    off(ownerDocument, 'touchcancel', this._onDrop);
    off(document, 'selectstart', this);
  },
  _onDrop: function _onDrop(
  /**Event*/
  evt) {
    var el = this.el,
        options = this.options; // Get the index of the dragged element within its parent

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);
    pluginEvent('drop', this, {
      evt: evt
    });
    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event

    newIndex = index(dragEl);
    newDraggableIndex = index(dragEl, options.draggable);

    if (Sortable.eventCanceled) {
      this._nulling();

      return;
    }

    awaitingDragStarted = false;
    isCircumstantialInvert = false;
    pastFirstInvertThresh = false;
    clearInterval(this._loopId);
    clearTimeout(this._dragStartTimer);

    _cancelNextTick(this.cloneId);

    _cancelNextTick(this._dragStartId); // Unbind events


    if (this.nativeDraggable) {
      off(document, 'drop', this);
      off(el, 'dragstart', this._onDragStart);
    }

    this._offMoveEvents();

    this._offUpEvents();

    if (Safari) {
      css(document.body, 'user-select', '');
    }

    css(dragEl, 'transform', '');

    if (evt) {
      if (moved) {
        evt.cancelable && evt.preventDefault();
        !options.dropBubble && evt.stopPropagation();
      }

      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);

      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        // Remove clone(s)
        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);
      }

      if (dragEl) {
        if (this.nativeDraggable) {
          off(dragEl, 'dragend', this);
        }

        _disableDraggable(dragEl);

        dragEl.style['will-change'] = ''; // Remove classes
        // ghostClass is added in dragStarted

        if (moved && !awaitingDragStarted) {
          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);
        }

        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event

        _dispatchEvent({
          sortable: this,
          name: 'unchoose',
          toEl: parentEl,
          newIndex: null,
          newDraggableIndex: null,
          originalEvent: evt
        });

        if (rootEl !== parentEl) {
          if (newIndex >= 0) {
            // Add event
            _dispatchEvent({
              rootEl: parentEl,
              name: 'add',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            }); // Remove event


            _dispatchEvent({
              sortable: this,
              name: 'remove',
              toEl: parentEl,
              originalEvent: evt
            }); // drag from one list and drop into another


            _dispatchEvent({
              rootEl: parentEl,
              name: 'sort',
              toEl: parentEl,
              fromEl: rootEl,
              originalEvent: evt
            });

            _dispatchEvent({
              sortable: this,
              name: 'sort',
              toEl: parentEl,
              originalEvent: evt
            });
          }

          putSortable && putSortable.save();
        } else {
          if (newIndex !== oldIndex) {
            if (newIndex >= 0) {
              // drag & drop within the same list
              _dispatchEvent({
                sortable: this,
                name: 'update',
                toEl: parentEl,
                originalEvent: evt
              });

              _dispatchEvent({
                sortable: this,
                name: 'sort',
                toEl: parentEl,
                originalEvent: evt
              });
            }
          }
        }

        if (Sortable.active) {
          /* jshint eqnull:true */
          if (newIndex == null || newIndex === -1) {
            newIndex = oldIndex;
            newDraggableIndex = oldDraggableIndex;
          }

          _dispatchEvent({
            sortable: this,
            name: 'end',
            toEl: parentEl,
            originalEvent: evt
          }); // Save sorting


          this.save();
        }
      }
    }

    this._nulling();
  },
  _nulling: function _nulling() {
    pluginEvent('nulling', this);
    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;
    savedInputChecked.forEach(function (el) {
      el.checked = true;
    });
    savedInputChecked.length = lastDx = lastDy = 0;
  },
  handleEvent: function handleEvent(
  /**Event*/
  evt) {
    switch (evt.type) {
      case 'drop':
      case 'dragend':
        this._onDrop(evt);

        break;

      case 'dragenter':
      case 'dragover':
        if (dragEl) {
          this._onDragOver(evt);

          _globalDragOver(evt);
        }

        break;

      case 'selectstart':
        evt.preventDefault();
        break;
    }
  },

  /**
   * Serializes the item into an array of string.
   * @returns {String[]}
   */
  toArray: function toArray() {
    var order = [],
        el,
        children = this.el.children,
        i = 0,
        n = children.length,
        options = this.options;

    for (; i < n; i++) {
      el = children[i];

      if (closest(el, options.draggable, this.el, false)) {
        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));
      }
    }

    return order;
  },

  /**
   * Sorts the elements according to the array.
   * @param  {String[]}  order  order of the items
   */
  sort: function sort(order, useAnimation) {
    var items = {},
        rootEl = this.el;
    this.toArray().forEach(function (id, i) {
      var el = rootEl.children[i];

      if (closest(el, this.options.draggable, rootEl, false)) {
        items[id] = el;
      }
    }, this);
    useAnimation && this.captureAnimationState();
    order.forEach(function (id) {
      if (items[id]) {
        rootEl.removeChild(items[id]);
        rootEl.appendChild(items[id]);
      }
    });
    useAnimation && this.animateAll();
  },

  /**
   * Save the current sorting
   */
  save: function save() {
    var store = this.options.store;
    store && store.set && store.set(this);
  },

  /**
   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
   * @param   {HTMLElement}  el
   * @param   {String}       [selector]  default: `options.draggable`
   * @returns {HTMLElement|null}
   */
  closest: function closest$1(el, selector) {
    return closest(el, selector || this.options.draggable, this.el, false);
  },

  /**
   * Set/get option
   * @param   {string} name
   * @param   {*}      [value]
   * @returns {*}
   */
  option: function option(name, value) {
    var options = this.options;

    if (value === void 0) {
      return options[name];
    } else {
      var modifiedValue = PluginManager.modifyOption(this, name, value);

      if (typeof modifiedValue !== 'undefined') {
        options[name] = modifiedValue;
      } else {
        options[name] = value;
      }

      if (name === 'group') {
        _prepareGroup(options);
      }
    }
  },

  /**
   * Destroy
   */
  destroy: function destroy() {
    pluginEvent('destroy', this);
    var el = this.el;
    el[expando] = null;
    off(el, 'mousedown', this._onTapStart);
    off(el, 'touchstart', this._onTapStart);
    off(el, 'pointerdown', this._onTapStart);

    if (this.nativeDraggable) {
      off(el, 'dragover', this);
      off(el, 'dragenter', this);
    } // Remove draggable attributes


    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {
      el.removeAttribute('draggable');
    });

    this._onDrop();

    this._disableDelayedDragEvents();

    sortables.splice(sortables.indexOf(this.el), 1);
    this.el = el = null;
  },
  _hideClone: function _hideClone() {
    if (!cloneHidden) {
      pluginEvent('hideClone', this);
      if (Sortable.eventCanceled) return;
      css(cloneEl, 'display', 'none');

      if (this.options.removeCloneOnHide && cloneEl.parentNode) {
        cloneEl.parentNode.removeChild(cloneEl);
      }

      cloneHidden = true;
    }
  },
  _showClone: function _showClone(putSortable) {
    if (putSortable.lastPutMode !== 'clone') {
      this._hideClone();

      return;
    }

    if (cloneHidden) {
      pluginEvent('showClone', this);
      if (Sortable.eventCanceled) return; // show clone at dragEl or original position

      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {
        rootEl.insertBefore(cloneEl, dragEl);
      } else if (nextEl) {
        rootEl.insertBefore(cloneEl, nextEl);
      } else {
        rootEl.appendChild(cloneEl);
      }

      if (this.options.group.revertClone) {
        this.animate(dragEl, cloneEl);
      }

      css(cloneEl, 'display', '');
      cloneHidden = false;
    }
  }
};

function _globalDragOver(
/**Event*/
evt) {
  if (evt.dataTransfer) {
    evt.dataTransfer.dropEffect = 'move';
  }

  evt.cancelable && evt.preventDefault();
}

function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {
  var evt,
      sortable = fromEl[expando],
      onMoveFn = sortable.options.onMove,
      retVal; // Support for new CustomEvent feature

  if (window.CustomEvent && !IE11OrLess && !sortable_esm_Edge) {
    evt = new CustomEvent('move', {
      bubbles: true,
      cancelable: true
    });
  } else {
    evt = document.createEvent('Event');
    evt.initEvent('move', true, true);
  }

  evt.to = toEl;
  evt.from = fromEl;
  evt.dragged = dragEl;
  evt.draggedRect = dragRect;
  evt.related = targetEl || toEl;
  evt.relatedRect = targetRect || getRect(toEl);
  evt.willInsertAfter = willInsertAfter;
  evt.originalEvent = originalEvent;
  fromEl.dispatchEvent(evt);

  if (onMoveFn) {
    retVal = onMoveFn.call(sortable, evt, originalEvent);
  }

  return retVal;
}

function _disableDraggable(el) {
  el.draggable = false;
}

function _unsilent() {
  _silent = false;
}

function _ghostIsLast(evt, vertical, sortable) {
  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));
  var spacer = 10;
  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;
}

function _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {
  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,
      targetLength = vertical ? targetRect.height : targetRect.width,
      targetS1 = vertical ? targetRect.top : targetRect.left,
      targetS2 = vertical ? targetRect.bottom : targetRect.right,
      invert = false;

  if (!invertSwap) {
    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold
    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {
      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2
      // check if past first invert threshold on side opposite of lastDirection
      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {
        // past first invert threshold, do not restrict inverted threshold to dragEl shadow
        pastFirstInvertThresh = true;
      }

      if (!pastFirstInvertThresh) {
        // dragEl shadow (target move distance shadow)
        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow
        : mouseOnAxis > targetS2 - targetMoveDistance) {
          return -lastDirection;
        }
      } else {
        invert = true;
      }
    } else {
      // Regular
      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {
        return _getInsertDirection(target);
      }
    }
  }

  invert = invert || invertSwap;

  if (invert) {
    // Invert of regular
    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {
      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;
    }
  }

  return 0;
}
/**
 * Gets the direction dragEl must be swapped relative to target in order to make it
 * seem that dragEl has been "inserted" into that element's position
 * @param  {HTMLElement} target       The target whose position dragEl is being inserted at
 * @return {Number}                   Direction dragEl must be swapped
 */


function _getInsertDirection(target) {
  if (index(dragEl) < index(target)) {
    return 1;
  } else {
    return -1;
  }
}
/**
 * Generate id
 * @param   {HTMLElement} el
 * @returns {String}
 * @private
 */


function _generateId(el) {
  var str = el.tagName + el.className + el.src + el.href + el.textContent,
      i = str.length,
      sum = 0;

  while (i--) {
    sum += str.charCodeAt(i);
  }

  return sum.toString(36);
}

function _saveInputCheckedState(root) {
  savedInputChecked.length = 0;
  var inputs = root.getElementsByTagName('input');
  var idx = inputs.length;

  while (idx--) {
    var el = inputs[idx];
    el.checked && savedInputChecked.push(el);
  }
}

function _nextTick(fn) {
  return setTimeout(fn, 0);
}

function _cancelNextTick(id) {
  return clearTimeout(id);
} // Fixed #973:


if (documentExists) {
  on(document, 'touchmove', function (evt) {
    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {
      evt.preventDefault();
    }
  });
} // Export utils


Sortable.utils = {
  on: on,
  off: off,
  css: css,
  find: find,
  is: function is(el, selector) {
    return !!closest(el, selector, el, false);
  },
  extend: extend,
  throttle: throttle,
  closest: closest,
  toggleClass: toggleClass,
  clone: clone,
  index: index,
  nextTick: _nextTick,
  cancelNextTick: _cancelNextTick,
  detectDirection: _detectDirection,
  getChild: getChild
};
/**
 * Get the Sortable instance of an element
 * @param  {HTMLElement} element The element
 * @return {Sortable|undefined}         The instance of Sortable
 */

Sortable.get = function (element) {
  return element[expando];
};
/**
 * Mount a plugin to Sortable
 * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted
 */


Sortable.mount = function () {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins[0].constructor === Array) plugins = plugins[0];
  plugins.forEach(function (plugin) {
    if (!plugin.prototype || !plugin.prototype.constructor) {
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(plugin));
    }

    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);
    PluginManager.mount(plugin);
  });
};
/**
 * Create sortable instance
 * @param {HTMLElement}  el
 * @param {Object}      [options]
 */


Sortable.create = function (el, options) {
  return new Sortable(el, options);
}; // Export


Sortable.version = sortable_esm_version;

var autoScrolls = [],
    scrollEl,
    scrollRootEl,
    scrolling = false,
    lastAutoScrollX,
    lastAutoScrollY,
    touchEvt$1,
    pointerElemChangedInterval;

function AutoScrollPlugin() {
  function AutoScroll() {
    this.defaults = {
      scroll: true,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: true
    }; // Bind all private methods

    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }
  }

  AutoScroll.prototype = {
    dragStarted: function dragStarted(_ref) {
      var originalEvent = _ref.originalEvent;

      if (this.sortable.nativeDraggable) {
        on(document, 'dragover', this._handleAutoScroll);
      } else {
        if (this.options.supportPointer) {
          on(document, 'pointermove', this._handleFallbackAutoScroll);
        } else if (originalEvent.touches) {
          on(document, 'touchmove', this._handleFallbackAutoScroll);
        } else {
          on(document, 'mousemove', this._handleFallbackAutoScroll);
        }
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref2) {
      var originalEvent = _ref2.originalEvent;

      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)
      if (!this.options.dragOverBubble && !originalEvent.rootEl) {
        this._handleAutoScroll(originalEvent);
      }
    },
    drop: function drop() {
      if (this.sortable.nativeDraggable) {
        off(document, 'dragover', this._handleAutoScroll);
      } else {
        off(document, 'pointermove', this._handleFallbackAutoScroll);
        off(document, 'touchmove', this._handleFallbackAutoScroll);
        off(document, 'mousemove', this._handleFallbackAutoScroll);
      }

      clearPointerElemChangedInterval();
      clearAutoScrolls();
      cancelThrottle();
    },
    nulling: function nulling() {
      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;
      autoScrolls.length = 0;
    },
    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {
      this._handleAutoScroll(evt, true);
    },
    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {
      var _this = this;

      var x = (evt.touches ? evt.touches[0] : evt).clientX,
          y = (evt.touches ? evt.touches[0] : evt).clientY,
          elem = document.elementFromPoint(x, y);
      touchEvt$1 = evt; // IE does not seem to have native autoscroll,
      // Edge's autoscroll seems too conditional,
      // MACOS Safari does not have autoscroll,
      // Firefox and Chrome are good

      if (fallback || sortable_esm_Edge || IE11OrLess || Safari) {
        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change

        var ogElemScroller = getParentAutoScrollElement(elem, true);

        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {
          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour

          pointerElemChangedInterval = setInterval(function () {
            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);

            if (newElem !== ogElemScroller) {
              ogElemScroller = newElem;
              clearAutoScrolls();
            }

            autoScroll(evt, _this.options, newElem, fallback);
          }, 10);
          lastAutoScrollX = x;
          lastAutoScrollY = y;
        }
      } else {
        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll
        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {
          clearAutoScrolls();
          return;
        }

        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);
      }
    }
  };
  return _extends(AutoScroll, {
    pluginName: 'scroll',
    initializeByDefault: true
  });
}

function clearAutoScrolls() {
  autoScrolls.forEach(function (autoScroll) {
    clearInterval(autoScroll.pid);
  });
  autoScrolls = [];
}

function clearPointerElemChangedInterval() {
  clearInterval(pointerElemChangedInterval);
}

var autoScroll = throttle(function (evt, options, rootEl, isFallback) {
  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521
  if (!options.scroll) return;
  var x = (evt.touches ? evt.touches[0] : evt).clientX,
      y = (evt.touches ? evt.touches[0] : evt).clientY,
      sens = options.scrollSensitivity,
      speed = options.scrollSpeed,
      winScroller = getWindowScrollingElement();
  var scrollThisInstance = false,
      scrollCustomFn; // New scroll root, set scrollEl

  if (scrollRootEl !== rootEl) {
    scrollRootEl = rootEl;
    clearAutoScrolls();
    scrollEl = options.scroll;
    scrollCustomFn = options.scrollFn;

    if (scrollEl === true) {
      scrollEl = getParentAutoScrollElement(rootEl, true);
    }
  }

  var layersOut = 0;
  var currentParent = scrollEl;

  do {
    var el = currentParent,
        rect = getRect(el),
        top = rect.top,
        bottom = rect.bottom,
        left = rect.left,
        right = rect.right,
        width = rect.width,
        height = rect.height,
        canScrollX = void 0,
        canScrollY = void 0,
        scrollWidth = el.scrollWidth,
        scrollHeight = el.scrollHeight,
        elCSS = css(el),
        scrollPosX = el.scrollLeft,
        scrollPosY = el.scrollTop;

    if (el === winScroller) {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');
    } else {
      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');
      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');
    }

    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);
    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);

    if (!autoScrolls[layersOut]) {
      for (var i = 0; i <= layersOut; i++) {
        if (!autoScrolls[i]) {
          autoScrolls[i] = {};
        }
      }
    }

    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {
      autoScrolls[layersOut].el = el;
      autoScrolls[layersOut].vx = vx;
      autoScrolls[layersOut].vy = vy;
      clearInterval(autoScrolls[layersOut].pid);

      if (vx != 0 || vy != 0) {
        scrollThisInstance = true;
        /* jshint loopfunc:true */

        autoScrolls[layersOut].pid = setInterval(function () {
          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour
          if (isFallback && this.layer === 0) {
            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely

          }

          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;
          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;

          if (typeof scrollCustomFn === 'function') {
            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {
              return;
            }
          }

          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);
        }.bind({
          layer: layersOut
        }), 24);
      }
    }

    layersOut++;
  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));

  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not
}, 30);

var drop = function drop(_ref) {
  var originalEvent = _ref.originalEvent,
      putSortable = _ref.putSortable,
      dragEl = _ref.dragEl,
      activeSortable = _ref.activeSortable,
      dispatchSortableEvent = _ref.dispatchSortableEvent,
      hideGhostForTarget = _ref.hideGhostForTarget,
      unhideGhostForTarget = _ref.unhideGhostForTarget;
  if (!originalEvent) return;
  var toSortable = putSortable || activeSortable;
  hideGhostForTarget();
  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;
  var target = document.elementFromPoint(touch.clientX, touch.clientY);
  unhideGhostForTarget();

  if (toSortable && !toSortable.el.contains(target)) {
    dispatchSortableEvent('spill');
    this.onSpill({
      dragEl: dragEl,
      putSortable: putSortable
    });
  }
};

function Revert() {}

Revert.prototype = {
  startIndex: null,
  dragStart: function dragStart(_ref2) {
    var oldDraggableIndex = _ref2.oldDraggableIndex;
    this.startIndex = oldDraggableIndex;
  },
  onSpill: function onSpill(_ref3) {
    var dragEl = _ref3.dragEl,
        putSortable = _ref3.putSortable;
    this.sortable.captureAnimationState();

    if (putSortable) {
      putSortable.captureAnimationState();
    }

    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);

    if (nextSibling) {
      this.sortable.el.insertBefore(dragEl, nextSibling);
    } else {
      this.sortable.el.appendChild(dragEl);
    }

    this.sortable.animateAll();

    if (putSortable) {
      putSortable.animateAll();
    }
  },
  drop: drop
};

_extends(Revert, {
  pluginName: 'revertOnSpill'
});

function Remove() {}

Remove.prototype = {
  onSpill: function onSpill(_ref4) {
    var dragEl = _ref4.dragEl,
        putSortable = _ref4.putSortable;
    var parentSortable = putSortable || this.sortable;
    parentSortable.captureAnimationState();
    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);
    parentSortable.animateAll();
  },
  drop: drop
};

_extends(Remove, {
  pluginName: 'removeOnSpill'
});

var lastSwapEl;

function SwapPlugin() {
  function Swap() {
    this.defaults = {
      swapClass: 'sortable-swap-highlight'
    };
  }

  Swap.prototype = {
    dragStart: function dragStart(_ref) {
      var dragEl = _ref.dragEl;
      lastSwapEl = dragEl;
    },
    dragOverValid: function dragOverValid(_ref2) {
      var completed = _ref2.completed,
          target = _ref2.target,
          onMove = _ref2.onMove,
          activeSortable = _ref2.activeSortable,
          changed = _ref2.changed,
          cancel = _ref2.cancel;
      if (!activeSortable.options.swap) return;
      var el = this.sortable.el,
          options = this.options;

      if (target && target !== el) {
        var prevSwapEl = lastSwapEl;

        if (onMove(target) !== false) {
          toggleClass(target, options.swapClass, true);
          lastSwapEl = target;
        } else {
          lastSwapEl = null;
        }

        if (prevSwapEl && prevSwapEl !== lastSwapEl) {
          toggleClass(prevSwapEl, options.swapClass, false);
        }
      }

      changed();
      completed(true);
      cancel();
    },
    drop: function drop(_ref3) {
      var activeSortable = _ref3.activeSortable,
          putSortable = _ref3.putSortable,
          dragEl = _ref3.dragEl;
      var toSortable = putSortable || this.sortable;
      var options = this.options;
      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);

      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {
        if (dragEl !== lastSwapEl) {
          toSortable.captureAnimationState();
          if (toSortable !== activeSortable) activeSortable.captureAnimationState();
          swapNodes(dragEl, lastSwapEl);
          toSortable.animateAll();
          if (toSortable !== activeSortable) activeSortable.animateAll();
        }
      }
    },
    nulling: function nulling() {
      lastSwapEl = null;
    }
  };
  return _extends(Swap, {
    pluginName: 'swap',
    eventProperties: function eventProperties() {
      return {
        swapItem: lastSwapEl
      };
    }
  });
}

function swapNodes(n1, n2) {
  var p1 = n1.parentNode,
      p2 = n2.parentNode,
      i1,
      i2;
  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;
  i1 = index(n1);
  i2 = index(n2);

  if (p1.isEqualNode(p2) && i1 < i2) {
    i2++;
  }

  p1.insertBefore(n2, p1.children[i1]);
  p2.insertBefore(n1, p2.children[i2]);
}

var multiDragElements = (/* unused pure expression or super */ null && ([])),
    multiDragClones = (/* unused pure expression or super */ null && ([])),
    lastMultiDragSelect,
    // for selection with modifier key down (SHIFT)
multiDragSortable,
    initialFolding = false,
    // Initial multi-drag fold when drag started
folding = false,
    // Folding any other time
dragStarted = false,
    dragEl$1,
    clonesFromRect,
    clonesHidden;

function MultiDragPlugin() {
  function MultiDrag(sortable) {
    // Bind all private methods
    for (var fn in this) {
      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {
        this[fn] = this[fn].bind(this);
      }
    }

    if (sortable.options.supportPointer) {
      on(document, 'pointerup', this._deselectMultiDrag);
    } else {
      on(document, 'mouseup', this._deselectMultiDrag);
      on(document, 'touchend', this._deselectMultiDrag);
    }

    on(document, 'keydown', this._checkKeyDown);
    on(document, 'keyup', this._checkKeyUp);
    this.defaults = {
      selectedClass: 'sortable-selected',
      multiDragKey: null,
      setData: function setData(dataTransfer, dragEl) {
        var data = '';

        if (multiDragElements.length && multiDragSortable === sortable) {
          multiDragElements.forEach(function (multiDragElement, i) {
            data += (!i ? '' : ', ') + multiDragElement.textContent;
          });
        } else {
          data = dragEl.textContent;
        }

        dataTransfer.setData('Text', data);
      }
    };
  }

  MultiDrag.prototype = {
    multiDragKeyDown: false,
    isMultiDrag: false,
    delayStartGlobal: function delayStartGlobal(_ref) {
      var dragged = _ref.dragEl;
      dragEl$1 = dragged;
    },
    delayEnded: function delayEnded() {
      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);
    },
    setupClone: function setupClone(_ref2) {
      var sortable = _ref2.sortable,
          cancel = _ref2.cancel;
      if (!this.isMultiDrag) return;

      for (var i = 0; i < multiDragElements.length; i++) {
        multiDragClones.push(clone(multiDragElements[i]));
        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;
        multiDragClones[i].draggable = false;
        multiDragClones[i].style['will-change'] = '';
        toggleClass(multiDragClones[i], this.options.selectedClass, false);
        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);
      }

      sortable._hideClone();

      cancel();
    },
    clone: function clone(_ref3) {
      var sortable = _ref3.sortable,
          rootEl = _ref3.rootEl,
          dispatchSortableEvent = _ref3.dispatchSortableEvent,
          cancel = _ref3.cancel;
      if (!this.isMultiDrag) return;

      if (!this.options.removeCloneOnHide) {
        if (multiDragElements.length && multiDragSortable === sortable) {
          insertMultiDragClones(true, rootEl);
          dispatchSortableEvent('clone');
          cancel();
        }
      }
    },
    showClone: function showClone(_ref4) {
      var cloneNowShown = _ref4.cloneNowShown,
          rootEl = _ref4.rootEl,
          cancel = _ref4.cancel;
      if (!this.isMultiDrag) return;
      insertMultiDragClones(false, rootEl);
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', '');
      });
      cloneNowShown();
      clonesHidden = false;
      cancel();
    },
    hideClone: function hideClone(_ref5) {
      var _this = this;

      var sortable = _ref5.sortable,
          cloneNowHidden = _ref5.cloneNowHidden,
          cancel = _ref5.cancel;
      if (!this.isMultiDrag) return;
      multiDragClones.forEach(function (clone) {
        css(clone, 'display', 'none');

        if (_this.options.removeCloneOnHide && clone.parentNode) {
          clone.parentNode.removeChild(clone);
        }
      });
      cloneNowHidden();
      clonesHidden = true;
      cancel();
    },
    dragStartGlobal: function dragStartGlobal(_ref6) {
      var sortable = _ref6.sortable;

      if (!this.isMultiDrag && multiDragSortable) {
        multiDragSortable.multiDrag._deselectMultiDrag();
      }

      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.sortableIndex = index(multiDragElement);
      }); // Sort multi-drag elements

      multiDragElements = multiDragElements.sort(function (a, b) {
        return a.sortableIndex - b.sortableIndex;
      });
      dragStarted = true;
    },
    dragStarted: function dragStarted(_ref7) {
      var _this2 = this;

      var sortable = _ref7.sortable;
      if (!this.isMultiDrag) return;

      if (this.options.sort) {
        // Capture rects,
        // hide multi drag elements (by positioning them absolute),
        // set multi drag elements rects to dragRect,
        // show multi drag elements,
        // animate to rects,
        // unset rects & remove from DOM
        sortable.captureAnimationState();

        if (this.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            css(multiDragElement, 'position', 'absolute');
          });
          var dragRect = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRect);
          });
          folding = true;
          initialFolding = true;
        }
      }

      sortable.animateAll(function () {
        folding = false;
        initialFolding = false;

        if (_this2.options.animation) {
          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
        } // Remove all auxiliary multidrag items from el, if sorting enabled


        if (_this2.options.sort) {
          removeMultiDragElements();
        }
      });
    },
    dragOver: function dragOver(_ref8) {
      var target = _ref8.target,
          completed = _ref8.completed,
          cancel = _ref8.cancel;

      if (folding && ~multiDragElements.indexOf(target)) {
        completed(false);
        cancel();
      }
    },
    revert: function revert(_ref9) {
      var fromSortable = _ref9.fromSortable,
          rootEl = _ref9.rootEl,
          sortable = _ref9.sortable,
          dragRect = _ref9.dragRect;

      if (multiDragElements.length > 1) {
        // Setup unfold animation
        multiDragElements.forEach(function (multiDragElement) {
          sortable.addAnimationState({
            target: multiDragElement,
            rect: folding ? getRect(multiDragElement) : dragRect
          });
          unsetRect(multiDragElement);
          multiDragElement.fromRect = dragRect;
          fromSortable.removeAnimationState(multiDragElement);
        });
        folding = false;
        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);
      }
    },
    dragOverCompleted: function dragOverCompleted(_ref10) {
      var sortable = _ref10.sortable,
          isOwner = _ref10.isOwner,
          insertion = _ref10.insertion,
          activeSortable = _ref10.activeSortable,
          parentEl = _ref10.parentEl,
          putSortable = _ref10.putSortable;
      var options = this.options;

      if (insertion) {
        // Clones must be hidden before folding animation to capture dragRectAbsolute properly
        if (isOwner) {
          activeSortable._hideClone();
        }

        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location

        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {
          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible
          var dragRectAbsolute = getRect(dragEl$1, false, true, true);
          multiDragElements.forEach(function (multiDragElement) {
            if (multiDragElement === dragEl$1) return;
            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted
            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable

            parentEl.appendChild(multiDragElement);
          });
          folding = true;
        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out


        if (!isOwner) {
          // Only remove if not folding (folding will remove them anyways)
          if (!folding) {
            removeMultiDragElements();
          }

          if (multiDragElements.length > 1) {
            var clonesHiddenBefore = clonesHidden;

            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden


            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {
              multiDragClones.forEach(function (clone) {
                activeSortable.addAnimationState({
                  target: clone,
                  rect: clonesFromRect
                });
                clone.fromRect = clonesFromRect;
                clone.thisAnimationDuration = null;
              });
            }
          } else {
            activeSortable._showClone(sortable);
          }
        }
      }
    },
    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {
      var dragRect = _ref11.dragRect,
          isOwner = _ref11.isOwner,
          activeSortable = _ref11.activeSortable;
      multiDragElements.forEach(function (multiDragElement) {
        multiDragElement.thisAnimationDuration = null;
      });

      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {
        clonesFromRect = _extends({}, dragRect);
        var dragMatrix = matrix(dragEl$1, true);
        clonesFromRect.top -= dragMatrix.f;
        clonesFromRect.left -= dragMatrix.e;
      }
    },
    dragOverAnimationComplete: function dragOverAnimationComplete() {
      if (folding) {
        folding = false;
        removeMultiDragElements();
      }
    },
    drop: function drop(_ref12) {
      var evt = _ref12.originalEvent,
          rootEl = _ref12.rootEl,
          parentEl = _ref12.parentEl,
          sortable = _ref12.sortable,
          dispatchSortableEvent = _ref12.dispatchSortableEvent,
          oldIndex = _ref12.oldIndex,
          putSortable = _ref12.putSortable;
      var toSortable = putSortable || this.sortable;
      if (!evt) return;
      var options = this.options,
          children = parentEl.children; // Multi-drag selection

      if (!dragStarted) {
        if (options.multiDragKey && !this.multiDragKeyDown) {
          this._deselectMultiDrag();
        }

        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));

        if (!~multiDragElements.indexOf(dragEl$1)) {
          multiDragElements.push(dragEl$1);
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'select',
            targetEl: dragEl$1,
            originalEvt: evt
          }); // Modifier activated, select from last to dragEl

          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {
            var lastIndex = index(lastMultiDragSelect),
                currentIndex = index(dragEl$1);

            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {
              // Must include lastMultiDragSelect (select it), in case modified selection from no selection
              // (but previous selection existed)
              var n, i;

              if (currentIndex > lastIndex) {
                i = lastIndex;
                n = currentIndex;
              } else {
                i = currentIndex;
                n = lastIndex + 1;
              }

              for (; i < n; i++) {
                if (~multiDragElements.indexOf(children[i])) continue;
                toggleClass(children[i], options.selectedClass, true);
                multiDragElements.push(children[i]);
                dispatchEvent({
                  sortable: sortable,
                  rootEl: rootEl,
                  name: 'select',
                  targetEl: children[i],
                  originalEvt: evt
                });
              }
            }
          } else {
            lastMultiDragSelect = dragEl$1;
          }

          multiDragSortable = toSortable;
        } else {
          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);
          lastMultiDragSelect = null;
          dispatchEvent({
            sortable: sortable,
            rootEl: rootEl,
            name: 'deselect',
            targetEl: dragEl$1,
            originalEvt: evt
          });
        }
      } // Multi-drag drop


      if (dragStarted && this.isMultiDrag) {
        // Do not "unfold" after around dragEl if reverted
        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {
          var dragRect = getRect(dragEl$1),
              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');
          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;
          toSortable.captureAnimationState();

          if (!initialFolding) {
            if (options.animation) {
              dragEl$1.fromRect = dragRect;
              multiDragElements.forEach(function (multiDragElement) {
                multiDragElement.thisAnimationDuration = null;

                if (multiDragElement !== dragEl$1) {
                  var rect = folding ? getRect(multiDragElement) : dragRect;
                  multiDragElement.fromRect = rect; // Prepare unfold animation

                  toSortable.addAnimationState({
                    target: multiDragElement,
                    rect: rect
                  });
                }
              });
            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert
            // properly they must all be removed


            removeMultiDragElements();
            multiDragElements.forEach(function (multiDragElement) {
              if (children[multiDragIndex]) {
                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);
              } else {
                parentEl.appendChild(multiDragElement);
              }

              multiDragIndex++;
            }); // If initial folding is done, the elements may have changed position because they are now
            // unfolding around dragEl, even though dragEl may not have his index changed, so update event
            // must be fired here as Sortable will not.

            if (oldIndex === index(dragEl$1)) {
              var update = false;
              multiDragElements.forEach(function (multiDragElement) {
                if (multiDragElement.sortableIndex !== index(multiDragElement)) {
                  update = true;
                  return;
                }
              });

              if (update) {
                dispatchSortableEvent('update');
              }
            }
          } // Must be done after capturing individual rects (scroll bar)


          multiDragElements.forEach(function (multiDragElement) {
            unsetRect(multiDragElement);
          });
          toSortable.animateAll();
        }

        multiDragSortable = toSortable;
      } // Remove clones if necessary


      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {
        multiDragClones.forEach(function (clone) {
          clone.parentNode && clone.parentNode.removeChild(clone);
        });
      }
    },
    nullingGlobal: function nullingGlobal() {
      this.isMultiDrag = dragStarted = false;
      multiDragClones.length = 0;
    },
    destroyGlobal: function destroyGlobal() {
      this._deselectMultiDrag();

      off(document, 'pointerup', this._deselectMultiDrag);
      off(document, 'mouseup', this._deselectMultiDrag);
      off(document, 'touchend', this._deselectMultiDrag);
      off(document, 'keydown', this._checkKeyDown);
      off(document, 'keyup', this._checkKeyUp);
    },
    _deselectMultiDrag: function _deselectMultiDrag(evt) {
      if (typeof dragStarted !== "undefined" && dragStarted) return; // Only deselect if selection is in this sortable

      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable

      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click

      if (evt && evt.button !== 0) return;

      while (multiDragElements.length) {
        var el = multiDragElements[0];
        toggleClass(el, this.options.selectedClass, false);
        multiDragElements.shift();
        dispatchEvent({
          sortable: this.sortable,
          rootEl: this.sortable.el,
          name: 'deselect',
          targetEl: el,
          originalEvt: evt
        });
      }
    },
    _checkKeyDown: function _checkKeyDown(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = true;
      }
    },
    _checkKeyUp: function _checkKeyUp(evt) {
      if (evt.key === this.options.multiDragKey) {
        this.multiDragKeyDown = false;
      }
    }
  };
  return _extends(MultiDrag, {
    // Static methods & properties
    pluginName: 'multiDrag',
    utils: {
      /**
       * Selects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be selected
       */
      select: function select(el) {
        var sortable = el.parentNode[expando];
        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;

        if (multiDragSortable && multiDragSortable !== sortable) {
          multiDragSortable.multiDrag._deselectMultiDrag();

          multiDragSortable = sortable;
        }

        toggleClass(el, sortable.options.selectedClass, true);
        multiDragElements.push(el);
      },

      /**
       * Deselects the provided multi-drag item
       * @param  {HTMLElement} el    The element to be deselected
       */
      deselect: function deselect(el) {
        var sortable = el.parentNode[expando],
            index = multiDragElements.indexOf(el);
        if (!sortable || !sortable.options.multiDrag || !~index) return;
        toggleClass(el, sortable.options.selectedClass, false);
        multiDragElements.splice(index, 1);
      }
    },
    eventProperties: function eventProperties() {
      var _this3 = this;

      var oldIndicies = [],
          newIndicies = [];
      multiDragElements.forEach(function (multiDragElement) {
        oldIndicies.push({
          multiDragElement: multiDragElement,
          index: multiDragElement.sortableIndex
        }); // multiDragElements will already be sorted if folding

        var newIndex;

        if (folding && multiDragElement !== dragEl$1) {
          newIndex = -1;
        } else if (folding) {
          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');
        } else {
          newIndex = index(multiDragElement);
        }

        newIndicies.push({
          multiDragElement: multiDragElement,
          index: newIndex
        });
      });
      return {
        items: _toConsumableArray(multiDragElements),
        clones: [].concat(multiDragClones),
        oldIndicies: oldIndicies,
        newIndicies: newIndicies
      };
    },
    optionListeners: {
      multiDragKey: function multiDragKey(key) {
        key = key.toLowerCase();

        if (key === 'ctrl') {
          key = 'Control';
        } else if (key.length > 1) {
          key = key.charAt(0).toUpperCase() + key.substr(1);
        }

        return key;
      }
    }
  });
}

function insertMultiDragElements(clonesInserted, rootEl) {
  multiDragElements.forEach(function (multiDragElement, i) {
    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(multiDragElement, target);
    } else {
      rootEl.appendChild(multiDragElement);
    }
  });
}
/**
 * Insert multi-drag clones
 * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted
 * @param  {HTMLElement} rootEl
 */


function insertMultiDragClones(elementsInserted, rootEl) {
  multiDragClones.forEach(function (clone, i) {
    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];

    if (target) {
      rootEl.insertBefore(clone, target);
    } else {
      rootEl.appendChild(clone);
    }
  });
}

function removeMultiDragElements() {
  multiDragElements.forEach(function (multiDragElement) {
    if (multiDragElement === dragEl$1) return;
    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);
  });
}

Sortable.mount(new AutoScrollPlugin());
Sortable.mount(Remove, Revert);

/* harmony default export */ const sortable_esm = (Sortable);


// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/header/index.css
var header = __webpack_require__(7428);
;// CONCATENATED MODULE: ./src/component/header/index.css

            

var header_options = {};

header_options.insert = "head";
header_options.singleton = false;

var header_update = injectStylesIntoStyleTag_default()(header/* default */.Z, header_options);



/* harmony default export */ const component_header = (header/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/header/index.js






















const header_header = {};

header_header.element = {
  header: node('header|class:header'),
  area: node('div|class:header-area'),
  greeting: false,
  transitional: false,
  clock: false,
  date: false,
  search: false,
  border: {
    top: node('div|class:header-border-top'),
    bottom: node('div|class:header-border-bottom')
  }
};

header_header.item = {};

header_header.item.mod = {
  move: (origin, destination) => {

    const itemToMove = state.get.current().header.order.splice(origin, 1);

    state.get.current().header.order.splice(destination, 0, itemToMove[0]);

  },
  order: () => {

    const headerItems = ['greeting', 'transitional', 'clock', 'date', 'search', 'toolbar'];

    headerItems.reverse().forEach((item, i) => {

      switch (item) {

        case 'clock':

          if (state.get.current().header.clock.second.show ||
            state.get.current().header.clock.minute.show ||
            state.get.current().header.clock.hour.show) {

            if (!state.get.current().header.order.includes(item)) {

              let position = 0;

              if (state.get.current().header.date.day.show ||
                state.get.current().header.date.date.show ||
                state.get.current().header.date.month.show ||
                state.get.current().header.date.year.show) {

                position = state.get.current().header.order.indexOf('date');

              } else if (state.get.current().header.transitional.show) {

                position = state.get.current().header.order.indexOf('transitional') + 1;

              } else if (state.get.current().header.greeting.show) {

                position = state.get.current().header.order.indexOf('greeting') + 1;

              };

              state.get.current().header.order.splice(position, 0, item);

            };

          } else {

            if (state.get.current().header.order.includes(item)) {
              state.get.current().header.order.splice(state.get.current().header.order.indexOf(item), 1);
            };

          };

          break;

        case 'date':

          if (state.get.current().header.date.day.show ||
            state.get.current().header.date.date.show ||
            state.get.current().header.date.month.show ||
            state.get.current().header.date.year.show) {

            if (!state.get.current().header.order.includes(item)) {

              let position = 0;

              if (state.get.current().header.clock.second.show ||
                state.get.current().header.clock.minute.show ||
                state.get.current().header.clock.hour.show) {

                position = state.get.current().header.order.indexOf('clock') + 1;

              } else if (state.get.current().header.transitional.show) {

                position = state.get.current().header.order.indexOf('transitional') + 1;

              } else if (state.get.current().header.greeting.show) {

                position = state.get.current().header.order.indexOf('greeting') + 1;

              };

              state.get.current().header.order.splice(position, 0, item);

            };

          } else {

            if (state.get.current().header.order.includes(item)) {
              state.get.current().header.order.splice(state.get.current().header.order.indexOf(item), 1)
            };

          };

          break;

        case 'transitional':

          if (state.get.current().header.transitional.show) {

            if (!state.get.current().header.order.includes(item)) {

              let position = 0;

              if (state.get.current().header.clock.second.show ||
                state.get.current().header.clock.minute.show ||
                state.get.current().header.clock.hour.show) {

                position = state.get.current().header.order.indexOf('clock');

              } else if (state.get.current().header.date.day.show ||
                state.get.current().header.date.date.show ||
                state.get.current().header.date.month.show ||
                state.get.current().header.date.year.show) {

                position = state.get.current().header.order.indexOf('date');

              };

              state.get.current().header.order.splice(position, 0, item);

            };

          } else {

            if (state.get.current().header.order.includes(item)) {
              state.get.current().header.order.splice(state.get.current().header.order.indexOf(item), 1)
            };

          };

          break;

        case 'greeting':

          if (state.get.current().header.greeting.show) {

            if (!state.get.current().header.order.includes(item)) {

              state.get.current().header.order.unshift(item);

            };

          } else {

            if (state.get.current().header.order.includes(item)) {
              state.get.current().header.order.splice(state.get.current().header.order.indexOf(item), 1)
            };

          };

          break;

        case 'search':

          if (state.get.current().header.search.show) {

            if (!state.get.current().header.order.includes(item)) {

              let position = 0;

              switch (state.get.current().toolbar.location) {

                case 'header':

                  position = state.get.current().header.order.indexOf('toolbar');

                  break;

                default:

                  position = state.get.current().header.order.length;

              };

              state.get.current().header.order.splice(position, 0, item);

            };

          } else {

            if (state.get.current().header.order.includes(item)) {
              state.get.current().header.order.splice(state.get.current().header.order.indexOf(item), 1)
            };

          };

          break;

        case 'toolbar':

          switch (state.get.current().toolbar.location) {

            case 'corner':

              if (state.get.current().header.order.includes(item)) {
                state.get.current().header.order.splice(state.get.current().header.order.indexOf(item), 1);
              };

              break;

            case 'header':

              if (!state.get.current().header.order.includes(item)) {
                state.get.current().header.order.push(item);
              };

              break;

          };

          break;

      };

    });

  }
};

header_header.item.current = [];

header_header.item.render = () => {

  const order = state.get.current().header.order;

  header_header.element.clock = new Clock();

  header_header.element.date = new date_Date();

  header_header.element.greeting = new Greeting();

  header_header.element.transitional = new Transitional();

  header_header.element.search = new Search();

  order.forEach((item, i) => {

    switch (item) {

      case 'clock':

        if (state.get.current().header.clock.second.show ||
          state.get.current().header.clock.minute.show ||
          state.get.current().header.clock.hour.show) {

          const headerItem = new HeaderItem({
            name: item,
            child: header_header.element.clock.clock()
          });

          header_header.item.current.push(headerItem);

          header_header.element.header.appendChild(headerItem.item());

        };

        break;

      case 'date':

        if (state.get.current().header.date.day.show || state.get.current().header.date.date.show || state.get.current().header.date.month.show || state.get.current().header.date.year.show) {

          const headerItem = new HeaderItem({
            name: item,
            child: header_header.element.date.date()
          });

          header_header.item.current.push(headerItem);

          header_header.element.header.appendChild(headerItem.item());

        };

        break;

      case 'greeting':

        if (state.get.current().header.greeting.show) {

          const headerItem = new HeaderItem({
            name: item,
            child: header_header.element.greeting.greeting()
          });

          header_header.item.current.push(headerItem);

          header_header.element.header.appendChild(headerItem.item());

        };

        break;

      case 'transitional':

        if (
          ((
            state.get.current().header.clock.second.show ||
            state.get.current().header.clock.minute.show ||
            state.get.current().header.clock.hour.show ||
            state.get.current().header.date.day.show ||
            state.get.current().header.date.date.show ||
            state.get.current().header.date.month.show ||
            state.get.current().header.date.year.show
          )) &&
          state.get.current().header.transitional.show
        ) {

          const headerItem = new HeaderItem({
            name: item,
            child: header_header.element.transitional.transitional()
          });

          header_header.item.current.push(headerItem);

          header_header.element.header.appendChild(headerItem.item());

        };

        break;

      case 'search':

        if (state.get.current().header.search.show) {

          const headerItem = new HeaderItem({
            name: item,
            child: header_header.element.search.search()
          });

          header_header.item.current.push(headerItem);

          header_header.element.header.appendChild(headerItem.item());

        };

        break;

      case 'toolbar':

        switch (state.get.current().toolbar.location) {

          case 'header':

            const headerItem = new HeaderItem({
              name: item,
              child: toolbar.current.toolbar()
            });

            header_header.item.current.push(headerItem);

            header_header.element.header.appendChild(headerItem.item());

            break;

        };

        break;

    };

  });

  layout_layout.element.header.appendChild(header_header.element.area);

  const sortable = sortable_esm.create(header_header.element.header, {
    handle: '.header-control-sort',
    ghostClass: 'header-sort-placeholder',
    animation: 500,
    easing: 'cubic-bezier(0.8, 0.8, 0.4, 1.4)',
    onEnd: (event) => {

      // console.log('============ debug sort ============');
      // console.log(event);
      // console.log('item:', 'origin', event.oldIndex, 'destination', event.newIndex);

      header_header.item.mod.move(event.oldIndex, event.newIndex);

      data.save();

    }
  });

  const html = document.querySelector('html');

  if (state.get.current().header.order.length > 0) {
    html.classList.add('is-header-show');
  } else {
    html.classList.remove('is-header-show');
  };

};

header_header.item.clear = () => {

  clearChildNode(header_header.element.header);

};

header_header.area = {
  render: () => {

    header_header.element.area.appendChild(header_header.element.header);

  }
};

header_header.edit = {
  open: () => {

    state.get.current().header.edit = true;

    header_header.edit.render();

  },
  close: () => {

    state.get.current().header.edit = false;

    header_header.edit.render();

  },
  toggle: () => {

    if (state.get.current().header.edit) {
      header_header.edit.close();
    } else {
      header_header.edit.open();
    };

  },
  render: () => {

    applyCSSState('header.edit');

    if (header_header.item.current.length > 0) {
      header_header.item.current.forEach((item, i) => {

        if (state.get.current().header.edit) {
          item.control.enable();
        } else {
          item.control.disable();
        };

      });
    };

  }
};

header_header.init = () => {
  state.get.current().search = false;
  header_header.item.mod.order();
  header_header.area.render();
  header_header.edit.render();
  header_header.item.render();
  applyCSSVar([
    'header.greeting.size',
    'header.transitional.size',
    'header.clock.size',
    'header.date.size',
    'header.search.size',
    'header.search.width.size'
  ]);
  applyCSSClass([
    'header.item.justify',
    'header.search.width.by',
    'header.search.text.justify'
  ]);
  applyCSSState([
    'header.greeting.newLine',
    'header.clock.newLine',
    'header.transitional.newLine',
    'header.date.newLine',
    'header.search.newLine'
  ]);
};



// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/fontawesome/index.css
var fontawesome = __webpack_require__(3831);
;// CONCATENATED MODULE: ./src/component/fontawesome/index.css

            

var fontawesome_options = {};

fontawesome_options.insert = "head";
fontawesome_options.singleton = false;

var fontawesome_update = injectStylesIntoStyleTag_default()(fontawesome/* default */.Z, fontawesome_options);



/* harmony default export */ const component_fontawesome = (fontawesome/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/fontawesome/index.js


const fontawesome_fontawesome = [{
  name: "500px",
  search: [],
  styles: ["brands"],
  label: "500px"
}, {
  name: "accessible-icon",
  search: ["accessibility", "handicap", "person", "wheelchair", "wheelchair-alt"],
  styles: ["brands"],
  label: "Accessible Icon"
}, {
  name: "accusoft",
  search: [],
  styles: ["brands"],
  label: "Accusoft"
}, {
  name: "acquisitions-incorporated",
  search: ["Dungeons & Dragons", "d&d", "dnd", "fantasy", "game", "gaming", "tabletop"],
  styles: ["brands"],
  label: "Acquisitions Incorporated"
}, {
  name: "ad",
  search: ["advertisement", "media", "newspaper", "promotion", "publicity"],
  styles: ["solid"],
  label: "Ad"
}, {
  name: "address-book",
  search: ["contact", "directory", "index", "little black book", "rolodex"],
  styles: ["solid", "regular"],
  label: "Address Book"
}, {
  name: "address-card",
  search: ["about", "contact", "id", "identification", "postcard", "profile"],
  styles: ["solid", "regular"],
  label: "Address Card"
}, {
  name: "adjust",
  search: ["contrast", "dark", "light", "saturation"],
  styles: ["solid"],
  label: "adjust"
}, {
  name: "adn",
  search: [],
  styles: ["brands"],
  label: "App.net"
}, {
  name: "adobe",
  search: ["acrobat", "app", "design", "illustrator", "indesign", "photoshop"],
  styles: ["brands"],
  label: "Adobe"
}, {
  name: "adversal",
  search: [],
  styles: ["brands"],
  label: "Adversal"
}, {
  name: "affiliatetheme",
  search: [],
  styles: ["brands"],
  label: "affiliatetheme"
}, {
  name: "air-freshener",
  search: ["car", "deodorize", "fresh", "pine", "scent"],
  styles: ["solid"],
  label: "Air Freshener"
}, {
  name: "airbnb",
  search: [],
  styles: ["brands"],
  label: "Airbnb"
}, {
  name: "algolia",
  search: [],
  styles: ["brands"],
  label: "Algolia"
}, {
  name: "align-center",
  search: ["format", "middle", "paragraph", "text"],
  styles: ["solid"],
  label: "align-center"
}, {
  name: "align-justify",
  search: ["format", "paragraph", "text"],
  styles: ["solid"],
  label: "align-justify"
}, {
  name: "align-left",
  search: ["format", "paragraph", "text"],
  styles: ["solid"],
  label: "align-left"
}, {
  name: "align-right",
  search: ["format", "paragraph", "text"],
  styles: ["solid"],
  label: "align-right"
}, {
  name: "alipay",
  search: [],
  styles: ["brands"],
  label: "Alipay"
}, {
  name: "allergies",
  search: ["allergy", "freckles", "hand", "hives", "pox", "skin", "spots"],
  styles: ["solid"],
  label: "Allergies"
}, {
  name: "amazon",
  search: [],
  styles: ["brands"],
  label: "Amazon"
}, {
  name: "amazon-pay",
  search: [],
  styles: ["brands"],
  label: "Amazon Pay"
}, {
  name: "ambulance",
  search: ["covid-19", "emergency", "emt", "er", "help", "hospital", "support", "vehicle"],
  styles: ["solid"],
  label: "ambulance"
}, {
  name: "american-sign-language-interpreting",
  search: ["asl", "deaf", "finger", "hand", "interpret", "speak"],
  styles: ["solid"],
  label: "American Sign Language Interpreting"
}, {
  name: "amilia",
  search: [],
  styles: ["brands"],
  label: "Amilia"
}, {
  name: "anchor",
  search: ["berth", "boat", "dock", "embed", "link", "maritime", "moor", "secure"],
  styles: ["solid"],
  label: "Anchor"
}, {
  name: "android",
  search: ["robot"],
  styles: ["brands"],
  label: "Android"
}, {
  name: "angellist",
  search: [],
  styles: ["brands"],
  label: "AngelList"
}, {
  name: "angle-double-down",
  search: ["arrows", "caret", "download", "expand"],
  styles: ["solid"],
  label: "Angle Double Down"
}, {
  name: "angle-double-left",
  search: ["arrows", "back", "caret", "laquo", "previous", "quote"],
  styles: ["solid"],
  label: "Angle Double Left"
}, {
  name: "angle-double-right",
  search: ["arrows", "caret", "forward", "more", "next", "quote", "raquo"],
  styles: ["solid"],
  label: "Angle Double Right"
}, {
  name: "angle-double-up",
  search: ["arrows", "caret", "collapse", "upload"],
  styles: ["solid"],
  label: "Angle Double Up"
}, {
  name: "angle-down",
  search: ["arrow", "caret", "download", "expand"],
  styles: ["solid"],
  label: "angle-down"
}, {
  name: "angle-left",
  search: ["arrow", "back", "caret", "less", "previous"],
  styles: ["solid"],
  label: "angle-left"
}, {
  name: "angle-right",
  search: ["arrow", "care", "forward", "more", "next"],
  styles: ["solid"],
  label: "angle-right"
}, {
  name: "angle-up",
  search: ["arrow", "caret", "collapse", "upload"],
  styles: ["solid"],
  label: "angle-up"
}, {
  name: "angry",
  search: ["disapprove", "emoticon", "face", "mad", "upset"],
  styles: ["solid", "regular"],
  label: "Angry Face"
}, {
  name: "angrycreative",
  search: [],
  styles: ["brands"],
  label: "Angry Creative"
}, {
  name: "angular",
  search: [],
  styles: ["brands"],
  label: "Angular"
}, {
  name: "ankh",
  search: ["amulet", "copper", "coptic christianity", "copts", "crux ansata", "egypt", "venus"],
  styles: ["solid"],
  label: "Ankh"
}, {
  name: "app-store",
  search: [],
  styles: ["brands"],
  label: "App Store"
}, {
  name: "app-store-ios",
  search: [],
  styles: ["brands"],
  label: "iOS App Store"
}, {
  name: "apper",
  search: [],
  styles: ["brands"],
  label: "Apper Systems AB"
}, {
  name: "apple",
  search: ["fruit", "ios", "mac", "operating system", "os", "osx"],
  styles: ["brands"],
  label: "Apple"
}, {
  name: "apple-alt",
  search: ["fall", "fruit", "fuji", "macintosh", "orchard", "seasonal", "vegan"],
  styles: ["solid"],
  label: "Fruit Apple"
}, {
  name: "apple-pay",
  search: [],
  styles: ["brands"],
  label: "Apple Pay"
}, {
  name: "archive",
  search: ["box", "package", "save", "storage"],
  styles: ["solid"],
  label: "Archive"
}, {
  name: "archway",
  search: ["arc", "monument", "road", "street", "tunnel"],
  styles: ["solid"],
  label: "Archway"
}, {
  name: "arrow-alt-circle-down",
  search: ["arrow-circle-o-down", "download"],
  styles: ["solid", "regular"],
  label: "Alternate Arrow Circle Down"
}, {
  name: "arrow-alt-circle-left",
  search: ["arrow-circle-o-left", "back", "previous"],
  styles: ["solid", "regular"],
  label: "Alternate Arrow Circle Left"
}, {
  name: "arrow-alt-circle-right",
  search: ["arrow-circle-o-right", "forward", "next"],
  styles: ["solid", "regular"],
  label: "Alternate Arrow Circle Right"
}, {
  name: "arrow-alt-circle-up",
  search: ["arrow-circle-o-up"],
  styles: ["solid", "regular"],
  label: "Alternate Arrow Circle Up"
}, {
  name: "arrow-circle-down",
  search: ["download"],
  styles: ["solid"],
  label: "Arrow Circle Down"
}, {
  name: "arrow-circle-left",
  search: ["back", "previous"],
  styles: ["solid"],
  label: "Arrow Circle Left"
}, {
  name: "arrow-circle-right",
  search: ["forward", "next"],
  styles: ["solid"],
  label: "Arrow Circle Right"
}, {
  name: "arrow-circle-up",
  search: ["upload"],
  styles: ["solid"],
  label: "Arrow Circle Up"
}, {
  name: "arrow-down",
  search: ["download"],
  styles: ["solid"],
  label: "arrow-down"
}, {
  name: "arrow-left",
  search: ["back", "previous"],
  styles: ["solid"],
  label: "arrow-left"
}, {
  name: "arrow-right",
  search: ["forward", "next"],
  styles: ["solid"],
  label: "arrow-right"
}, {
  name: "arrow-up",
  search: ["forward", "upload"],
  styles: ["solid"],
  label: "arrow-up"
}, {
  name: "arrows-alt",
  search: ["arrow", "arrows", "bigger", "enlarge", "expand", "fullscreen", "move", "position", "reorder", "resize"],
  styles: ["solid"],
  label: "Alternate Arrows"
}, {
  name: "arrows-alt-h",
  search: ["arrows-h", "expand", "horizontal", "landscape", "resize", "wide"],
  styles: ["solid"],
  label: "Alternate Arrows Horizontal"
}, {
  name: "arrows-alt-v",
  search: ["arrows-v", "expand", "portrait", "resize", "tall", "vertical"],
  styles: ["solid"],
  label: "Alternate Arrows Vertical"
}, {
  name: "artstation",
  search: [],
  styles: ["brands"],
  label: "Artstation"
}, {
  name: "assistive-listening-systems",
  search: ["amplify", "audio", "deaf", "ear", "headset", "hearing", "sound"],
  styles: ["solid"],
  label: "Assistive Listening Systems"
}, {
  name: "asterisk",
  search: ["annotation", "details", "reference", "star"],
  styles: ["solid"],
  label: "asterisk"
}, {
  name: "asymmetrik",
  search: [],
  styles: ["brands"],
  label: "Asymmetrik, Ltd."
}, {
  name: "at",
  search: ["address", "author", "e-mail", "email", "handle"],
  styles: ["solid"],
  label: "At"
}, {
  name: "atlas",
  search: ["book", "directions", "geography", "globe", "map", "travel", "wayfinding"],
  styles: ["solid"],
  label: "Atlas"
}, {
  name: "atlassian",
  search: [],
  styles: ["brands"],
  label: "Atlassian"
}, {
  name: "atom",
  search: ["atheism", "chemistry", "electron", "ion", "isotope", "neutron", "nuclear", "proton", "science"],
  styles: ["solid"],
  label: "Atom"
}, {
  name: "audible",
  search: [],
  styles: ["brands"],
  label: "Audible"
}, {
  name: "audio-description",
  search: ["blind", "narration", "video", "visual"],
  styles: ["solid"],
  label: "Audio Description"
}, {
  name: "autoprefixer",
  search: [],
  styles: ["brands"],
  label: "Autoprefixer"
}, {
  name: "avianex",
  search: [],
  styles: ["brands"],
  label: "avianex"
}, {
  name: "aviato",
  search: [],
  styles: ["brands"],
  label: "Aviato"
}, {
  name: "award",
  search: ["honor", "praise", "prize", "recognition", "ribbon", "trophy"],
  styles: ["solid"],
  label: "Award"
}, {
  name: "aws",
  search: [],
  styles: ["brands"],
  label: "Amazon Web Services (AWS)"
}, {
  name: "baby",
  search: ["child", "diaper", "doll", "human", "infant", "kid", "offspring", "person", "sprout"],
  styles: ["solid"],
  label: "Baby"
}, {
  name: "baby-carriage",
  search: ["buggy", "carrier", "infant", "push", "stroller", "transportation", "walk", "wheels"],
  styles: ["solid"],
  label: "Baby Carriage"
}, {
  name: "backspace",
  search: ["command", "delete", "erase", "keyboard", "undo"],
  styles: ["solid"],
  label: "Backspace"
}, {
  name: "backward",
  search: ["previous", "rewind"],
  styles: ["solid"],
  label: "backward"
}, {
  name: "bacon",
  search: ["blt", "breakfast", "ham", "lard", "meat", "pancetta", "pork", "rasher"],
  styles: ["solid"],
  label: "Bacon"
}, {
  name: "bahai",
  search: ["bahai", "bahá'í", "star"],
  styles: ["solid"],
  label: "Bahá'í"
}, {
  name: "balance-scale",
  search: ["balanced", "justice", "legal", "measure", "weight"],
  styles: ["solid"],
  label: "Balance Scale"
}, {
  name: "balance-scale-left",
  search: ["justice", "legal", "measure", "unbalanced", "weight"],
  styles: ["solid"],
  label: "Balance Scale (Left-Weighted)"
}, {
  name: "balance-scale-right",
  search: ["justice", "legal", "measure", "unbalanced", "weight"],
  styles: ["solid"],
  label: "Balance Scale (Right-Weighted)"
}, {
  name: "ban",
  search: ["abort", "ban", "block", "cancel", "delete", "hide", "prohibit", "remove", "stop", "trash"],
  styles: ["solid"],
  label: "ban"
}, {
  name: "band-aid",
  search: ["bandage", "boo boo", "first aid", "ouch"],
  styles: ["solid"],
  label: "Band-Aid"
}, {
  name: "bandcamp",
  search: [],
  styles: ["brands"],
  label: "Bandcamp"
}, {
  name: "barcode",
  search: ["info", "laser", "price", "scan", "upc"],
  styles: ["solid"],
  label: "barcode"
}, {
  name: "bars",
  search: ["checklist", "drag", "hamburger", "list", "menu", "nav", "navigation", "ol", "reorder", "settings", "todo", "ul"],
  styles: ["solid"],
  label: "Bars"
}, {
  name: "baseball-ball",
  search: ["foul", "hardball", "league", "leather", "mlb", "softball", "sport"],
  styles: ["solid"],
  label: "Baseball Ball"
}, {
  name: "basketball-ball",
  search: ["dribble", "dunk", "hoop", "nba"],
  styles: ["solid"],
  label: "Basketball Ball"
}, {
  name: "bath",
  search: ["clean", "shower", "tub", "wash"],
  styles: ["solid"],
  label: "Bath"
}, {
  name: "battery-empty",
  search: ["charge", "dead", "power", "status"],
  styles: ["solid"],
  label: "Battery Empty"
}, {
  name: "battery-full",
  search: ["charge", "power", "status"],
  styles: ["solid"],
  label: "Battery Full"
}, {
  name: "battery-half",
  search: ["charge", "power", "status"],
  styles: ["solid"],
  label: "Battery 1/2 Full"
}, {
  name: "battery-quarter",
  search: ["charge", "low", "power", "status"],
  styles: ["solid"],
  label: "Battery 1/4 Full"
}, {
  name: "battery-three-quarters",
  search: ["charge", "power", "status"],
  styles: ["solid"],
  label: "Battery 3/4 Full"
}, {
  name: "battle-net",
  search: [],
  styles: ["brands"],
  label: "Battle.net"
}, {
  name: "bed",
  search: ["lodging", "mattress", "rest", "sleep", "travel"],
  styles: ["solid"],
  label: "Bed"
}, {
  name: "beer",
  search: ["alcohol", "ale", "bar", "beverage", "brewery", "drink", "lager", "liquor", "mug", "stein"],
  styles: ["solid"],
  label: "beer"
}, {
  name: "behance",
  search: [],
  styles: ["brands"],
  label: "Behance"
}, {
  name: "behance-square",
  search: [],
  styles: ["brands"],
  label: "Behance Square"
}, {
  name: "bell",
  search: ["alarm", "alert", "chime", "notification", "reminder"],
  styles: ["solid", "regular"],
  label: "bell"
}, {
  name: "bell-slash",
  search: ["alert", "cancel", "disabled", "notification", "off", "reminder"],
  styles: ["solid", "regular"],
  label: "Bell Slash"
}, {
  name: "bezier-curve",
  search: ["curves", "illustrator", "lines", "path", "vector"],
  styles: ["solid"],
  label: "Bezier Curve"
}, {
  name: "bible",
  search: ["book", "catholicism", "christianity", "god", "holy"],
  styles: ["solid"],
  label: "Bible"
}, {
  name: "bicycle",
  search: ["bike", "gears", "pedal", "transportation", "vehicle"],
  styles: ["solid"],
  label: "Bicycle"
}, {
  name: "biking",
  search: ["bicycle", "bike", "cycle", "cycling", "ride", "wheel"],
  styles: ["solid"],
  label: "Biking"
}, {
  name: "bimobject",
  search: [],
  styles: ["brands"],
  label: "BIMobject"
}, {
  name: "binoculars",
  search: ["glasses", "magnify", "scenic", "spyglass", "view"],
  styles: ["solid"],
  label: "Binoculars"
}, {
  name: "biohazard",
  search: ["covid-19", "danger", "dangerous", "hazmat", "medical", "radioactive", "toxic", "waste", "zombie"],
  styles: ["solid"],
  label: "Biohazard"
}, {
  name: "birthday-cake",
  search: ["anniversary", "bakery", "candles", "celebration", "dessert", "frosting", "holiday", "party", "pastry"],
  styles: ["solid"],
  label: "Birthday Cake"
}, {
  name: "bitbucket",
  search: ["atlassian", "bitbucket-square", "git"],
  styles: ["brands"],
  label: "Bitbucket"
}, {
  name: "bitcoin",
  search: [],
  styles: ["brands"],
  label: "Bitcoin"
}, {
  name: "bity",
  search: [],
  styles: ["brands"],
  label: "Bity"
}, {
  name: "black-tie",
  search: [],
  styles: ["brands"],
  label: "Font Awesome Black Tie"
}, {
  name: "blackberry",
  search: [],
  styles: ["brands"],
  label: "BlackBerry"
}, {
  name: "blender",
  search: ["cocktail", "milkshake", "mixer", "puree", "smoothie"],
  styles: ["solid"],
  label: "Blender"
}, {
  name: "blender-phone",
  search: ["appliance", "cocktail", "communication", "fantasy", "milkshake", "mixer", "puree", "silly", "smoothie"],
  styles: ["solid"],
  label: "Blender Phone"
}, {
  name: "blind",
  search: ["cane", "disability", "person", "sight"],
  styles: ["solid"],
  label: "Blind"
}, {
  name: "blog",
  search: ["journal", "log", "online", "personal", "post", "web 2.0", "wordpress", "writing"],
  styles: ["solid"],
  label: "Blog"
}, {
  name: "blogger",
  search: [],
  styles: ["brands"],
  label: "Blogger"
}, {
  name: "blogger-b",
  search: [],
  styles: ["brands"],
  label: "Blogger B"
}, {
  name: "bluetooth",
  search: [],
  styles: ["brands"],
  label: "Bluetooth"
}, {
  name: "bluetooth-b",
  search: [],
  styles: ["brands"],
  label: "Bluetooth"
}, {
  name: "bold",
  search: ["emphasis", "format", "text"],
  styles: ["solid"],
  label: "bold"
}, {
  name: "bolt",
  search: ["electricity", "lightning", "weather", "zap"],
  styles: ["solid"],
  label: "Lightning Bolt"
}, {
  name: "bomb",
  search: ["error", "explode", "fuse", "grenade", "warning"],
  styles: ["solid"],
  label: "Bomb"
}, {
  name: "bone",
  search: ["calcium", "dog", "skeletal", "skeleton", "tibia"],
  styles: ["solid"],
  label: "Bone"
}, {
  name: "bong",
  search: ["aparatus", "cannabis", "marijuana", "pipe", "smoke", "smoking"],
  styles: ["solid"],
  label: "Bong"
}, {
  name: "book",
  search: ["diary", "documentation", "journal", "library", "read"],
  styles: ["solid"],
  label: "book"
}, {
  name: "book-dead",
  search: ["Dungeons & Dragons", "crossbones", "d&d", "dark arts", "death", "dnd", "documentation", "evil", "fantasy", "halloween", "holiday", "necronomicon", "read", "skull", "spell"],
  styles: ["solid"],
  label: "Book of the Dead"
}, {
  name: "book-medical",
  search: ["diary", "documentation", "health", "history", "journal", "library", "read", "record"],
  styles: ["solid"],
  label: "Medical Book"
}, {
  name: "book-open",
  search: ["flyer", "library", "notebook", "open book", "pamphlet", "reading"],
  styles: ["solid"],
  label: "Book Open"
}, {
  name: "book-reader",
  search: ["flyer", "library", "notebook", "open book", "pamphlet", "reading"],
  styles: ["solid"],
  label: "Book Reader"
}, {
  name: "bookmark",
  search: ["favorite", "marker", "read", "remember", "save"],
  styles: ["solid", "regular"],
  label: "bookmark"
}, {
  name: "bootstrap",
  search: [],
  styles: ["brands"],
  label: "Bootstrap"
}, {
  name: "border-all",
  search: ["cell", "grid", "outline", "stroke", "table"],
  styles: ["solid"],
  label: "Border All"
}, {
  name: "border-none",
  search: ["cell", "grid", "outline", "stroke", "table"],
  styles: ["solid"],
  label: "Border None"
}, {
  name: "border-style",
  search: [],
  styles: ["solid"],
  label: "Border Style"
}, {
  name: "bowling-ball",
  search: ["alley", "candlepin", "gutter", "lane", "strike", "tenpin"],
  styles: ["solid"],
  label: "Bowling Ball"
}, {
  name: "box",
  search: ["archive", "container", "package", "storage"],
  styles: ["solid"],
  label: "Box"
}, {
  name: "box-open",
  search: ["archive", "container", "package", "storage", "unpack"],
  styles: ["solid"],
  label: "Box Open"
}, {
  name: "box-tissue",
  search: ["cough", "covid-19", "kleenex", "mucus", "nose", "sneeze", "snot"],
  styles: ["solid"],
  label: "Tissue Box"
}, {
  name: "boxes",
  search: ["archives", "inventory", "storage", "warehouse"],
  styles: ["solid"],
  label: "Boxes"
}, {
  name: "braille",
  search: ["alphabet", "blind", "dots", "raised", "vision"],
  styles: ["solid"],
  label: "Braille"
}, {
  name: "brain",
  search: ["cerebellum", "gray matter", "intellect", "medulla oblongata", "mind", "noodle", "wit"],
  styles: ["solid"],
  label: "Brain"
}, {
  name: "bread-slice",
  search: ["bake", "bakery", "baking", "dough", "flour", "gluten", "grain", "sandwich", "sourdough", "toast", "wheat", "yeast"],
  styles: ["solid"],
  label: "Bread Slice"
}, {
  name: "briefcase",
  search: ["bag", "business", "luggage", "office", "work"],
  styles: ["solid"],
  label: "Briefcase"
}, {
  name: "briefcase-medical",
  search: ["doctor", "emt", "first aid", "health"],
  styles: ["solid"],
  label: "Medical Briefcase"
}, {
  name: "broadcast-tower",
  search: ["airwaves", "antenna", "radio", "reception", "waves"],
  styles: ["solid"],
  label: "Broadcast Tower"
}, {
  name: "broom",
  search: ["clean", "firebolt", "fly", "halloween", "nimbus 2000", "quidditch", "sweep", "witch"],
  styles: ["solid"],
  label: "Broom"
}, {
  name: "brush",
  search: ["art", "bristles", "color", "handle", "paint"],
  styles: ["solid"],
  label: "Brush"
}, {
  name: "btc",
  search: [],
  styles: ["brands"],
  label: "BTC"
}, {
  name: "buffer",
  search: [],
  styles: ["brands"],
  label: "Buffer"
}, {
  name: "bug",
  search: ["beetle", "error", "insect", "report"],
  styles: ["solid"],
  label: "Bug"
}, {
  name: "building",
  search: ["apartment", "business", "city", "company", "office", "work"],
  styles: ["solid", "regular"],
  label: "Building"
}, {
  name: "bullhorn",
  search: ["announcement", "broadcast", "louder", "megaphone", "share"],
  styles: ["solid"],
  label: "bullhorn"
}, {
  name: "bullseye",
  search: ["archery", "goal", "objective", "target"],
  styles: ["solid"],
  label: "Bullseye"
}, {
  name: "burn",
  search: ["caliente", "energy", "fire", "flame", "gas", "heat", "hot"],
  styles: ["solid"],
  label: "Burn"
}, {
  name: "buromobelexperte",
  search: [],
  styles: ["brands"],
  label: "Büromöbel-Experte GmbH & Co. KG."
}, {
  name: "bus",
  search: ["public transportation", "transportation", "travel", "vehicle"],
  styles: ["solid"],
  label: "Bus"
}, {
  name: "bus-alt",
  search: ["mta", "public transportation", "transportation", "travel", "vehicle"],
  styles: ["solid"],
  label: "Bus Alt"
}, {
  name: "business-time",
  search: ["alarm", "briefcase", "business socks", "clock", "flight of the conchords", "reminder", "wednesday"],
  styles: ["solid"],
  label: "Business Time"
}, {
  name: "buy-n-large",
  search: [],
  styles: ["brands"],
  label: "Buy n Large"
}, {
  name: "buysellads",
  search: [],
  styles: ["brands"],
  label: "BuySellAds"
}, {
  name: "calculator",
  search: ["abacus", "addition", "arithmetic", "counting", "math", "multiplication", "subtraction"],
  styles: ["solid"],
  label: "Calculator"
}, {
  name: "calendar",
  search: ["calendar-o", "date", "event", "schedule", "time", "when"],
  styles: ["solid", "regular"],
  label: "Calendar"
}, {
  name: "calendar-alt",
  search: ["calendar", "date", "event", "schedule", "time", "when"],
  styles: ["solid", "regular"],
  label: "Alternate Calendar"
}, {
  name: "calendar-check",
  search: ["accept", "agree", "appointment", "confirm", "correct", "date", "done", "event", "ok", "schedule", "select", "success", "tick", "time", "todo", "when"],
  styles: ["solid", "regular"],
  label: "Calendar Check"
}, {
  name: "calendar-day",
  search: ["date", "detail", "event", "focus", "schedule", "single day", "time", "today", "when"],
  styles: ["solid"],
  label: "Calendar with Day Focus"
}, {
  name: "calendar-minus",
  search: ["calendar", "date", "delete", "event", "negative", "remove", "schedule", "time", "when"],
  styles: ["solid", "regular"],
  label: "Calendar Minus"
}, {
  name: "calendar-plus",
  search: ["add", "calendar", "create", "date", "event", "new", "positive", "schedule", "time", "when"],
  styles: ["solid", "regular"],
  label: "Calendar Plus"
}, {
  name: "calendar-times",
  search: ["archive", "calendar", "date", "delete", "event", "remove", "schedule", "time", "when", "x"],
  styles: ["solid", "regular"],
  label: "Calendar Times"
}, {
  name: "calendar-week",
  search: ["date", "detail", "event", "focus", "schedule", "single week", "time", "today", "when"],
  styles: ["solid"],
  label: "Calendar with Week Focus"
}, {
  name: "camera",
  search: ["image", "lens", "photo", "picture", "record", "shutter", "video"],
  styles: ["solid"],
  label: "camera"
}, {
  name: "camera-retro",
  search: ["image", "lens", "photo", "picture", "record", "shutter", "video"],
  styles: ["solid"],
  label: "Retro Camera"
}, {
  name: "campground",
  search: ["camping", "fall", "outdoors", "teepee", "tent", "tipi"],
  styles: ["solid"],
  label: "Campground"
}, {
  name: "canadian-maple-leaf",
  search: ["canada", "flag", "flora", "nature", "plant"],
  styles: ["brands"],
  label: "Canadian Maple Leaf"
}, {
  name: "candy-cane",
  search: ["candy", "christmas", "holiday", "mint", "peppermint", "striped", "xmas"],
  styles: ["solid"],
  label: "Candy Cane"
}, {
  name: "cannabis",
  search: ["bud", "chronic", "drugs", "endica", "endo", "ganja", "marijuana", "mary jane", "pot", "reefer", "sativa", "spliff", "weed", "whacky-tabacky"],
  styles: ["solid"],
  label: "Cannabis"
}, {
  name: "capsules",
  search: ["drugs", "medicine", "pills", "prescription"],
  styles: ["solid"],
  label: "Capsules"
}, {
  name: "car",
  search: ["auto", "automobile", "sedan", "transportation", "travel", "vehicle"],
  styles: ["solid"],
  label: "Car"
}, {
  name: "car-alt",
  search: ["auto", "automobile", "sedan", "transportation", "travel", "vehicle"],
  styles: ["solid"],
  label: "Alternate Car"
}, {
  name: "car-battery",
  search: ["auto", "electric", "mechanic", "power"],
  styles: ["solid"],
  label: "Car Battery"
}, {
  name: "car-crash",
  search: ["accident", "auto", "automobile", "insurance", "sedan", "transportation", "vehicle", "wreck"],
  styles: ["solid"],
  label: "Car Crash"
}, {
  name: "car-side",
  search: ["auto", "automobile", "sedan", "transportation", "travel", "vehicle"],
  styles: ["solid"],
  label: "Car Side"
}, {
  name: "caravan",
  search: ["camper", "motor home", "rv", "trailer", "travel"],
  styles: ["solid"],
  label: "Caravan"
}, {
  name: "caret-down",
  search: ["arrow", "dropdown", "expand", "menu", "more", "triangle"],
  styles: ["solid"],
  label: "Caret Down"
}, {
  name: "caret-left",
  search: ["arrow", "back", "previous", "triangle"],
  styles: ["solid"],
  label: "Caret Left"
}, {
  name: "caret-right",
  search: ["arrow", "forward", "next", "triangle"],
  styles: ["solid"],
  label: "Caret Right"
}, {
  name: "caret-square-down",
  search: ["arrow", "caret-square-o-down", "dropdown", "expand", "menu", "more", "triangle"],
  styles: ["solid", "regular"],
  label: "Caret Square Down"
}, {
  name: "caret-square-left",
  search: ["arrow", "back", "caret-square-o-left", "previous", "triangle"],
  styles: ["solid", "regular"],
  label: "Caret Square Left"
}, {
  name: "caret-square-right",
  search: ["arrow", "caret-square-o-right", "forward", "next", "triangle"],
  styles: ["solid", "regular"],
  label: "Caret Square Right"
}, {
  name: "caret-square-up",
  search: ["arrow", "caret-square-o-up", "collapse", "triangle", "upload"],
  styles: ["solid", "regular"],
  label: "Caret Square Up"
}, {
  name: "caret-up",
  search: ["arrow", "collapse", "triangle"],
  styles: ["solid"],
  label: "Caret Up"
}, {
  name: "carrot",
  search: ["bugs bunny", "orange", "vegan", "vegetable"],
  styles: ["solid"],
  label: "Carrot"
}, {
  name: "cart-arrow-down",
  search: ["download", "save", "shopping"],
  styles: ["solid"],
  label: "Shopping Cart Arrow Down"
}, {
  name: "cart-plus",
  search: ["add", "create", "new", "positive", "shopping"],
  styles: ["solid"],
  label: "Add to Shopping Cart"
}, {
  name: "cash-register",
  search: ["buy", "cha-ching", "change", "checkout", "commerce", "leaerboard", "machine", "pay", "payment", "purchase", "store"],
  styles: ["solid"],
  label: "Cash Register"
}, {
  name: "cat",
  search: ["feline", "halloween", "holiday", "kitten", "kitty", "meow", "pet"],
  styles: ["solid"],
  label: "Cat"
}, {
  name: "cc-amazon-pay",
  search: [],
  styles: ["brands"],
  label: "Amazon Pay Credit Card"
}, {
  name: "cc-amex",
  search: ["amex"],
  styles: ["brands"],
  label: "American Express Credit Card"
}, {
  name: "cc-apple-pay",
  search: [],
  styles: ["brands"],
  label: "Apple Pay Credit Card"
}, {
  name: "cc-diners-club",
  search: [],
  styles: ["brands"],
  label: "Diner's Club Credit Card"
}, {
  name: "cc-discover",
  search: [],
  styles: ["brands"],
  label: "Discover Credit Card"
}, {
  name: "cc-jcb",
  search: [],
  styles: ["brands"],
  label: "JCB Credit Card"
}, {
  name: "cc-mastercard",
  search: [],
  styles: ["brands"],
  label: "MasterCard Credit Card"
}, {
  name: "cc-paypal",
  search: [],
  styles: ["brands"],
  label: "Paypal Credit Card"
}, {
  name: "cc-stripe",
  search: [],
  styles: ["brands"],
  label: "Stripe Credit Card"
}, {
  name: "cc-visa",
  search: [],
  styles: ["brands"],
  label: "Visa Credit Card"
}, {
  name: "centercode",
  search: [],
  styles: ["brands"],
  label: "Centercode"
}, {
  name: "centos",
  search: ["linux", "operating system", "os"],
  styles: ["brands"],
  label: "Centos"
}, {
  name: "certificate",
  search: ["badge", "star", "verified"],
  styles: ["solid"],
  label: "certificate"
}, {
  name: "chair",
  search: ["furniture", "seat", "sit"],
  styles: ["solid"],
  label: "Chair"
}, {
  name: "chalkboard",
  search: ["blackboard", "learning", "school", "teaching", "whiteboard", "writing"],
  styles: ["solid"],
  label: "Chalkboard"
}, {
  name: "chalkboard-teacher",
  search: ["blackboard", "instructor", "learning", "professor", "school", "whiteboard", "writing"],
  styles: ["solid"],
  label: "Chalkboard Teacher"
}, {
  name: "charging-station",
  search: ["electric", "ev", "tesla", "vehicle"],
  styles: ["solid"],
  label: "Charging Station"
}, {
  name: "chart-area",
  search: ["analytics", "area", "chart", "graph"],
  styles: ["solid"],
  label: "Area Chart"
}, {
  name: "chart-bar",
  search: ["analytics", "bar", "chart", "graph"],
  styles: ["solid", "regular"],
  label: "Bar Chart"
}, {
  name: "chart-line",
  search: ["activity", "analytics", "chart", "dashboard", "gain", "graph", "increase", "line"],
  styles: ["solid"],
  label: "Line Chart"
}, {
  name: "chart-pie",
  search: ["analytics", "chart", "diagram", "graph", "pie"],
  styles: ["solid"],
  label: "Pie Chart"
}, {
  name: "check",
  search: ["accept", "agree", "checkmark", "confirm", "correct", "done", "notice", "notification", "notify", "ok", "select", "success", "tick", "todo", "yes"],
  styles: ["solid"],
  label: "Check"
}, {
  name: "check-circle",
  search: ["accept", "agree", "confirm", "correct", "done", "ok", "select", "success", "tick", "todo", "yes"],
  styles: ["solid", "regular"],
  label: "Check Circle"
}, {
  name: "check-double",
  search: ["accept", "agree", "checkmark", "confirm", "correct", "done", "notice", "notification", "notify", "ok", "select", "success", "tick", "todo"],
  styles: ["solid"],
  label: "Double Check"
}, {
  name: "check-square",
  search: ["accept", "agree", "checkmark", "confirm", "correct", "done", "ok", "select", "success", "tick", "todo", "yes"],
  styles: ["solid", "regular"],
  label: "Check Square"
}, {
  name: "cheese",
  search: ["cheddar", "curd", "gouda", "melt", "parmesan", "sandwich", "swiss", "wedge"],
  styles: ["solid"],
  label: "Cheese"
}, {
  name: "chess",
  search: ["board", "castle", "checkmate", "game", "king", "rook", "strategy", "tournament"],
  styles: ["solid"],
  label: "Chess"
}, {
  name: "chess-bishop",
  search: ["board", "checkmate", "game", "strategy"],
  styles: ["solid"],
  label: "Chess Bishop"
}, {
  name: "chess-board",
  search: ["board", "checkmate", "game", "strategy"],
  styles: ["solid"],
  label: "Chess Board"
}, {
  name: "chess-king",
  search: ["board", "checkmate", "game", "strategy"],
  styles: ["solid"],
  label: "Chess King"
}, {
  name: "chess-knight",
  search: ["board", "checkmate", "game", "horse", "strategy"],
  styles: ["solid"],
  label: "Chess Knight"
}, {
  name: "chess-pawn",
  search: ["board", "checkmate", "game", "strategy"],
  styles: ["solid"],
  label: "Chess Pawn"
}, {
  name: "chess-queen",
  search: ["board", "checkmate", "game", "strategy"],
  styles: ["solid"],
  label: "Chess Queen"
}, {
  name: "chess-rook",
  search: ["board", "castle", "checkmate", "game", "strategy"],
  styles: ["solid"],
  label: "Chess Rook"
}, {
  name: "chevron-circle-down",
  search: ["arrow", "download", "dropdown", "menu", "more"],
  styles: ["solid"],
  label: "Chevron Circle Down"
}, {
  name: "chevron-circle-left",
  search: ["arrow", "back", "previous"],
  styles: ["solid"],
  label: "Chevron Circle Left"
}, {
  name: "chevron-circle-right",
  search: ["arrow", "forward", "next"],
  styles: ["solid"],
  label: "Chevron Circle Right"
}, {
  name: "chevron-circle-up",
  search: ["arrow", "collapse", "upload"],
  styles: ["solid"],
  label: "Chevron Circle Up"
}, {
  name: "chevron-down",
  search: ["arrow", "download", "expand"],
  styles: ["solid"],
  label: "chevron-down"
}, {
  name: "chevron-left",
  search: ["arrow", "back", "bracket", "previous"],
  styles: ["solid"],
  label: "chevron-left"
}, {
  name: "chevron-right",
  search: ["arrow", "bracket", "forward", "next"],
  styles: ["solid"],
  label: "chevron-right"
}, {
  name: "chevron-up",
  search: ["arrow", "collapse", "upload"],
  styles: ["solid"],
  label: "chevron-up"
}, {
  name: "child",
  search: ["boy", "girl", "kid", "toddler", "young"],
  styles: ["solid"],
  label: "Child"
}, {
  name: "chrome",
  search: ["browser"],
  styles: ["brands"],
  label: "Chrome"
}, {
  name: "chromecast",
  search: [],
  styles: ["brands"],
  label: "Chromecast"
}, {
  name: "church",
  search: ["building", "cathedral", "chapel", "community", "religion"],
  styles: ["solid"],
  label: "Church"
}, {
  name: "circle",
  search: ["circle-thin", "diameter", "dot", "ellipse", "notification", "round"],
  styles: ["solid", "regular"],
  label: "Circle"
}, {
  name: "circle-notch",
  search: ["circle-o-notch", "diameter", "dot", "ellipse", "round", "spinner"],
  styles: ["solid"],
  label: "Circle Notched"
}, {
  name: "city",
  search: ["buildings", "busy", "skyscrapers", "urban", "windows"],
  styles: ["solid"],
  label: "City"
}, {
  name: "clinic-medical",
  search: ["covid-19", "doctor", "general practitioner", "hospital", "infirmary", "medicine", "office", "outpatient"],
  styles: ["solid"],
  label: "Medical Clinic"
}, {
  name: "clipboard",
  search: ["copy", "notes", "paste", "record"],
  styles: ["solid", "regular"],
  label: "Clipboard"
}, {
  name: "clipboard-check",
  search: ["accept", "agree", "confirm", "done", "ok", "select", "success", "tick", "todo", "yes"],
  styles: ["solid"],
  label: "Clipboard with Check"
}, {
  name: "clipboard-list",
  search: ["checklist", "completed", "done", "finished", "intinerary", "ol", "schedule", "tick", "todo", "ul"],
  styles: ["solid"],
  label: "Clipboard List"
}, {
  name: "clock",
  search: ["date", "late", "schedule", "time", "timer", "timestamp", "watch"],
  styles: ["solid", "regular"],
  label: "Clock"
}, {
  name: "clone",
  search: ["arrange", "copy", "duplicate", "paste"],
  styles: ["solid", "regular"],
  label: "Clone"
}, {
  name: "closed-captioning",
  search: ["cc", "deaf", "hearing", "subtitle", "subtitling", "text", "video"],
  styles: ["solid", "regular"],
  label: "Closed Captioning"
}, {
  name: "cloud",
  search: ["atmosphere", "fog", "overcast", "save", "upload", "weather"],
  styles: ["solid"],
  label: "Cloud"
}, {
  name: "cloud-download-alt",
  search: ["download", "export", "save"],
  styles: ["solid"],
  label: "Alternate Cloud Download"
}, {
  name: "cloud-meatball",
  search: ["FLDSMDFR", "food", "spaghetti", "storm"],
  styles: ["solid"],
  label: "Cloud with (a chance of) Meatball"
}, {
  name: "cloud-moon",
  search: ["crescent", "evening", "lunar", "night", "partly cloudy", "sky"],
  styles: ["solid"],
  label: "Cloud with Moon"
}, {
  name: "cloud-moon-rain",
  search: ["crescent", "evening", "lunar", "night", "partly cloudy", "precipitation", "rain", "sky", "storm"],
  styles: ["solid"],
  label: "Cloud with Moon and Rain"
}, {
  name: "cloud-rain",
  search: ["precipitation", "rain", "sky", "storm"],
  styles: ["solid"],
  label: "Cloud with Rain"
}, {
  name: "cloud-showers-heavy",
  search: ["precipitation", "rain", "sky", "storm"],
  styles: ["solid"],
  label: "Cloud with Heavy Showers"
}, {
  name: "cloud-sun",
  search: ["clear", "day", "daytime", "fall", "outdoors", "overcast", "partly cloudy"],
  styles: ["solid"],
  label: "Cloud with Sun"
}, {
  name: "cloud-sun-rain",
  search: ["day", "overcast", "precipitation", "storm", "summer", "sunshower"],
  styles: ["solid"],
  label: "Cloud with Sun and Rain"
}, {
  name: "cloud-upload-alt",
  search: ["cloud-upload", "import", "save", "upload"],
  styles: ["solid"],
  label: "Alternate Cloud Upload"
}, {
  name: "cloudscale",
  search: [],
  styles: ["brands"],
  label: "cloudscale.ch"
}, {
  name: "cloudsmith",
  search: [],
  styles: ["brands"],
  label: "Cloudsmith"
}, {
  name: "cloudversify",
  search: [],
  styles: ["brands"],
  label: "cloudversify"
}, {
  name: "cocktail",
  search: ["alcohol", "beverage", "drink", "gin", "glass", "margarita", "martini", "vodka"],
  styles: ["solid"],
  label: "Cocktail"
}, {
  name: "code",
  search: ["brackets", "code", "development", "html"],
  styles: ["solid"],
  label: "Code"
}, {
  name: "code-branch",
  search: ["branch", "code-fork", "fork", "git", "github", "rebase", "svn", "vcs", "version"],
  styles: ["solid"],
  label: "Code Branch"
}, {
  name: "codepen",
  search: [],
  styles: ["brands"],
  label: "Codepen"
}, {
  name: "codiepie",
  search: [],
  styles: ["brands"],
  label: "Codie Pie"
}, {
  name: "coffee",
  search: ["beverage", "breakfast", "cafe", "drink", "fall", "morning", "mug", "seasonal", "tea"],
  styles: ["solid"],
  label: "Coffee"
}, {
  name: "cog",
  search: ["gear", "mechanical", "settings", "sprocket", "wheel"],
  styles: ["solid"],
  label: "cog"
}, {
  name: "cogs",
  search: ["gears", "mechanical", "settings", "sprocket", "wheel"],
  styles: ["solid"],
  label: "cogs"
}, {
  name: "coins",
  search: ["currency", "dime", "financial", "gold", "money", "penny"],
  styles: ["solid"],
  label: "Coins"
}, {
  name: "columns",
  search: ["browser", "dashboard", "organize", "panes", "split"],
  styles: ["solid"],
  label: "Columns"
}, {
  name: "comment",
  search: ["bubble", "chat", "commenting", "conversation", "feedback", "message", "note", "notification", "sms", "speech", "texting"],
  styles: ["solid", "regular"],
  label: "comment"
}, {
  name: "comment-alt",
  search: ["bubble", "chat", "commenting", "conversation", "feedback", "message", "note", "notification", "sms", "speech", "texting"],
  styles: ["solid", "regular"],
  label: "Alternate Comment"
}, {
  name: "comment-dollar",
  search: ["bubble", "chat", "commenting", "conversation", "feedback", "message", "money", "note", "notification", "pay", "sms", "speech", "spend", "texting", "transfer"],
  styles: ["solid"],
  label: "Comment Dollar"
}, {
  name: "comment-dots",
  search: ["bubble", "chat", "commenting", "conversation", "feedback", "message", "more", "note", "notification", "reply", "sms", "speech", "texting"],
  styles: ["solid", "regular"],
  label: "Comment Dots"
}, {
  name: "comment-medical",
  search: ["advice", "bubble", "chat", "commenting", "conversation", "diagnose", "feedback", "message", "note", "notification", "prescription", "sms", "speech", "texting"],
  styles: ["solid"],
  label: "Alternate Medical Chat"
}, {
  name: "comment-slash",
  search: ["bubble", "cancel", "chat", "commenting", "conversation", "feedback", "message", "mute", "note", "notification", "quiet", "sms", "speech", "texting"],
  styles: ["solid"],
  label: "Comment Slash"
}, {
  name: "comments",
  search: ["bubble", "chat", "commenting", "conversation", "feedback", "message", "note", "notification", "sms", "speech", "texting"],
  styles: ["solid", "regular"],
  label: "comments"
}, {
  name: "comments-dollar",
  search: ["bubble", "chat", "commenting", "conversation", "feedback", "message", "money", "note", "notification", "pay", "sms", "speech", "spend", "texting", "transfer"],
  styles: ["solid"],
  label: "Comments Dollar"
}, {
  name: "compact-disc",
  search: ["album", "bluray", "cd", "disc", "dvd", "media", "movie", "music", "record", "video", "vinyl"],
  styles: ["solid"],
  label: "Compact Disc"
}, {
  name: "compass",
  search: ["directions", "directory", "location", "menu", "navigation", "safari", "travel"],
  styles: ["solid", "regular"],
  label: "Compass"
}, {
  name: "compress",
  search: ["collapse", "fullscreen", "minimize", "move", "resize", "shrink", "smaller"],
  styles: ["solid"],
  label: "Compress"
}, {
  name: "compress-alt",
  search: ["collapse", "fullscreen", "minimize", "move", "resize", "shrink", "smaller"],
  styles: ["solid"],
  label: "Alternate Compress"
}, {
  name: "compress-arrows-alt",
  search: ["collapse", "fullscreen", "minimize", "move", "resize", "shrink", "smaller"],
  styles: ["solid"],
  label: "Alternate Compress Arrows"
}, {
  name: "concierge-bell",
  search: ["attention", "hotel", "receptionist", "service", "support"],
  styles: ["solid"],
  label: "Concierge Bell"
}, {
  name: "confluence",
  search: ["atlassian"],
  styles: ["brands"],
  label: "Confluence"
}, {
  name: "connectdevelop",
  search: [],
  styles: ["brands"],
  label: "Connect Develop"
}, {
  name: "contao",
  search: [],
  styles: ["brands"],
  label: "Contao"
}, {
  name: "cookie",
  search: ["baked good", "chips", "chocolate", "eat", "snack", "sweet", "treat"],
  styles: ["solid"],
  label: "Cookie"
}, {
  name: "cookie-bite",
  search: ["baked good", "bitten", "chips", "chocolate", "eat", "snack", "sweet", "treat"],
  styles: ["solid"],
  label: "Cookie Bite"
}, {
  name: "copy",
  search: ["clone", "duplicate", "file", "files-o", "paper", "paste"],
  styles: ["solid", "regular"],
  label: "Copy"
}, {
  name: "copyright",
  search: ["brand", "mark", "register", "trademark"],
  styles: ["solid", "regular"],
  label: "Copyright"
}, {
  name: "cotton-bureau",
  search: ["clothing", "t-shirts", "tshirts"],
  styles: ["brands"],
  label: "Cotton Bureau"
}, {
  name: "couch",
  search: ["chair", "cushion", "furniture", "relax", "sofa"],
  styles: ["solid"],
  label: "Couch"
}, {
  name: "cpanel",
  search: [],
  styles: ["brands"],
  label: "cPanel"
}, {
  name: "creative-commons",
  search: [],
  styles: ["brands"],
  label: "Creative Commons"
}, {
  name: "creative-commons-by",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Attribution"
}, {
  name: "creative-commons-nc",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Noncommercial"
}, {
  name: "creative-commons-nc-eu",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Noncommercial (Euro Sign)"
}, {
  name: "creative-commons-nc-jp",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Noncommercial (Yen Sign)"
}, {
  name: "creative-commons-nd",
  search: [],
  styles: ["brands"],
  label: "Creative Commons No Derivative Works"
}, {
  name: "creative-commons-pd",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Public Domain"
}, {
  name: "creative-commons-pd-alt",
  search: [],
  styles: ["brands"],
  label: "Alternate Creative Commons Public Domain"
}, {
  name: "creative-commons-remix",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Remix"
}, {
  name: "creative-commons-sa",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Share Alike"
}, {
  name: "creative-commons-sampling",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Sampling"
}, {
  name: "creative-commons-sampling-plus",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Sampling +"
}, {
  name: "creative-commons-share",
  search: [],
  styles: ["brands"],
  label: "Creative Commons Share"
}, {
  name: "creative-commons-zero",
  search: [],
  styles: ["brands"],
  label: "Creative Commons CC0"
}, {
  name: "credit-card",
  search: ["buy", "checkout", "credit-card-alt", "debit", "money", "payment", "purchase"],
  styles: ["solid", "regular"],
  label: "Credit Card"
}, {
  name: "critical-role",
  search: ["Dungeons & Dragons", "d&d", "dnd", "fantasy", "game", "gaming", "tabletop"],
  styles: ["brands"],
  label: "Critical Role"
}, {
  name: "crop",
  search: ["design", "frame", "mask", "resize", "shrink"],
  styles: ["solid"],
  label: "crop"
}, {
  name: "crop-alt",
  search: ["design", "frame", "mask", "resize", "shrink"],
  styles: ["solid"],
  label: "Alternate Crop"
}, {
  name: "cross",
  search: ["catholicism", "christianity", "church", "jesus"],
  styles: ["solid"],
  label: "Cross"
}, {
  name: "crosshairs",
  search: ["aim", "bullseye", "gpd", "picker", "position"],
  styles: ["solid"],
  label: "Crosshairs"
}, {
  name: "crow",
  search: ["bird", "bullfrog", "fauna", "halloween", "holiday", "toad"],
  styles: ["solid"],
  label: "Crow"
}, {
  name: "crown",
  search: ["award", "favorite", "king", "queen", "royal", "tiara"],
  styles: ["solid"],
  label: "Crown"
}, {
  name: "crutch",
  search: ["cane", "injury", "mobility", "wheelchair"],
  styles: ["solid"],
  label: "Crutch"
}, {
  name: "css3",
  search: ["code"],
  styles: ["brands"],
  label: "CSS 3 Logo"
}, {
  name: "css3-alt",
  search: [],
  styles: ["brands"],
  label: "Alternate CSS3 Logo"
}, {
  name: "cube",
  search: ["3d", "block", "dice", "package", "square", "tesseract"],
  styles: ["solid"],
  label: "Cube"
}, {
  name: "cubes",
  search: ["3d", "block", "dice", "package", "pyramid", "square", "stack", "tesseract"],
  styles: ["solid"],
  label: "Cubes"
}, {
  name: "cut",
  search: ["clip", "scissors", "snip"],
  styles: ["solid"],
  label: "Cut"
}, {
  name: "cuttlefish",
  search: [],
  styles: ["brands"],
  label: "Cuttlefish"
}, {
  name: "d-and-d",
  search: [],
  styles: ["brands"],
  label: "Dungeons & Dragons"
}, {
  name: "d-and-d-beyond",
  search: ["Dungeons & Dragons", "d&d", "dnd", "fantasy", "gaming", "tabletop"],
  styles: ["brands"],
  label: "D&D Beyond"
}, {
  name: "dailymotion",
  search: [],
  styles: ["brands"],
  label: "dailymotion"
}, {
  name: "dashcube",
  search: [],
  styles: ["brands"],
  label: "DashCube"
}, {
  name: "database",
  search: ["computer", "development", "directory", "memory", "storage"],
  styles: ["solid"],
  label: "Database"
}, {
  name: "deaf",
  search: ["ear", "hearing", "sign language"],
  styles: ["solid"],
  label: "Deaf"
}, {
  name: "delicious",
  search: [],
  styles: ["brands"],
  label: "Delicious"
}, {
  name: "democrat",
  search: ["american", "democratic party", "donkey", "election", "left", "left-wing", "liberal", "politics", "usa"],
  styles: ["solid"],
  label: "Democrat"
}, {
  name: "deploydog",
  search: [],
  styles: ["brands"],
  label: "deploy.dog"
}, {
  name: "deskpro",
  search: [],
  styles: ["brands"],
  label: "Deskpro"
}, {
  name: "desktop",
  search: ["computer", "cpu", "demo", "desktop", "device", "imac", "machine", "monitor", "pc", "screen"],
  styles: ["solid"],
  label: "Desktop"
}, {
  name: "dev",
  search: [],
  styles: ["brands"],
  label: "DEV"
}, {
  name: "deviantart",
  search: [],
  styles: ["brands"],
  label: "deviantART"
}, {
  name: "dharmachakra",
  search: ["buddhism", "buddhist", "wheel of dharma"],
  styles: ["solid"],
  label: "Dharmachakra"
}, {
  name: "dhl",
  search: ["Dalsey", "Hillblom and Lynn", "german", "package", "shipping"],
  styles: ["brands"],
  label: "DHL"
}, {
  name: "diagnoses",
  search: ["analyze", "detect", "diagnosis", "examine", "medicine"],
  styles: ["solid"],
  label: "Diagnoses"
}, {
  name: "diaspora",
  search: [],
  styles: ["brands"],
  label: "Diaspora"
}, {
  name: "dice",
  search: ["chance", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice"
}, {
  name: "dice-d20",
  search: ["Dungeons & Dragons", "chance", "d&d", "dnd", "fantasy", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice D20"
}, {
  name: "dice-d6",
  search: ["Dungeons & Dragons", "chance", "d&d", "dnd", "fantasy", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice D6"
}, {
  name: "dice-five",
  search: ["chance", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice Five"
}, {
  name: "dice-four",
  search: ["chance", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice Four"
}, {
  name: "dice-one",
  search: ["chance", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice One"
}, {
  name: "dice-six",
  search: ["chance", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice Six"
}, {
  name: "dice-three",
  search: ["chance", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice Three"
}, {
  name: "dice-two",
  search: ["chance", "gambling", "game", "roll"],
  styles: ["solid"],
  label: "Dice Two"
}, {
  name: "digg",
  search: [],
  styles: ["brands"],
  label: "Digg Logo"
}, {
  name: "digital-ocean",
  search: [],
  styles: ["brands"],
  label: "Digital Ocean"
}, {
  name: "digital-tachograph",
  search: ["data", "distance", "speed", "tachometer"],
  styles: ["solid"],
  label: "Digital Tachograph"
}, {
  name: "directions",
  search: ["map", "navigation", "sign", "turn"],
  styles: ["solid"],
  label: "Directions"
}, {
  name: "discord",
  search: [],
  styles: ["brands"],
  label: "Discord"
}, {
  name: "discourse",
  search: [],
  styles: ["brands"],
  label: "Discourse"
}, {
  name: "disease",
  search: ["bacteria", "cancer", "covid-19", "illness", "infection", "sickness", "virus"],
  styles: ["solid"],
  label: "Disease"
}, {
  name: "divide",
  search: ["arithmetic", "calculus", "division", "math"],
  styles: ["solid"],
  label: "Divide"
}, {
  name: "dizzy",
  search: ["dazed", "dead", "disapprove", "emoticon", "face"],
  styles: ["solid", "regular"],
  label: "Dizzy Face"
}, {
  name: "dna",
  search: ["double helix", "genetic", "helix", "molecule", "protein"],
  styles: ["solid"],
  label: "DNA"
}, {
  name: "dochub",
  search: [],
  styles: ["brands"],
  label: "DocHub"
}, {
  name: "docker",
  search: [],
  styles: ["brands"],
  label: "Docker"
}, {
  name: "dog",
  search: ["animal", "canine", "fauna", "mammal", "pet", "pooch", "puppy", "woof"],
  styles: ["solid"],
  label: "Dog"
}, {
  name: "dollar-sign",
  search: ["$", "cost", "dollar-sign", "money", "price", "usd"],
  styles: ["solid"],
  label: "Dollar Sign"
}, {
  name: "dolly",
  search: ["carry", "shipping", "transport"],
  styles: ["solid"],
  label: "Dolly"
}, {
  name: "dolly-flatbed",
  search: ["carry", "inventory", "shipping", "transport"],
  styles: ["solid"],
  label: "Dolly Flatbed"
}, {
  name: "donate",
  search: ["contribute", "generosity", "gift", "give"],
  styles: ["solid"],
  label: "Donate"
}, {
  name: "door-closed",
  search: ["enter", "exit", "locked"],
  styles: ["solid"],
  label: "Door Closed"
}, {
  name: "door-open",
  search: ["enter", "exit", "welcome"],
  styles: ["solid"],
  label: "Door Open"
}, {
  name: "dot-circle",
  search: ["bullseye", "notification", "target"],
  styles: ["solid", "regular"],
  label: "Dot Circle"
}, {
  name: "dove",
  search: ["bird", "fauna", "flying", "peace", "war"],
  styles: ["solid"],
  label: "Dove"
}, {
  name: "download",
  search: ["export", "hard drive", "save", "transfer"],
  styles: ["solid"],
  label: "Download"
}, {
  name: "draft2digital",
  search: [],
  styles: ["brands"],
  label: "Draft2digital"
}, {
  name: "drafting-compass",
  search: ["design", "map", "mechanical drawing", "plot", "plotting"],
  styles: ["solid"],
  label: "Drafting Compass"
}, {
  name: "dragon",
  search: ["Dungeons & Dragons", "d&d", "dnd", "fantasy", "fire", "lizard", "serpent"],
  styles: ["solid"],
  label: "Dragon"
}, {
  name: "draw-polygon",
  search: ["anchors", "lines", "object", "render", "shape"],
  styles: ["solid"],
  label: "Draw Polygon"
}, {
  name: "dribbble",
  search: [],
  styles: ["brands"],
  label: "Dribbble"
}, {
  name: "dribbble-square",
  search: [],
  styles: ["brands"],
  label: "Dribbble Square"
}, {
  name: "dropbox",
  search: [],
  styles: ["brands"],
  label: "Dropbox"
}, {
  name: "drum",
  search: ["instrument", "music", "percussion", "snare", "sound"],
  styles: ["solid"],
  label: "Drum"
}, {
  name: "drum-steelpan",
  search: ["calypso", "instrument", "music", "percussion", "reggae", "snare", "sound", "steel", "tropical"],
  styles: ["solid"],
  label: "Drum Steelpan"
}, {
  name: "drumstick-bite",
  search: ["bone", "chicken", "leg", "meat", "poultry", "turkey"],
  styles: ["solid"],
  label: "Drumstick with Bite Taken Out"
}, {
  name: "drupal",
  search: [],
  styles: ["brands"],
  label: "Drupal Logo"
}, {
  name: "dumbbell",
  search: ["exercise", "gym", "strength", "weight", "weight-lifting"],
  styles: ["solid"],
  label: "Dumbbell"
}, {
  name: "dumpster",
  search: ["alley", "bin", "commercial", "trash", "waste"],
  styles: ["solid"],
  label: "Dumpster"
}, {
  name: "dumpster-fire",
  search: ["alley", "bin", "commercial", "danger", "dangerous", "euphemism", "flame", "heat", "hot", "trash", "waste"],
  styles: ["solid"],
  label: "Dumpster Fire"
}, {
  name: "dungeon",
  search: ["Dungeons & Dragons", "building", "d&d", "dnd", "door", "entrance", "fantasy", "gate"],
  styles: ["solid"],
  label: "Dungeon"
}, {
  name: "dyalog",
  search: [],
  styles: ["brands"],
  label: "Dyalog"
}, {
  name: "earlybirds",
  search: [],
  styles: ["brands"],
  label: "Earlybirds"
}, {
  name: "ebay",
  search: [],
  styles: ["brands"],
  label: "eBay"
}, {
  name: "edge",
  search: ["browser", "ie"],
  styles: ["brands"],
  label: "Edge Browser"
}, {
  name: "edit",
  search: ["edit", "pen", "pencil", "update", "write"],
  styles: ["solid", "regular"],
  label: "Edit"
}, {
  name: "egg",
  search: ["breakfast", "chicken", "easter", "shell", "yolk"],
  styles: ["solid"],
  label: "Egg"
}, {
  name: "eject",
  search: ["abort", "cancel", "cd", "discharge"],
  styles: ["solid"],
  label: "eject"
}, {
  name: "elementor",
  search: [],
  styles: ["brands"],
  label: "Elementor"
}, {
  name: "ellipsis-h",
  search: ["dots", "drag", "kebab", "list", "menu", "nav", "navigation", "ol", "reorder", "settings", "ul"],
  styles: ["solid"],
  label: "Horizontal Ellipsis"
}, {
  name: "ellipsis-v",
  search: ["dots", "drag", "kebab", "list", "menu", "nav", "navigation", "ol", "reorder", "settings", "ul"],
  styles: ["solid"],
  label: "Vertical Ellipsis"
}, {
  name: "ello",
  search: [],
  styles: ["brands"],
  label: "Ello"
}, {
  name: "ember",
  search: [],
  styles: ["brands"],
  label: "Ember"
}, {
  name: "empire",
  search: [],
  styles: ["brands"],
  label: "Galactic Empire"
}, {
  name: "envelope",
  search: ["e-mail", "email", "letter", "mail", "message", "notification", "support"],
  styles: ["solid", "regular"],
  label: "Envelope"
}, {
  name: "envelope-open",
  search: ["e-mail", "email", "letter", "mail", "message", "notification", "support"],
  styles: ["solid", "regular"],
  label: "Envelope Open"
}, {
  name: "envelope-open-text",
  search: ["e-mail", "email", "letter", "mail", "message", "notification", "support"],
  styles: ["solid"],
  label: "Envelope Open-text"
}, {
  name: "envelope-square",
  search: ["e-mail", "email", "letter", "mail", "message", "notification", "support"],
  styles: ["solid"],
  label: "Envelope Square"
}, {
  name: "envira",
  search: ["leaf"],
  styles: ["brands"],
  label: "Envira Gallery"
}, {
  name: "equals",
  search: ["arithmetic", "even", "match", "math"],
  styles: ["solid"],
  label: "Equals"
}, {
  name: "eraser",
  search: ["art", "delete", "remove", "rubber"],
  styles: ["solid"],
  label: "eraser"
}, {
  name: "erlang",
  search: [],
  styles: ["brands"],
  label: "Erlang"
}, {
  name: "ethereum",
  search: [],
  styles: ["brands"],
  label: "Ethereum"
}, {
  name: "ethernet",
  search: ["cable", "cat 5", "cat 6", "connection", "hardware", "internet", "network", "wired"],
  styles: ["solid"],
  label: "Ethernet"
}, {
  name: "etsy",
  search: [],
  styles: ["brands"],
  label: "Etsy"
}, {
  name: "euro-sign",
  search: ["currency", "dollar", "exchange", "money"],
  styles: ["solid"],
  label: "Euro Sign"
}, {
  name: "evernote",
  search: [],
  styles: ["brands"],
  label: "Evernote"
}, {
  name: "exchange-alt",
  search: ["arrow", "arrows", "exchange", "reciprocate", "return", "swap", "transfer"],
  styles: ["solid"],
  label: "Alternate Exchange"
}, {
  name: "exclamation",
  search: ["alert", "danger", "error", "important", "notice", "notification", "notify", "problem", "warning"],
  styles: ["solid"],
  label: "exclamation"
}, {
  name: "exclamation-circle",
  search: ["alert", "danger", "error", "important", "notice", "notification", "notify", "problem", "warning"],
  styles: ["solid"],
  label: "Exclamation Circle"
}, {
  name: "exclamation-triangle",
  search: ["alert", "danger", "error", "important", "notice", "notification", "notify", "problem", "warning"],
  styles: ["solid"],
  label: "Exclamation Triangle"
}, {
  name: "expand",
  search: ["arrow", "bigger", "enlarge", "resize"],
  styles: ["solid"],
  label: "Expand"
}, {
  name: "expand-alt",
  search: ["arrow", "bigger", "enlarge", "resize"],
  styles: ["solid"],
  label: "Alternate Expand"
}, {
  name: "expand-arrows-alt",
  search: ["arrows-alt", "bigger", "enlarge", "move", "resize"],
  styles: ["solid"],
  label: "Alternate Expand Arrows"
}, {
  name: "expeditedssl",
  search: [],
  styles: ["brands"],
  label: "ExpeditedSSL"
}, {
  name: "external-link-alt",
  search: ["external-link", "new", "open", "share"],
  styles: ["solid"],
  label: "Alternate External Link"
}, {
  name: "external-link-square-alt",
  search: ["external-link-square", "new", "open", "share"],
  styles: ["solid"],
  label: "Alternate External Link Square"
}, {
  name: "eye",
  search: ["look", "optic", "see", "seen", "show", "sight", "views", "visible"],
  styles: ["solid", "regular"],
  label: "Eye"
}, {
  name: "eye-dropper",
  search: ["beaker", "clone", "color", "copy", "eyedropper", "pipette"],
  styles: ["solid"],
  label: "Eye Dropper"
}, {
  name: "eye-slash",
  search: ["blind", "hide", "show", "toggle", "unseen", "views", "visible", "visiblity"],
  styles: ["solid", "regular"],
  label: "Eye Slash"
}, {
  name: "facebook",
  search: ["facebook-official", "social network"],
  styles: ["brands"],
  label: "Facebook"
}, {
  name: "facebook-f",
  search: ["facebook"],
  styles: ["brands"],
  label: "Facebook F"
}, {
  name: "facebook-messenger",
  search: [],
  styles: ["brands"],
  label: "Facebook Messenger"
}, {
  name: "facebook-square",
  search: ["social network"],
  styles: ["brands"],
  label: "Facebook Square"
}, {
  name: "fan",
  search: ["ac", "air conditioning", "blade", "blower", "cool", "hot"],
  styles: ["solid"],
  label: "Fan"
}, {
  name: "fantasy-flight-games",
  search: ["Dungeons & Dragons", "d&d", "dnd", "fantasy", "game", "gaming", "tabletop"],
  styles: ["brands"],
  label: "Fantasy Flight-games"
}, {
  name: "fast-backward",
  search: ["beginning", "first", "previous", "rewind", "start"],
  styles: ["solid"],
  label: "fast-backward"
}, {
  name: "fast-forward",
  search: ["end", "last", "next"],
  styles: ["solid"],
  label: "fast-forward"
}, {
  name: "faucet",
  search: ["covid-19", "drip", "house", "hygiene", "kitchen", "sink", "water"],
  styles: ["solid"],
  label: "Faucet"
}, {
  name: "fax",
  search: ["business", "communicate", "copy", "facsimile", "send"],
  styles: ["solid"],
  label: "Fax"
}, {
  name: "feather",
  search: ["bird", "light", "plucked", "quill", "write"],
  styles: ["solid"],
  label: "Feather"
}, {
  name: "feather-alt",
  search: ["bird", "light", "plucked", "quill", "write"],
  styles: ["solid"],
  label: "Alternate Feather"
}, {
  name: "fedex",
  search: ["Federal Express", "package", "shipping"],
  styles: ["brands"],
  label: "FedEx"
}, {
  name: "fedora",
  search: ["linux", "operating system", "os"],
  styles: ["brands"],
  label: "Fedora"
}, {
  name: "female",
  search: ["human", "person", "profile", "user", "woman"],
  styles: ["solid"],
  label: "Female"
}, {
  name: "fighter-jet",
  search: ["airplane", "fast", "fly", "goose", "maverick", "plane", "quick", "top gun", "transportation", "travel"],
  styles: ["solid"],
  label: "fighter-jet"
}, {
  name: "figma",
  search: ["app", "design", "interface"],
  styles: ["brands"],
  label: "Figma"
}, {
  name: "file",
  search: ["document", "new", "page", "pdf", "resume"],
  styles: ["solid", "regular"],
  label: "File"
}, {
  name: "file-alt",
  search: ["document", "file-text", "invoice", "new", "page", "pdf"],
  styles: ["solid", "regular"],
  label: "Alternate File"
}, {
  name: "file-archive",
  search: [".zip", "bundle", "compress", "compression", "download", "zip"],
  styles: ["solid", "regular"],
  label: "Archive File"
}, {
  name: "file-audio",
  search: ["document", "mp3", "music", "page", "play", "sound"],
  styles: ["solid", "regular"],
  label: "Audio File"
}, {
  name: "file-code",
  search: ["css", "development", "document", "html"],
  styles: ["solid", "regular"],
  label: "Code File"
}, {
  name: "file-contract",
  search: ["agreement", "binding", "document", "legal", "signature"],
  styles: ["solid"],
  label: "File Contract"
}, {
  name: "file-csv",
  search: ["document", "excel", "numbers", "spreadsheets", "table"],
  styles: ["solid"],
  label: "File CSV"
}, {
  name: "file-download",
  search: ["document", "export", "save"],
  styles: ["solid"],
  label: "File Download"
}, {
  name: "file-excel",
  search: ["csv", "document", "numbers", "spreadsheets", "table"],
  styles: ["solid", "regular"],
  label: "Excel File"
}, {
  name: "file-export",
  search: ["download", "save"],
  styles: ["solid"],
  label: "File Export"
}, {
  name: "file-image",
  search: ["document", "image", "jpg", "photo", "png"],
  styles: ["solid", "regular"],
  label: "Image File"
}, {
  name: "file-import",
  search: ["copy", "document", "send", "upload"],
  styles: ["solid"],
  label: "File Import"
}, {
  name: "file-invoice",
  search: ["account", "bill", "charge", "document", "payment", "receipt"],
  styles: ["solid"],
  label: "File Invoice"
}, {
  name: "file-invoice-dollar",
  search: ["$", "account", "bill", "charge", "document", "dollar-sign", "money", "payment", "receipt", "usd"],
  styles: ["solid"],
  label: "File Invoice with US Dollar"
}, {
  name: "file-medical",
  search: ["document", "health", "history", "prescription", "record"],
  styles: ["solid"],
  label: "Medical File"
}, {
  name: "file-medical-alt",
  search: ["document", "health", "history", "prescription", "record"],
  styles: ["solid"],
  label: "Alternate Medical File"
}, {
  name: "file-pdf",
  search: ["acrobat", "document", "preview", "save"],
  styles: ["solid", "regular"],
  label: "PDF File"
}, {
  name: "file-powerpoint",
  search: ["display", "document", "keynote", "presentation"],
  styles: ["solid", "regular"],
  label: "Powerpoint File"
}, {
  name: "file-prescription",
  search: ["document", "drugs", "medical", "medicine", "rx"],
  styles: ["solid"],
  label: "File Prescription"
}, {
  name: "file-signature",
  search: ["John Hancock", "contract", "document", "name"],
  styles: ["solid"],
  label: "File Signature"
}, {
  name: "file-upload",
  search: ["document", "import", "page", "save"],
  styles: ["solid"],
  label: "File Upload"
}, {
  name: "file-video",
  search: ["document", "m4v", "movie", "mp4", "play"],
  styles: ["solid", "regular"],
  label: "Video File"
}, {
  name: "file-word",
  search: ["document", "edit", "page", "text", "writing"],
  styles: ["solid", "regular"],
  label: "Word File"
}, {
  name: "fill",
  search: ["bucket", "color", "paint", "paint bucket"],
  styles: ["solid"],
  label: "Fill"
}, {
  name: "fill-drip",
  search: ["bucket", "color", "drop", "paint", "paint bucket", "spill"],
  styles: ["solid"],
  label: "Fill Drip"
}, {
  name: "film",
  search: ["cinema", "movie", "strip", "video"],
  styles: ["solid"],
  label: "Film"
}, {
  name: "filter",
  search: ["funnel", "options", "separate", "sort"],
  styles: ["solid"],
  label: "Filter"
}, {
  name: "fingerprint",
  search: ["human", "id", "identification", "lock", "smudge", "touch", "unique", "unlock"],
  styles: ["solid"],
  label: "Fingerprint"
}, {
  name: "fire",
  search: ["burn", "caliente", "flame", "heat", "hot", "popular"],
  styles: ["solid"],
  label: "fire"
}, {
  name: "fire-alt",
  search: ["burn", "caliente", "flame", "heat", "hot", "popular"],
  styles: ["solid"],
  label: "Alternate Fire"
}, {
  name: "fire-extinguisher",
  search: ["burn", "caliente", "fire fighter", "flame", "heat", "hot", "rescue"],
  styles: ["solid"],
  label: "fire-extinguisher"
}, {
  name: "firefox",
  search: ["browser"],
  styles: ["brands"],
  label: "Firefox"
}, {
  name: "firefox-browser",
  search: ["browser"],
  styles: ["brands"],
  label: "Firefox Browser"
}, {
  name: "first-aid",
  search: ["emergency", "emt", "health", "medical", "rescue"],
  styles: ["solid"],
  label: "First Aid"
}, {
  name: "first-order",
  search: [],
  styles: ["brands"],
  label: "First Order"
}, {
  name: "first-order-alt",
  search: [],
  styles: ["brands"],
  label: "Alternate First Order"
}, {
  name: "firstdraft",
  search: [],
  styles: ["brands"],
  label: "firstdraft"
}, {
  name: "fish",
  search: ["fauna", "gold", "seafood", "swimming"],
  styles: ["solid"],
  label: "Fish"
}, {
  name: "fist-raised",
  search: ["Dungeons & Dragons", "d&d", "dnd", "fantasy", "hand", "ki", "monk", "resist", "strength", "unarmed combat"],
  styles: ["solid"],
  label: "Raised Fist"
}, {
  name: "flag",
  search: ["country", "notice", "notification", "notify", "pole", "report", "symbol"],
  styles: ["solid", "regular"],
  label: "flag"
}, {
  name: "flag-checkered",
  search: ["notice", "notification", "notify", "pole", "racing", "report", "symbol"],
  styles: ["solid"],
  label: "flag-checkered"
}, {
  name: "flag-usa",
  search: ["betsy ross", "country", "old glory", "stars", "stripes", "symbol"],
  styles: ["solid"],
  label: "United States of America Flag"
}, {
  name: "flask",
  search: ["beaker", "experimental", "labs", "science"],
  styles: ["solid"],
  label: "Flask"
}, {
  name: "flickr",
  search: [],
  styles: ["brands"],
  label: "Flickr"
}, {
  name: "flipboard",
  search: [],
  styles: ["brands"],
  label: "Flipboard"
}, {
  name: "flushed",
  search: ["embarrassed", "emoticon", "face"],
  styles: ["solid", "regular"],
  label: "Flushed Face"
}, {
  name: "fly",
  search: [],
  styles: ["brands"],
  label: "Fly"
}, {
  name: "folder",
  search: ["archive", "directory", "document", "file"],
  styles: ["solid", "regular"],
  label: "Folder"
}, {
  name: "folder-minus",
  search: ["archive", "delete", "directory", "document", "file", "negative", "remove"],
  styles: ["solid"],
  label: "Folder Minus"
}, {
  name: "folder-open",
  search: ["archive", "directory", "document", "empty", "file", "new"],
  styles: ["solid", "regular"],
  label: "Folder Open"
}, {
  name: "folder-plus",
  search: ["add", "archive", "create", "directory", "document", "file", "new", "positive"],
  styles: ["solid"],
  label: "Folder Plus"
}, {
  name: "font",
  search: ["alphabet", "glyph", "text", "type", "typeface"],
  styles: ["solid"],
  label: "font"
}, {
  name: "font-awesome",
  search: ["meanpath"],
  styles: ["brands"],
  label: "Font Awesome"
}, {
  name: "font-awesome-alt",
  search: [],
  styles: ["brands"],
  label: "Alternate Font Awesome"
}, {
  name: "font-awesome-flag",
  search: [],
  styles: ["brands"],
  label: "Font Awesome Flag"
}, {
  name: "fonticons",
  search: [],
  styles: ["brands"],
  label: "Fonticons"
}, {
  name: "fonticons-fi",
  search: [],
  styles: ["brands"],
  label: "Fonticons Fi"
}, {
  name: "football-ball",
  search: ["ball", "fall", "nfl", "pigskin", "seasonal"],
  styles: ["solid"],
  label: "Football Ball"
}, {
  name: "fort-awesome",
  search: ["castle"],
  styles: ["brands"],
  label: "Fort Awesome"
}, {
  name: "fort-awesome-alt",
  search: ["castle"],
  styles: ["brands"],
  label: "Alternate Fort Awesome"
}, {
  name: "forumbee",
  search: [],
  styles: ["brands"],
  label: "Forumbee"
}, {
  name: "forward",
  search: ["forward", "next", "skip"],
  styles: ["solid"],
  label: "forward"
}, {
  name: "foursquare",
  search: [],
  styles: ["brands"],
  label: "Foursquare"
}, {
  name: "free-code-camp",
  search: [],
  styles: ["brands"],
  label: "freeCodeCamp"
}, {
  name: "freebsd",
  search: [],
  styles: ["brands"],
  label: "FreeBSD"
}, {
  name: "frog",
  search: ["amphibian", "bullfrog", "fauna", "hop", "kermit", "kiss", "prince", "ribbit", "toad", "wart"],
  styles: ["solid"],
  label: "Frog"
}, {
  name: "frown",
  search: ["disapprove", "emoticon", "face", "rating", "sad"],
  styles: ["solid", "regular"],
  label: "Frowning Face"
}, {
  name: "frown-open",
  search: ["disapprove", "emoticon", "face", "rating", "sad"],
  styles: ["solid", "regular"],
  label: "Frowning Face With Open Mouth"
}, {
  name: "fulcrum",
  search: [],
  styles: ["brands"],
  label: "Fulcrum"
}, {
  name: "funnel-dollar",
  search: ["filter", "money", "options", "separate", "sort"],
  styles: ["solid"],
  label: "Funnel Dollar"
}, {
  name: "futbol",
  search: ["ball", "football", "mls", "soccer"],
  styles: ["solid", "regular"],
  label: "Futbol"
}, {
  name: "galactic-republic",
  search: ["politics", "star wars"],
  styles: ["brands"],
  label: "Galactic Republic"
}, {
  name: "galactic-senate",
  search: ["star wars"],
  styles: ["brands"],
  label: "Galactic Senate"
}, {
  name: "gamepad",
  search: ["arcade", "controller", "d-pad", "joystick", "video", "video game"],
  styles: ["solid"],
  label: "Gamepad"
}, {
  name: "gas-pump",
  search: ["car", "fuel", "gasoline", "petrol"],
  styles: ["solid"],
  label: "Gas Pump"
}, {
  name: "gavel",
  search: ["hammer", "judge", "law", "lawyer", "opinion"],
  styles: ["solid"],
  label: "Gavel"
}, {
  name: "gem",
  search: ["diamond", "jewelry", "sapphire", "stone", "treasure"],
  styles: ["solid", "regular"],
  label: "Gem"
}, {
  name: "genderless",
  search: ["androgynous", "asexual", "sexless"],
  styles: ["solid"],
  label: "Genderless"
}, {
  name: "get-pocket",
  search: [],
  styles: ["brands"],
  label: "Get Pocket"
}, {
  name: "gg",
  search: [],
  styles: ["brands"],
  label: "GG Currency"
}, {
  name: "gg-circle",
  search: [],
  styles: ["brands"],
  label: "GG Currency Circle"
}, {
  name: "ghost",
  search: ["apparition", "blinky", "clyde", "floating", "halloween", "holiday", "inky", "pinky", "spirit"],
  styles: ["solid"],
  label: "Ghost"
}, {
  name: "gift",
  search: ["christmas", "generosity", "giving", "holiday", "party", "present", "wrapped", "xmas"],
  styles: ["solid"],
  label: "gift"
}, {
  name: "gifts",
  search: ["christmas", "generosity", "giving", "holiday", "party", "present", "wrapped", "xmas"],
  styles: ["solid"],
  label: "Gifts"
}, {
  name: "git",
  search: [],
  styles: ["brands"],
  label: "Git"
}, {
  name: "git-alt",
  search: [],
  styles: ["brands"],
  label: "Git Alt"
}, {
  name: "git-square",
  search: [],
  styles: ["brands"],
  label: "Git Square"
}, {
  name: "github",
  search: ["octocat"],
  styles: ["brands"],
  label: "GitHub"
}, {
  name: "github-alt",
  search: ["octocat"],
  styles: ["brands"],
  label: "Alternate GitHub"
}, {
  name: "github-square",
  search: ["octocat"],
  styles: ["brands"],
  label: "GitHub Square"
}, {
  name: "gitkraken",
  search: [],
  styles: ["brands"],
  label: "GitKraken"
}, {
  name: "gitlab",
  search: ["Axosoft"],
  styles: ["brands"],
  label: "GitLab"
}, {
  name: "gitter",
  search: [],
  styles: ["brands"],
  label: "Gitter"
}, {
  name: "glass-cheers",
  search: ["alcohol", "bar", "beverage", "celebration", "champagne", "clink", "drink", "holiday", "new year's eve", "party", "toast"],
  styles: ["solid"],
  label: "Glass Cheers"
}, {
  name: "glass-martini",
  search: ["alcohol", "bar", "beverage", "drink", "liquor"],
  styles: ["solid"],
  label: "Martini Glass"
}, {
  name: "glass-martini-alt",
  search: ["alcohol", "bar", "beverage", "drink", "liquor"],
  styles: ["solid"],
  label: "Alternate Glass Martini"
}, {
  name: "glass-whiskey",
  search: ["alcohol", "bar", "beverage", "bourbon", "drink", "liquor", "neat", "rye", "scotch", "whisky"],
  styles: ["solid"],
  label: "Glass Whiskey"
}, {
  name: "glasses",
  search: ["hipster", "nerd", "reading", "sight", "spectacles", "vision"],
  styles: ["solid"],
  label: "Glasses"
}, {
  name: "glide",
  search: [],
  styles: ["brands"],
  label: "Glide"
}, {
  name: "glide-g",
  search: [],
  styles: ["brands"],
  label: "Glide G"
}, {
  name: "globe",
  search: ["all", "coordinates", "country", "earth", "global", "gps", "language", "localize", "location", "map", "online", "place", "planet", "translate", "travel", "world"],
  styles: ["solid"],
  label: "Globe"
}, {
  name: "globe-africa",
  search: ["all", "country", "earth", "global", "gps", "language", "localize", "location", "map", "online", "place", "planet", "translate", "travel", "world"],
  styles: ["solid"],
  label: "Globe with Africa shown"
}, {
  name: "globe-americas",
  search: ["all", "country", "earth", "global", "gps", "language", "localize", "location", "map", "online", "place", "planet", "translate", "travel", "world"],
  styles: ["solid"],
  label: "Globe with Americas shown"
}, {
  name: "globe-asia",
  search: ["all", "country", "earth", "global", "gps", "language", "localize", "location", "map", "online", "place", "planet", "translate", "travel", "world"],
  styles: ["solid"],
  label: "Globe with Asia shown"
}, {
  name: "globe-europe",
  search: ["all", "country", "earth", "global", "gps", "language", "localize", "location", "map", "online", "place", "planet", "translate", "travel", "world"],
  styles: ["solid"],
  label: "Globe with Europe shown"
}, {
  name: "gofore",
  search: [],
  styles: ["brands"],
  label: "Gofore"
}, {
  name: "golf-ball",
  search: ["caddy", "eagle", "putt", "tee"],
  styles: ["solid"],
  label: "Golf Ball"
}, {
  name: "goodreads",
  search: [],
  styles: ["brands"],
  label: "Goodreads"
}, {
  name: "goodreads-g",
  search: [],
  styles: ["brands"],
  label: "Goodreads G"
}, {
  name: "google",
  search: [],
  styles: ["brands"],
  label: "Google Logo"
}, {
  name: "google-drive",
  search: [],
  styles: ["brands"],
  label: "Google Drive"
}, {
  name: "google-play",
  search: [],
  styles: ["brands"],
  label: "Google Play"
}, {
  name: "google-plus",
  search: ["google-plus-circle", "google-plus-official"],
  styles: ["brands"],
  label: "Google Plus"
}, {
  name: "google-plus-g",
  search: ["google-plus", "social network"],
  styles: ["brands"],
  label: "Google Plus G"
}, {
  name: "google-plus-square",
  search: ["social network"],
  styles: ["brands"],
  label: "Google Plus Square"
}, {
  name: "google-wallet",
  search: [],
  styles: ["brands"],
  label: "Google Wallet"
}, {
  name: "gopuram",
  search: ["building", "entrance", "hinduism", "temple", "tower"],
  styles: ["solid"],
  label: "Gopuram"
}, {
  name: "graduation-cap",
  search: ["ceremony", "college", "graduate", "learning", "school", "student"],
  styles: ["solid"],
  label: "Graduation Cap"
}, {
  name: "gratipay",
  search: ["favorite", "heart", "like", "love"],
  styles: ["brands"],
  label: "Gratipay (Gittip)"
}, {
  name: "grav",
  search: [],
  styles: ["brands"],
  label: "Grav"
}, {
  name: "greater-than",
  search: ["arithmetic", "compare", "math"],
  styles: ["solid"],
  label: "Greater Than"
}, {
  name: "greater-than-equal",
  search: ["arithmetic", "compare", "math"],
  styles: ["solid"],
  label: "Greater Than Equal To"
}, {
  name: "grimace",
  search: ["cringe", "emoticon", "face", "teeth"],
  styles: ["solid", "regular"],
  label: "Grimacing Face"
}, {
  name: "grin",
  search: ["emoticon", "face", "laugh", "smile"],
  styles: ["solid", "regular"],
  label: "Grinning Face"
}, {
  name: "grin-alt",
  search: ["emoticon", "face", "laugh", "smile"],
  styles: ["solid", "regular"],
  label: "Alternate Grinning Face"
}, {
  name: "grin-beam",
  search: ["emoticon", "face", "laugh", "smile"],
  styles: ["solid", "regular"],
  label: "Grinning Face With Smiling Eyes"
}, {
  name: "grin-beam-sweat",
  search: ["embarass", "emoticon", "face", "smile"],
  styles: ["solid", "regular"],
  label: "Grinning Face With Sweat"
}, {
  name: "grin-hearts",
  search: ["emoticon", "face", "love", "smile"],
  styles: ["solid", "regular"],
  label: "Smiling Face With Heart-Eyes"
}, {
  name: "grin-squint",
  search: ["emoticon", "face", "laugh", "smile"],
  styles: ["solid", "regular"],
  label: "Grinning Squinting Face"
}, {
  name: "grin-squint-tears",
  search: ["emoticon", "face", "happy", "smile"],
  styles: ["solid", "regular"],
  label: "Rolling on the Floor Laughing"
}, {
  name: "grin-stars",
  search: ["emoticon", "face", "star-struck"],
  styles: ["solid", "regular"],
  label: "Star-Struck"
}, {
  name: "grin-tears",
  search: ["LOL", "emoticon", "face"],
  styles: ["solid", "regular"],
  label: "Face With Tears of Joy"
}, {
  name: "grin-tongue",
  search: ["LOL", "emoticon", "face"],
  styles: ["solid", "regular"],
  label: "Face With Tongue"
}, {
  name: "grin-tongue-squint",
  search: ["LOL", "emoticon", "face"],
  styles: ["solid", "regular"],
  label: "Squinting Face With Tongue"
}, {
  name: "grin-tongue-wink",
  search: ["LOL", "emoticon", "face"],
  styles: ["solid", "regular"],
  label: "Winking Face With Tongue"
}, {
  name: "grin-wink",
  search: ["emoticon", "face", "flirt", "laugh", "smile"],
  styles: ["solid", "regular"],
  label: "Grinning Winking Face"
}, {
  name: "grip-horizontal",
  search: ["affordance", "drag", "drop", "grab", "handle"],
  styles: ["solid"],
  label: "Grip Horizontal"
}, {
  name: "grip-lines",
  search: ["affordance", "drag", "drop", "grab", "handle"],
  styles: ["solid"],
  label: "Grip Lines"
}, {
  name: "grip-lines-vertical",
  search: ["affordance", "drag", "drop", "grab", "handle"],
  styles: ["solid"],
  label: "Grip Lines Vertical"
}, {
  name: "grip-vertical",
  search: ["affordance", "drag", "drop", "grab", "handle"],
  styles: ["solid"],
  label: "Grip Vertical"
}, {
  name: "gripfire",
  search: [],
  styles: ["brands"],
  label: "Gripfire, Inc."
}, {
  name: "grunt",
  search: [],
  styles: ["brands"],
  label: "Grunt"
}, {
  name: "guitar",
  search: ["acoustic", "instrument", "music", "rock", "rock and roll", "song", "strings"],
  styles: ["solid"],
  label: "Guitar"
}, {
  name: "gulp",
  search: [],
  styles: ["brands"],
  label: "Gulp"
}, {
  name: "h-square",
  search: ["directions", "emergency", "hospital", "hotel", "map"],
  styles: ["solid"],
  label: "H Square"
}, {
  name: "hacker-news",
  search: [],
  styles: ["brands"],
  label: "Hacker News"
}, {
  name: "hacker-news-square",
  search: [],
  styles: ["brands"],
  label: "Hacker News Square"
}, {
  name: "hackerrank",
  search: [],
  styles: ["brands"],
  label: "Hackerrank"
}, {
  name: "hamburger",
  search: ["bacon", "beef", "burger", "burger king", "cheeseburger", "fast food", "grill", "ground beef", "mcdonalds", "sandwich"],
  styles: ["solid"],
  label: "Hamburger"
}, {
  name: "hammer",
  search: ["admin", "fix", "repair", "settings", "tool"],
  styles: ["solid"],
  label: "Hammer"
}, {
  name: "hamsa",
  search: ["amulet", "christianity", "islam", "jewish", "judaism", "muslim", "protection"],
  styles: ["solid"],
  label: "Hamsa"
}, {
  name: "hand-holding",
  search: ["carry", "lift"],
  styles: ["solid"],
  label: "Hand Holding"
}, {
  name: "hand-holding-heart",
  search: ["carry", "charity", "gift", "lift", "package"],
  styles: ["solid"],
  label: "Hand Holding Heart"
}, {
  name: "hand-holding-medical",
  search: ["care", "covid-19", "donate", "help"],
  styles: ["solid"],
  label: "Hand Holding Medical Cross"
}, {
  name: "hand-holding-usd",
  search: ["$", "carry", "dollar sign", "donation", "giving", "lift", "money", "price"],
  styles: ["solid"],
  label: "Hand Holding US Dollar"
}, {
  name: "hand-holding-water",
  search: ["carry", "covid-19", "drought", "grow", "lift"],
  styles: ["solid"],
  label: "Hand Holding Water"
}, {
  name: "hand-lizard",
  search: ["game", "roshambo"],
  styles: ["solid", "regular"],
  label: "Lizard (Hand)"
}, {
  name: "hand-middle-finger",
  search: ["flip the bird", "gesture", "hate", "rude"],
  styles: ["solid"],
  label: "Hand with Middle Finger Raised"
}, {
  name: "hand-paper",
  search: ["game", "halt", "roshambo", "stop"],
  styles: ["solid", "regular"],
  label: "Paper (Hand)"
}, {
  name: "hand-peace",
  search: ["rest", "truce"],
  styles: ["solid", "regular"],
  label: "Peace (Hand)"
}, {
  name: "hand-point-down",
  search: ["finger", "hand-o-down", "point"],
  styles: ["solid", "regular"],
  label: "Hand Pointing Down"
}, {
  name: "hand-point-left",
  search: ["back", "finger", "hand-o-left", "left", "point", "previous"],
  styles: ["solid", "regular"],
  label: "Hand Pointing Left"
}, {
  name: "hand-point-right",
  search: ["finger", "forward", "hand-o-right", "next", "point", "right"],
  styles: ["solid", "regular"],
  label: "Hand Pointing Right"
}, {
  name: "hand-point-up",
  search: ["finger", "hand-o-up", "point"],
  styles: ["solid", "regular"],
  label: "Hand Pointing Up"
}, {
  name: "hand-pointer",
  search: ["arrow", "cursor", "select"],
  styles: ["solid", "regular"],
  label: "Pointer (Hand)"
}, {
  name: "hand-rock",
  search: ["fist", "game", "roshambo"],
  styles: ["solid", "regular"],
  label: "Rock (Hand)"
}, {
  name: "hand-scissors",
  search: ["cut", "game", "roshambo"],
  styles: ["solid", "regular"],
  label: "Scissors (Hand)"
}, {
  name: "hand-sparkles",
  search: ["clean", "covid-19", "hygiene", "magic", "soap", "wash"],
  styles: ["solid"],
  label: "Hand Sparkles"
}, {
  name: "hand-spock",
  search: ["live long", "prosper", "salute", "star trek", "vulcan"],
  styles: ["solid", "regular"],
  label: "Spock (Hand)"
}, {
  name: "hands",
  search: ["carry", "hold", "lift"],
  styles: ["solid"],
  label: "Hands"
}, {
  name: "hands-helping",
  search: ["aid", "assistance", "handshake", "partnership", "volunteering"],
  styles: ["solid"],
  label: "Helping Hands"
}, {
  name: "hands-wash",
  search: ["covid-19", "hygiene", "soap", "wash"],
  styles: ["solid"],
  label: "Hands Wash"
}, {
  name: "handshake",
  search: ["agreement", "greeting", "meeting", "partnership"],
  styles: ["solid", "regular"],
  label: "Handshake"
}, {
  name: "handshake-alt-slash",
  search: ["broken", "covid-19", "social distance"],
  styles: ["solid"],
  label: "Handshake Alternate Slash"
}, {
  name: "handshake-slash",
  search: ["broken", "covid-19", "social distance"],
  styles: ["solid"],
  label: "Handshake Slash"
}, {
  name: "hanukiah",
  search: ["candle", "hanukkah", "jewish", "judaism", "light"],
  styles: ["solid"],
  label: "Hanukiah"
}, {
  name: "hard-hat",
  search: ["construction", "hardhat", "helmet", "safety"],
  styles: ["solid"],
  label: "Hard Hat"
}, {
  name: "hashtag",
  search: ["Twitter", "instagram", "pound", "social media", "tag"],
  styles: ["solid"],
  label: "Hashtag"
}, {
  name: "hat-cowboy",
  search: ["buckaroo", "horse", "jackeroo", "john b.", "old west", "pardner", "ranch", "rancher", "rodeo", "western", "wrangler"],
  styles: ["solid"],
  label: "Cowboy Hat"
}, {
  name: "hat-cowboy-side",
  search: ["buckaroo", "horse", "jackeroo", "john b.", "old west", "pardner", "ranch", "rancher", "rodeo", "western", "wrangler"],
  styles: ["solid"],
  label: "Cowboy Hat Side"
}, {
  name: "hat-wizard",
  search: ["Dungeons & Dragons", "accessory", "buckle", "clothing", "d&d", "dnd", "fantasy", "halloween", "head", "holiday", "mage", "magic", "pointy", "witch"],
  styles: ["solid"],
  label: "Wizard's Hat"
}, {
  name: "hdd",
  search: ["cpu", "hard drive", "harddrive", "machine", "save", "storage"],
  styles: ["solid", "regular"],
  label: "HDD"
}, {
  name: "head-side-cough",
  search: ["cough", "covid-19", "germs", "lungs", "respiratory", "sick"],
  styles: ["solid"],
  label: "Head Side Cough"
}, {
  name: "head-side-cough-slash",
  search: ["cough", "covid-19", "germs", "lungs", "respiratory", "sick"],
  styles: ["solid"],
  label: "Head Side-cough-slash"
}, {
  name: "head-side-mask",
  search: ["breath", "covid-19", "filter", "respirator", "virus"],
  styles: ["solid"],
  label: "Head Side Mask"
}, {
  name: "head-side-virus",
  search: ["cold", "covid-19", "flu", "sick"],
  styles: ["solid"],
  label: "Head Side Virus"
}, {
  name: "heading",
  search: ["format", "header", "text", "title"],
  styles: ["solid"],
  label: "heading"
}, {
  name: "headphones",
  search: ["audio", "listen", "music", "sound", "speaker"],
  styles: ["solid"],
  label: "headphones"
}, {
  name: "headphones-alt",
  search: ["audio", "listen", "music", "sound", "speaker"],
  styles: ["solid"],
  label: "Alternate Headphones"
}, {
  name: "headset",
  search: ["audio", "gamer", "gaming", "listen", "live chat", "microphone", "shot caller", "sound", "support", "telemarketer"],
  styles: ["solid"],
  label: "Headset"
}, {
  name: "heart",
  search: ["favorite", "like", "love", "relationship", "valentine"],
  styles: ["solid", "regular"],
  label: "Heart"
}, {
  name: "heart-broken",
  search: ["breakup", "crushed", "dislike", "dumped", "grief", "love", "lovesick", "relationship", "sad"],
  styles: ["solid"],
  label: "Heart Broken"
}, {
  name: "heartbeat",
  search: ["ekg", "electrocardiogram", "health", "lifeline", "vital signs"],
  styles: ["solid"],
  label: "Heartbeat"
}, {
  name: "helicopter",
  search: ["airwolf", "apache", "chopper", "flight", "fly", "travel"],
  styles: ["solid"],
  label: "Helicopter"
}, {
  name: "highlighter",
  search: ["edit", "marker", "sharpie", "update", "write"],
  styles: ["solid"],
  label: "Highlighter"
}, {
  name: "hiking",
  search: ["activity", "backpack", "fall", "fitness", "outdoors", "person", "seasonal", "walking"],
  styles: ["solid"],
  label: "Hiking"
}, {
  name: "hippo",
  search: ["animal", "fauna", "hippopotamus", "hungry", "mammal"],
  styles: ["solid"],
  label: "Hippo"
}, {
  name: "hips",
  search: [],
  styles: ["brands"],
  label: "Hips"
}, {
  name: "hire-a-helper",
  search: [],
  styles: ["brands"],
  label: "HireAHelper"
}, {
  name: "history",
  search: ["Rewind", "clock", "reverse", "time", "time machine"],
  styles: ["solid"],
  label: "History"
}, {
  name: "hockey-puck",
  search: ["ice", "nhl", "sport"],
  styles: ["solid"],
  label: "Hockey Puck"
}, {
  name: "holly-berry",
  search: ["catwoman", "christmas", "decoration", "flora", "halle", "holiday", "ororo munroe", "plant", "storm", "xmas"],
  styles: ["solid"],
  label: "Holly Berry"
}, {
  name: "home",
  search: ["abode", "building", "house", "main"],
  styles: ["solid"],
  label: "home"
}, {
  name: "hooli",
  search: [],
  styles: ["brands"],
  label: "Hooli"
}, {
  name: "hornbill",
  search: [],
  styles: ["brands"],
  label: "Hornbill"
}, {
  name: "horse",
  search: ["equus", "fauna", "mammmal", "mare", "neigh", "pony"],
  styles: ["solid"],
  label: "Horse"
}, {
  name: "horse-head",
  search: ["equus", "fauna", "mammmal", "mare", "neigh", "pony"],
  styles: ["solid"],
  label: "Horse Head"
}, {
  name: "hospital",
  search: ["building", "covid-19", "emergency room", "medical center"],
  styles: ["solid", "regular"],
  label: "hospital"
}, {
  name: "hospital-alt",
  search: ["building", "covid-19", "emergency room", "medical center"],
  styles: ["solid"],
  label: "Alternate Hospital"
}, {
  name: "hospital-symbol",
  search: ["clinic", "covid-19", "emergency", "map"],
  styles: ["solid"],
  label: "Hospital Symbol"
}, {
  name: "hospital-user",
  search: ["covid-19", "doctor", "network", "patient", "primary care"],
  styles: ["solid"],
  label: "Hospital with User"
}, {
  name: "hot-tub",
  search: ["bath", "jacuzzi", "massage", "sauna", "spa"],
  styles: ["solid"],
  label: "Hot Tub"
}, {
  name: "hotdog",
  search: ["bun", "chili", "frankfurt", "frankfurter", "kosher", "polish", "sandwich", "sausage", "vienna", "weiner"],
  styles: ["solid"],
  label: "Hot Dog"
}, {
  name: "hotel",
  search: ["building", "inn", "lodging", "motel", "resort", "travel"],
  styles: ["solid"],
  label: "Hotel"
}, {
  name: "hotjar",
  search: [],
  styles: ["brands"],
  label: "Hotjar"
}, {
  name: "hourglass",
  search: ["hour", "minute", "sand", "stopwatch", "time"],
  styles: ["solid", "regular"],
  label: "Hourglass"
}, {
  name: "hourglass-end",
  search: ["hour", "minute", "sand", "stopwatch", "time"],
  styles: ["solid"],
  label: "Hourglass End"
}, {
  name: "hourglass-half",
  search: ["hour", "minute", "sand", "stopwatch", "time"],
  styles: ["solid"],
  label: "Hourglass Half"
}, {
  name: "hourglass-start",
  search: ["hour", "minute", "sand", "stopwatch", "time"],
  styles: ["solid"],
  label: "Hourglass Start"
}, {
  name: "house-damage",
  search: ["building", "devastation", "disaster", "home", "insurance"],
  styles: ["solid"],
  label: "Damaged House"
}, {
  name: "house-user",
  search: ["covid-19", "home", "isolation", "quarantine"],
  styles: ["solid"],
  label: "House User"
}, {
  name: "houzz",
  search: [],
  styles: ["brands"],
  label: "Houzz"
}, {
  name: "hryvnia",
  search: ["currency", "money", "ukraine", "ukrainian"],
  styles: ["solid"],
  label: "Hryvnia"
}, {
  name: "html5",
  search: [],
  styles: ["brands"],
  label: "HTML 5 Logo"
}, {
  name: "hubspot",
  search: [],
  styles: ["brands"],
  label: "HubSpot"
}, {
  name: "i-cursor",
  search: ["editing", "i-beam", "type", "writing"],
  styles: ["solid"],
  label: "I Beam Cursor"
}, {
  name: "ice-cream",
  search: ["chocolate", "cone", "dessert", "frozen", "scoop", "sorbet", "vanilla", "yogurt"],
  styles: ["solid"],
  label: "Ice Cream"
}, {
  name: "icicles",
  search: ["cold", "frozen", "hanging", "ice", "seasonal", "sharp"],
  styles: ["solid"],
  label: "Icicles"
}, {
  name: "icons",
  search: ["bolt", "emoji", "heart", "image", "music", "photo", "symbols"],
  styles: ["solid"],
  label: "Icons"
}, {
  name: "id-badge",
  search: ["address", "contact", "identification", "license", "profile"],
  styles: ["solid", "regular"],
  label: "Identification Badge"
}, {
  name: "id-card",
  search: ["contact", "demographics", "document", "identification", "issued", "profile"],
  styles: ["solid", "regular"],
  label: "Identification Card"
}, {
  name: "id-card-alt",
  search: ["contact", "demographics", "document", "identification", "issued", "profile"],
  styles: ["solid"],
  label: "Alternate Identification Card"
}, {
  name: "ideal",
  search: [],
  styles: ["brands"],
  label: "iDeal"
}, {
  name: "igloo",
  search: ["dome", "dwelling", "eskimo", "home", "house", "ice", "snow"],
  styles: ["solid"],
  label: "Igloo"
}, {
  name: "image",
  search: ["album", "landscape", "photo", "picture"],
  styles: ["solid", "regular"],
  label: "Image"
}, {
  name: "images",
  search: ["album", "landscape", "photo", "picture"],
  styles: ["solid", "regular"],
  label: "Images"
}, {
  name: "imdb",
  search: [],
  styles: ["brands"],
  label: "IMDB"
}, {
  name: "inbox",
  search: ["archive", "desk", "email", "mail", "message"],
  styles: ["solid"],
  label: "inbox"
}, {
  name: "indent",
  search: ["align", "justify", "paragraph", "tab"],
  styles: ["solid"],
  label: "Indent"
}, {
  name: "industry",
  search: ["building", "factory", "industrial", "manufacturing", "mill", "warehouse"],
  styles: ["solid"],
  label: "Industry"
}, {
  name: "infinity",
  search: ["eternity", "forever", "math"],
  styles: ["solid"],
  label: "Infinity"
}, {
  name: "info",
  search: ["details", "help", "information", "more", "support"],
  styles: ["solid"],
  label: "Info"
}, {
  name: "info-circle",
  search: ["details", "help", "information", "more", "support"],
  styles: ["solid"],
  label: "Info Circle"
}, {
  name: "instagram",
  search: [],
  styles: ["brands"],
  label: "Instagram"
}, {
  name: "instagram-square",
  search: [],
  styles: ["brands"],
  label: "Instagram Square"
}, {
  name: "intercom",
  search: ["app", "customer", "messenger"],
  styles: ["brands"],
  label: "Intercom"
}, {
  name: "internet-explorer",
  search: ["browser", "ie"],
  styles: ["brands"],
  label: "Internet-explorer"
}, {
  name: "invision",
  search: ["app", "design", "interface"],
  styles: ["brands"],
  label: "InVision"
}, {
  name: "ioxhost",
  search: [],
  styles: ["brands"],
  label: "ioxhost"
}, {
  name: "italic",
  search: ["edit", "emphasis", "font", "format", "text", "type"],
  styles: ["solid"],
  label: "italic"
}, {
  name: "itch-io",
  search: [],
  styles: ["brands"],
  label: "itch.io"
}, {
  name: "itunes",
  search: [],
  styles: ["brands"],
  label: "iTunes"
}, {
  name: "itunes-note",
  search: [],
  styles: ["brands"],
  label: "Itunes Note"
}, {
  name: "java",
  search: [],
  styles: ["brands"],
  label: "Java"
}, {
  name: "jedi",
  search: ["crest", "force", "sith", "skywalker", "star wars", "yoda"],
  styles: ["solid"],
  label: "Jedi"
}, {
  name: "jedi-order",
  search: ["star wars"],
  styles: ["brands"],
  label: "Jedi Order"
}, {
  name: "jenkins",
  search: [],
  styles: ["brands"],
  label: "Jenkis"
}, {
  name: "jira",
  search: ["atlassian"],
  styles: ["brands"],
  label: "Jira"
}, {
  name: "joget",
  search: [],
  styles: ["brands"],
  label: "Joget"
}, {
  name: "joint",
  search: ["blunt", "cannabis", "doobie", "drugs", "marijuana", "roach", "smoke", "smoking", "spliff"],
  styles: ["solid"],
  label: "Joint"
}, {
  name: "joomla",
  search: [],
  styles: ["brands"],
  label: "Joomla Logo"
}, {
  name: "journal-whills",
  search: ["book", "force", "jedi", "sith", "star wars", "yoda"],
  styles: ["solid"],
  label: "Journal of the Whills"
}, {
  name: "js",
  search: [],
  styles: ["brands"],
  label: "JavaScript (JS)"
}, {
  name: "js-square",
  search: [],
  styles: ["brands"],
  label: "JavaScript (JS) Square"
}, {
  name: "jsfiddle",
  search: [],
  styles: ["brands"],
  label: "jsFiddle"
}, {
  name: "kaaba",
  search: ["building", "cube", "islam", "muslim"],
  styles: ["solid"],
  label: "Kaaba"
}, {
  name: "kaggle",
  search: [],
  styles: ["brands"],
  label: "Kaggle"
}, {
  name: "key",
  search: ["lock", "password", "private", "secret", "unlock"],
  styles: ["solid"],
  label: "key"
}, {
  name: "keybase",
  search: [],
  styles: ["brands"],
  label: "Keybase"
}, {
  name: "keyboard",
  search: ["accessory", "edit", "input", "text", "type", "write"],
  styles: ["solid", "regular"],
  label: "Keyboard"
}, {
  name: "keycdn",
  search: [],
  styles: ["brands"],
  label: "KeyCDN"
}, {
  name: "khanda",
  search: ["chakkar", "sikh", "sikhism", "sword"],
  styles: ["solid"],
  label: "Khanda"
}, {
  name: "kickstarter",
  search: [],
  styles: ["brands"],
  label: "Kickstarter"
}, {
  name: "kickstarter-k",
  search: [],
  styles: ["brands"],
  label: "Kickstarter K"
}, {
  name: "kiss",
  search: ["beso", "emoticon", "face", "love", "smooch"],
  styles: ["solid", "regular"],
  label: "Kissing Face"
}, {
  name: "kiss-beam",
  search: ["beso", "emoticon", "face", "love", "smooch"],
  styles: ["solid", "regular"],
  label: "Kissing Face With Smiling Eyes"
}, {
  name: "kiss-wink-heart",
  search: ["beso", "emoticon", "face", "love", "smooch"],
  styles: ["solid", "regular"],
  label: "Face Blowing a Kiss"
}, {
  name: "kiwi-bird",
  search: ["bird", "fauna", "new zealand"],
  styles: ["solid"],
  label: "Kiwi Bird"
}, {
  name: "korvue",
  search: [],
  styles: ["brands"],
  label: "KORVUE"
}, {
  name: "landmark",
  search: ["building", "historic", "memorable", "monument", "politics"],
  styles: ["solid"],
  label: "Landmark"
}, {
  name: "language",
  search: ["dialect", "idiom", "localize", "speech", "translate", "vernacular"],
  styles: ["solid"],
  label: "Language"
}, {
  name: "laptop",
  search: ["computer", "cpu", "dell", "demo", "device", "mac", "macbook", "machine", "pc"],
  styles: ["solid"],
  label: "Laptop"
}, {
  name: "laptop-code",
  search: ["computer", "cpu", "dell", "demo", "develop", "device", "mac", "macbook", "machine", "pc"],
  styles: ["solid"],
  label: "Laptop Code"
}, {
  name: "laptop-house",
  search: ["computer", "covid-19", "device", "office", "remote", "work from home"],
  styles: ["solid"],
  label: "Laptop House"
}, {
  name: "laptop-medical",
  search: ["computer", "device", "ehr", "electronic health records", "history"],
  styles: ["solid"],
  label: "Laptop Medical"
}, {
  name: "laravel",
  search: [],
  styles: ["brands"],
  label: "Laravel"
}, {
  name: "lastfm",
  search: [],
  styles: ["brands"],
  label: "last.fm"
}, {
  name: "lastfm-square",
  search: [],
  styles: ["brands"],
  label: "last.fm Square"
}, {
  name: "laugh",
  search: ["LOL", "emoticon", "face", "laugh", "smile"],
  styles: ["solid", "regular"],
  label: "Grinning Face With Big Eyes"
}, {
  name: "laugh-beam",
  search: ["LOL", "emoticon", "face", "happy", "smile"],
  styles: ["solid", "regular"],
  label: "Laugh Face with Beaming Eyes"
}, {
  name: "laugh-squint",
  search: ["LOL", "emoticon", "face", "happy", "smile"],
  styles: ["solid", "regular"],
  label: "Laughing Squinting Face"
}, {
  name: "laugh-wink",
  search: ["LOL", "emoticon", "face", "happy", "smile"],
  styles: ["solid", "regular"],
  label: "Laughing Winking Face"
}, {
  name: "layer-group",
  search: ["arrange", "develop", "layers", "map", "stack"],
  styles: ["solid"],
  label: "Layer Group"
}, {
  name: "leaf",
  search: ["eco", "flora", "nature", "plant", "vegan"],
  styles: ["solid"],
  label: "leaf"
}, {
  name: "leanpub",
  search: [],
  styles: ["brands"],
  label: "Leanpub"
}, {
  name: "lemon",
  search: ["citrus", "lemonade", "lime", "tart"],
  styles: ["solid", "regular"],
  label: "Lemon"
}, {
  name: "less",
  search: [],
  styles: ["brands"],
  label: "Less"
}, {
  name: "less-than",
  search: ["arithmetic", "compare", "math"],
  styles: ["solid"],
  label: "Less Than"
}, {
  name: "less-than-equal",
  search: ["arithmetic", "compare", "math"],
  styles: ["solid"],
  label: "Less Than Equal To"
}, {
  name: "level-down-alt",
  search: ["arrow", "level-down"],
  styles: ["solid"],
  label: "Alternate Level Down"
}, {
  name: "level-up-alt",
  search: ["arrow", "level-up"],
  styles: ["solid"],
  label: "Alternate Level Up"
}, {
  name: "life-ring",
  search: ["coast guard", "help", "overboard", "save", "support"],
  styles: ["solid", "regular"],
  label: "Life Ring"
}, {
  name: "lightbulb",
  search: ["energy", "idea", "inspiration", "light"],
  styles: ["solid", "regular"],
  label: "Lightbulb"
}, {
  name: "line",
  search: [],
  styles: ["brands"],
  label: "Line"
}, {
  name: "link",
  search: ["attach", "attachment", "chain", "connect"],
  styles: ["solid"],
  label: "Link"
}, {
  name: "linkedin",
  search: ["linkedin-square"],
  styles: ["brands"],
  label: "LinkedIn"
}, {
  name: "linkedin-in",
  search: ["linkedin"],
  styles: ["brands"],
  label: "LinkedIn In"
}, {
  name: "linode",
  search: [],
  styles: ["brands"],
  label: "Linode"
}, {
  name: "linux",
  search: ["tux"],
  styles: ["brands"],
  label: "Linux"
}, {
  name: "lira-sign",
  search: ["currency", "money", "try", "turkish"],
  styles: ["solid"],
  label: "Turkish Lira Sign"
}, {
  name: "list",
  search: ["checklist", "completed", "done", "finished", "ol", "todo", "ul"],
  styles: ["solid"],
  label: "List"
}, {
  name: "list-alt",
  search: ["checklist", "completed", "done", "finished", "ol", "todo", "ul"],
  styles: ["solid", "regular"],
  label: "Alternate List"
}, {
  name: "list-ol",
  search: ["checklist", "completed", "done", "finished", "numbers", "ol", "todo", "ul"],
  styles: ["solid"],
  label: "list-ol"
}, {
  name: "list-ul",
  search: ["checklist", "completed", "done", "finished", "ol", "todo", "ul"],
  styles: ["solid"],
  label: "list-ul"
}, {
  name: "location-arrow",
  search: ["address", "compass", "coordinate", "direction", "gps", "map", "navigation", "place"],
  styles: ["solid"],
  label: "location-arrow"
}, {
  name: "lock",
  search: ["admin", "lock", "open", "password", "private", "protect", "security"],
  styles: ["solid"],
  label: "lock"
}, {
  name: "lock-open",
  search: ["admin", "lock", "open", "password", "private", "protect", "security"],
  styles: ["solid"],
  label: "Lock Open"
}, {
  name: "long-arrow-alt-down",
  search: ["download", "long-arrow-down"],
  styles: ["solid"],
  label: "Alternate Long Arrow Down"
}, {
  name: "long-arrow-alt-left",
  search: ["back", "long-arrow-left", "previous"],
  styles: ["solid"],
  label: "Alternate Long Arrow Left"
}, {
  name: "long-arrow-alt-right",
  search: ["forward", "long-arrow-right", "next"],
  styles: ["solid"],
  label: "Alternate Long Arrow Right"
}, {
  name: "long-arrow-alt-up",
  search: ["long-arrow-up", "upload"],
  styles: ["solid"],
  label: "Alternate Long Arrow Up"
}, {
  name: "low-vision",
  search: ["blind", "eye", "sight"],
  styles: ["solid"],
  label: "Low Vision"
}, {
  name: "luggage-cart",
  search: ["bag", "baggage", "suitcase", "travel"],
  styles: ["solid"],
  label: "Luggage Cart"
}, {
  name: "lungs",
  search: ["air", "breath", "covid-19", "organ", "respiratory"],
  styles: ["solid"],
  label: "Lungs"
}, {
  name: "lungs-virus",
  search: ["breath", "covid-19", "respiratory", "sick"],
  styles: ["solid"],
  label: "Lungs Virus"
}, {
  name: "lyft",
  search: [],
  styles: ["brands"],
  label: "lyft"
}, {
  name: "magento",
  search: [],
  styles: ["brands"],
  label: "Magento"
}, {
  name: "magic",
  search: ["autocomplete", "automatic", "mage", "magic", "spell", "wand", "witch", "wizard"],
  styles: ["solid"],
  label: "magic"
}, {
  name: "magnet",
  search: ["Attract", "lodestone", "tool"],
  styles: ["solid"],
  label: "magnet"
}, {
  name: "mail-bulk",
  search: ["archive", "envelope", "letter", "post office", "postal", "postcard", "send", "stamp", "usps"],
  styles: ["solid"],
  label: "Mail Bulk"
}, {
  name: "mailchimp",
  search: [],
  styles: ["brands"],
  label: "Mailchimp"
}, {
  name: "male",
  search: ["human", "man", "person", "profile", "user"],
  styles: ["solid"],
  label: "Male"
}, {
  name: "mandalorian",
  search: [],
  styles: ["brands"],
  label: "Mandalorian"
}, {
  name: "map",
  search: ["address", "coordinates", "destination", "gps", "localize", "location", "map", "navigation", "paper", "pin", "place", "point of interest", "position", "route", "travel"],
  styles: ["solid", "regular"],
  label: "Map"
}, {
  name: "map-marked",
  search: ["address", "coordinates", "destination", "gps", "localize", "location", "map", "navigation", "paper", "pin", "place", "point of interest", "position", "route", "travel"],
  styles: ["solid"],
  label: "Map Marked"
}, {
  name: "map-marked-alt",
  search: ["address", "coordinates", "destination", "gps", "localize", "location", "map", "navigation", "paper", "pin", "place", "point of interest", "position", "route", "travel"],
  styles: ["solid"],
  label: "Alternate Map Marked"
}, {
  name: "map-marker",
  search: ["address", "coordinates", "destination", "gps", "localize", "location", "map", "navigation", "paper", "pin", "place", "point of interest", "position", "route", "travel"],
  styles: ["solid"],
  label: "map-marker"
}, {
  name: "map-marker-alt",
  search: ["address", "coordinates", "destination", "gps", "localize", "location", "map", "navigation", "paper", "pin", "place", "point of interest", "position", "route", "travel"],
  styles: ["solid"],
  label: "Alternate Map Marker"
}, {
  name: "map-pin",
  search: ["address", "agree", "coordinates", "destination", "gps", "localize", "location", "map", "marker", "navigation", "pin", "place", "position", "travel"],
  styles: ["solid"],
  label: "Map Pin"
}, {
  name: "map-signs",
  search: ["directions", "directory", "map", "signage", "wayfinding"],
  styles: ["solid"],
  label: "Map Signs"
}, {
  name: "markdown",
  search: [],
  styles: ["brands"],
  label: "Markdown"
}, {
  name: "marker",
  search: ["design", "edit", "sharpie", "update", "write"],
  styles: ["solid"],
  label: "Marker"
}, {
  name: "mars",
  search: ["male"],
  styles: ["solid"],
  label: "Mars"
}, {
  name: "mars-double",
  search: [],
  styles: ["solid"],
  label: "Mars Double"
}, {
  name: "mars-stroke",
  search: [],
  styles: ["solid"],
  label: "Mars Stroke"
}, {
  name: "mars-stroke-h",
  search: [],
  styles: ["solid"],
  label: "Mars Stroke Horizontal"
}, {
  name: "mars-stroke-v",
  search: [],
  styles: ["solid"],
  label: "Mars Stroke Vertical"
}, {
  name: "mask",
  search: ["carnivale", "costume", "disguise", "halloween", "secret", "super hero"],
  styles: ["solid"],
  label: "Mask"
}, {
  name: "mastodon",
  search: [],
  styles: ["brands"],
  label: "Mastodon"
}, {
  name: "maxcdn",
  search: [],
  styles: ["brands"],
  label: "MaxCDN"
}, {
  name: "mdb",
  search: [],
  styles: ["brands"],
  label: "Material Design for Bootstrap"
}, {
  name: "medal",
  search: ["award", "ribbon", "star", "trophy"],
  styles: ["solid"],
  label: "Medal"
}, {
  name: "medapps",
  search: [],
  styles: ["brands"],
  label: "MedApps"
}, {
  name: "medium",
  search: [],
  styles: ["brands"],
  label: "Medium"
}, {
  name: "medium-m",
  search: [],
  styles: ["brands"],
  label: "Medium M"
}, {
  name: "medkit",
  search: ["first aid", "firstaid", "health", "help", "support"],
  styles: ["solid"],
  label: "medkit"
}, {
  name: "medrt",
  search: [],
  styles: ["brands"],
  label: "MRT"
}, {
  name: "meetup",
  search: [],
  styles: ["brands"],
  label: "Meetup"
}, {
  name: "megaport",
  search: [],
  styles: ["brands"],
  label: "Megaport"
}, {
  name: "meh",
  search: ["emoticon", "face", "neutral", "rating"],
  styles: ["solid", "regular"],
  label: "Neutral Face"
}, {
  name: "meh-blank",
  search: ["emoticon", "face", "neutral", "rating"],
  styles: ["solid", "regular"],
  label: "Face Without Mouth"
}, {
  name: "meh-rolling-eyes",
  search: ["emoticon", "face", "neutral", "rating"],
  styles: ["solid", "regular"],
  label: "Face With Rolling Eyes"
}, {
  name: "memory",
  search: ["DIMM", "RAM", "hardware", "storage", "technology"],
  styles: ["solid"],
  label: "Memory"
}, {
  name: "mendeley",
  search: [],
  styles: ["brands"],
  label: "Mendeley"
}, {
  name: "menorah",
  search: ["candle", "hanukkah", "jewish", "judaism", "light"],
  styles: ["solid"],
  label: "Menorah"
}, {
  name: "mercury",
  search: ["transgender"],
  styles: ["solid"],
  label: "Mercury"
}, {
  name: "meteor",
  search: ["armageddon", "asteroid", "comet", "shooting star", "space"],
  styles: ["solid"],
  label: "Meteor"
}, {
  name: "microblog",
  search: [],
  styles: ["brands"],
  label: "Micro.blog"
}, {
  name: "microchip",
  search: ["cpu", "hardware", "processor", "technology"],
  styles: ["solid"],
  label: "Microchip"
}, {
  name: "microphone",
  search: ["audio", "podcast", "record", "sing", "sound", "voice"],
  styles: ["solid"],
  label: "microphone"
}, {
  name: "microphone-alt",
  search: ["audio", "podcast", "record", "sing", "sound", "voice"],
  styles: ["solid"],
  label: "Alternate Microphone"
}, {
  name: "microphone-alt-slash",
  search: ["audio", "disable", "mute", "podcast", "record", "sing", "sound", "voice"],
  styles: ["solid"],
  label: "Alternate Microphone Slash"
}, {
  name: "microphone-slash",
  search: ["audio", "disable", "mute", "podcast", "record", "sing", "sound", "voice"],
  styles: ["solid"],
  label: "Microphone Slash"
}, {
  name: "microscope",
  search: ["covid-19", "electron", "lens", "optics", "science", "shrink"],
  styles: ["solid"],
  label: "Microscope"
}, {
  name: "microsoft",
  search: [],
  styles: ["brands"],
  label: "Microsoft"
}, {
  name: "minus",
  search: ["collapse", "delete", "hide", "minify", "negative", "remove", "trash"],
  styles: ["solid"],
  label: "minus"
}, {
  name: "minus-circle",
  search: ["delete", "hide", "negative", "remove", "shape", "trash"],
  styles: ["solid"],
  label: "Minus Circle"
}, {
  name: "minus-square",
  search: ["collapse", "delete", "hide", "minify", "negative", "remove", "shape", "trash"],
  styles: ["solid", "regular"],
  label: "Minus Square"
}, {
  name: "mitten",
  search: ["clothing", "cold", "glove", "hands", "knitted", "seasonal", "warmth"],
  styles: ["solid"],
  label: "Mitten"
}, {
  name: "mix",
  search: [],
  styles: ["brands"],
  label: "Mix"
}, {
  name: "mixcloud",
  search: [],
  styles: ["brands"],
  label: "Mixcloud"
}, {
  name: "mixer",
  search: [],
  styles: ["brands"],
  label: "Mixer"
}, {
  name: "mizuni",
  search: [],
  styles: ["brands"],
  label: "Mizuni"
}, {
  name: "mobile",
  search: ["apple", "call", "cell phone", "cellphone", "device", "iphone", "number", "screen", "telephone"],
  styles: ["solid"],
  label: "Mobile Phone"
}, {
  name: "mobile-alt",
  search: ["apple", "call", "cell phone", "cellphone", "device", "iphone", "number", "screen", "telephone"],
  styles: ["solid"],
  label: "Alternate Mobile"
}, {
  name: "modx",
  search: [],
  styles: ["brands"],
  label: "MODX"
}, {
  name: "monero",
  search: [],
  styles: ["brands"],
  label: "Monero"
}, {
  name: "money-bill",
  search: ["buy", "cash", "checkout", "money", "payment", "price", "purchase"],
  styles: ["solid"],
  label: "Money Bill"
}, {
  name: "money-bill-alt",
  search: ["buy", "cash", "checkout", "money", "payment", "price", "purchase"],
  styles: ["solid", "regular"],
  label: "Alternate Money Bill"
}, {
  name: "money-bill-wave",
  search: ["buy", "cash", "checkout", "money", "payment", "price", "purchase"],
  styles: ["solid"],
  label: "Wavy Money Bill"
}, {
  name: "money-bill-wave-alt",
  search: ["buy", "cash", "checkout", "money", "payment", "price", "purchase"],
  styles: ["solid"],
  label: "Alternate Wavy Money Bill"
}, {
  name: "money-check",
  search: ["bank check", "buy", "checkout", "cheque", "money", "payment", "price", "purchase"],
  styles: ["solid"],
  label: "Money Check"
}, {
  name: "money-check-alt",
  search: ["bank check", "buy", "checkout", "cheque", "money", "payment", "price", "purchase"],
  styles: ["solid"],
  label: "Alternate Money Check"
}, {
  name: "monument",
  search: ["building", "historic", "landmark", "memorable"],
  styles: ["solid"],
  label: "Monument"
}, {
  name: "moon",
  search: ["contrast", "crescent", "dark", "lunar", "night"],
  styles: ["solid", "regular"],
  label: "Moon"
}, {
  name: "mortar-pestle",
  search: ["crush", "culinary", "grind", "medical", "mix", "pharmacy", "prescription", "spices"],
  styles: ["solid"],
  label: "Mortar Pestle"
}, {
  name: "mosque",
  search: ["building", "islam", "landmark", "muslim"],
  styles: ["solid"],
  label: "Mosque"
}, {
  name: "motorcycle",
  search: ["bike", "machine", "transportation", "vehicle"],
  styles: ["solid"],
  label: "Motorcycle"
}, {
  name: "mountain",
  search: ["glacier", "hiking", "hill", "landscape", "travel", "view"],
  styles: ["solid"],
  label: "Mountain"
}, {
  name: "mouse",
  search: ["click", "computer", "cursor", "input", "peripheral"],
  styles: ["solid"],
  label: "Mouse"
}, {
  name: "mouse-pointer",
  search: ["arrow", "cursor", "select"],
  styles: ["solid"],
  label: "Mouse Pointer"
}, {
  name: "mug-hot",
  search: ["caliente", "cocoa", "coffee", "cup", "drink", "holiday", "hot chocolate", "steam", "tea", "warmth"],
  styles: ["solid"],
  label: "Mug Hot"
}, {
  name: "music",
  search: ["lyrics", "melody", "note", "sing", "sound"],
  styles: ["solid"],
  label: "Music"
}, {
  name: "napster",
  search: [],
  styles: ["brands"],
  label: "Napster"
}, {
  name: "neos",
  search: [],
  styles: ["brands"],
  label: "Neos"
}, {
  name: "network-wired",
  search: ["computer", "connect", "ethernet", "internet", "intranet"],
  styles: ["solid"],
  label: "Wired Network"
}, {
  name: "neuter",
  search: [],
  styles: ["solid"],
  label: "Neuter"
}, {
  name: "newspaper",
  search: ["article", "editorial", "headline", "journal", "journalism", "news", "press"],
  styles: ["solid", "regular"],
  label: "Newspaper"
}, {
  name: "nimblr",
  search: [],
  styles: ["brands"],
  label: "Nimblr"
}, {
  name: "node",
  search: [],
  styles: ["brands"],
  label: "Node.js"
}, {
  name: "node-js",
  search: [],
  styles: ["brands"],
  label: "Node.js JS"
}, {
  name: "not-equal",
  search: ["arithmetic", "compare", "math"],
  styles: ["solid"],
  label: "Not Equal"
}, {
  name: "notes-medical",
  search: ["clipboard", "doctor", "ehr", "health", "history", "records"],
  styles: ["solid"],
  label: "Medical Notes"
}, {
  name: "npm",
  search: [],
  styles: ["brands"],
  label: "npm"
}, {
  name: "ns8",
  search: [],
  styles: ["brands"],
  label: "NS8"
}, {
  name: "nutritionix",
  search: [],
  styles: ["brands"],
  label: "Nutritionix"
}, {
  name: "object-group",
  search: ["combine", "copy", "design", "merge", "select"],
  styles: ["solid", "regular"],
  label: "Object Group"
}, {
  name: "object-ungroup",
  search: ["copy", "design", "merge", "select", "separate"],
  styles: ["solid", "regular"],
  label: "Object Ungroup"
}, {
  name: "odnoklassniki",
  search: [],
  styles: ["brands"],
  label: "Odnoklassniki"
}, {
  name: "odnoklassniki-square",
  search: [],
  styles: ["brands"],
  label: "Odnoklassniki Square"
}, {
  name: "oil-can",
  search: ["auto", "crude", "gasoline", "grease", "lubricate", "petroleum"],
  styles: ["solid"],
  label: "Oil Can"
}, {
  name: "old-republic",
  search: ["politics", "star wars"],
  styles: ["brands"],
  label: "Old Republic"
}, {
  name: "om",
  search: ["buddhism", "hinduism", "jainism", "mantra"],
  styles: ["solid"],
  label: "Om"
}, {
  name: "opencart",
  search: [],
  styles: ["brands"],
  label: "OpenCart"
}, {
  name: "openid",
  search: [],
  styles: ["brands"],
  label: "OpenID"
}, {
  name: "opera",
  search: [],
  styles: ["brands"],
  label: "Opera"
}, {
  name: "optin-monster",
  search: [],
  styles: ["brands"],
  label: "Optin Monster"
}, {
  name: "orcid",
  search: [],
  styles: ["brands"],
  label: "ORCID"
}, {
  name: "osi",
  search: [],
  styles: ["brands"],
  label: "Open Source Initiative"
}, {
  name: "otter",
  search: ["animal", "badger", "fauna", "fur", "mammal", "marten"],
  styles: ["solid"],
  label: "Otter"
}, {
  name: "outdent",
  search: ["align", "justify", "paragraph", "tab"],
  styles: ["solid"],
  label: "Outdent"
}, {
  name: "page4",
  search: [],
  styles: ["brands"],
  label: "page4 Corporation"
}, {
  name: "pagelines",
  search: ["eco", "flora", "leaf", "leaves", "nature", "plant", "tree"],
  styles: ["brands"],
  label: "Pagelines"
}, {
  name: "pager",
  search: ["beeper", "cellphone", "communication"],
  styles: ["solid"],
  label: "Pager"
}, {
  name: "paint-brush",
  search: ["acrylic", "art", "brush", "color", "fill", "paint", "pigment", "watercolor"],
  styles: ["solid"],
  label: "Paint Brush"
}, {
  name: "paint-roller",
  search: ["acrylic", "art", "brush", "color", "fill", "paint", "pigment", "watercolor"],
  styles: ["solid"],
  label: "Paint Roller"
}, {
  name: "palette",
  search: ["acrylic", "art", "brush", "color", "fill", "paint", "pigment", "watercolor"],
  styles: ["solid"],
  label: "Palette"
}, {
  name: "palfed",
  search: [],
  styles: ["brands"],
  label: "Palfed"
}, {
  name: "pallet",
  search: ["archive", "box", "inventory", "shipping", "warehouse"],
  styles: ["solid"],
  label: "Pallet"
}, {
  name: "paper-plane",
  search: ["air", "float", "fold", "mail", "paper", "send"],
  styles: ["solid", "regular"],
  label: "Paper Plane"
}, {
  name: "paperclip",
  search: ["attach", "attachment", "connect", "link"],
  styles: ["solid"],
  label: "Paperclip"
}, {
  name: "parachute-box",
  search: ["aid", "assistance", "rescue", "supplies"],
  styles: ["solid"],
  label: "Parachute Box"
}, {
  name: "paragraph",
  search: ["edit", "format", "text", "writing"],
  styles: ["solid"],
  label: "paragraph"
}, {
  name: "parking",
  search: ["auto", "car", "garage", "meter"],
  styles: ["solid"],
  label: "Parking"
}, {
  name: "passport",
  search: ["document", "id", "identification", "issued", "travel"],
  styles: ["solid"],
  label: "Passport"
}, {
  name: "pastafarianism",
  search: ["agnosticism", "atheism", "flying spaghetti monster", "fsm"],
  styles: ["solid"],
  label: "Pastafarianism"
}, {
  name: "paste",
  search: ["clipboard", "copy", "document", "paper"],
  styles: ["solid"],
  label: "Paste"
}, {
  name: "patreon",
  search: [],
  styles: ["brands"],
  label: "Patreon"
}, {
  name: "pause",
  search: ["hold", "wait"],
  styles: ["solid"],
  label: "pause"
}, {
  name: "pause-circle",
  search: ["hold", "wait"],
  styles: ["solid", "regular"],
  label: "Pause Circle"
}, {
  name: "paw",
  search: ["animal", "cat", "dog", "pet", "print"],
  styles: ["solid"],
  label: "Paw"
}, {
  name: "paypal",
  search: [],
  styles: ["brands"],
  label: "Paypal"
}, {
  name: "peace",
  search: ["serenity", "tranquility", "truce", "war"],
  styles: ["solid"],
  label: "Peace"
}, {
  name: "pen",
  search: ["design", "edit", "update", "write"],
  styles: ["solid"],
  label: "Pen"
}, {
  name: "pen-alt",
  search: ["design", "edit", "update", "write"],
  styles: ["solid"],
  label: "Alternate Pen"
}, {
  name: "pen-fancy",
  search: ["design", "edit", "fountain pen", "update", "write"],
  styles: ["solid"],
  label: "Pen Fancy"
}, {
  name: "pen-nib",
  search: ["design", "edit", "fountain pen", "update", "write"],
  styles: ["solid"],
  label: "Pen Nib"
}, {
  name: "pen-square",
  search: ["edit", "pencil-square", "update", "write"],
  styles: ["solid"],
  label: "Pen Square"
}, {
  name: "pencil-alt",
  search: ["design", "edit", "pencil", "update", "write"],
  styles: ["solid"],
  label: "Alternate Pencil"
}, {
  name: "pencil-ruler",
  search: ["design", "draft", "draw", "pencil"],
  styles: ["solid"],
  label: "Pencil Ruler"
}, {
  name: "penny-arcade",
  search: ["Dungeons & Dragons", "d&d", "dnd", "fantasy", "game", "gaming", "pax", "tabletop"],
  styles: ["brands"],
  label: "Penny Arcade"
}, {
  name: "people-arrows",
  search: ["covid-19", "personal space", "social distance", "space", "spread", "users"],
  styles: ["solid"],
  label: "People Arrows"
}, {
  name: "people-carry",
  search: ["box", "carry", "fragile", "help", "movers", "package"],
  styles: ["solid"],
  label: "People Carry"
}, {
  name: "pepper-hot",
  search: ["buffalo wings", "capsicum", "chili", "chilli", "habanero", "jalapeno", "mexican", "spicy", "tabasco", "vegetable"],
  styles: ["solid"],
  label: "Hot Pepper"
}, {
  name: "percent",
  search: ["discount", "fraction", "proportion", "rate", "ratio"],
  styles: ["solid"],
  label: "Percent"
}, {
  name: "percentage",
  search: ["discount", "fraction", "proportion", "rate", "ratio"],
  styles: ["solid"],
  label: "Percentage"
}, {
  name: "periscope",
  search: [],
  styles: ["brands"],
  label: "Periscope"
}, {
  name: "person-booth",
  search: ["changing", "changing room", "election", "human", "person", "vote", "voting"],
  styles: ["solid"],
  label: "Person Entering Booth"
}, {
  name: "phabricator",
  search: [],
  styles: ["brands"],
  label: "Phabricator"
}, {
  name: "phoenix-framework",
  search: [],
  styles: ["brands"],
  label: "Phoenix Framework"
}, {
  name: "phoenix-squadron",
  search: [],
  styles: ["brands"],
  label: "Phoenix Squadron"
}, {
  name: "phone",
  search: ["call", "earphone", "number", "support", "telephone", "voice"],
  styles: ["solid"],
  label: "Phone"
}, {
  name: "phone-alt",
  search: ["call", "earphone", "number", "support", "telephone", "voice"],
  styles: ["solid"],
  label: "Alternate Phone"
}, {
  name: "phone-slash",
  search: ["call", "cancel", "earphone", "mute", "number", "support", "telephone", "voice"],
  styles: ["solid"],
  label: "Phone Slash"
}, {
  name: "phone-square",
  search: ["call", "earphone", "number", "support", "telephone", "voice"],
  styles: ["solid"],
  label: "Phone Square"
}, {
  name: "phone-square-alt",
  search: ["call", "earphone", "number", "support", "telephone", "voice"],
  styles: ["solid"],
  label: "Alternate Phone Square"
}, {
  name: "phone-volume",
  search: ["call", "earphone", "number", "sound", "support", "telephone", "voice", "volume-control-phone"],
  styles: ["solid"],
  label: "Phone Volume"
}, {
  name: "photo-video",
  search: ["av", "film", "image", "library", "media"],
  styles: ["solid"],
  label: "Photo Video"
}, {
  name: "php",
  search: [],
  styles: ["brands"],
  label: "PHP"
}, {
  name: "pied-piper",
  search: [],
  styles: ["brands"],
  label: "Pied Piper Logo"
}, {
  name: "pied-piper-alt",
  search: [],
  styles: ["brands"],
  label: "Alternate Pied Piper Logo (Old)"
}, {
  name: "pied-piper-hat",
  search: ["clothing"],
  styles: ["brands"],
  label: "Pied Piper Hat (Old)"
}, {
  name: "pied-piper-pp",
  search: [],
  styles: ["brands"],
  label: "Pied Piper PP Logo (Old)"
}, {
  name: "pied-piper-square",
  search: [],
  styles: ["brands"],
  label: "Pied Piper Square Logo (Old)"
}, {
  name: "piggy-bank",
  search: ["bank", "save", "savings"],
  styles: ["solid"],
  label: "Piggy Bank"
}, {
  name: "pills",
  search: ["drugs", "medicine", "prescription", "tablets"],
  styles: ["solid"],
  label: "Pills"
}, {
  name: "pinterest",
  search: [],
  styles: ["brands"],
  label: "Pinterest"
}, {
  name: "pinterest-p",
  search: [],
  styles: ["brands"],
  label: "Pinterest P"
}, {
  name: "pinterest-square",
  search: [],
  styles: ["brands"],
  label: "Pinterest Square"
}, {
  name: "pizza-slice",
  search: ["cheese", "chicago", "italian", "mozzarella", "new york", "pepperoni", "pie", "slice", "teenage mutant ninja turtles", "tomato"],
  styles: ["solid"],
  label: "Pizza Slice"
}, {
  name: "place-of-worship",
  search: ["building", "church", "holy", "mosque", "synagogue"],
  styles: ["solid"],
  label: "Place of Worship"
}, {
  name: "plane",
  search: ["airplane", "destination", "fly", "location", "mode", "travel", "trip"],
  styles: ["solid"],
  label: "plane"
}, {
  name: "plane-arrival",
  search: ["airplane", "arriving", "destination", "fly", "land", "landing", "location", "mode", "travel", "trip"],
  styles: ["solid"],
  label: "Plane Arrival"
}, {
  name: "plane-departure",
  search: ["airplane", "departing", "destination", "fly", "location", "mode", "take off", "taking off", "travel", "trip"],
  styles: ["solid"],
  label: "Plane Departure"
}, {
  name: "plane-slash",
  search: ["airplane mode", "canceled", "covid-19", "delayed", "grounded", "travel"],
  styles: ["solid"],
  label: "Plane Slash"
}, {
  name: "play",
  search: ["audio", "music", "playing", "sound", "start", "video"],
  styles: ["solid"],
  label: "play"
}, {
  name: "play-circle",
  search: ["audio", "music", "playing", "sound", "start", "video"],
  styles: ["solid", "regular"],
  label: "Play Circle"
}, {
  name: "playstation",
  search: [],
  styles: ["brands"],
  label: "PlayStation"
}, {
  name: "plug",
  search: ["connect", "electric", "online", "power"],
  styles: ["solid"],
  label: "Plug"
}, {
  name: "plus",
  search: ["add", "create", "expand", "new", "positive", "shape"],
  styles: ["solid"],
  label: "plus"
}, {
  name: "plus-circle",
  search: ["add", "create", "expand", "new", "positive", "shape"],
  styles: ["solid"],
  label: "Plus Circle"
}, {
  name: "plus-square",
  search: ["add", "create", "expand", "new", "positive", "shape"],
  styles: ["solid", "regular"],
  label: "Plus Square"
}, {
  name: "podcast",
  search: ["audio", "broadcast", "music", "sound"],
  styles: ["solid"],
  label: "Podcast"
}, {
  name: "poll",
  search: ["results", "survey", "trend", "vote", "voting"],
  styles: ["solid"],
  label: "Poll"
}, {
  name: "poll-h",
  search: ["results", "survey", "trend", "vote", "voting"],
  styles: ["solid"],
  label: "Poll H"
}, {
  name: "poo",
  search: ["crap", "poop", "shit", "smile", "turd"],
  styles: ["solid"],
  label: "Poo"
}, {
  name: "poo-storm",
  search: ["bolt", "cloud", "euphemism", "lightning", "mess", "poop", "shit", "turd"],
  styles: ["solid"],
  label: "Poo Storm"
}, {
  name: "poop",
  search: ["crap", "poop", "shit", "smile", "turd"],
  styles: ["solid"],
  label: "Poop"
}, {
  name: "portrait",
  search: ["id", "image", "photo", "picture", "selfie"],
  styles: ["solid"],
  label: "Portrait"
}, {
  name: "pound-sign",
  search: ["currency", "gbp", "money"],
  styles: ["solid"],
  label: "Pound Sign"
}, {
  name: "power-off",
  search: ["cancel", "computer", "on", "reboot", "restart"],
  styles: ["solid"],
  label: "Power Off"
}, {
  name: "pray",
  search: ["kneel", "preach", "religion", "worship"],
  styles: ["solid"],
  label: "Pray"
}, {
  name: "praying-hands",
  search: ["kneel", "preach", "religion", "worship"],
  styles: ["solid"],
  label: "Praying Hands"
}, {
  name: "prescription",
  search: ["drugs", "medical", "medicine", "pharmacy", "rx"],
  styles: ["solid"],
  label: "Prescription"
}, {
  name: "prescription-bottle",
  search: ["drugs", "medical", "medicine", "pharmacy", "rx"],
  styles: ["solid"],
  label: "Prescription Bottle"
}, {
  name: "prescription-bottle-alt",
  search: ["drugs", "medical", "medicine", "pharmacy", "rx"],
  styles: ["solid"],
  label: "Alternate Prescription Bottle"
}, {
  name: "print",
  search: ["business", "copy", "document", "office", "paper"],
  styles: ["solid"],
  label: "print"
}, {
  name: "procedures",
  search: ["EKG", "bed", "electrocardiogram", "health", "hospital", "life", "patient", "vital"],
  styles: ["solid"],
  label: "Procedures"
}, {
  name: "product-hunt",
  search: [],
  styles: ["brands"],
  label: "Product Hunt"
}, {
  name: "project-diagram",
  search: ["chart", "graph", "network", "pert"],
  styles: ["solid"],
  label: "Project Diagram"
}, {
  name: "pump-medical",
  search: ["anti-bacterial", "clean", "covid-19", "disinfect", "hygiene", "medical grade", "sanitizer", "soap"],
  styles: ["solid"],
  label: "Pump Medical"
}, {
  name: "pump-soap",
  search: ["anti-bacterial", "clean", "covid-19", "disinfect", "hygiene", "sanitizer", "soap"],
  styles: ["solid"],
  label: "Pump Soap"
}, {
  name: "pushed",
  search: [],
  styles: ["brands"],
  label: "Pushed"
}, {
  name: "puzzle-piece",
  search: ["add-on", "addon", "game", "section"],
  styles: ["solid"],
  label: "Puzzle Piece"
}, {
  name: "python",
  search: [],
  styles: ["brands"],
  label: "Python"
}, {
  name: "qq",
  search: [],
  styles: ["brands"],
  label: "QQ"
}, {
  name: "qrcode",
  search: ["barcode", "info", "information", "scan"],
  styles: ["solid"],
  label: "qrcode"
}, {
  name: "question",
  search: ["help", "information", "support", "unknown"],
  styles: ["solid"],
  label: "Question"
}, {
  name: "question-circle",
  search: ["help", "information", "support", "unknown"],
  styles: ["solid", "regular"],
  label: "Question Circle"
}, {
  name: "quidditch",
  search: ["ball", "bludger", "broom", "golden snitch", "harry potter", "hogwarts", "quaffle", "sport", "wizard"],
  styles: ["solid"],
  label: "Quidditch"
}, {
  name: "quinscape",
  search: [],
  styles: ["brands"],
  label: "QuinScape"
}, {
  name: "quora",
  search: [],
  styles: ["brands"],
  label: "Quora"
}, {
  name: "quote-left",
  search: ["mention", "note", "phrase", "text", "type"],
  styles: ["solid"],
  label: "quote-left"
}, {
  name: "quote-right",
  search: ["mention", "note", "phrase", "text", "type"],
  styles: ["solid"],
  label: "quote-right"
}, {
  name: "quran",
  search: ["book", "islam", "muslim", "religion"],
  styles: ["solid"],
  label: "Quran"
}, {
  name: "r-project",
  search: [],
  styles: ["brands"],
  label: "R Project"
}, {
  name: "radiation",
  search: ["danger", "dangerous", "deadly", "hazard", "nuclear", "radioactive", "warning"],
  styles: ["solid"],
  label: "Radiation"
}, {
  name: "radiation-alt",
  search: ["danger", "dangerous", "deadly", "hazard", "nuclear", "radioactive", "warning"],
  styles: ["solid"],
  label: "Alternate Radiation"
}, {
  name: "rainbow",
  search: ["gold", "leprechaun", "prism", "rain", "sky"],
  styles: ["solid"],
  label: "Rainbow"
}, {
  name: "random",
  search: ["arrows", "shuffle", "sort", "swap", "switch", "transfer"],
  styles: ["solid"],
  label: "random"
}, {
  name: "raspberry-pi",
  search: [],
  styles: ["brands"],
  label: "Raspberry Pi"
}, {
  name: "ravelry",
  search: [],
  styles: ["brands"],
  label: "Ravelry"
}, {
  name: "react",
  search: [],
  styles: ["brands"],
  label: "React"
}, {
  name: "reacteurope",
  search: [],
  styles: ["brands"],
  label: "ReactEurope"
}, {
  name: "readme",
  search: [],
  styles: ["brands"],
  label: "ReadMe"
}, {
  name: "rebel",
  search: [],
  styles: ["brands"],
  label: "Rebel Alliance"
}, {
  name: "receipt",
  search: ["check", "invoice", "money", "pay", "table"],
  styles: ["solid"],
  label: "Receipt"
}, {
  name: "record-vinyl",
  search: ["LP", "album", "analog", "music", "phonograph", "sound"],
  styles: ["solid"],
  label: "Record Vinyl"
}, {
  name: "recycle",
  search: ["Waste", "compost", "garbage", "reuse", "trash"],
  styles: ["solid"],
  label: "Recycle"
}, {
  name: "red-river",
  search: [],
  styles: ["brands"],
  label: "red river"
}, {
  name: "reddit",
  search: [],
  styles: ["brands"],
  label: "reddit Logo"
}, {
  name: "reddit-alien",
  search: [],
  styles: ["brands"],
  label: "reddit Alien"
}, {
  name: "reddit-square",
  search: [],
  styles: ["brands"],
  label: "reddit Square"
}, {
  name: "redhat",
  search: ["linux", "operating system", "os"],
  styles: ["brands"],
  label: "Redhat"
}, {
  name: "redo",
  search: ["forward", "refresh", "reload", "repeat"],
  styles: ["solid"],
  label: "Redo"
}, {
  name: "redo-alt",
  search: ["forward", "refresh", "reload", "repeat"],
  styles: ["solid"],
  label: "Alternate Redo"
}, {
  name: "registered",
  search: ["copyright", "mark", "trademark"],
  styles: ["solid", "regular"],
  label: "Registered Trademark"
}, {
  name: "remove-format",
  search: ["cancel", "font", "format", "remove", "style", "text"],
  styles: ["solid"],
  label: "Remove Format"
}, {
  name: "renren",
  search: [],
  styles: ["brands"],
  label: "Renren"
}, {
  name: "reply",
  search: ["mail", "message", "respond"],
  styles: ["solid"],
  label: "Reply"
}, {
  name: "reply-all",
  search: ["mail", "message", "respond"],
  styles: ["solid"],
  label: "reply-all"
}, {
  name: "replyd",
  search: [],
  styles: ["brands"],
  label: "replyd"
}, {
  name: "republican",
  search: ["american", "conservative", "election", "elephant", "politics", "republican party", "right", "right-wing", "usa"],
  styles: ["solid"],
  label: "Republican"
}, {
  name: "researchgate",
  search: [],
  styles: ["brands"],
  label: "Researchgate"
}, {
  name: "resolving",
  search: [],
  styles: ["brands"],
  label: "Resolving"
}, {
  name: "restroom",
  search: ["bathroom", "john", "loo", "potty", "washroom", "waste", "wc"],
  styles: ["solid"],
  label: "Restroom"
}, {
  name: "retweet",
  search: ["refresh", "reload", "share", "swap"],
  styles: ["solid"],
  label: "Retweet"
}, {
  name: "rev",
  search: [],
  styles: ["brands"],
  label: "Rev.io"
}, {
  name: "ribbon",
  search: ["badge", "cause", "lapel", "pin"],
  styles: ["solid"],
  label: "Ribbon"
}, {
  name: "ring",
  search: ["Dungeons & Dragons", "Gollum", "band", "binding", "d&d", "dnd", "engagement", "fantasy", "gold", "jewelry", "marriage", "precious"],
  styles: ["solid"],
  label: "Ring"
}, {
  name: "road",
  search: ["highway", "map", "pavement", "route", "street", "travel"],
  styles: ["solid"],
  label: "road"
}, {
  name: "robot",
  search: ["android", "automate", "computer", "cyborg"],
  styles: ["solid"],
  label: "Robot"
}, {
  name: "rocket",
  search: ["aircraft", "app", "jet", "launch", "nasa", "space"],
  styles: ["solid"],
  label: "rocket"
}, {
  name: "rocketchat",
  search: [],
  styles: ["brands"],
  label: "Rocket.Chat"
}, {
  name: "rockrms",
  search: [],
  styles: ["brands"],
  label: "Rockrms"
}, {
  name: "route",
  search: ["directions", "navigation", "travel"],
  styles: ["solid"],
  label: "Route"
}, {
  name: "rss",
  search: ["blog", "feed", "journal", "news", "writing"],
  styles: ["solid"],
  label: "rss"
}, {
  name: "rss-square",
  search: ["blog", "feed", "journal", "news", "writing"],
  styles: ["solid"],
  label: "RSS Square"
}, {
  name: "ruble-sign",
  search: ["currency", "money", "rub"],
  styles: ["solid"],
  label: "Ruble Sign"
}, {
  name: "ruler",
  search: ["design", "draft", "length", "measure", "planning"],
  styles: ["solid"],
  label: "Ruler"
}, {
  name: "ruler-combined",
  search: ["design", "draft", "length", "measure", "planning"],
  styles: ["solid"],
  label: "Ruler Combined"
}, {
  name: "ruler-horizontal",
  search: ["design", "draft", "length", "measure", "planning"],
  styles: ["solid"],
  label: "Ruler Horizontal"
}, {
  name: "ruler-vertical",
  search: ["design", "draft", "length", "measure", "planning"],
  styles: ["solid"],
  label: "Ruler Vertical"
}, {
  name: "running",
  search: ["exercise", "health", "jog", "person", "run", "sport", "sprint"],
  styles: ["solid"],
  label: "Running"
}, {
  name: "rupee-sign",
  search: ["currency", "indian", "inr", "money"],
  styles: ["solid"],
  label: "Indian Rupee Sign"
}, {
  name: "sad-cry",
  search: ["emoticon", "face", "tear", "tears"],
  styles: ["solid", "regular"],
  label: "Crying Face"
}, {
  name: "sad-tear",
  search: ["emoticon", "face", "tear", "tears"],
  styles: ["solid", "regular"],
  label: "Loudly Crying Face"
}, {
  name: "safari",
  search: ["browser"],
  styles: ["brands"],
  label: "Safari"
}, {
  name: "salesforce",
  search: [],
  styles: ["brands"],
  label: "Salesforce"
}, {
  name: "sass",
  search: [],
  styles: ["brands"],
  label: "Sass"
}, {
  name: "satellite",
  search: ["communications", "hardware", "orbit", "space"],
  styles: ["solid"],
  label: "Satellite"
}, {
  name: "satellite-dish",
  search: ["SETI", "communications", "hardware", "receiver", "saucer", "signal", "space"],
  styles: ["solid"],
  label: "Satellite Dish"
}, {
  name: "save",
  search: ["disk", "download", "floppy", "floppy-o"],
  styles: ["solid", "regular"],
  label: "Save"
}, {
  name: "schlix",
  search: [],
  styles: ["brands"],
  label: "SCHLIX"
}, {
  name: "school",
  search: ["building", "education", "learn", "student", "teacher"],
  styles: ["solid"],
  label: "School"
}, {
  name: "screwdriver",
  search: ["admin", "fix", "mechanic", "repair", "settings", "tool"],
  styles: ["solid"],
  label: "Screwdriver"
}, {
  name: "scribd",
  search: [],
  styles: ["brands"],
  label: "Scribd"
}, {
  name: "scroll",
  search: ["Dungeons & Dragons", "announcement", "d&d", "dnd", "fantasy", "paper", "script"],
  styles: ["solid"],
  label: "Scroll"
}, {
  name: "sd-card",
  search: ["image", "memory", "photo", "save"],
  styles: ["solid"],
  label: "Sd Card"
}, {
  name: "search",
  search: ["bigger", "enlarge", "find", "magnify", "preview", "zoom"],
  styles: ["solid"],
  label: "Search"
}, {
  name: "search-dollar",
  search: ["bigger", "enlarge", "find", "magnify", "money", "preview", "zoom"],
  styles: ["solid"],
  label: "Search Dollar"
}, {
  name: "search-location",
  search: ["bigger", "enlarge", "find", "magnify", "preview", "zoom"],
  styles: ["solid"],
  label: "Search Location"
}, {
  name: "search-minus",
  search: ["minify", "negative", "smaller", "zoom", "zoom out"],
  styles: ["solid"],
  label: "Search Minus"
}, {
  name: "search-plus",
  search: ["bigger", "enlarge", "magnify", "positive", "zoom", "zoom in"],
  styles: ["solid"],
  label: "Search Plus"
}, {
  name: "searchengin",
  search: [],
  styles: ["brands"],
  label: "Searchengin"
}, {
  name: "seedling",
  search: ["flora", "grow", "plant", "vegan"],
  styles: ["solid"],
  label: "Seedling"
}, {
  name: "sellcast",
  search: ["eercast"],
  styles: ["brands"],
  label: "Sellcast"
}, {
  name: "sellsy",
  search: [],
  styles: ["brands"],
  label: "Sellsy"
}, {
  name: "server",
  search: ["computer", "cpu", "database", "hardware", "network"],
  styles: ["solid"],
  label: "Server"
}, {
  name: "servicestack",
  search: [],
  styles: ["brands"],
  label: "Servicestack"
}, {
  name: "shapes",
  search: ["blocks", "build", "circle", "square", "triangle"],
  styles: ["solid"],
  label: "Shapes"
}, {
  name: "share",
  search: ["forward", "save", "send", "social"],
  styles: ["solid"],
  label: "Share"
}, {
  name: "share-alt",
  search: ["forward", "save", "send", "social"],
  styles: ["solid"],
  label: "Alternate Share"
}, {
  name: "share-alt-square",
  search: ["forward", "save", "send", "social"],
  styles: ["solid"],
  label: "Alternate Share Square"
}, {
  name: "share-square",
  search: ["forward", "save", "send", "social"],
  styles: ["solid", "regular"],
  label: "Share Square"
}, {
  name: "shekel-sign",
  search: ["currency", "ils", "money"],
  styles: ["solid"],
  label: "Shekel Sign"
}, {
  name: "shield-alt",
  search: ["achievement", "award", "block", "defend", "security", "winner"],
  styles: ["solid"],
  label: "Alternate Shield"
}, {
  name: "shield-virus",
  search: ["antibodies", "barrier", "covid-19", "health", "protect"],
  styles: ["solid"],
  label: "Shield Virus"
}, {
  name: "ship",
  search: ["boat", "sea", "water"],
  styles: ["solid"],
  label: "Ship"
}, {
  name: "shipping-fast",
  search: ["express", "fedex", "mail", "overnight", "package", "ups"],
  styles: ["solid"],
  label: "Shipping Fast"
}, {
  name: "shirtsinbulk",
  search: [],
  styles: ["brands"],
  label: "Shirts in Bulk"
}, {
  name: "shoe-prints",
  search: ["feet", "footprints", "steps", "walk"],
  styles: ["solid"],
  label: "Shoe Prints"
}, {
  name: "shopify",
  search: [],
  styles: ["brands"],
  label: "Shopify"
}, {
  name: "shopping-bag",
  search: ["buy", "checkout", "grocery", "payment", "purchase"],
  styles: ["solid"],
  label: "Shopping Bag"
}, {
  name: "shopping-basket",
  search: ["buy", "checkout", "grocery", "payment", "purchase"],
  styles: ["solid"],
  label: "Shopping Basket"
}, {
  name: "shopping-cart",
  search: ["buy", "checkout", "grocery", "payment", "purchase"],
  styles: ["solid"],
  label: "shopping-cart"
}, {
  name: "shopware",
  search: [],
  styles: ["brands"],
  label: "Shopware"
}, {
  name: "shower",
  search: ["bath", "clean", "faucet", "water"],
  styles: ["solid"],
  label: "Shower"
}, {
  name: "shuttle-van",
  search: ["airport", "machine", "public-transportation", "transportation", "travel", "vehicle"],
  styles: ["solid"],
  label: "Shuttle Van"
}, {
  name: "sign",
  search: ["directions", "real estate", "signage", "wayfinding"],
  styles: ["solid"],
  label: "Sign"
}, {
  name: "sign-in-alt",
  search: ["arrow", "enter", "join", "log in", "login", "sign in", "sign up", "sign-in", "signin", "signup"],
  styles: ["solid"],
  label: "Alternate Sign In"
}, {
  name: "sign-language",
  search: ["Translate", "asl", "deaf", "hands"],
  styles: ["solid"],
  label: "Sign Language"
}, {
  name: "sign-out-alt",
  search: ["arrow", "exit", "leave", "log out", "logout", "sign-out"],
  styles: ["solid"],
  label: "Alternate Sign Out"
}, {
  name: "signal",
  search: ["bars", "graph", "online", "reception", "status"],
  styles: ["solid"],
  label: "signal"
}, {
  name: "signature",
  search: ["John Hancock", "cursive", "name", "writing"],
  styles: ["solid"],
  label: "Signature"
}, {
  name: "sim-card",
  search: ["hard drive", "hardware", "portable", "storage", "technology", "tiny"],
  styles: ["solid"],
  label: "SIM Card"
}, {
  name: "simplybuilt",
  search: [],
  styles: ["brands"],
  label: "SimplyBuilt"
}, {
  name: "sistrix",
  search: [],
  styles: ["brands"],
  label: "SISTRIX"
}, {
  name: "sitemap",
  search: ["directory", "hierarchy", "ia", "information architecture", "organization"],
  styles: ["solid"],
  label: "Sitemap"
}, {
  name: "sith",
  search: [],
  styles: ["brands"],
  label: "Sith"
}, {
  name: "skating",
  search: ["activity", "figure skating", "fitness", "ice", "person", "winter"],
  styles: ["solid"],
  label: "Skating"
}, {
  name: "sketch",
  search: ["app", "design", "interface"],
  styles: ["brands"],
  label: "Sketch"
}, {
  name: "skiing",
  search: ["activity", "downhill", "fast", "fitness", "olympics", "outdoors", "person", "seasonal", "slalom"],
  styles: ["solid"],
  label: "Skiing"
}, {
  name: "skiing-nordic",
  search: ["activity", "cross country", "fitness", "outdoors", "person", "seasonal"],
  styles: ["solid"],
  label: "Skiing Nordic"
}, {
  name: "skull",
  search: ["bones", "skeleton", "x-ray", "yorick"],
  styles: ["solid"],
  label: "Skull"
}, {
  name: "skull-crossbones",
  search: ["Dungeons & Dragons", "alert", "bones", "d&d", "danger", "dead", "deadly", "death", "dnd", "fantasy", "halloween", "holiday", "jolly-roger", "pirate", "poison", "skeleton", "warning"],
  styles: ["solid"],
  label: "Skull & Crossbones"
}, {
  name: "skyatlas",
  search: [],
  styles: ["brands"],
  label: "skyatlas"
}, {
  name: "skype",
  search: [],
  styles: ["brands"],
  label: "Skype"
}, {
  name: "slack",
  search: ["anchor", "hash", "hashtag"],
  styles: ["brands"],
  label: "Slack Logo"
}, {
  name: "slack-hash",
  search: ["anchor", "hash", "hashtag"],
  styles: ["brands"],
  label: "Slack Hashtag"
}, {
  name: "slash",
  search: ["cancel", "close", "mute", "off", "stop", "x"],
  styles: ["solid"],
  label: "Slash"
}, {
  name: "sleigh",
  search: ["christmas", "claus", "fly", "holiday", "santa", "sled", "snow", "xmas"],
  styles: ["solid"],
  label: "Sleigh"
}, {
  name: "sliders-h",
  search: ["adjust", "settings", "sliders", "toggle"],
  styles: ["solid"],
  label: "Horizontal Sliders"
}, {
  name: "slideshare",
  search: [],
  styles: ["brands"],
  label: "Slideshare"
}, {
  name: "smile",
  search: ["approve", "emoticon", "face", "happy", "rating", "satisfied"],
  styles: ["solid", "regular"],
  label: "Smiling Face"
}, {
  name: "smile-beam",
  search: ["emoticon", "face", "happy", "positive"],
  styles: ["solid", "regular"],
  label: "Beaming Face With Smiling Eyes"
}, {
  name: "smile-wink",
  search: ["emoticon", "face", "happy", "hint", "joke"],
  styles: ["solid", "regular"],
  label: "Winking Face"
}, {
  name: "smog",
  search: ["dragon", "fog", "haze", "pollution", "smoke", "weather"],
  styles: ["solid"],
  label: "Smog"
}, {
  name: "smoking",
  search: ["cancer", "cigarette", "nicotine", "smoking status", "tobacco"],
  styles: ["solid"],
  label: "Smoking"
}, {
  name: "smoking-ban",
  search: ["ban", "cancel", "no smoking", "non-smoking"],
  styles: ["solid"],
  label: "Smoking Ban"
}, {
  name: "sms",
  search: ["chat", "conversation", "message", "mobile", "notification", "phone", "sms", "texting"],
  styles: ["solid"],
  label: "SMS"
}, {
  name: "snapchat",
  search: [],
  styles: ["brands"],
  label: "Snapchat"
}, {
  name: "snapchat-ghost",
  search: [],
  styles: ["brands"],
  label: "Snapchat Ghost"
}, {
  name: "snapchat-square",
  search: [],
  styles: ["brands"],
  label: "Snapchat Square"
}, {
  name: "snowboarding",
  search: ["activity", "fitness", "olympics", "outdoors", "person"],
  styles: ["solid"],
  label: "Snowboarding"
}, {
  name: "snowflake",
  search: ["precipitation", "rain", "winter"],
  styles: ["solid", "regular"],
  label: "Snowflake"
}, {
  name: "snowman",
  search: ["decoration", "frost", "frosty", "holiday"],
  styles: ["solid"],
  label: "Snowman"
}, {
  name: "snowplow",
  search: ["clean up", "cold", "road", "storm", "winter"],
  styles: ["solid"],
  label: "Snowplow"
}, {
  name: "soap",
  search: ["bubbles", "clean", "covid-19", "hygiene", "wash"],
  styles: ["solid"],
  label: "Soap"
}, {
  name: "socks",
  search: ["business socks", "business time", "clothing", "feet", "flight of the conchords", "wednesday"],
  styles: ["solid"],
  label: "Socks"
}, {
  name: "solar-panel",
  search: ["clean", "eco-friendly", "energy", "green", "sun"],
  styles: ["solid"],
  label: "Solar Panel"
}, {
  name: "sort",
  search: ["filter", "order"],
  styles: ["solid"],
  label: "Sort"
}, {
  name: "sort-alpha-down",
  search: ["alphabetical", "arrange", "filter", "order", "sort-alpha-asc"],
  styles: ["solid"],
  label: "Sort Alphabetical Down"
}, {
  name: "sort-alpha-down-alt",
  search: ["alphabetical", "arrange", "filter", "order", "sort-alpha-asc"],
  styles: ["solid"],
  label: "Alternate Sort Alphabetical Down"
}, {
  name: "sort-alpha-up",
  search: ["alphabetical", "arrange", "filter", "order", "sort-alpha-desc"],
  styles: ["solid"],
  label: "Sort Alphabetical Up"
}, {
  name: "sort-alpha-up-alt",
  search: ["alphabetical", "arrange", "filter", "order", "sort-alpha-desc"],
  styles: ["solid"],
  label: "Alternate Sort Alphabetical Up"
}, {
  name: "sort-amount-down",
  search: ["arrange", "filter", "number", "order", "sort-amount-asc"],
  styles: ["solid"],
  label: "Sort Amount Down"
}, {
  name: "sort-amount-down-alt",
  search: ["arrange", "filter", "order", "sort-amount-asc"],
  styles: ["solid"],
  label: "Alternate Sort Amount Down"
}, {
  name: "sort-amount-up",
  search: ["arrange", "filter", "order", "sort-amount-desc"],
  styles: ["solid"],
  label: "Sort Amount Up"
}, {
  name: "sort-amount-up-alt",
  search: ["arrange", "filter", "order", "sort-amount-desc"],
  styles: ["solid"],
  label: "Alternate Sort Amount Up"
}, {
  name: "sort-down",
  search: ["arrow", "descending", "filter", "order", "sort-desc"],
  styles: ["solid"],
  label: "Sort Down (Descending)"
}, {
  name: "sort-numeric-down",
  search: ["arrange", "filter", "numbers", "order", "sort-numeric-asc"],
  styles: ["solid"],
  label: "Sort Numeric Down"
}, {
  name: "sort-numeric-down-alt",
  search: ["arrange", "filter", "numbers", "order", "sort-numeric-asc"],
  styles: ["solid"],
  label: "Alternate Sort Numeric Down"
}, {
  name: "sort-numeric-up",
  search: ["arrange", "filter", "numbers", "order", "sort-numeric-desc"],
  styles: ["solid"],
  label: "Sort Numeric Up"
}, {
  name: "sort-numeric-up-alt",
  search: ["arrange", "filter", "numbers", "order", "sort-numeric-desc"],
  styles: ["solid"],
  label: "Alternate Sort Numeric Up"
}, {
  name: "sort-up",
  search: ["arrow", "ascending", "filter", "order", "sort-asc"],
  styles: ["solid"],
  label: "Sort Up (Ascending)"
}, {
  name: "soundcloud",
  search: [],
  styles: ["brands"],
  label: "SoundCloud"
}, {
  name: "sourcetree",
  search: [],
  styles: ["brands"],
  label: "Sourcetree"
}, {
  name: "spa",
  search: ["flora", "massage", "mindfulness", "plant", "wellness"],
  styles: ["solid"],
  label: "Spa"
}, {
  name: "space-shuttle",
  search: ["astronaut", "machine", "nasa", "rocket", "space", "transportation"],
  styles: ["solid"],
  label: "Space Shuttle"
}, {
  name: "speakap",
  search: [],
  styles: ["brands"],
  label: "Speakap"
}, {
  name: "speaker-deck",
  search: [],
  styles: ["brands"],
  label: "Speaker Deck"
}, {
  name: "spell-check",
  search: ["dictionary", "edit", "editor", "grammar", "text"],
  styles: ["solid"],
  label: "Spell Check"
}, {
  name: "spider",
  search: ["arachnid", "bug", "charlotte", "crawl", "eight", "halloween"],
  styles: ["solid"],
  label: "Spider"
}, {
  name: "spinner",
  search: ["circle", "loading", "progress"],
  styles: ["solid"],
  label: "Spinner"
}, {
  name: "splotch",
  search: ["Ink", "blob", "blotch", "glob", "stain"],
  styles: ["solid"],
  label: "Splotch"
}, {
  name: "spotify",
  search: [],
  styles: ["brands"],
  label: "Spotify"
}, {
  name: "spray-can",
  search: ["Paint", "aerosol", "design", "graffiti", "tag"],
  styles: ["solid"],
  label: "Spray Can"
}, {
  name: "square",
  search: ["block", "box", "shape"],
  styles: ["solid", "regular"],
  label: "Square"
}, {
  name: "square-full",
  search: ["block", "box", "shape"],
  styles: ["solid"],
  label: "Square Full"
}, {
  name: "square-root-alt",
  search: ["arithmetic", "calculus", "division", "math"],
  styles: ["solid"],
  label: "Alternate Square Root"
}, {
  name: "squarespace",
  search: [],
  styles: ["brands"],
  label: "Squarespace"
}, {
  name: "stack-exchange",
  search: [],
  styles: ["brands"],
  label: "Stack Exchange"
}, {
  name: "stack-overflow",
  search: [],
  styles: ["brands"],
  label: "Stack Overflow"
}, {
  name: "stackpath",
  search: [],
  styles: ["brands"],
  label: "Stackpath"
}, {
  name: "stamp",
  search: ["art", "certificate", "imprint", "rubber", "seal"],
  styles: ["solid"],
  label: "Stamp"
}, {
  name: "star",
  search: ["achievement", "award", "favorite", "important", "night", "rating", "score"],
  styles: ["solid", "regular"],
  label: "Star"
}, {
  name: "star-and-crescent",
  search: ["islam", "muslim", "religion"],
  styles: ["solid"],
  label: "Star and Crescent"
}, {
  name: "star-half",
  search: ["achievement", "award", "rating", "score", "star-half-empty", "star-half-full"],
  styles: ["solid", "regular"],
  label: "star-half"
}, {
  name: "star-half-alt",
  search: ["achievement", "award", "rating", "score", "star-half-empty", "star-half-full"],
  styles: ["solid"],
  label: "Alternate Star Half"
}, {
  name: "star-of-david",
  search: ["jewish", "judaism", "religion"],
  styles: ["solid"],
  label: "Star of David"
}, {
  name: "star-of-life",
  search: ["doctor", "emt", "first aid", "health", "medical"],
  styles: ["solid"],
  label: "Star of Life"
}, {
  name: "staylinked",
  search: [],
  styles: ["brands"],
  label: "StayLinked"
}, {
  name: "steam",
  search: [],
  styles: ["brands"],
  label: "Steam"
}, {
  name: "steam-square",
  search: [],
  styles: ["brands"],
  label: "Steam Square"
}, {
  name: "steam-symbol",
  search: [],
  styles: ["brands"],
  label: "Steam Symbol"
}, {
  name: "step-backward",
  search: ["beginning", "first", "previous", "rewind", "start"],
  styles: ["solid"],
  label: "step-backward"
}, {
  name: "step-forward",
  search: ["end", "last", "next"],
  styles: ["solid"],
  label: "step-forward"
}, {
  name: "stethoscope",
  search: ["covid-19", "diagnosis", "doctor", "general practitioner", "hospital", "infirmary", "medicine", "office", "outpatient"],
  styles: ["solid"],
  label: "Stethoscope"
}, {
  name: "sticker-mule",
  search: [],
  styles: ["brands"],
  label: "Sticker Mule"
}, {
  name: "sticky-note",
  search: ["message", "note", "paper", "reminder", "sticker"],
  styles: ["solid", "regular"],
  label: "Sticky Note"
}, {
  name: "stop",
  search: ["block", "box", "square"],
  styles: ["solid"],
  label: "stop"
}, {
  name: "stop-circle",
  search: ["block", "box", "circle", "square"],
  styles: ["solid", "regular"],
  label: "Stop Circle"
}, {
  name: "stopwatch",
  search: ["clock", "reminder", "time"],
  styles: ["solid"],
  label: "Stopwatch"
}, {
  name: "stopwatch-20",
  search: ["ABCs", "countdown", "covid-19", "happy birthday", "i will survive", "reminder", "seconds", "time", "timer"],
  styles: ["solid"],
  label: "Stopwatch 20"
}, {
  name: "store",
  search: ["building", "buy", "purchase", "shopping"],
  styles: ["solid"],
  label: "Store"
}, {
  name: "store-alt",
  search: ["building", "buy", "purchase", "shopping"],
  styles: ["solid"],
  label: "Alternate Store"
}, {
  name: "store-alt-slash",
  search: ["building", "buy", "closed", "covid-19", "purchase", "shopping"],
  styles: ["solid"],
  label: "Alternate Store Slash"
}, {
  name: "store-slash",
  search: ["building", "buy", "closed", "covid-19", "purchase", "shopping"],
  styles: ["solid"],
  label: "Store Slash"
}, {
  name: "strava",
  search: [],
  styles: ["brands"],
  label: "Strava"
}, {
  name: "stream",
  search: ["flow", "list", "timeline"],
  styles: ["solid"],
  label: "Stream"
}, {
  name: "street-view",
  search: ["directions", "location", "map", "navigation"],
  styles: ["solid"],
  label: "Street View"
}, {
  name: "strikethrough",
  search: ["cancel", "edit", "font", "format", "text", "type"],
  styles: ["solid"],
  label: "Strikethrough"
}, {
  name: "stripe",
  search: [],
  styles: ["brands"],
  label: "Stripe"
}, {
  name: "stripe-s",
  search: [],
  styles: ["brands"],
  label: "Stripe S"
}, {
  name: "stroopwafel",
  search: ["caramel", "cookie", "dessert", "sweets", "waffle"],
  styles: ["solid"],
  label: "Stroopwafel"
}, {
  name: "studiovinari",
  search: [],
  styles: ["brands"],
  label: "Studio Vinari"
}, {
  name: "stumbleupon",
  search: [],
  styles: ["brands"],
  label: "StumbleUpon Logo"
}, {
  name: "stumbleupon-circle",
  search: [],
  styles: ["brands"],
  label: "StumbleUpon Circle"
}, {
  name: "subscript",
  search: ["edit", "font", "format", "text", "type"],
  styles: ["solid"],
  label: "subscript"
}, {
  name: "subway",
  search: ["machine", "railway", "train", "transportation", "vehicle"],
  styles: ["solid"],
  label: "Subway"
}, {
  name: "suitcase",
  search: ["baggage", "luggage", "move", "suitcase", "travel", "trip"],
  styles: ["solid"],
  label: "Suitcase"
}, {
  name: "suitcase-rolling",
  search: ["baggage", "luggage", "move", "suitcase", "travel", "trip"],
  styles: ["solid"],
  label: "Suitcase Rolling"
}, {
  name: "sun",
  search: ["brighten", "contrast", "day", "lighter", "sol", "solar", "star", "weather"],
  styles: ["solid", "regular"],
  label: "Sun"
}, {
  name: "superpowers",
  search: [],
  styles: ["brands"],
  label: "Superpowers"
}, {
  name: "superscript",
  search: ["edit", "exponential", "font", "format", "text", "type"],
  styles: ["solid"],
  label: "superscript"
}, {
  name: "supple",
  search: [],
  styles: ["brands"],
  label: "Supple"
}, {
  name: "surprise",
  search: ["emoticon", "face", "shocked"],
  styles: ["solid", "regular"],
  label: "Hushed Face"
}, {
  name: "suse",
  search: ["linux", "operating system", "os"],
  styles: ["brands"],
  label: "Suse"
}, {
  name: "swatchbook",
  search: ["Pantone", "color", "design", "hue", "palette"],
  styles: ["solid"],
  label: "Swatchbook"
}, {
  name: "swift",
  search: [],
  styles: ["brands"],
  label: "Swift"
}, {
  name: "swimmer",
  search: ["athlete", "head", "man", "olympics", "person", "pool", "water"],
  styles: ["solid"],
  label: "Swimmer"
}, {
  name: "swimming-pool",
  search: ["ladder", "recreation", "swim", "water"],
  styles: ["solid"],
  label: "Swimming Pool"
}, {
  name: "symfony",
  search: [],
  styles: ["brands"],
  label: "Symfony"
}, {
  name: "synagogue",
  search: ["building", "jewish", "judaism", "religion", "star of david", "temple"],
  styles: ["solid"],
  label: "Synagogue"
}, {
  name: "sync",
  search: ["exchange", "refresh", "reload", "rotate", "swap"],
  styles: ["solid"],
  label: "Sync"
}, {
  name: "sync-alt",
  search: ["exchange", "refresh", "reload", "rotate", "swap"],
  styles: ["solid"],
  label: "Alternate Sync"
}, {
  name: "syringe",
  search: ["covid-19", "doctor", "immunizations", "medical", "needle"],
  styles: ["solid"],
  label: "Syringe"
}, {
  name: "table",
  search: ["data", "excel", "spreadsheet"],
  styles: ["solid"],
  label: "table"
}, {
  name: "table-tennis",
  search: ["ball", "paddle", "ping pong"],
  styles: ["solid"],
  label: "Table Tennis"
}, {
  name: "tablet",
  search: ["apple", "device", "ipad", "kindle", "screen"],
  styles: ["solid"],
  label: "tablet"
}, {
  name: "tablet-alt",
  search: ["apple", "device", "ipad", "kindle", "screen"],
  styles: ["solid"],
  label: "Alternate Tablet"
}, {
  name: "tablets",
  search: ["drugs", "medicine", "pills", "prescription"],
  styles: ["solid"],
  label: "Tablets"
}, {
  name: "tachometer-alt",
  search: ["dashboard", "fast", "odometer", "speed", "speedometer"],
  styles: ["solid"],
  label: "Alternate Tachometer"
}, {
  name: "tag",
  search: ["discount", "label", "price", "shopping"],
  styles: ["solid"],
  label: "tag"
}, {
  name: "tags",
  search: ["discount", "label", "price", "shopping"],
  styles: ["solid"],
  label: "tags"
}, {
  name: "tape",
  search: ["design", "package", "sticky"],
  styles: ["solid"],
  label: "Tape"
}, {
  name: "tasks",
  search: ["checklist", "downloading", "downloads", "loading", "progress", "project management", "settings", "to do"],
  styles: ["solid"],
  label: "Tasks"
}, {
  name: "taxi",
  search: ["cab", "cabbie", "car", "car service", "lyft", "machine", "transportation", "travel", "uber", "vehicle"],
  styles: ["solid"],
  label: "Taxi"
}, {
  name: "teamspeak",
  search: [],
  styles: ["brands"],
  label: "TeamSpeak"
}, {
  name: "teeth",
  search: ["bite", "dental", "dentist", "gums", "mouth", "smile", "tooth"],
  styles: ["solid"],
  label: "Teeth"
}, {
  name: "teeth-open",
  search: ["dental", "dentist", "gums bite", "mouth", "smile", "tooth"],
  styles: ["solid"],
  label: "Teeth Open"
}, {
  name: "telegram",
  search: [],
  styles: ["brands"],
  label: "Telegram"
}, {
  name: "telegram-plane",
  search: [],
  styles: ["brands"],
  label: "Telegram Plane"
}, {
  name: "temperature-high",
  search: ["cook", "covid-19", "mercury", "summer", "thermometer", "warm"],
  styles: ["solid"],
  label: "High Temperature"
}, {
  name: "temperature-low",
  search: ["cold", "cool", "covid-19", "mercury", "thermometer", "winter"],
  styles: ["solid"],
  label: "Low Temperature"
}, {
  name: "tencent-weibo",
  search: [],
  styles: ["brands"],
  label: "Tencent Weibo"
}, {
  name: "tenge",
  search: ["currency", "kazakhstan", "money", "price"],
  styles: ["solid"],
  label: "Tenge"
}, {
  name: "terminal",
  search: ["code", "command", "console", "development", "prompt"],
  styles: ["solid"],
  label: "Terminal"
}, {
  name: "text-height",
  search: ["edit", "font", "format", "text", "type"],
  styles: ["solid"],
  label: "text-height"
}, {
  name: "text-width",
  search: ["edit", "font", "format", "text", "type"],
  styles: ["solid"],
  label: "Text Width"
}, {
  name: "th",
  search: ["blocks", "boxes", "grid", "squares"],
  styles: ["solid"],
  label: "th"
}, {
  name: "th-large",
  search: ["blocks", "boxes", "grid", "squares"],
  styles: ["solid"],
  label: "th-large"
}, {
  name: "th-list",
  search: ["checklist", "completed", "done", "finished", "ol", "todo", "ul"],
  styles: ["solid"],
  label: "th-list"
}, {
  name: "the-red-yeti",
  search: [],
  styles: ["brands"],
  label: "The Red Yeti"
}, {
  name: "theater-masks",
  search: ["comedy", "perform", "theatre", "tragedy"],
  styles: ["solid"],
  label: "Theater Masks"
}, {
  name: "themeco",
  search: [],
  styles: ["brands"],
  label: "Themeco"
}, {
  name: "themeisle",
  search: [],
  styles: ["brands"],
  label: "ThemeIsle"
}, {
  name: "thermometer",
  search: ["covid-19", "mercury", "status", "temperature"],
  styles: ["solid"],
  label: "Thermometer"
}, {
  name: "thermometer-empty",
  search: ["cold", "mercury", "status", "temperature"],
  styles: ["solid"],
  label: "Thermometer Empty"
}, {
  name: "thermometer-full",
  search: ["fever", "hot", "mercury", "status", "temperature"],
  styles: ["solid"],
  label: "Thermometer Full"
}, {
  name: "thermometer-half",
  search: ["mercury", "status", "temperature"],
  styles: ["solid"],
  label: "Thermometer 1/2 Full"
}, {
  name: "thermometer-quarter",
  search: ["mercury", "status", "temperature"],
  styles: ["solid"],
  label: "Thermometer 1/4 Full"
}, {
  name: "thermometer-three-quarters",
  search: ["mercury", "status", "temperature"],
  styles: ["solid"],
  label: "Thermometer 3/4 Full"
}, {
  name: "think-peaks",
  search: [],
  styles: ["brands"],
  label: "Think Peaks"
}, {
  name: "thumbs-down",
  search: ["disagree", "disapprove", "dislike", "hand", "social", "thumbs-o-down"],
  styles: ["solid", "regular"],
  label: "thumbs-down"
}, {
  name: "thumbs-up",
  search: ["agree", "approve", "favorite", "hand", "like", "ok", "okay", "social", "success", "thumbs-o-up", "yes", "you got it dude"],
  styles: ["solid", "regular"],
  label: "thumbs-up"
}, {
  name: "thumbtack",
  search: ["coordinates", "location", "marker", "pin", "thumb-tack"],
  styles: ["solid"],
  label: "Thumbtack"
}, {
  name: "ticket-alt",
  search: ["movie", "pass", "support", "ticket"],
  styles: ["solid"],
  label: "Alternate Ticket"
}, {
  name: "times",
  search: ["close", "cross", "error", "exit", "incorrect", "notice", "notification", "notify", "problem", "wrong", "x"],
  styles: ["solid"],
  label: "Times"
}, {
  name: "times-circle",
  search: ["close", "cross", "exit", "incorrect", "notice", "notification", "notify", "problem", "wrong", "x"],
  styles: ["solid", "regular"],
  label: "Times Circle"
}, {
  name: "tint",
  search: ["color", "drop", "droplet", "raindrop", "waterdrop"],
  styles: ["solid"],
  label: "tint"
}, {
  name: "tint-slash",
  search: ["color", "drop", "droplet", "raindrop", "waterdrop"],
  styles: ["solid"],
  label: "Tint Slash"
}, {
  name: "tired",
  search: ["angry", "emoticon", "face", "grumpy", "upset"],
  styles: ["solid", "regular"],
  label: "Tired Face"
}, {
  name: "toggle-off",
  search: ["switch"],
  styles: ["solid"],
  label: "Toggle Off"
}, {
  name: "toggle-on",
  search: ["switch"],
  styles: ["solid"],
  label: "Toggle On"
}, {
  name: "toilet",
  search: ["bathroom", "flush", "john", "loo", "pee", "plumbing", "poop", "porcelain", "potty", "restroom", "throne", "washroom", "waste", "wc"],
  styles: ["solid"],
  label: "Toilet"
}, {
  name: "toilet-paper",
  search: ["bathroom", "covid-19", "halloween", "holiday", "lavatory", "prank", "restroom", "roll"],
  styles: ["solid"],
  label: "Toilet Paper"
}, {
  name: "toilet-paper-slash",
  search: ["bathroom", "covid-19", "halloween", "holiday", "lavatory", "leaves", "prank", "restroom", "roll", "trouble", "ut oh"],
  styles: ["solid"],
  label: "Toilet Paper Slash"
}, {
  name: "toolbox",
  search: ["admin", "container", "fix", "repair", "settings", "tools"],
  styles: ["solid"],
  label: "Toolbox"
}, {
  name: "tools",
  search: ["admin", "fix", "repair", "screwdriver", "settings", "tools", "wrench"],
  styles: ["solid"],
  label: "Tools"
}, {
  name: "tooth",
  search: ["bicuspid", "dental", "dentist", "molar", "mouth", "teeth"],
  styles: ["solid"],
  label: "Tooth"
}, {
  name: "torah",
  search: ["book", "jewish", "judaism", "religion", "scroll"],
  styles: ["solid"],
  label: "Torah"
}, {
  name: "torii-gate",
  search: ["building", "shintoism"],
  styles: ["solid"],
  label: "Torii Gate"
}, {
  name: "tractor",
  search: ["agriculture", "farm", "vehicle"],
  styles: ["solid"],
  label: "Tractor"
}, {
  name: "trade-federation",
  search: [],
  styles: ["brands"],
  label: "Trade Federation"
}, {
  name: "trademark",
  search: ["copyright", "register", "symbol"],
  styles: ["solid"],
  label: "Trademark"
}, {
  name: "traffic-light",
  search: ["direction", "road", "signal", "travel"],
  styles: ["solid"],
  label: "Traffic Light"
}, {
  name: "trailer",
  search: ["carry", "haul", "moving", "travel"],
  styles: ["solid"],
  label: "Trailer"
}, {
  name: "train",
  search: ["bullet", "commute", "locomotive", "railway", "subway"],
  styles: ["solid"],
  label: "Train"
}, {
  name: "tram",
  search: ["crossing", "machine", "mountains", "seasonal", "transportation"],
  styles: ["solid"],
  label: "Tram"
}, {
  name: "transgender",
  search: ["intersex"],
  styles: ["solid"],
  label: "Transgender"
}, {
  name: "transgender-alt",
  search: ["intersex"],
  styles: ["solid"],
  label: "Alternate Transgender"
}, {
  name: "trash",
  search: ["delete", "garbage", "hide", "remove"],
  styles: ["solid"],
  label: "Trash"
}, {
  name: "trash-alt",
  search: ["delete", "garbage", "hide", "remove", "trash-o"],
  styles: ["solid", "regular"],
  label: "Alternate Trash"
}, {
  name: "trash-restore",
  search: ["back", "control z", "oops", "undo"],
  styles: ["solid"],
  label: "Trash Restore"
}, {
  name: "trash-restore-alt",
  search: ["back", "control z", "oops", "undo"],
  styles: ["solid"],
  label: "Alternative Trash Restore"
}, {
  name: "tree",
  search: ["bark", "fall", "flora", "forest", "nature", "plant", "seasonal"],
  styles: ["solid"],
  label: "Tree"
}, {
  name: "trello",
  search: ["atlassian"],
  styles: ["brands"],
  label: "Trello"
}, {
  name: "tripadvisor",
  search: [],
  styles: ["brands"],
  label: "TripAdvisor"
}, {
  name: "trophy",
  search: ["achievement", "award", "cup", "game", "winner"],
  styles: ["solid"],
  label: "trophy"
}, {
  name: "truck",
  search: ["cargo", "delivery", "shipping", "vehicle"],
  styles: ["solid"],
  label: "truck"
}, {
  name: "truck-loading",
  search: ["box", "cargo", "delivery", "inventory", "moving", "rental", "vehicle"],
  styles: ["solid"],
  label: "Truck Loading"
}, {
  name: "truck-monster",
  search: ["offroad", "vehicle", "wheel"],
  styles: ["solid"],
  label: "Truck Monster"
}, {
  name: "truck-moving",
  search: ["cargo", "inventory", "rental", "vehicle"],
  styles: ["solid"],
  label: "Truck Moving"
}, {
  name: "truck-pickup",
  search: ["cargo", "vehicle"],
  styles: ["solid"],
  label: "Truck Side"
}, {
  name: "tshirt",
  search: ["clothing", "fashion", "garment", "shirt"],
  styles: ["solid"],
  label: "T-Shirt"
}, {
  name: "tty",
  search: ["communication", "deaf", "telephone", "teletypewriter", "text"],
  styles: ["solid"],
  label: "TTY"
}, {
  name: "tumblr",
  search: [],
  styles: ["brands"],
  label: "Tumblr"
}, {
  name: "tumblr-square",
  search: [],
  styles: ["brands"],
  label: "Tumblr Square"
}, {
  name: "tv",
  search: ["computer", "display", "monitor", "television"],
  styles: ["solid"],
  label: "Television"
}, {
  name: "twitch",
  search: [],
  styles: ["brands"],
  label: "Twitch"
}, {
  name: "twitter",
  search: ["social network", "tweet"],
  styles: ["brands"],
  label: "Twitter"
}, {
  name: "twitter-square",
  search: ["social network", "tweet"],
  styles: ["brands"],
  label: "Twitter Square"
}, {
  name: "typo3",
  search: [],
  styles: ["brands"],
  label: "Typo3"
}, {
  name: "uber",
  search: [],
  styles: ["brands"],
  label: "Uber"
}, {
  name: "ubuntu",
  search: ["linux", "operating system", "os"],
  styles: ["brands"],
  label: "Ubuntu"
}, {
  name: "uikit",
  search: [],
  styles: ["brands"],
  label: "UIkit"
}, {
  name: "umbraco",
  search: [],
  styles: ["brands"],
  label: "Umbraco"
}, {
  name: "umbrella",
  search: ["protection", "rain", "storm", "wet"],
  styles: ["solid"],
  label: "Umbrella"
}, {
  name: "umbrella-beach",
  search: ["protection", "recreation", "sand", "shade", "summer", "sun"],
  styles: ["solid"],
  label: "Umbrella Beach"
}, {
  name: "underline",
  search: ["edit", "emphasis", "format", "text", "writing"],
  styles: ["solid"],
  label: "Underline"
}, {
  name: "undo",
  search: ["back", "control z", "exchange", "oops", "return", "rotate", "swap"],
  styles: ["solid"],
  label: "Undo"
}, {
  name: "undo-alt",
  search: ["back", "control z", "exchange", "oops", "return", "swap"],
  styles: ["solid"],
  label: "Alternate Undo"
}, {
  name: "uniregistry",
  search: [],
  styles: ["brands"],
  label: "Uniregistry"
}, {
  name: "unity",
  search: [],
  styles: ["brands"],
  label: "Unity 3D"
}, {
  name: "universal-access",
  search: ["accessibility", "hearing", "person", "seeing", "visual impairment"],
  styles: ["solid"],
  label: "Universal Access"
}, {
  name: "university",
  search: ["bank", "building", "college", "higher education - students", "institution"],
  styles: ["solid"],
  label: "University"
}, {
  name: "unlink",
  search: ["attachment", "chain", "chain-broken", "remove"],
  styles: ["solid"],
  label: "unlink"
}, {
  name: "unlock",
  search: ["admin", "lock", "password", "private", "protect"],
  styles: ["solid"],
  label: "unlock"
}, {
  name: "unlock-alt",
  search: ["admin", "lock", "password", "private", "protect"],
  styles: ["solid"],
  label: "Alternate Unlock"
}, {
  name: "untappd",
  search: [],
  styles: ["brands"],
  label: "Untappd"
}, {
  name: "upload",
  search: ["hard drive", "import", "publish"],
  styles: ["solid"],
  label: "Upload"
}, {
  name: "ups",
  search: ["United Parcel Service", "package", "shipping"],
  styles: ["brands"],
  label: "UPS"
}, {
  name: "usb",
  search: [],
  styles: ["brands"],
  label: "USB"
}, {
  name: "user",
  search: ["account", "avatar", "head", "human", "man", "person", "profile"],
  styles: ["solid", "regular"],
  label: "User"
}, {
  name: "user-alt",
  search: ["account", "avatar", "head", "human", "man", "person", "profile"],
  styles: ["solid"],
  label: "Alternate User"
}, {
  name: "user-alt-slash",
  search: ["account", "avatar", "head", "human", "man", "person", "profile"],
  styles: ["solid"],
  label: "Alternate User Slash"
}, {
  name: "user-astronaut",
  search: ["avatar", "clothing", "cosmonaut", "nasa", "space", "suit"],
  styles: ["solid"],
  label: "User Astronaut"
}, {
  name: "user-check",
  search: ["accept", "check", "person", "verified"],
  styles: ["solid"],
  label: "User Check"
}, {
  name: "user-circle",
  search: ["account", "avatar", "head", "human", "man", "person", "profile"],
  styles: ["solid", "regular"],
  label: "User Circle"
}, {
  name: "user-clock",
  search: ["alert", "person", "remind", "time"],
  styles: ["solid"],
  label: "User Clock"
}, {
  name: "user-cog",
  search: ["admin", "cog", "person", "settings"],
  styles: ["solid"],
  label: "User Cog"
}, {
  name: "user-edit",
  search: ["edit", "pen", "pencil", "person", "update", "write"],
  styles: ["solid"],
  label: "User Edit"
}, {
  name: "user-friends",
  search: ["group", "people", "person", "team", "users"],
  styles: ["solid"],
  label: "User Friends"
}, {
  name: "user-graduate",
  search: ["cap", "clothing", "commencement", "gown", "graduation", "person", "student"],
  styles: ["solid"],
  label: "User Graduate"
}, {
  name: "user-injured",
  search: ["cast", "injury", "ouch", "patient", "person", "sling"],
  styles: ["solid"],
  label: "User Injured"
}, {
  name: "user-lock",
  search: ["admin", "lock", "person", "private", "unlock"],
  styles: ["solid"],
  label: "User Lock"
}, {
  name: "user-md",
  search: ["covid-19", "job", "medical", "nurse", "occupation", "physician", "profile", "surgeon"],
  styles: ["solid"],
  label: "Doctor"
}, {
  name: "user-minus",
  search: ["delete", "negative", "remove"],
  styles: ["solid"],
  label: "User Minus"
}, {
  name: "user-ninja",
  search: ["assassin", "avatar", "dangerous", "deadly", "sneaky"],
  styles: ["solid"],
  label: "User Ninja"
}, {
  name: "user-nurse",
  search: ["covid-19", "doctor", "midwife", "practitioner", "surgeon"],
  styles: ["solid"],
  label: "Nurse"
}, {
  name: "user-plus",
  search: ["add", "avatar", "positive", "sign up", "signup", "team"],
  styles: ["solid"],
  label: "User Plus"
}, {
  name: "user-secret",
  search: ["clothing", "coat", "hat", "incognito", "person", "privacy", "spy", "whisper"],
  styles: ["solid"],
  label: "User Secret"
}, {
  name: "user-shield",
  search: ["admin", "person", "private", "protect", "safe"],
  styles: ["solid"],
  label: "User Shield"
}, {
  name: "user-slash",
  search: ["ban", "delete", "remove"],
  styles: ["solid"],
  label: "User Slash"
}, {
  name: "user-tag",
  search: ["avatar", "discount", "label", "person", "role", "special"],
  styles: ["solid"],
  label: "User Tag"
}, {
  name: "user-tie",
  search: ["avatar", "business", "clothing", "formal", "professional", "suit"],
  styles: ["solid"],
  label: "User Tie"
}, {
  name: "user-times",
  search: ["archive", "delete", "remove", "x"],
  styles: ["solid"],
  label: "Remove User"
}, {
  name: "users",
  search: ["friends", "group", "people", "persons", "profiles", "team"],
  styles: ["solid"],
  label: "Users"
}, {
  name: "users-cog",
  search: ["admin", "cog", "group", "person", "settings", "team"],
  styles: ["solid"],
  label: "Users Cog"
}, {
  name: "usps",
  search: ["american", "package", "shipping", "usa"],
  styles: ["brands"],
  label: "United States Postal Service"
}, {
  name: "ussunnah",
  search: [],
  styles: ["brands"],
  label: "us-Sunnah Foundation"
}, {
  name: "utensil-spoon",
  search: ["cutlery", "dining", "scoop", "silverware", "spoon"],
  styles: ["solid"],
  label: "Utensil Spoon"
}, {
  name: "utensils",
  search: ["cutlery", "dining", "dinner", "eat", "food", "fork", "knife", "restaurant"],
  styles: ["solid"],
  label: "Utensils"
}, {
  name: "vaadin",
  search: [],
  styles: ["brands"],
  label: "Vaadin"
}, {
  name: "vector-square",
  search: ["anchors", "lines", "object", "render", "shape"],
  styles: ["solid"],
  label: "Vector Square"
}, {
  name: "venus",
  search: ["female"],
  styles: ["solid"],
  label: "Venus"
}, {
  name: "venus-double",
  search: ["female"],
  styles: ["solid"],
  label: "Venus Double"
}, {
  name: "venus-mars",
  search: ["Gender"],
  styles: ["solid"],
  label: "Venus Mars"
}, {
  name: "viacoin",
  search: [],
  styles: ["brands"],
  label: "Viacoin"
}, {
  name: "viadeo",
  search: [],
  styles: ["brands"],
  label: "Video"
}, {
  name: "viadeo-square",
  search: [],
  styles: ["brands"],
  label: "Video Square"
}, {
  name: "vial",
  search: ["experiment", "lab", "sample", "science", "test", "test tube"],
  styles: ["solid"],
  label: "Vial"
}, {
  name: "vials",
  search: ["experiment", "lab", "sample", "science", "test", "test tube"],
  styles: ["solid"],
  label: "Vials"
}, {
  name: "viber",
  search: [],
  styles: ["brands"],
  label: "Viber"
}, {
  name: "video",
  search: ["camera", "film", "movie", "record", "video-camera"],
  styles: ["solid"],
  label: "Video"
}, {
  name: "video-slash",
  search: ["add", "create", "film", "new", "positive", "record", "video"],
  styles: ["solid"],
  label: "Video Slash"
}, {
  name: "vihara",
  search: ["buddhism", "buddhist", "building", "monastery"],
  styles: ["solid"],
  label: "Vihara"
}, {
  name: "vimeo",
  search: [],
  styles: ["brands"],
  label: "Vimeo"
}, {
  name: "vimeo-square",
  search: [],
  styles: ["brands"],
  label: "Vimeo Square"
}, {
  name: "vimeo-v",
  search: ["vimeo"],
  styles: ["brands"],
  label: "Vimeo"
}, {
  name: "vine",
  search: [],
  styles: ["brands"],
  label: "Vine"
}, {
  name: "virus",
  search: ["bug", "covid-19", "flu", "health", "sick", "viral"],
  styles: ["solid"],
  label: "Virus"
}, {
  name: "virus-slash",
  search: ["bug", "covid-19", "cure", "eliminate", "flu", "health", "sick", "viral"],
  styles: ["solid"],
  label: "Virus Slash"
}, {
  name: "viruses",
  search: ["bugs", "covid-19", "flu", "health", "multiply", "sick", "spread", "viral"],
  styles: ["solid"],
  label: "Viruses"
}, {
  name: "vk",
  search: [],
  styles: ["brands"],
  label: "VK"
}, {
  name: "vnv",
  search: [],
  styles: ["brands"],
  label: "VNV"
}, {
  name: "voicemail",
  search: ["answer", "inbox", "message", "phone"],
  styles: ["solid"],
  label: "Voicemail"
}, {
  name: "volleyball-ball",
  search: ["beach", "olympics", "sport"],
  styles: ["solid"],
  label: "Volleyball Ball"
}, {
  name: "volume-down",
  search: ["audio", "lower", "music", "quieter", "sound", "speaker"],
  styles: ["solid"],
  label: "Volume Down"
}, {
  name: "volume-mute",
  search: ["audio", "music", "quiet", "sound", "speaker"],
  styles: ["solid"],
  label: "Volume Mute"
}, {
  name: "volume-off",
  search: ["audio", "ban", "music", "mute", "quiet", "silent", "sound"],
  styles: ["solid"],
  label: "Volume Off"
}, {
  name: "volume-up",
  search: ["audio", "higher", "louder", "music", "sound", "speaker"],
  styles: ["solid"],
  label: "Volume Up"
}, {
  name: "vote-yea",
  search: ["accept", "cast", "election", "politics", "positive", "yes"],
  styles: ["solid"],
  label: "Vote Yea"
}, {
  name: "vr-cardboard",
  search: ["3d", "augment", "google", "reality", "virtual"],
  styles: ["solid"],
  label: "Cardboard VR"
}, {
  name: "vuejs",
  search: [],
  styles: ["brands"],
  label: "Vue.js"
}, {
  name: "walking",
  search: ["exercise", "health", "pedometer", "person", "steps"],
  styles: ["solid"],
  label: "Walking"
}, {
  name: "wallet",
  search: ["billfold", "cash", "currency", "money"],
  styles: ["solid"],
  label: "Wallet"
}, {
  name: "warehouse",
  search: ["building", "capacity", "garage", "inventory", "storage"],
  styles: ["solid"],
  label: "Warehouse"
}, {
  name: "water",
  search: ["lake", "liquid", "ocean", "sea", "swim", "wet"],
  styles: ["solid"],
  label: "Water"
}, {
  name: "wave-square",
  search: ["frequency", "pulse", "signal"],
  styles: ["solid"],
  label: "Square Wave"
}, {
  name: "waze",
  search: [],
  styles: ["brands"],
  label: "Waze"
}, {
  name: "weebly",
  search: [],
  styles: ["brands"],
  label: "Weebly"
}, {
  name: "weibo",
  search: [],
  styles: ["brands"],
  label: "Weibo"
}, {
  name: "weight",
  search: ["health", "measurement", "scale", "weight"],
  styles: ["solid"],
  label: "Weight"
}, {
  name: "weight-hanging",
  search: ["anvil", "heavy", "measurement"],
  styles: ["solid"],
  label: "Hanging Weight"
}, {
  name: "weixin",
  search: [],
  styles: ["brands"],
  label: "Weixin (WeChat)"
}, {
  name: "whatsapp",
  search: [],
  styles: ["brands"],
  label: "What's App"
}, {
  name: "whatsapp-square",
  search: [],
  styles: ["brands"],
  label: "What's App Square"
}, {
  name: "wheelchair",
  search: ["accessible", "handicap", "person"],
  styles: ["solid"],
  label: "Wheelchair"
}, {
  name: "whmcs",
  search: [],
  styles: ["brands"],
  label: "WHMCS"
}, {
  name: "wifi",
  search: ["connection", "hotspot", "internet", "network", "wireless"],
  styles: ["solid"],
  label: "WiFi"
}, {
  name: "wikipedia-w",
  search: [],
  styles: ["brands"],
  label: "Wikipedia W"
}, {
  name: "wind",
  search: ["air", "blow", "breeze", "fall", "seasonal", "weather"],
  styles: ["solid"],
  label: "Wind"
}, {
  name: "window-close",
  search: ["browser", "cancel", "computer", "development"],
  styles: ["solid", "regular"],
  label: "Window Close"
}, {
  name: "window-maximize",
  search: ["browser", "computer", "development", "expand"],
  styles: ["solid", "regular"],
  label: "Window Maximize"
}, {
  name: "window-minimize",
  search: ["browser", "collapse", "computer", "development"],
  styles: ["solid", "regular"],
  label: "Window Minimize"
}, {
  name: "window-restore",
  search: ["browser", "computer", "development"],
  styles: ["solid", "regular"],
  label: "Window Restore"
}, {
  name: "windows",
  search: ["microsoft", "operating system", "os"],
  styles: ["brands"],
  label: "Windows"
}, {
  name: "wine-bottle",
  search: ["alcohol", "beverage", "cabernet", "drink", "glass", "grapes", "merlot", "sauvignon"],
  styles: ["solid"],
  label: "Wine Bottle"
}, {
  name: "wine-glass",
  search: ["alcohol", "beverage", "cabernet", "drink", "grapes", "merlot", "sauvignon"],
  styles: ["solid"],
  label: "Wine Glass"
}, {
  name: "wine-glass-alt",
  search: ["alcohol", "beverage", "cabernet", "drink", "grapes", "merlot", "sauvignon"],
  styles: ["solid"],
  label: "Alternate Wine Glas"
}, {
  name: "wix",
  search: [],
  styles: ["brands"],
  label: "Wix"
}, {
  name: "wizards-of-the-coast",
  search: ["Dungeons & Dragons", "d&d", "dnd", "fantasy", "game", "gaming", "tabletop"],
  styles: ["brands"],
  label: "Wizards of the Coast"
}, {
  name: "wolf-pack-battalion",
  search: [],
  styles: ["brands"],
  label: "Wolf Pack Battalion"
}, {
  name: "won-sign",
  search: ["currency", "krw", "money"],
  styles: ["solid"],
  label: "Won Sign"
}, {
  name: "wordpress",
  search: [],
  styles: ["brands"],
  label: "WordPress Logo"
}, {
  name: "wordpress-simple",
  search: [],
  styles: ["brands"],
  label: "Wordpress Simple"
}, {
  name: "wpbeginner",
  search: [],
  styles: ["brands"],
  label: "WPBeginner"
}, {
  name: "wpexplorer",
  search: [],
  styles: ["brands"],
  label: "WPExplorer"
}, {
  name: "wpforms",
  search: [],
  styles: ["brands"],
  label: "WPForms"
}, {
  name: "wpressr",
  search: ["rendact"],
  styles: ["brands"],
  label: "wpressr"
}, {
  name: "wrench",
  search: ["construction", "fix", "mechanic", "plumbing", "settings", "spanner", "tool", "update"],
  styles: ["solid"],
  label: "Wrench"
}, {
  name: "x-ray",
  search: ["health", "medical", "radiological images", "radiology", "skeleton"],
  styles: ["solid"],
  label: "X-Ray"
}, {
  name: "xbox",
  search: [],
  styles: ["brands"],
  label: "Xbox"
}, {
  name: "xing",
  search: [],
  styles: ["brands"],
  label: "Xing"
}, {
  name: "xing-square",
  search: [],
  styles: ["brands"],
  label: "Xing Square"
}, {
  name: "y-combinator",
  search: [],
  styles: ["brands"],
  label: "Y Combinator"
}, {
  name: "yahoo",
  search: [],
  styles: ["brands"],
  label: "Yahoo Logo"
}, {
  name: "yammer",
  search: [],
  styles: ["brands"],
  label: "Yammer"
}, {
  name: "yandex",
  search: [],
  styles: ["brands"],
  label: "Yandex"
}, {
  name: "yandex-international",
  search: [],
  styles: ["brands"],
  label: "Yandex International"
}, {
  name: "yarn",
  search: [],
  styles: ["brands"],
  label: "Yarn"
}, {
  name: "yelp",
  search: [],
  styles: ["brands"],
  label: "Yelp"
}, {
  name: "yen-sign",
  search: ["currency", "jpy", "money"],
  styles: ["solid"],
  label: "Yen Sign"
}, {
  name: "yin-yang",
  search: ["daoism", "opposites", "taoism"],
  styles: ["solid"],
  label: "Yin Yang"
}, {
  name: "yoast",
  search: [],
  styles: ["brands"],
  label: "Yoast"
}, {
  name: "youtube",
  search: ["film", "video", "youtube-play", "youtube-square"],
  styles: ["brands"],
  label: "YouTube"
}, {
  name: "youtube-square",
  search: [],
  styles: ["brands"],
  label: "YouTube Square"
}, {
  name: "zhihu",
  search: [],
  styles: ["brands"],
  label: "Zhihu"
}];

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/suggest/index.css
var suggest = __webpack_require__(9531);
;// CONCATENATED MODULE: ./src/component/suggest/index.css

            

var suggest_options = {};

suggest_options.insert = "head";
suggest_options.singleton = false;

var suggest_update = injectStylesIntoStyleTag_default()(suggest/* default */.Z, suggest_options);



/* harmony default export */ const component_suggest = (suggest/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/suggest/index.js












const Suggest = function({
  input = false,
  widthElement = false,
  type = false,
  postFocus = false,
  action = false
} = {}) {

  this.state = {
    open: false
  };

  this.element = {
    suggest: node('div|class:suggest'),
    list: node('div|class:suggest-list list-unstyled'),
    input: input
  };

  this.open = () => {

    const results = this.suggestItems();

    if (results.length > 0) {

      if (this.state.open) {

        this.style();

        clearChildNode(this.element.list);

        this.populateList(results);

      } else {

        const body = document.querySelector('body');

        this.style();

        this.element.suggest.classList.add('is-transparent');

        clearChildNode(this.element.list);

        this.populateList(results);

        body.appendChild(this.element.suggest);

        getComputedStyle(this.element.suggest).opacity;

        this.element.suggest.classList.remove('is-transparent');

        this.element.suggest.classList.add('is-opaque');

        this.bind.add();

        this.state.open = true;

      };

    } else {

      this.close();

    };

  };

  this.close = () => {

    this.element.suggest.classList.remove('is-opaque');

    this.element.suggest.classList.add('is-transparent');

  };

  this.bind = {};

  this.bind.input = () => {

    this.element.input.addEventListener('focus', () => {
      clearTimeout(this.timer);
      this.timer = setTimeout(this.open, 300);
    });

    this.element.input.addEventListener('input', () => {
      clearTimeout(this.timer);
      this.timer = setTimeout(this.open, 300);
    });

  };

  this.bind.add = () => {

    window.addEventListener('mouseup', this.clickOut);

    window.addEventListener('keydown', this.esc);

    window.addEventListener('keydown', this.navigateResults);

  };

  this.bind.remove = () => {

    window.removeEventListener('mouseup', this.clickOut);

    window.removeEventListener('keydown', this.esc);

    window.removeEventListener('keydown', this.navigateResults);

  };

  this.style = () => {

    const inputRect = input.getBoundingClientRect();

    const box = {
      left: inputRect.left,
      top: inputRect.bottom + window.scrollY,
      width: inputRect.width
    };

    if (widthElement) {

      const widthElementRect = widthElement.getBoundingClientRect();

      box.width = widthElementRect.width;

      box.left = widthElementRect.left;

    };

    this.element.suggest.style.setProperty('--suggest-top', box.top);

    this.element.suggest.style.setProperty('--suggest-left', box.left);

    this.element.suggest.style.setProperty('--suggest-width', box.width);

  };

  this.assemble = () => {

    const body = document.querySelector('body');

    this.element.suggest.appendChild(this.element.list);

    this.element.suggest.addEventListener('transitionend', (event) => {

      if (event.propertyName === 'opacity' && getComputedStyle(this.element.suggest).opacity == 0) {

        body.removeChild(this.element.suggest);

        this.bind.remove();

        this.state.open = false;

      };

    });

  };

  this.searchTerm = () => {
    return trimString(input.value).toLowerCase();
  };

  this.populateList = (results) => {

    const listType = {
      fontawesomeIcon: () => {
        const successAction = (suggestData) => {

          this.close();

          if (action) {
            action(suggestData);
          };

          if (postFocus) {
            postFocus.focus();
          };

        };

        results.forEach((item, i) => {

          let li = node('li|class:suggest-list-item');

          let resultItem = new Button({
            text: false,
            style: ['link', 'ring'],
            classList: ['suggest-item'],
            func: () => {
              successAction(item);
            }
          });

          let icon = node('span|class:suggest-icon fa-' + item.name);

          if (item.styles.includes('solid')) {
            icon.classList.add('fas');
          } else if (item.styles.includes('brands')) {
            icon.classList.add('fab');
          };

          let text = node('span:' + item.label + '|class:suggest-icon-text');

          resultItem.button.appendChild(icon);

          resultItem.button.appendChild(text);

          li.appendChild(resultItem.button);

          this.element.list.appendChild(li);

        });
      }
    };

    listType[type]();

  };

  this.timer = false;

  this.suggestItems = () => {
    const suggestType = {
      fontawesomeIcon: (string) => {
        if (isValidString(string)) {

          return fontawesome_fontawesome.filter((item) => {
            let match = false;

            if (item.name.toLowerCase().includes(string) || item.label.toLowerCase().includes(string)) {
              match = true;
            };

            item.search.forEach((item, i) => {
              if (item.toLowerCase().includes(string)) {
                match = true;
              };
            });

            item.styles.forEach((item, i) => {
              if (item.toLowerCase().includes(string)) {
                match = true;
              };
            });

            return match;
          });

        } else {
          return fontawesome_fontawesome;
        };
      }
    };

    return suggestType[type](this.searchTerm());
  };

  this.navigateResults = (event) => {

    let elementToFocus = null;

    let focusIndex = null;

    const allSuggestItems = this.element.suggest.querySelectorAll('.suggest-item');

    const columnCount = getComputedStyle(this.element.suggest.querySelector('.suggest-list')).getPropertyValue('grid-template-columns').split(' ').length;

    const findFocus = () => {

      for (var i = 0; i < allSuggestItems.length; i++) {

        if (allSuggestItems[i] == document.activeElement) {
          focusIndex = i;
        };

      };

    };

    const keyEvents = () => {

      // up
      if (event.keyCode == 38) {
        event.preventDefault();
        if (focusIndex == null) {
          elementToFocus = allSuggestItems[allSuggestItems.length - 1];
        } else {
          if (focusIndex >= columnCount && focusIndex <= allSuggestItems.length - 1) {
            elementToFocus = allSuggestItems[focusIndex - columnCount];
          } else {
            elementToFocus = input;
          };
        };
      };

      // down
      if (event.keyCode == 40) {
        event.preventDefault();
        if (focusIndex == null) {
          elementToFocus = allSuggestItems[0];
        } else {
          if (focusIndex < allSuggestItems.length - columnCount) {
            elementToFocus = allSuggestItems[focusIndex + columnCount];
          } else {
            elementToFocus = input;
          };
        };
      };

      // right
      if (event.keyCode == 39 && document.activeElement != input) {
        event.preventDefault();
        if (focusIndex == null) {
          elementToFocus = allSuggestItems[0];
        } else {
          if (focusIndex >= 0 && focusIndex < allSuggestItems.length - 1) {
            elementToFocus = allSuggestItems[focusIndex + 1];
          } else {
            elementToFocus = input;
          };
        };
      };

      // left
      if (event.keyCode == 37 && document.activeElement != input) {
        event.preventDefault();
        if (focusIndex == null) {
          elementToFocus = allSuggestItems[allSuggestItems.length - 1];
        } else {
          if (focusIndex > 0 && focusIndex <= allSuggestItems.length - 1) {
            elementToFocus = allSuggestItems[focusIndex - 1];
          } else {
            elementToFocus = input;
          };
        };
      };

      // tab
      if (!event.shiftKey && event.keyCode == 9 && document.activeElement == input) {
        event.preventDefault();
        elementToFocus = allSuggestItems[0];
      };
      if (!event.shiftKey && event.keyCode == 9 && document.activeElement == allSuggestItems[allSuggestItems.length - 1]) {
        event.preventDefault();
        elementToFocus = postFocus;
        this.close();
      };

      // shift tab
      if (event.shiftKey && event.keyCode == 9 && document.activeElement == allSuggestItems[0]) {
        event.preventDefault();
        elementToFocus = input;
      };
      if (event.shiftKey && event.keyCode == 9 && document.activeElement == input) {
        this.close();
      };

    };

    findFocus();

    keyEvents();

    if (elementToFocus) {
      elementToFocus.focus();
    };
  };

  this.clickOut = (event) => {

    const path = event.path || (event.composedPath && event.composedPath());

    if (!path.includes(this.element.suggest) && !path.includes(this.element.input)) {
      this.close();
    };

  };

  this.esc = (event) => {

    if ((event.keyCode == 27)) {

      event.preventDefault();

      this.close();

    };

  };

  this.assemble();

  this.bind.input();

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/tab/index.css
var tab = __webpack_require__(4088);
;// CONCATENATED MODULE: ./src/component/tab/index.css

            

var tab_options = {};

tab_options.insert = "head";
tab_options.singleton = false;

var tab_update = injectStylesIntoStyleTag_default()(tab/* default */.Z, tab_options);



/* harmony default export */ const component_tab = (tab/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/tab/index.js









const Tab = function({
  group = []
} = {}) {

  this.tabElement = node('div|class:tab');

  this.tabNav = node('div|class:tab-nav form-group form-group-horizontal form-group-block');

  this.tabContent = node('div|class:tab-content');

  this.tabElement.appendChild(this.tabNav);

  this.tabElement.appendChild(this.tabContent);

  this.deactive = () => {
    group.forEach((item, i) => {
      item.active = false;
    });
  };

  group.forEach((item, i) => {
    item.toggle = new Button({
      text: item.tabText,
      style: ['line'],
      classList: ['form-group-item-equal'],
      func: () => {

        this.deactive();
        item.active = true;
        this.update();

      }
    });

    this.tabNav.appendChild(item.toggle.button);

    this.tabContent.appendChild(item.area);
  });

  this.update = () => {
    group.forEach((item, i) => {

      if (item.active) {
        item.toggle.active();
        item.area.classList.remove('is-hidden');
      } else {
        item.toggle.deactive();
        item.area.classList.add('is-hidden');
      };

    });
  };

  this.update();

  this.tab = () => {
    return this.tabElement;
  };

};

;// CONCATENATED MODULE: ./src/utility/ordinalNumber.js
const ordinalNumber = (number) => {

  var j = number % 10;

  var k = number % 100;

  if (j == 1 && k != 11) {
    return number + 'st';
  };

  if (j == 2 && k != 12) {
    return number + 'nd';
  };

  if (j == 3 && k != 13) {
    return number + 'rd';
  };

  return number + 'th';

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/groupForm/index.css
var groupForm = __webpack_require__(9599);
;// CONCATENATED MODULE: ./src/component/groupForm/index.css

            

var groupForm_options = {};

groupForm_options.insert = "head";
groupForm_options.singleton = false;

var groupForm_update = injectStylesIntoStyleTag_default()(groupForm/* default */.Z, groupForm_options);



/* harmony default export */ const component_groupForm = (groupForm/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/groupForm/index.js




































const GroupForm = function({
  groupData = false
} = {}) {

  this.element = {
    form: node('form|class:group-form'),
    main: node('div|class:group-form-main')
  };

  this.selectOption = {};

  this.selectOption.group = () => {

    const option = [];

    if (bookmark_bookmark.all.length > 0) {

      let count = bookmark_bookmark.all.length;

      if (groupData.type.new) {
        count++;
      };

      for (var i = 1; i <= count; i++) {

        option.push(ordinalNumber(i));

      };

    } else {

      option.push(ordinalNumber(1));

    };

    return option;

  };

  this.control = {};

  this.control.group = {
    name: {
      text: new Control_text({
        object: groupData.group,
        path: 'name.text',
        id: 'name-text',
        value: groupData.group.name.text,
        placeholder: 'Example group',
        labelText: 'Group name',
        srOnly: true
      }),
      show: new Control_checkbox({
        object: groupData.group,
        path: 'name.show',
        id: 'name-show',
        labelText: 'Show Group name',
        action: () => {
          this.disable();
        }
      }),
      random: new Button({
        text: 'Random Group name',
        style: ['line'],
        func: () => {
          groupData.group.name.text = randomString({ adjectivesCount: randomNumber(1, 3) });
          this.control.group.name.text.update();
        }
      })
    },
    openAll: {
      show: new Control_checkbox({
        object: groupData.group,
        path: 'openAll.show',
        id: 'openAll-show',
        labelText: 'Show Open all',
        description: 'Open all button will appear if there is at least one Bookmark in this Group.'
      })
    },
  };

  this.control.destination = new Control_select({
    object: groupData,
    path: 'position.destination',
    id: 'position-destination',
    labelText: 'Position',
    option: this.selectOption.group(),
    selected: groupData.position.destination
  });

  this.disable = () => {

    if (groupData.group.name.show) {
      this.control.group.name.text.enable();
      this.control.group.name.random.enable();
    } else {
      this.control.group.name.text.disable();
      this.control.group.name.random.disable();
    };

  };

  this.update = () => {
    this.control.group.name.text.update();
    this.control.group.name.show.update();
  };

  this.assemble = () => {

    this.element.main.appendChild(
      fieldset_fieldset({
        children: [
          wrap_wrap({
            children: [
              node('h2:Name|class:mb-2'),
              node('p:Display a Name above this Group.|class:mb-5')
            ]
          }),
          wrap_wrap({
            children: [
              indent_indent({
                children: [
                  this.control.group.name.show.wrap(),
                  wrap_wrap({
                    children: [
                      indent_indent({
                        children: [
                          this.control.group.name.text.wrap(),
                          this.control.group.name.random.wrap()
                        ]
                      })
                    ]
                  })
                ]
              })
            ]
          })
        ]
      })
    );

    this.element.main.appendChild(
      node('hr'),
    );

    this.element.main.appendChild(
      fieldset_fieldset({
        children: [
          wrap_wrap({
            children: [
              node('h2:Open all|class:mb-2'),
              node('p:Display a button to open all Bookmarks in this Group.|class:mb-5')
            ]
          }),
          wrap_wrap({
            children: [
              indent_indent({
                children: [
                  this.control.group.openAll.show.wrap()
                ]
              })
            ]
          })
        ]
      })
    );

    this.element.main.appendChild(
      node('hr'),
    );

    this.element.main.appendChild(
      fieldset_fieldset({
        children: [
          wrap_wrap({
            children: [
              node('h2:Ordering|class:mb-2'),
              node('p:The position of this Group.|class:mb-5')
            ]
          }),
          wrap_wrap({
            children: [
              indent_indent({
                children: [
                  this.control.destination.wrap()
                ]
              })
            ]
          })
        ]
      })
    );

    this.element.form.appendChild(this.element.main);

  };

  this.bind = () => {

    this.element.form.addEventListener('keydown', (event) => {

      if (event.keyCode == 13) { event.preventDefault(); return false; };

    });

  };

  this.form = () => {

    return this.element.form;

  };

  this.assemble();

  this.disable();

  this.update();

};

;// CONCATENATED MODULE: ./src/component/groupArea/index.js



















const GroupArea = function({
  groupData = {}
} = {}) {

  this.element = {
    group: node('div|class:group'),
    header: node('div|class:group-header'),
    name: {
      name: node('div|class:group-name'),
      text: node('h1|class:group-name-text')
    },
    control: {
      control: node('div|class:group-control'),
      group: node('div|class:group-control-group form-group form-group-horizontal')
    },
    body: node('div|class:group-body')
  };

  this.control = {};

  this.control.button = {
    up: new Button({
      text: 'Move this group up',
      srOnly: true,
      iconName: 'arrowKeyboardUp',
      style: ['line'],
      title: 'Move this group up',
      classList: ['group-control-button', 'group-control-up'],
      func: () => {

        groupData.position.destination--;

        if (groupData.position.destination < 0) {
          groupData.position.destination = 0;
        };

        component_group_group.item.mod.move(groupData);

        groupAndBookmark.render();

        data.save();

      }
    }),
    sort: new Button({
      text: 'Drag group to reorder',
      srOnly: true,
      iconName: 'drag',
      style: ['line'],
      title: 'Drag group to reorder',
      classList: ['group-control-button', 'group-control-sort'],
    }),
    down: new Button({
      text: 'Move this group down',
      srOnly: true,
      iconName: 'arrowKeyboardDown',
      style: ['line'],
      title: 'Move this group right',
      classList: ['group-control-button', 'group-control-up'],
      func: () => {

        groupData.position.destination++;

        if (groupData.position.destination > bookmark_bookmark.all.length - 1) {
          groupData.position.destination = bookmark_bookmark.all.length - 1;
        };

        component_group_group.item.mod.move(groupData);

        groupAndBookmark.render();

        data.save();

      }
    }),
    edit: new Button({
      text: 'Edit this group',
      srOnly: true,
      iconName: 'edit',
      style: ['line'],
      title: 'Edit this group',
      classList: ['group-control-button', 'group-control-edit'],
      func: () => {

        let newGroupData = new StagedGroup();

        newGroupData.group = JSON.parse(JSON.stringify(groupData.group));

        newGroupData.position = JSON.parse(JSON.stringify(groupData.position));

        newGroupData.type.existing = true;

        const groupForm = new GroupForm({ groupData: newGroupData });

        const editModal = new Modal({
          heading: isValidString(newGroupData.group.name.text) ? 'Edit ' + newGroupData.group.name.text : 'Edit unnamed group',
          content: groupForm.form(),
          successText: 'Save',
          width: 40,
          successAction: () => {

            component_group_group.item.mod.edit(newGroupData);

            groupAndBookmark.render();

            data.save();

          }
        });

        editModal.open();

      }
    }),
    remove: new Button({
      text: 'Remove this group',
      srOnly: true,
      iconName: 'cross',
      style: ['line'],
      title: 'Remove this group',
      classList: ['group-control-button', 'group-control-remove'],
      func: () => {

        const removeModal = new Modal({
          heading: isValidString(groupData.group.name.text) ? 'Remove ' + groupData.group.name.text : 'Remove unnamed bookmark',
          content: 'Are you sure you want to remove this Group and all the Bookmarks within? This can not be undone.',
          successText: 'Remove',
          width: 'small',
          successAction: () => {

            component_group_group.item.mod.remove(groupData);

            layout_layout.area.assemble();

            groupAndBookmark.render();

            data.save();

          }
        });

        removeModal.open();

      }
    })
  };

  this.openAll = {
    button: new Button({
      text: 'Open all',
      style: ['line'],
      title: 'Open all Bookmarks in this Group',
      classList: ['group-control-button', 'group-control-open-all'],
      func: () => {
        this.openAll.open();
      }
    }),
    open: () => {

      if (state.get.current().bookmark.newTab) {

        groupData.group.items.forEach((item, i) => {
          chrome.tabs.create({ url: item.url });
        });

      } else {

        const first = groupData.group.items.shift();

        groupData.group.items.forEach((item, i) => {
          chrome.tabs.create({ url: item.url });
        });

        window.location.href = first.url;

      };

    }
  };

  this.style = () => {

    if (groupData.group.name.show && isValidString(groupData.group.name.text)) {
      this.element.group.classList.add('is-group-header');
    };

    if (groupData.group.openAll.show && groupData.group.items.length > 0) {
      this.element.group.classList.add('is-group-open-all');
    };

  };

  this.control.disable = () => {

    for (var key in this.control.button) {
      this.control.button[key].disable();
    };

    this.control.searchState();

  };

  this.control.enable = () => {

    for (var key in this.control.button) {
      this.control.button[key].enable();
    };

    this.control.searchState();

  };

  this.control.searchState = () => {

    if (state.get.current().search) {
      this.control.button.up.disable();
      this.control.button.down.disable();
      this.control.button.sort.disable();
    } else if (state.get.current().group.edit && !state.get.current().search) {
      this.control.button.up.enable();
      this.control.button.down.enable();
      this.control.button.sort.enable();
    };

  };

  this.assemble = () => {

    this.element.name.text.innerHTML = groupData.group.name.text;

    this.element.name.name.appendChild(this.element.name.text);

    this.element.control.group.appendChild(this.control.button.up.button);

    this.element.control.group.appendChild(this.control.button.sort.button);

    this.element.control.group.appendChild(this.control.button.down.button);

    this.element.control.group.appendChild(this.control.button.edit.button);

    this.element.control.group.appendChild(this.control.button.remove.button);

    this.element.control.control.appendChild(this.element.control.group);

    this.element.header.appendChild(this.element.control.control);

    if (groupData.group.name.show && isValidString(groupData.group.name.text)) {
      this.element.header.appendChild(this.element.name.name);
    };

    if (groupData.group.openAll.show && groupData.group.items.length > 0) {
      this.element.header.appendChild(this.openAll.button.button);
    };

    this.element.group.appendChild(this.element.header);

    this.element.group.appendChild(this.element.body);

    this.element.body.position = groupData.position;

    if (state.get.current().group.edit) {
      this.control.enable();
    } else {
      this.control.disable();
    };

  };

  this.clear = () => {

    clearChildNode(this.element.body);

  };

  this.group = () => {

    return this.element.group;

  };

  this.update = {};

  this.update.style = () => {

    const html = document.querySelector('html');

    if (state.get.current().theme.group.openAll.opacity < 40) {

      html.classList.add('is-group-open-all-opacity-low');

    } else {

      html.classList.remove('is-group-open-all-opacity-low');

    };

  };

  this.style();

  this.assemble();

  this.update.style();

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/groupEmpty/index.css
var groupEmpty = __webpack_require__(8092);
;// CONCATENATED MODULE: ./src/component/groupEmpty/index.css

            

var groupEmpty_options = {};

groupEmpty_options.insert = "head";
groupEmpty_options.singleton = false;

var groupEmpty_update = injectStylesIntoStyleTag_default()(groupEmpty/* default */.Z, groupEmpty_options);



/* harmony default export */ const component_groupEmpty = (groupEmpty/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/groupEmpty/index.js









const GroupEmpty = function({
  groupIndex = false
} = {}) {

  this.element = {
    empty: node('div|class:group-empty'),
    control: node('div|class:group-empty-control'),
    headline: node('p:Empty Group|class:group-empty-headline small muted')
  };

  this.control = {};

  this.control.button = {
    remove: new Button({
      text: 'Add a Bookmark',
      size: 'small',
      iconName: 'addBookmark',
      func: () => {
        bookmark_bookmark.add.render({
          groupIndex: groupIndex
        });
      }
    })
  };

  this.assemble = () => {

    this.element.control.appendChild(this.control.button.remove.button);

    this.element.empty.appendChild(this.element.headline);

    this.element.empty.appendChild(this.element.control);

  };

  this.empty = () => {

    this.assemble();

    return this.element.empty;

  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/searchEmpty/index.css
var searchEmpty = __webpack_require__(8485);
;// CONCATENATED MODULE: ./src/component/searchEmpty/index.css

            

var searchEmpty_options = {};

searchEmpty_options.insert = "head";
searchEmpty_options.singleton = false;

var searchEmpty_update = injectStylesIntoStyleTag_default()(searchEmpty/* default */.Z, searchEmpty_options);



/* harmony default export */ const component_searchEmpty = (searchEmpty/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/searchEmpty/index.js











const SearchEmpty = function() {

  this.element = {
    empty: node('div|class:search-empty'),
    description: complexNode({
      tag: 'p',
      text: `No bookmarks matching "${trimString(header_header.element.search.element.input.text.value)}" found`,
      attr: [{
        key: 'class',
        value: 'search-empty-string'
      }]
    }),
    helper: node('p|class:search-empty-helper small muted')
  };

  this.assemble = () => {

    switch (state.get.current().header.search.engine.selected) {

      case 'custom':

        if (isValidString(state.get.current().header.search.engine.custom.name)) {

          this.element.helper.textContent = 'Press "Enter" to Search ' + state.get.current().header.search.engine.custom.name;

        };

        break;

      default:

        this.element.helper.textContent = 'Press "Enter" to Search ' + searchEnginePreset[state.get.current().header.search.engine.selected].name;

        break;

    };

    this.element.empty.appendChild(this.element.description);

    this.element.empty.appendChild(this.element.helper);

  };

  this.empty = () => {
    return this.element.empty;
  };

  this.assemble();

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/bookmarkEmpty/index.css
var bookmarkEmpty = __webpack_require__(7753);
;// CONCATENATED MODULE: ./src/component/bookmarkEmpty/index.css

            

var bookmarkEmpty_options = {};

bookmarkEmpty_options.insert = "head";
bookmarkEmpty_options.singleton = false;

var bookmarkEmpty_update = injectStylesIntoStyleTag_default()(bookmarkEmpty/* default */.Z, bookmarkEmpty_options);



/* harmony default export */ const component_bookmarkEmpty = (bookmarkEmpty/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/bookmarkEmpty/index.js









const BookmarkEmpty = function() {

  this.element = {
    empty: node('div|class:bookmark-empty'),
    description: node('p:No Groups or Bookmarks|class:bookmark-empty-headline small muted')
  };

  this.control = {};

  this.control.button = {
    add: new Button({
      text: 'Add a Bookmark',
      size: 'small',
      func: () => {
        bookmark_bookmark.add.render();
      }
    })
  };

  this.assemble = () => {

    this.element.empty.appendChild(this.element.description);

    this.element.empty.appendChild(this.control.button.add.button);

  };

  this.empty = () => {
    return this.element.empty;
  };

  this.assemble();

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/group/index.css
var component_group = __webpack_require__(9525);
;// CONCATENATED MODULE: ./src/component/group/index.css

            

var component_group_options = {};

component_group_options.insert = "head";
component_group_options.singleton = false;

var component_group_update = injectStylesIntoStyleTag_default()(component_group/* default */.Z, component_group_options);



/* harmony default export */ const src_component_group = (component_group/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/group/index.js




























const component_group_group = {};

component_group_group.area = {
  current: []
};

component_group_group.item = {
  mod: {
    add: (groupData) => {
      bookmark_bookmark.all.splice(groupData.position.destination, 0, groupData.group);
    },
    edit: (groupData) => {
      bookmark_bookmark.all.splice(groupData.position.origin, 1);
      bookmark_bookmark.all.splice(groupData.position.destination, 0, groupData.group);
    },
    move: (groupData) => {
      groupData.group = bookmark_bookmark.all.splice(groupData.position.origin, 1)[0];
      bookmark_bookmark.all.splice(groupData.position.destination, 0, groupData.group);
    },
    remove: (groupData) => {
      bookmark_bookmark.all.splice(groupData.position.origin, 1);
    }
  },
  render: () => {

    const addGroup = (groupData, groupIndex) => {

      const currentGroupkData = new StagedGroup(groupData);

      currentGroupkData.position.origin = groupIndex;

      currentGroupkData.position.destination = groupIndex;

      const groupArea = new GroupArea({ groupData: currentGroupkData });

      component_group_group.area.current.push(groupArea);

      if (state.get.current().search) {

        if (header_header.element.search.resultCount().group[groupIndex].searchMatch > 0) {

          bookmark_bookmark.element.group.appendChild(groupArea.group());

        };

      } else {

        bookmark_bookmark.element.group.appendChild(groupArea.group());

      };

    };

    const addSearchEmpty = () => {

      const searchEmpty = new SearchEmpty();

      bookmark_bookmark.element.group.appendChild(searchEmpty.empty());

    };

    const addBookmarkEmpty = () => {

      const bookmarkEmpty = new BookmarkEmpty();

      bookmark_bookmark.element.group.appendChild(bookmarkEmpty.empty());

    };

    if (bookmark_bookmark.all.length > 0) {

      if (state.get.current().search) {

        // searching

        if (header_header.element.search.resultCount().total > 0) {

          bookmark_bookmark.all.forEach((item, i) => {

            const groupIndex = i;

            addGroup(item, groupIndex);

          });

        } else {

          addSearchEmpty();

        };

      } else {

        // not searching

        bookmark_bookmark.all.forEach((item, i) => {

          const groupIndex = i;

          addGroup(item, groupIndex);

        });

      };

    } else {

      if (state.get.current().search) {

        // searching

        addSearchEmpty();

      } else {

        // not searching

        addBookmarkEmpty();

      };

    };

  },
  clear: () => {

    component_group_group.area.current = [];

    clearChildNode(bookmark_bookmark.element.group);

  }
};

component_group_group.edit = {
  open: () => {

    state.get.current().group.edit = true;

    component_group_group.edit.render();

  },
  close: () => {

    state.get.current().group.edit = false;

    component_group_group.edit.render();

  },
  toggle: () => {

    if (state.get.current().group.edit) {
      component_group_group.edit.close();
    } else {
      component_group_group.edit.open();
    };

  },
  render: () => {

    applyCSSState('group.edit');

    if (component_group_group.area.current.length > 0) {
      component_group_group.area.current.forEach((item, i) => {

        if (state.get.current().group.edit) {
          item.control.enable();
        } else {
          item.control.disable();
        };

      });
    };

  }
};

component_group_group.add = {
  mod: {
    open: () => { state.get.current().group.add = true; },
    close: () => { state.get.current().group.add = false; }
  },
  render: () => {

    const newGroupData = new StagedGroup();

    newGroupData.newGroup();

    const groupForm = new GroupForm({ groupData: newGroupData });

    const addModal = new Modal({
      heading: 'Add a new Group',
      content: groupForm.form(),
      successText: 'Add',
      width: 40,
      openAction: () => {

        component_group_group.add.mod.open();

        data.save();

      },
      closeAction: () => {

        component_group_group.add.mod.close();

        data.save();

      },
      successAction: () => {

        component_group_group.item.mod.add(newGroupData);

        component_group_group.add.mod.close();

        groupAndBookmark.render();

        layout_layout.area.assemble();

        data.save();

      },
      dismissAction: () => {

        component_group_group.add.mod.close();

        data.save();

      }
    });

    addModal.open();

  }
};

component_group_group.sort = {
  sortable: null,
  bind: () => {

    component_group_group.sort.sortable = null;

    component_group_group.sort.sortable = sortable_esm.create(bookmark_bookmark.element.group, {
      handle: '.group-control-sort',
      ghostClass: 'group-sort-placeholder',
      animation: 500,
      easing: 'cubic-bezier(0.8, 0.8, 0.4, 1.4)',
      onEnd: (event) => {

        // console.log('============ debug sort ============');
        // console.log(event);
        // console.log('item:', 'origin', event.oldIndex, 'destination', event.newIndex);

        const newGroupData = new StagedGroup();

        newGroupData.position.origin = event.oldIndex;

        newGroupData.position.destination = event.newIndex;

        component_group_group.item.mod.move(newGroupData);

        groupAndBookmark.render();

        data.save();

      }
    });

  }
};

component_group_group.init = () => {
  applyCSSVar([
    'group.name.size',
    'group.openAll.size'
  ]);
  applyCSSClass([
    'group.area.justify',
    'group.order'
  ]);
  component_group_group.add.mod.close();
  component_group_group.edit.render();
};



;// CONCATENATED MODULE: ./src/component/bookmarkPreset/index.js
 const bookmarkPreset = {};

 bookmarkPreset.get = () => {
   return [{
     name: { text: 'Cool stuff', show: true },
     openAll: { show: true },
     items: [{
       url: 'https://zombiefox.github.io/awesomeSheet/',
       display: {
         alignment: 'center-center',
         direction: 'vertical',
         order: 'visual-name',
         rotate: 0,
         translate: { x: 0, y: 0 },
         gutter: 25,
         name: { show: true, text: 'awesomeSheet', size: 7 },
         visual: { show: true, type: 'icon', size: 25, letter: { text: 'AS' }, icon: { name: 'dice-d20', prefix: 'fas', label: 'Dice D20' }, image: { url: '' }, shadow: { size: 0 } }
       },
       accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
       color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
       background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
       border: 0,
       shape: { wide: false, tall: false },
       timestamp: 1626297988913
     }, {
       url: 'https://www.amazon.co.uk/',
       display: {
         alignment: 'center-center',
         direction: 'vertical',
         order: 'visual-name',
         rotate: 0,
         translate: { x: 0, y: 0 },
         gutter: 25,
         name: { show: true, text: 'Amazon', size: 7 },
         visual: { show: true, type: 'letter', size: 25, letter: { text: 'AZ' }, icon: { name: 'amazon', prefix: 'fab', label: 'Amazon' }, image: { url: '' }, shadow: { size: 0 } }
       },
       accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
       color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
       background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
       border: 0,
       shape: { wide: false, tall: false },
       timestamp: 1626297999213
     }, {
       url: 'https://mail.google.com/',
       display: {
         alignment: 'center-center',
         direction: 'vertical',
         order: 'visual-name',
         rotate: 0,
         translate: { x: 0, y: 0 },
         gutter: 25,
         name: { show: true, text: 'Gmail', size: 7 },
         visual: { show: true, type: 'letter', size: 25, letter: { text: 'GM' }, icon: { name: 'envelope', prefix: 'fas', label: 'Envelope' }, image: { url: '' }, shadow: { size: 0 } }
       },
       accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
       color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
       background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
       border: 0,
       shape: { wide: false, tall: false },
       timestamp: 1626298011293
     }, {
       url: 'https://www.reddit.com/',
       display: {
         alignment: 'center-center',
         direction: 'vertical',
         order: 'visual-name',
         rotate: 0,
         translate: { x: 0, y: 0 },
         gutter: 25,
         name: { show: true, text: 'Reddit', size: 7 },
         visual: { show: true, type: 'icon', size: 25, letter: { text: 'R' }, icon: { name: 'reddit-alien', prefix: 'fab', label: 'reddit Alien' }, image: { url: '' }, shadow: { size: 0 } }
       },
       accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
       color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
       background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
       border: 0,
       shape: { wide: false, tall: false },
       timestamp: 1626298017175
     }, {
       url: 'https://www.netflix.com/',
       display: {
         alignment: 'center-center',
         direction: 'vertical',
         order: 'visual-name',
         rotate: 0,
         translate: { x: 0, y: 0 },
         gutter: 25,
         name: { show: true, text: 'Netflix', size: 7 },
         visual: { show: true, type: 'icon', size: 25, letter: { text: 'N' }, icon: { name: 'film', prefix: 'fas', label: 'Film' }, image: { url: '' }, shadow: { size: 0 } }
       },
       accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
       color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
       background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
       border: 0,
       shape: { wide: false, tall: false },
       timestamp: 1626298022303
     }, {
       url: 'https://drive.google.com/drive/',
       display: {
         alignment: 'center-center',
         direction: 'vertical',
         order: 'visual-name',
         rotate: 0,
         translate: { x: 0, y: 0 },
         gutter: 25,
         name: { show: true, text: 'Drive', size: 7 },
         visual: { show: true, type: 'letter', size: 25, letter: { text: 'DR' }, icon: { name: 'google-drive', prefix: 'fab', label: 'Drive' }, image: { url: '' }, shadow: { size: 0 } }
       },
       accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
       color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
       background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
       border: 0,
       shape: { wide: false, tall: false },
       timestamp: 1626298028996
     }]
   }, {
     name: { text: 'Dev sites', show: true },
     openAll: { show: true },
     items: [{
       url: 'https://devdocs.io/',
       display: {
         alignment: 'center-center',
         direction: 'vertical',
         order: 'visual-name',
         rotate: 0,
         translate: { x: 0, y: 0 },
         gutter: 25,
         name: { show: true, text: 'Devdocs', size: 7 },
         visual: { show: true, type: 'icon', size: 25, letter: { text: 'DEV' }, icon: { name: 'code', prefix: 'fas', label: 'Code' }, image: { url: '' }, shadow: { size: 0 } }
       },
       accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
       color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
       background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
       border: 0,
       shape: { wide: false, tall: false },
       timestamp: 1626298034209
     }, {
       url: 'https://github.com/',
       display: {
         alignment: 'center-center',
         direction: 'vertical',
         order: 'visual-name',
         rotate: 0,
         translate: { x: 0, y: 0 },
         gutter: 25,
         name: { show: true, text: 'Github', size: 7 },
         visual: { show: true, type: 'icon', size: 25, letter: { text: 'GIT' }, icon: { name: 'github', prefix: 'fab', label: 'GitHub' }, image: { url: '' }, shadow: { size: 0 } }
       },
       accent: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } },
       color: { by: 'theme', hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 }, opacity: 100 },
       background: { show: false, type: 'image', opacity: 100, image: { url: '' }, video: { url: '' } },
       border: 0,
       shape: { wide: false, tall: false },
       timestamp: 1626298038470
     }]
   }];
 };

 

;// CONCATENATED MODULE: ./src/component/bookmarkMinMax/index.js
const bookmarkMinMax = {
  display: {
    rotate: { min: -180, max: 180 },
    translate: { x: { min: -300, max: 300 }, y: { min: -300, max: 300 } },
    gutter: { min: 0, max: 500 },
    visual: {
      size: { min: 5, max: 200 },
      shadow: { size: { min: 0, max: 100 } }
    },
    name: { size: { min: 5, max: 200 } }
  },
  accent: {
    hsl: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 }, l: { min: 0, max: 100 } },
    rgb: { r: { min: 0, max: 255 }, g: { min: 0, max: 255 }, b: { min: 0, max: 255 } }
  },
  color: {
    hsl: { h: { min: 0, max: 359 }, s: { min: 0, max: 100 }, l: { min: 0, max: 100 } },
    rgb: { r: { min: 0, max: 255 }, g: { min: 0, max: 255 }, b: { min: 0, max: 255 } },
    opacity: { min: 0, max: 100 }
  },
  border: { min: 0, max: 20 },
  background: { opacity: { min: 0, max: 100 } }
};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/bookmarkPreview/index.css
var bookmarkPreview = __webpack_require__(2491);
;// CONCATENATED MODULE: ./src/component/bookmarkPreview/index.css

            

var bookmarkPreview_options = {};

bookmarkPreview_options.insert = "head";
bookmarkPreview_options.singleton = false;

var bookmarkPreview_update = injectStylesIntoStyleTag_default()(bookmarkPreview/* default */.Z, bookmarkPreview_options);



/* harmony default export */ const component_bookmarkPreview = (bookmarkPreview/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/bookmarkPreview/index.js






const BookmarkPreview = function({
  bookmarkData = false
} = {}) {

  this.area = node('div|class:bookmark-preview-area');

  this.grid = node('div|class:bookmark-preview-grid');

  this.title = node('div|class:bookmark-preview-title small muted');

  this.shape = () => {

    if (bookmarkData.link.shape.tall) {
      this.grid.classList.add('bookmark-preview-grid-tall');
    } else {
      this.grid.classList.remove('bookmark-preview-grid-tall');
    };

    if (bookmarkData.link.shape.wide) {
      this.grid.classList.add('bookmark-preview-grid-wide');
    } else {
      this.grid.classList.remove('bookmark-preview-grid-wide');
    };

    if (bookmarkData.link.shape.tall || bookmarkData.link.shape.wide) {
      this.title.textContent = 'Preview (50% scale)';
    } else {
      this.title.textContent = 'Preview';
    };

  };

  this.bookmarkTile = new BookmarkTile({
    bookmarkData: bookmarkData,
    preview: true
  });

  this.update = {};

  this.update.style = (newBookmarkData) => {
    bookmarkData = newBookmarkData;

    this.bookmarkTile.update();

    this.shape();
  };

  this.update.assemble = (newBookmarkData) => {
    bookmarkData = newBookmarkData;

    this.area.removeChild(this.title);

    this.grid.removeChild(this.bookmarkTile.tile());

    this.bookmarkTile = new BookmarkTile({
      bookmarkData: bookmarkData,
      preview: true
    });

    this.shape();

    this.assemble();
  };

  this.assemble = () => {
    this.area.appendChild(this.title);

    this.grid.appendChild(this.bookmarkTile.tile());

    this.area.appendChild(this.grid);

    this.shape(bookmarkData);
  };

  this.assemble();

  this.preview = () => {
    return this.area;
  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/bookmarkForm/index.css
var bookmarkForm = __webpack_require__(9675);
;// CONCATENATED MODULE: ./src/component/bookmarkForm/index.css

            

var bookmarkForm_options = {};

bookmarkForm_options.insert = "head";
bookmarkForm_options.singleton = false;

var bookmarkForm_update = injectStylesIntoStyleTag_default()(bookmarkForm/* default */.Z, bookmarkForm_options);



/* harmony default export */ const component_bookmarkForm = (bookmarkForm/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/bookmarkForm/index.js



































const BookmarkForm = function({
  bookmarkData = false
} = {}) {

  this.element = {
    form: node('form|class:bookmark-form'),
    main: node('div|class:bookmark-form-main'),
    aside: node('div|class:bookmark-form-aside')
  };

  this.selectOption = {};

  this.selectOption.group = () => {

    const option = [];

    if (bookmark_bookmark.all.length > 0) {

      bookmark_bookmark.all.forEach((item, i) => {

        option.push(isValidString(item.name.text) ? item.name.text : ordinalNumber(i + 1) + ' unnamed group');

      });

    };

    return option;

  };

  this.selectOption.item = () => {

    const option = [];

    if (bookmark_bookmark.all[bookmarkData.position.destination.group].items.length > 0) {

      let count = bookmark_bookmark.all[bookmarkData.position.destination.group].items.length;

      if (bookmarkData.type.new || !(bookmarkData.position.origin.group === bookmarkData.position.destination.group)) {
        count++;
      };

      for (var i = 1; i <= count; i++) {

        option.push(ordinalNumber(i));

      };

    } else {

      option.push(ordinalNumber(1));

    };

    return option;

  };

  this.control = {};

  this.control.bookmark = {
    url: new Control_text({
      object: bookmarkData.link,
      path: 'url',
      id: 'url',
      value: bookmarkData.link.url,
      placeholder: 'https://www.example.com/',
      labelText: 'URL',
      action: () => {
        this.preview.update.assemble(bookmarkData);
      }
    }),
    display: {
      alignment: new Control_radioGrid({
        object: bookmarkData.link,
        radioGroup: [
          { id: 'toolbar-position-top-left', labelText: 'Top Left', value: 'top-left', position: 1 },
          { id: 'toolbar-position-top-center', labelText: 'Top Center', value: 'top-center', position: 2 },
          { id: 'toolbar-position-top-right', labelText: 'Top Right', value: 'top-right', position: 3 },
          { id: 'toolbar-position-center-left', labelText: 'Center Left', value: 'center-left', position: 4 },
          { id: 'toolbar-position-center-center', labelText: 'Center Center', value: 'center-center', position: 5 },
          { id: 'toolbar-position-center-right', labelText: 'Center Right', value: 'center-right', position: 6 },
          { id: 'toolbar-position-bottom-left', labelText: 'Bottom Left', value: 'bottom-left', position: 7 },
          { id: 'toolbar-position-bottom-center', labelText: 'Bottom Center', value: 'bottom-center', position: 8 },
          { id: 'toolbar-position-bottom-right', labelText: 'Bottom Right', value: 'bottom-right', position: 9 }
        ],
        label: 'Visual Element and Name alignment',
        groupName: 'display-alignment',
        path: 'display.alignment',
        gridSize: '3x3',
        action: () => {
          this.preview.update.assemble(bookmarkData);
        }
      }),
      direction: new Control_radio({
        object: bookmarkData.link,
        radioGroup: [
          { id: 'display-direction-vertical', labelText: 'Vertical', description: 'Stack the Visual Element and Name one above the other.', value: 'vertical' },
          { id: 'display-direction-horizontal', labelText: 'Horizontal', description: 'Arrange the Visual Element and Name side by side.', value: 'horizontal' }
        ],
        groupName: 'display-direction',
        path: 'display.direction',
        action: () => {
          this.disable();
          this.preview.update.style(bookmarkData);
        }
      }),
      order: new Control_radio({
        object: bookmarkData.link,
        radioGroup: [
          { id: 'display-order-visual-name', labelText: 'Visual element then name', description: 'Place the Visual Element before the Name.', value: 'visual-name' },
          { id: 'display-order-name-visual', labelText: 'Name then visual element', description: 'Place the Name before the Visual Element.', value: 'name-visual' }
        ],
        groupName: 'display-order',
        path: 'display.order',
        action: () => {
          this.disable();
          this.preview.update.style(bookmarkData);
        }
      }),
      rotate: new Control_sliderSlim({
        object: bookmarkData.link,
        path: 'display.rotate',
        id: 'display-rotate',
        labelText: 'Rotate',
        value: bookmarkData.link.display.rotate,
        defaultValue: bookmarkDefault.display.rotate,
        min: bookmarkMinMax.display.rotate.min,
        max: bookmarkMinMax.display.rotate.max,
        action: () => {
          this.preview.update.style(bookmarkData);
        }
      }),
      translate: {
        label: label_label({
          text: 'Adjust Visual Element position',
          noPadding: true
        }),
        x: new Control_sliderSlim({
          object: bookmarkData.link,
          path: 'display.translate.x',
          id: 'display-translate-x',
          labelText: 'Horizontal',
          value: bookmarkData.link.display.translate.x,
          defaultValue: bookmarkDefault.display.translate.x,
          min: bookmarkMinMax.display.translate.x.min,
          max: bookmarkMinMax.display.translate.x.max,
          action: () => {
            this.preview.update.style(bookmarkData);
          }
        }),
        y: new Control_sliderSlim({
          object: bookmarkData.link,
          path: 'display.translate.y',
          id: 'display-translate-y',
          labelText: 'Vertical',
          value: bookmarkData.link.display.translate.y,
          defaultValue: bookmarkDefault.display.translate.y,
          min: bookmarkMinMax.display.translate.y.min,
          max: bookmarkMinMax.display.translate.y.max,
          action: () => {
            this.preview.update.style(bookmarkData);
          }
        })
      },
      gutter: new Control_sliderSlim({
        object: bookmarkData.link,
        path: 'display.gutter',
        id: 'display-gutter',
        labelText: 'Gutter',
        value: bookmarkData.link.display.gutter,
        defaultValue: bookmarkDefault.display.gutter,
        min: bookmarkMinMax.display.gutter.min,
        max: bookmarkMinMax.display.gutter.max,
        action: () => {
          this.preview.update.style(bookmarkData);
        }
      }),
      name: {
        show: new Control_checkbox({
          object: bookmarkData.link,
          path: 'display.name.show',
          id: 'display-name-show',
          labelText: 'Show Name',
          action: () => {
            this.disable();
            this.preview.update.assemble(bookmarkData);
          }
        }),
        text: new Control_text({
          object: bookmarkData.link,
          path: 'display.name.text',
          id: 'display-name-text',
          value: bookmarkData.link.display.name.text,
          placeholder: 'Example',
          labelText: 'Bookmark name',
          srOnly: true,
          action: () => {
            this.preview.update.assemble(bookmarkData);
          }
        }),
        size: new Control_sliderSlim({
          object: bookmarkData.link,
          path: 'display.name.size',
          id: 'display-name-size',
          labelText: 'Name size',
          value: bookmarkData.link.display.name.size,
          defaultValue: bookmarkDefault.display.name.size,
          min: bookmarkMinMax.display.name.size.min,
          max: bookmarkMinMax.display.name.size.max,
          action: () => {
            this.preview.update.style(bookmarkData);
          }
        })
      },
      visual: {
        show: new Control_checkbox({
          object: bookmarkData.link,
          path: 'display.visual.show',
          id: 'display-visual-show',
          labelText: 'Show Visual Element',
          description: 'Display Letters, Icon or an Image on this Bookmark hexagon.',
          action: () => {
            this.disable();
            this.preview.update.assemble(bookmarkData);
          }
        }),
        type: new Control_radio({
          object: bookmarkData.link,
          radioGroup: [
            { id: 'display-visual-type-letter', labelText: 'Letter', value: 'letter' },
            { id: 'display-visual-type-icon', labelText: 'Icon', value: 'icon' },
            { id: 'display-visual-type-image', labelText: 'Image', value: 'image' }
          ],
          groupName: 'display-visual-type',
          path: 'display.visual.type',
          action: () => {
            this.disable();
            this.preview.update.assemble(bookmarkData);
          }
        }),
        size: new Control_sliderSlim({
          object: bookmarkData.link,
          path: 'display.visual.size',
          id: 'display-visual-size',
          labelText: 'Visual size',
          value: bookmarkData.link.display.visual.size,
          defaultValue: bookmarkDefault.display.visual.size,
          min: bookmarkMinMax.display.visual.size.min,
          max: bookmarkMinMax.display.visual.size.max,
          action: () => {
            this.preview.update.style(bookmarkData);
          }
        }),
        letter: {
          text: new Control_text({
            object: bookmarkData.link,
            path: 'display.visual.letter.text',
            id: 'display-visual-letter-text',
            value: bookmarkData.link.display.visual.letter.text,
            placeholder: 'E',
            labelText: 'Bookmark letter',
            srOnly: true,
            action: () => {
              this.preview.update.assemble(bookmarkData);
            }
          })
        },
        icon: {
          text: new Control_text({
            object: bookmarkData.link,
            path: 'display.visual.icon.label',
            id: 'display-visual-icon-label',
            value: bookmarkData.link.display.visual.icon.label,
            placeholder: 'FontAwesome Brands or Icons',
            labelText: 'Bookmark icon',
            srOnly: true,
            action: () => {
              this.preview.update.assemble(bookmarkData);
            }
          }),
          preview: new Control_groupText({
            classList: ['bookmark-form-text-icon', 'form-group-item-small']
          }),
          remove: new Button({
            text: 'Remove icon',
            srOnly: true,
            style: ['line'],
            iconName: 'cross',
            classList: ['form-group-item-small'],
            func: () => {
              bookmarkData.link.display.visual.icon.label = '';
              bookmarkData.link.display.visual.icon.prefix = '';
              bookmarkData.link.display.visual.icon.name = '';
              this.update();
              this.preview.update.assemble(bookmarkData);
            }
          })
        },
        image: {
          url: new Control_text({
            object: bookmarkData.link,
            path: 'display.visual.image.url',
            id: 'display-visual-image-url',
            value: bookmarkData.link.display.visual.image.url,
            placeholder: 'https://www.example.com/image.jpg',
            labelText: 'Bookmark image',
            srOnly: true,
            action: () => {
              this.preview.update.assemble(bookmarkData);
            }
          })
        },
        shadow: {
          size: new Control_sliderSlim({
            object: bookmarkData.link,
            path: 'display.visual.shadow.size',
            id: 'display-visual-shadow-size',
            labelText: 'Visual shadow',
            value: bookmarkData.link.display.visual.shadow.size,
            defaultValue: bookmarkDefault.display.visual.shadow.size,
            min: bookmarkMinMax.display.visual.shadow.size.min,
            max: bookmarkMinMax.display.visual.shadow.size.max,
            action: () => {
              this.preview.update.style(bookmarkData);
            }
          })
        }
      }
    },
    accent: {
      by: new Control_radio({
        object: bookmarkData.link,
        radioGroup: [
          { id: 'accent-by-theme', labelText: 'Theme Accent', description: 'Use the Accent defined by the Theme.', value: 'theme' },
          { id: 'accent-by-custom', labelText: 'Custom Accent', description: 'Override the Theme Accent.', value: 'custom' }
        ],
        groupName: 'accent-by',
        path: 'accent.by',
        action: () => {
          this.collapse.accent.update();
          this.disable();
          this.preview.update.assemble(bookmarkData);
        }
      }),
      color: new Control_colorMixer({
        object: bookmarkData.link,
        path: 'accent',
        id: 'accent',
        labelText: 'Accent',
        srOnly: true,
        defaultValue: JSON.parse(JSON.stringify(bookmarkDefault.accent.rgb)),
        minMaxObject: bookmarkMinMax,
        action: () => {
          this.preview.update.style(bookmarkData);
        }
      })
    },
    color: {
      by: new Control_radio({
        object: bookmarkData.link,
        radioGroup: [
          { id: 'color-by-theme', labelText: 'Theme colour', description: 'Use the Colour defined by the Theme.', value: 'theme' },
          { id: 'color-by-custom', labelText: 'Custom colour', description: 'Override the Theme colour.', value: 'custom' }
        ],
        groupName: 'color-by',
        path: 'color.by',
        action: () => {
          this.collapse.color.update();
          this.disable();
          this.preview.update.assemble(bookmarkData);
        }
      }),
      color: new Control_colorMixer({
        object: bookmarkData.link,
        path: 'color',
        id: 'color',
        labelText: 'Colour',
        srOnly: true,
        defaultValue: JSON.parse(JSON.stringify(bookmarkDefault.color.rgb)),
        minMaxObject: bookmarkMinMax,
        action: () => {
          this.preview.update.style(bookmarkData);
        }
      }),
      opacity: new Control_sliderSlim({
        object: bookmarkData.link,
        path: 'color.opacity',
        id: 'color-opacity',
        labelText: 'Opacity',
        value: bookmarkData.link.color.opacity,
        defaultValue: bookmarkDefault.color.opacity,
        min: bookmarkMinMax.color.opacity.min,
        max: bookmarkMinMax.color.opacity.max,
        action: () => {
          this.preview.update.style(bookmarkData);
        }
      })
    },
    background: {
      show: new Control_checkbox({
        object: bookmarkData.link,
        path: 'background.show',
        id: 'background-show',
        labelText: 'Show background',
        description: 'Display an Image or video Background on this Bookmark tile.',
        action: () => {
          this.collapse.background.update();
          this.disable();
          this.preview.update.assemble(bookmarkData);
        }
      }),
      type: new Control_radio({
        object: bookmarkData.link,
        radioGroup: [
          { id: 'background-type-image', labelText: 'Image', value: 'image' },
          { id: 'background-type-video', labelText: 'Video', value: 'video' }
        ],
        groupName: 'background-type',
        path: 'background.type',
        action: () => {
          this.disable();
          this.preview.update.assemble(bookmarkData);
        }
      }),
      opacity: new Control_sliderSlim({
        object: bookmarkData.link,
        path: 'background.opacity',
        id: 'background-opacity',
        labelText: 'Opacity',
        value: bookmarkData.link.background.opacity,
        defaultValue: bookmarkDefault.background.opacity,
        min: bookmarkMinMax.background.opacity.min,
        max: bookmarkMinMax.background.opacity.max,
        action: () => {
          this.preview.update.style(bookmarkData);
        }
      }),
      image: {
        url: new Control_text({
          object: bookmarkData.link,
          path: 'background.image.url',
          id: 'background-image-url',
          value: bookmarkData.link.background.image.url,
          placeholder: 'https://www.example.com/image.jpg',
          labelText: 'Background image URL',
          srOnly: true,
          action: () => {
            this.preview.update.assemble(bookmarkData);
          }
        })
      },
      video: {
        url: new Control_text({
          object: bookmarkData.link,
          path: 'background.video.url',
          id: 'background-video-url',
          value: bookmarkData.link.background.video.url,
          placeholder: 'https://www.example.com/video.mp4',
          labelText: 'Background video URL',
          srOnly: true,
          action: () => {
            this.preview.update.assemble(bookmarkData);
          }
        })
      }
    },
    border: new Control_sliderSlim({
      object: bookmarkData.link,
      path: 'border',
      id: 'border',
      labelText: 'Border',
      value: bookmarkData.link.border,
      defaultValue: bookmarkDefault.border,
      min: bookmarkMinMax.border.min,
      max: bookmarkMinMax.border.max,
      action: () => {
        this.preview.update.style(bookmarkData);
      }
    }),
    shape: {
      wide: new Control_checkbox({
        object: bookmarkData.link,
        path: 'shape.wide',
        id: 'shape-wide',
        labelText: 'Wide tile',
        description: 'Bookmark tile to span across two columns.',
        action: () => {
          this.preview.update.assemble(bookmarkData);
        }
      }),
      tall: new Control_checkbox({
        object: bookmarkData.link,
        path: 'shape.tall',
        id: 'shape-tall',
        labelText: 'Tall tile',
        description: 'Bookmark tile to span across two columns.',
        action: () => {
          this.preview.update.assemble(bookmarkData);
        }
      })
    }
  };

  this.control.group = {
    destination: new Control_radio({
      object: bookmarkData,
      radioGroup: [
        { id: 'group-destination-existing', labelText: 'Existing Group', value: 'existing' },
        { id: 'group-destination-new', labelText: 'New Group', value: 'new' }
      ],
      groupName: 'group.destination',
      path: 'group.destination',
      action: () => {
        this.disable();
      }
    }),
    name: new Control_text({
      object: bookmarkData,
      path: 'group.name',
      id: 'group-name',
      value: bookmarkData.group.name,
      placeholder: 'Example group',
      labelText: 'URL',
      srOnly: true
    }),
    random: new Button({
      text: 'Random Group name',
      style: ['line'],
      func: () => {
        bookmarkData.group.name = randomString({ adjectivesCount: randomNumber(1, 3) });
        this.control.group.name.update();
      }
    }),
    position: {
      group: new Control_select({
        object: bookmarkData,
        path: 'position.destination.group',
        id: 'position-destination-group',
        labelText: 'Group',
        srOnly: true,
        option: (bookmark_bookmark.all.length > 0) ? this.selectOption.group() : [],
        selected: bookmarkData.position.destination.group,
        action: () => {

          if (bookmarkData.type.new) {
            bookmarkData.position.destination.item = bookmark_bookmark.all[bookmarkData.position.destination.group].items.length;
          } else {

            if (bookmarkData.position.origin.group === bookmarkData.position.destination.group) {
              bookmarkData.position.destination.item = bookmark_bookmark.all[bookmarkData.position.destination.group].items.length - 1;
            } else {
              bookmarkData.position.destination.item = bookmark_bookmark.all[bookmarkData.position.destination.group].items.length;
            };

          };

          this.control.group.position.item.updateOption(this.selectOption.item(), bookmarkData.position.destination.item);

        }
      }),
      item: new Control_select({
        object: bookmarkData,
        path: 'position.destination.item',
        id: 'position-destination-item',
        labelText: 'Position',
        option: (bookmark_bookmark.all.length > 0) ? this.selectOption.item() : [],
        selected: bookmarkData.position.destination.item
      })
    }
  };

  this.control.propagate = {
    visual: new Control_checkbox({
      object: bookmarkData.propagate,
      path: 'display',
      id: 'apply-to-all-display',
      labelText: 'Apply Show Visual Element and Show Name to other Bookmarks',
      description: [
        'When saved, apply the above visibility to all other Bookmarks.',
        'Only the Show Visual Element and Show Name settings will be applied to all.'
      ]
    }),
    layout: new Control_checkbox({
      object: bookmarkData.propagate,
      path: 'layout',
      id: 'apply-to-all-layout',
      labelText: 'Apply this Layout to other Bookmarks',
      description: [
        'When saved, apply the above Layout to all other Bookmarks.',
        'Only the Visual and Name settings will be applied to all.'
      ]
    }),
    theme: new Control_checkbox({
      object: bookmarkData.propagate,
      path: 'theme',
      id: 'apply-to-all-theme',
      labelText: 'Apply this Theme to other Bookmarks',
      description: [
        'When saved, apply the above Theme to all other Bookmarks.',
        'Only the Colour, Accent, Opacity, Border and Visual shadow settings will be applied to all.'
      ]
    })
  };

  this.helper = {
    bookmark: {
      display: {
        visual: {
          shadow: {
            size: new Control_helperText({
              text: ['Visual shadow only applies to a Letter or Icon.']
            })
          }
        }
      },
      background: {
        image: new Control_helperText({
          text: ['Background image only supports a direct URL to an image file.']
        }),
        video: new Control_helperText({
          text: ['Background video only supports a direct URL to a video file. Supports MP4 and WebM format.', 'YouTube page URLs can not be used.']
        })
      }
    }
  };

  this.area = {};

  this.area.accent = () => {
    return node('div', [
      this.control.bookmark.accent.color.wrap()
    ]);
  };

  this.area.color = () => {
    return node('div', [
      this.control.bookmark.color.color.wrap()
    ]);
  };

  this.area.visual = () => {
    return fieldset_fieldset({
      children: [
        wrap_wrap({
          children: [
            node('h2:Visual & Name|class:mb-2'),
            node('p:Display Letters, Icon, Image and a Name on this Bookmark tile.|class:mb-5')
          ]
        }),
        wrap_wrap({
          children: [
            indent_indent({
              children: [
                this.control.bookmark.display.visual.show.wrap(),
                wrap_wrap({
                  children: [
                    indent_indent({
                      children: [
                        this.control.bookmark.display.visual.type.radioSet[0].wrap(),
                        wrap_wrap({
                          children: [
                            indent_indent({
                              children: [
                                this.control.bookmark.display.visual.letter.text.wrap()
                              ]
                            })
                          ]
                        }),
                        this.control.bookmark.display.visual.type.radioSet[1].wrap(),
                        wrap_wrap({
                          children: [
                            indent_indent({
                              children: [
                                wrap_wrap({
                                  children: [
                                    this.control.bookmark.display.visual.icon.text.label,
                                    group_group({
                                      block: true,
                                      children: [
                                        this.control.bookmark.display.visual.icon.text.text,
                                        this.control.bookmark.display.visual.icon.preview.groupText,
                                        this.control.bookmark.display.visual.icon.remove.button
                                      ]
                                    })
                                  ]
                                })
                              ]
                            })
                          ]
                        }),
                        this.control.bookmark.display.visual.type.radioSet[2].wrap(),
                        wrap_wrap({
                          children: [
                            indent_indent({
                              children: [
                                this.control.bookmark.display.visual.image.url.wrap()
                              ]
                            })
                          ]
                        })
                      ]
                    })
                  ]
                }),
                node('hr'),
                this.control.bookmark.display.name.show.wrap(),
                wrap_wrap({
                  children: [
                    indent_indent({
                      children: [
                        this.control.bookmark.display.name.text.wrap()
                      ]
                    })
                  ]
                }),
                node('hr'),
                this.control.propagate.visual.wrap()
              ]
            })
          ]
        })
      ]
    });
  };

  this.area.address = () => {
    return fieldset_fieldset({
      children: [
        wrap_wrap({
          children: [
            node('h2:Address|class:mb-2'),
            complexNode({ tag: 'p', text: 'Be sure to use the full URL and include <strong>"https://..."</strong>', attr: [{ key: 'class', value: 'mb-5' }] })
          ]
        }),
        wrap_wrap({
          children: [
            indent_indent({
              children: [
                this.control.bookmark.url.wrap()
              ]
            })
          ]
        })
      ]
    });
  };

  this.area.position = () => {
    return fieldset_fieldset({
      children: [
        wrap_wrap({
          children: [
            node('h2:Position|class:mb-2'),
            node('p:The Group to place this Bookmark in.|class:mb-5')
          ]
        }),
        wrap_wrap({
          children: [
            indent_indent({
              children: [
                this.control.group.destination.radioSet[0].wrap(),
                wrap_wrap({
                  children: [
                    indent_indent({
                      children: [
                        this.control.group.position.group.wrap(),
                        this.control.group.position.item.wrap()
                      ]
                    })
                  ]
                }),
                this.control.group.destination.radioSet[1].wrap(),
                wrap_wrap({
                  children: [
                    indent_indent({
                      children: [
                        this.control.group.name.wrap(),
                        this.control.group.random.wrap()
                      ]
                    })
                  ]
                })
              ]
            })
          ]
        })
      ]
    });
  };

  this.area.layout = () => {
    return fieldset_fieldset({
      children: [
        wrap_wrap({
          children: [
            node('h2:Layout|class:mb-2'),
            node('p:Change the Visual element and Name position.|class:mb-5')
          ]
        }),
        wrap_wrap({
          children: [
            indent_indent({
              children: [
                this.control.bookmark.display.visual.size.wrap(),
                this.control.bookmark.display.name.size.wrap(),
                node('hr'),
                this.control.bookmark.display.alignment.wrap(),
                node('hr'),
                wrap_wrap({
                  children: [
                    this.control.bookmark.display.translate.label
                  ]
                }),
                this.control.bookmark.display.translate.x.wrap(),
                this.control.bookmark.display.translate.y.wrap(),
                this.control.bookmark.display.rotate.wrap(),
                node('hr'),
                this.control.bookmark.display.direction.wrap(),
                node('hr'),
                this.control.bookmark.display.order.wrap(),
                node('hr'),
                this.control.bookmark.display.gutter.wrap(),
                node('hr'),
                this.control.bookmark.shape.wide.wrap(),
                this.control.bookmark.shape.tall.wrap(),
                node('hr'),
                this.control.propagate.layout.wrap()
              ]
            })
          ]
        })
      ]
    });
  };

  this.area.theme = () => {
    return fieldset_fieldset({
      children: [
        wrap_wrap({
          children: [
            node('h2:Theme|class:mb-2'),
            node('p:Override the Theme and Accent colour.|class:mb-5')
          ]
        }),
        wrap_wrap({
          children: [
            indent_indent({
              children: [
                this.control.bookmark.color.by.wrap(),
                wrap_wrap({
                  children: [
                    indent_indent({
                      children: [
                        this.collapse.color.collapse(),
                        node('hr'),
                        this.control.bookmark.color.opacity.wrap()
                      ]
                    })
                  ]
                }),
                node('hr'),
                this.control.bookmark.accent.by.wrap(),
                wrap_wrap({
                  children: [
                    indent_indent({
                      children: [
                        this.collapse.accent.collapse()
                      ]
                    })
                  ]
                }),
                node('hr'),
                this.control.bookmark.background.show.wrap(),
                wrap_wrap({
                  children: [
                    indent_indent({
                      children: [
                        this.collapse.background.collapse()
                      ]
                    })
                  ]
                }),
                node('hr'),
                this.control.bookmark.border.wrap(),
                node('hr'),
                this.control.bookmark.display.visual.shadow.size.wrap(),
                this.helper.bookmark.display.visual.shadow.size.wrap(),
                node('hr'),
                this.control.propagate.theme.wrap()
              ]
            })
          ]
        })
      ]
    });
  };

  this.area.background = () => {
    return node('div', [
      this.control.bookmark.background.type.radioSet[0].wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              this.control.bookmark.background.image.url.wrap(),
              this.helper.bookmark.background.image.wrap()
            ]
          })
        ]
      }),
      this.control.bookmark.background.type.radioSet[1].wrap(),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              this.control.bookmark.background.video.url.wrap(),
              this.helper.bookmark.background.video.wrap()
            ]
          })
        ]
      }),
      wrap_wrap({
        children: [
          indent_indent({
            children: [
              this.control.bookmark.background.opacity.wrap()
            ]
          })
        ]
      })
    ]);
  };

  this.collapse = {
    color: new Collapse({
      type: 'radio',
      radioGroup: this.control.bookmark.color.by,
      target: [{
        id: this.control.bookmark.color.by.radioSet[1].radio.value,
        content: this.area.color()
      }]
    }),
    accent: new Collapse({
      type: 'radio',
      radioGroup: this.control.bookmark.accent.by,
      target: [{
        id: this.control.bookmark.accent.by.radioSet[1].radio.value,
        content: this.area.accent()
      }]
    }),
    background: new Collapse({
      type: 'checkbox',
      checkbox: this.control.bookmark.background.show,
      target: [{
        content: this.area.background()
      }]
    })
  };

  this.tab = new Tab({
    group: [{
      tabText: 'Visual & Name',
      area: this.area.visual(),
      active: true
    }, {
      tabText: 'Address',
      area: this.area.address(),
      active: false
    }, {
      tabText: 'Position',
      area: this.area.position(),
      active: false
    }, {
      tabText: 'Layout',
      area: this.area.layout(),
      active: false
    }, {
      tabText: 'Theme',
      area: this.area.theme(),
      active: false
    }]
  });

  this.preview = new BookmarkPreview({ bookmarkData: bookmarkData });

  this.disable = () => {

    if (bookmarkData.link.display.visual.show) {
      this.control.bookmark.display.visual.type.enable();
      this.control.bookmark.display.visual.letter.text.enable();
      this.control.bookmark.display.visual.icon.text.enable();
      this.control.bookmark.display.visual.icon.preview.enable();
      this.control.bookmark.display.visual.icon.remove.enable();
      this.control.bookmark.display.visual.image.url.enable();
      this.control.bookmark.display.visual.size.enable();

      switch (bookmarkData.link.display.visual.type) {
        case 'letter':
          this.control.bookmark.display.visual.letter.text.enable();
          this.control.bookmark.display.visual.icon.text.disable();
          this.control.bookmark.display.visual.icon.preview.disable()
          this.control.bookmark.display.visual.icon.remove.disable();
          this.control.bookmark.display.visual.image.url.disable();
          break;

        case 'icon':
          this.control.bookmark.display.visual.letter.text.disable();
          this.control.bookmark.display.visual.icon.text.enable();
          this.control.bookmark.display.visual.icon.preview.enable();
          this.control.bookmark.display.visual.icon.remove.enable();
          this.control.bookmark.display.visual.image.url.disable();
          break;

        case 'image':
          this.control.bookmark.display.visual.letter.text.disable();
          this.control.bookmark.display.visual.icon.text.disable();
          this.control.bookmark.display.visual.icon.preview.disable()
          this.control.bookmark.display.visual.icon.remove.disable();
          this.control.bookmark.display.visual.image.url.enable();
          break;
      };
    } else {
      this.control.bookmark.display.visual.type.disable();
      this.control.bookmark.display.visual.letter.text.disable();
      this.control.bookmark.display.visual.icon.text.disable();
      this.control.bookmark.display.visual.icon.preview.disable();
      this.control.bookmark.display.visual.icon.remove.disable();
      this.control.bookmark.display.visual.image.url.disable();
      this.control.bookmark.display.visual.size.disable();
    };

    if (bookmarkData.link.display.name.show) {
      this.control.bookmark.display.name.text.enable();
      this.control.bookmark.display.name.size.enable();
    } else {
      this.control.bookmark.display.name.text.disable();
      this.control.bookmark.display.name.size.disable();
    };

    if (bookmarkData.link.display.visual.show || bookmarkData.link.display.name.show) {
      this.control.bookmark.display.translate.x.enable();
      this.control.bookmark.display.translate.y.enable();
      this.control.bookmark.display.rotate.enable();
    } else {
      this.control.bookmark.display.translate.x.disable();
      this.control.bookmark.display.translate.y.disable();
      this.control.bookmark.display.rotate.disable();
    };

    if (bookmarkData.link.display.visual.show && bookmarkData.link.display.name.show) {
      this.control.bookmark.display.direction.enable();
      this.control.bookmark.display.order.enable();
      this.control.bookmark.display.gutter.enable();
    } else {
      this.control.bookmark.display.direction.disable();
      this.control.bookmark.display.order.disable();
      this.control.bookmark.display.gutter.disable();
    };

    switch (bookmarkData.link.display.visual.type) {
      case 'letter':
      case 'icon':
        this.control.bookmark.display.visual.shadow.size.enable();
        this.helper.bookmark.display.visual.shadow.size.enable();
        break;

      case 'image':
        this.control.bookmark.display.visual.shadow.size.disable();
        this.helper.bookmark.display.visual.shadow.size.disable();
        break;
    };

    switch (bookmarkData.link.color.by) {
      case 'theme':
        this.control.bookmark.color.color.disable();
        break;

      case 'custom':
        this.control.bookmark.color.color.enable();
        break;
    };

    switch (bookmarkData.link.accent.by) {
      case 'theme':
        this.control.bookmark.accent.color.disable();
        break;

      case 'custom':
        this.control.bookmark.accent.color.enable();
        break;
    };

    if (bookmarkData.link.background.show) {
      this.control.bookmark.background.type.enable();
      this.control.bookmark.background.opacity.enable();

      switch (bookmarkData.link.background.type) {
        case 'image':
          this.control.bookmark.background.image.url.enable();
          this.helper.bookmark.background.image.enable();
          this.control.bookmark.background.video.url.disable();
          this.helper.bookmark.background.video.disable();
          break;

        case 'video':
          this.control.bookmark.background.image.url.disable();
          this.helper.bookmark.background.image.disable();
          this.control.bookmark.background.video.url.enable();
          this.helper.bookmark.background.video.enable();
          break;
      };
    } else {
      this.control.bookmark.background.type.disable();
      this.control.bookmark.background.image.url.disable();
      this.helper.bookmark.background.image.disable();
      this.control.bookmark.background.video.url.disable();
      this.helper.bookmark.background.video.disable();
      this.control.bookmark.background.opacity.disable();
    };

    switch (bookmarkData.group.destination) {
      case 'existing':
        this.control.group.position.group.enable();
        this.control.group.position.item.enable();
        this.control.group.name.disable();
        this.control.group.random.disable();
        break;

      case 'new':
        this.control.group.position.group.disable();
        this.control.group.position.item.disable();
        this.control.group.name.enable();
        this.control.group.random.enable();
        break;
    };

    if (!bookmark_bookmark.all.length > 0) {
      this.control.group.destination.radioSet[0].radio.disable();
    } else {
      this.control.group.destination.radioSet[0].radio.enable();
    };

  };

  this.update = () => {
    this.control.bookmark.display.visual.show.update();
    this.control.bookmark.display.visual.type.update();
    this.control.bookmark.display.visual.letter.text.update();
    this.control.bookmark.display.visual.icon.text.update();
    if (isValidString(bookmarkData.link.display.visual.icon.prefix) && isValidString(bookmarkData.link.display.visual.icon.name)) {
      this.control.bookmark.display.visual.icon.preview.update(node('span|class:bookmark-form-icon ' + bookmarkData.link.display.visual.icon.prefix + ' fa-' + bookmarkData.link.display.visual.icon.name));
    } else {
      this.control.bookmark.display.visual.icon.preview.update();
    };
    this.control.bookmark.display.visual.image.url.update();
    this.control.bookmark.display.name.show.update();
    this.control.bookmark.display.name.text.update();
    this.control.bookmark.url.update();
  };

  this.assemble = () => {

    this.element.main.appendChild(this.tab.tab());

    this.element.aside.appendChild(this.preview.preview());

    this.element.form.appendChild(this.element.main);

    this.element.form.appendChild(this.element.aside);

  };

  this.bind = () => {

    this.element.form.addEventListener('keydown', (event) => {

      if (event.keyCode == 13) { event.preventDefault(); return false; };

    });

  };

  this.suggest = new Suggest({
    input: this.control.bookmark.display.visual.icon.text.text,
    widthElement: this.element.main,
    type: 'fontawesomeIcon',

    postFocus: this.control.bookmark.display.visual.icon.preview.groupText,
    action: (suggestData) => {

      bookmarkData.link.display.visual.icon.label = suggestData.label;
      bookmarkData.link.display.visual.icon.name = suggestData.name;

      if (suggestData.styles.includes('solid')) {
        bookmarkData.link.display.visual.icon.prefix = 'fas';
      } else if (suggestData.styles.includes('brands')) {
        bookmarkData.link.display.visual.icon.prefix = 'fab';
      };

      this.preview.update.assemble(bookmarkData);
      this.update();

    }
  });

  this.form = () => {

    return this.element.form;

  };

  this.assemble();

  this.disable();

  this.update();

};

;// CONCATENATED MODULE: ./src/component/bookmarkTile/index.js


















const BookmarkTile = function({
  bookmarkData = {},
  preview = false
} = {}) {

  this.element = {
    bookmark: node('div|class:bookmark'),
    front: node('div|class:bookmark-front'),
    back: node('div|class:bookmark-back'),
    content: {
      link: node('a|class:bookmark-link,tabindex:1'),
      display: {
        wrap: node('div|class:bookmark-display-wrap'),
        display: node('div|class:bookmark-display'),
        visual: {
          visual: node('div|class:bookmark-display-visual'),
          letter: complexNode({ tag: 'div', text: bookmarkData.link.display.visual.letter.text, attr: [{ key: 'class', value: 'bookmark-display-visual-letter' }] }),
          icon: node('div|class:bookmark-display-visual-icon'),
          faIcon: node('div|class:' + bookmarkData.link.display.visual.icon.prefix + ' fa-' + bookmarkData.link.display.visual.icon.name),
          image: node('div|class:bookmark-display-visual-image')
        },
        name: {
          name: node('div|class:bookmark-display-name'),
          text: node('div:' + bookmarkData.link.display.name.text + '|class:bookmark-display-name-text')
        }
      },
      background: {
        wrap: node('div|class:bookmark-background-wrap'),
        image: node('div|class:bookmark-background-image'),
        video: node('div|class:bookmark-background-video')
      }
    },
    url: {
      url: node('div|class:bookmark-url'),
      text: node('span|class:bookmark-url-text')
    },
    control: node('div|class:bookmark-control')
  };

  if (preview) { this.element.bookmark.classList.add('bookmark-preview'); };

  this.control = {};

  this.control.button = {
    left: new Button({
      text: 'Move this bookmark left',
      srOnly: true,
      iconName: 'arrowKeyboardLeft',
      style: ['link'],
      title: 'Move this bookmark left',
      classList: ['bookmark-control-button', 'bookmark-control-left'],
      func: () => {

        bookmarkData.position.destination.item--;

        if (bookmarkData.position.destination.item < 0) {
          bookmarkData.position.destination.item = 0;
        };

        bookmark_bookmark.item.mod.move(bookmarkData);

        groupAndBookmark.render();

        data.save();

      }
    }),
    sort: new Button({
      text: 'Drag bookmark to reorder',
      srOnly: true,
      iconName: 'drag',
      style: ['link'],
      title: 'Drag bookmark to reorder',
      classList: ['bookmark-control-button', 'bookmark-control-sort']
    }),
    right: new Button({
      text: 'Move this bookmark right',
      srOnly: true,
      iconName: 'arrowKeyboardRight',
      style: ['link'],
      title: 'Move this bookmark right',
      classList: ['bookmark-control-button', 'bookmark-control-right'],
      func: () => {

        bookmarkData.position.destination.item++;

        if (bookmarkData.position.destination.item > bookmark_bookmark.all[bookmarkData.position.destination.group].items.length - 1) {
          bookmarkData.position.destination.item = bookmark_bookmark.all[bookmarkData.position.destination.group].items.length - 1;
        };

        bookmark_bookmark.item.mod.move(bookmarkData);

        groupAndBookmark.render();

        data.save();

      }
    }),
    edit: new Button({
      text: 'Edit this bookmark',
      srOnly: true,
      iconName: 'edit',
      style: ['link'],
      title: 'Edit this bookmark',
      classList: ['bookmark-control-button', 'bookmark-control-edit'],
      func: () => {

        let newBookmarkData = new StagedBookmark();

        newBookmarkData.link = JSON.parse(JSON.stringify(bookmarkData.link));

        newBookmarkData.position = JSON.parse(JSON.stringify(bookmarkData.position));

        newBookmarkData.type.existing = true;

        const bookmarkForm = new BookmarkForm({ bookmarkData: newBookmarkData });

        const editModal = new Modal({
          heading: isValidString(newBookmarkData.link.display.name.text) ? 'Edit ' + newBookmarkData.link.display.name.text : 'Edit unnamed bookmark',
          content: bookmarkForm.form(),
          successText: 'Save',
          width: 60,
          maxHeight: true,
          successAction: () => {

            switch (newBookmarkData.group.destination) {
              case 'new':

                newBookmarkData.position.destination.group = bookmark_bookmark.all.length;

                const newGroupData = new StagedGroup();

                newGroupData.newGroup({
                  name: newBookmarkData.group.name
                });

                component_group_group.item.mod.add(newGroupData);

                break;
            };

            bookmark_bookmark.item.mod.edit(newBookmarkData);

            bookmark_bookmark.item.mod.propagate(newBookmarkData);

            groupAndBookmark.render();

            data.save();

          }
        });

        editModal.open();

      }
    }),
    remove: new Button({
      text: 'Remove this bookmark',
      srOnly: true,
      iconName: 'cross',
      style: ['link'],
      title: 'Remove this bookmark',
      classList: ['bookmark-control-button', 'bookmark-control-remove'],
      func: () => {

        const removeModal = new Modal({
          heading: isValidString(bookmarkData.link.display.name.text) ? 'Remove ' + bookmarkData.link.display.name.text : 'Remove unnamed bookmark',
          content: 'Are you sure you want to remove this Bookmark? This can not be undone.',
          successText: 'Remove',
          width: 'small',
          successAction: () => {

            bookmark_bookmark.item.mod.remove(bookmarkData);

            groupAndBookmark.render();

            data.save();

          }
        });

        removeModal.open();

      }
    })
  };

  this.control.disable = () => {

    for (var key in this.control.button) {
      this.control.button[key].disable();
    };

    this.control.searchState();

  };

  this.control.enable = () => {

    for (var key in this.control.button) {
      this.control.button[key].enable();
    };

    this.control.searchState();

  };

  this.control.searchState = () => {

    if (state.get.current().search) {
      this.control.button.left.disable();
      this.control.button.right.disable();
      this.control.button.sort.disable();
    } else if (state.get.current().bookmark.edit && !state.get.current().search) {
      this.control.button.left.enable();
      this.control.button.right.enable();
      this.control.button.sort.enable();
    };

  };

  this.style = (newBookmarkData) => {

    if (newBookmarkData) {
      bookmarkData = newBookmarkData;
    };

    if (isValidString(bookmarkData.link.url) && !preview) {
      this.element.content.link.setAttribute('href', trimString(bookmarkData.link.url));
    } else {
      this.element.content.link.setAttribute('href', '#');
    };

    if (state.get.current().bookmark.newTab && !preview) {
      this.element.content.link.setAttribute('target', '_blank');
    };

    if (!preview) {
      this.element.bookmark.style.setProperty('--bookmark-transition-delay', bookmarkData.position.origin.item);
    };

    this.element.bookmark.style.setProperty('--theme-bookmark-item-opacity', bookmarkData.link.color.opacity);

    if (bookmarkData.link.color.opacity < 100) {
      this.element.bookmark.style.setProperty('--bookmark-clip-padding', 0);
    };

    if (bookmarkData.link.color.opacity < 40) {

      this.element.bookmark.classList.add('is-bookmark-opacity-low');

    } else {

      this.element.bookmark.classList.remove('is-bookmark-opacity-low');

    };

    if (preview) {
      const alignment = ['top-left', 'top-center', 'top-right', 'center-left', 'center-center', 'center-right', 'bottom-left', 'bottom-center', 'bottom-right'];

      alignment.forEach((item, i) => {
        this.element.bookmark.classList.remove('is-bookmark-alignment-' + item);
      });
      const order = ['visual-name', 'name-visual'];

      order.forEach((item, i) => {
        this.element.bookmark.classList.remove('is-bookmark-order-' + item);
      });
      const direction = ['vertical', 'horizontal'];

      direction.forEach((item, i) => {
        this.element.bookmark.classList.remove('is-bookmark-direction-' + item);
      });
    };

    this.element.bookmark.classList.add('is-bookmark-alignment-' + bookmarkData.link.display.alignment);

    this.element.bookmark.classList.add('is-bookmark-order-' + bookmarkData.link.display.order);

    this.element.bookmark.classList.add('is-bookmark-direction-' + bookmarkData.link.display.direction);

    this.element.bookmark.style.setProperty('--bookmark-display-translate-x', bookmarkData.link.display.translate.x);

    this.element.bookmark.style.setProperty('--bookmark-display-translate-y', bookmarkData.link.display.translate.y);

    this.element.bookmark.style.setProperty('--bookmark-display-rotate', bookmarkData.link.display.rotate);

    this.element.bookmark.style.setProperty('--bookmark-display-gutter', bookmarkData.link.display.gutter);

    this.element.bookmark.style.setProperty('--bookmark-display-visual-size', bookmarkData.link.display.visual.size);

    this.element.bookmark.style.setProperty('--bookmark-display-visual-image-url', 'url(' + trimString(bookmarkData.link.display.visual.image.url) + ')');

    this.element.bookmark.style.setProperty('--bookmark-display-name-size', bookmarkData.link.display.name.size);

    this.element.bookmark.style.setProperty('--bookmark-border', bookmarkData.link.border);

    if (bookmarkData.link.accent.by == 'custom') {
      this.element.bookmark.style.setProperty('--theme-accent-rgb-r', bookmarkData.link.accent.rgb.r);
      this.element.bookmark.style.setProperty('--theme-accent-rgb-g', bookmarkData.link.accent.rgb.g);
      this.element.bookmark.style.setProperty('--theme-accent-rgb-b', bookmarkData.link.accent.rgb.b);
      this.element.bookmark.style.setProperty('--theme-accent', 'var(--theme-accent-rgb-r), var(--theme-accent-rgb-g), var(--theme-accent-rgb-b)');

      this.element.bookmark.style.setProperty('--theme-accent-rgb-text', '0, 0%, calc(((((var(--theme-accent-rgb-r) * var(--theme-t-r)) + (var(--theme-accent-rgb-g) * var(--theme-t-g)) + (var(--theme-accent-rgb-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%)');

      this.element.bookmark.style.setProperty('--bookmark-display-visual-color', 'var(--theme-accent)');
      this.element.bookmark.style.setProperty('--bookmark-display-visual-color-focus-hover', 'var(--theme-accent)');
    };

    if (bookmarkData.link.display.visual.shadow.size > 0) {
      this.element.bookmark.style.setProperty('--bookmark-display-visual-shadow-size', bookmarkData.link.display.visual.shadow.size);

      this.element.bookmark.style.setProperty('--bookmark-display-visual-shadow-offset', '0.1');

      this.element.bookmark.style.setProperty('--bookmark-display-visual-shadow-blur', '0.1');

      this.element.bookmark.style.setProperty('--bookmark-display-visual-shadow-opacity', '0.1');

      this.element.bookmark.style.setProperty(
        '--bookmark-display-visual-shadow',
        '0 ' +
        'calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-offset) * 8)) * 0.01em) ' +
        'calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-blur) * 8))  * 0.01em)' +
        'rgba(0, 0, 0, calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-opacity) / 25) * 1))), ' +
        '0 ' +
        'calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-offset) * 16)) * 0.01em) ' +
        'calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-blur) * 16))  * 0.01em)' +
        'rgba(0, 0, 0, calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-opacity) / 25) * 2))), ' +
        '0 ' +
        'calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-offset) * 32)) * 0.01em) ' +
        'calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-blur) * 32))  * 0.01em)' +
        'rgba(0, 0, 0, calc(var(--bookmark-display-visual-shadow-size) * calc(calc(var(--bookmark-display-visual-shadow-opacity) / 25) * 3)))'
      );
    } else {
      this.element.bookmark.style.removeProperty('--bookmark-display-visual-shadow-size');
      this.element.bookmark.style.removeProperty('--bookmark-display-visual-shadow-offset');
      this.element.bookmark.style.removeProperty('--bookmark-display-visual-shadow-blur');
      this.element.bookmark.style.removeProperty('--bookmark-display-visual-shadow-opacity');
      this.element.bookmark.style.removeProperty('--bookmark-display-visual-shadow');
    };

    if (bookmarkData.link.color.by == 'custom') {
      this.element.bookmark.style.setProperty('--theme-color-r', bookmarkData.link.color.rgb.r);
      this.element.bookmark.style.setProperty('--theme-color-g', bookmarkData.link.color.rgb.g);
      this.element.bookmark.style.setProperty('--theme-color-b', bookmarkData.link.color.rgb.b);

      this.element.bookmark.style.setProperty('--theme-color-h', bookmarkData.link.color.hsl.h);
      this.element.bookmark.style.setProperty('--theme-color-s', bookmarkData.link.color.hsl.s);
      this.element.bookmark.style.setProperty('--theme-color-l', bookmarkData.link.color.hsl.l);

      this.element.bookmark.style.setProperty('--theme-color', bookmarkData.link.color.hsl.h + ', ' + bookmarkData.link.color.hsl.s + '%, ' + bookmarkData.link.color.hsl.l + '%');
      this.element.bookmark.style.setProperty('--theme-color-text', '0, 0%, calc(((((var(--theme-color-r) * var(--theme-t-r)) + (var(--theme-color-g) * var(--theme-t-g)) + (var(--theme-color-b) * var(--theme-t-b))) / 255) - var(--theme-t)) * -10000000%)');

      this.element.bookmark.style.setProperty('--bookmark-color', 'var(--theme-color)');
      this.element.bookmark.style.setProperty('--bookmark-color-focus-hover', 'var(--theme-color)');

      this.element.bookmark.style.setProperty('--bookmark-display-name-color', 'var(--theme-color-text)');
      this.element.bookmark.style.setProperty('--bookmark-display-name-color-focus-hover', 'var(--theme-color-text)');

      this.element.bookmark.style.setProperty('--button-link-text', 'var(--theme-color-text)');
      this.element.bookmark.style.setProperty('--button-link-text-focus-hover', 'var(--theme-color-text)');
      this.element.bookmark.style.setProperty('--button-link-text-active', 'var(--theme-color-text)');
    };

    if (bookmarkData.link.background.show) {
      this.element.bookmark.style.setProperty('--bookmark-background-opacity', bookmarkData.link.background.opacity);

      switch (bookmarkData.link.background.type) {
        case 'image':
          if (isValidString(bookmarkData.link.background.image.url)) {
            this.element.bookmark.style.setProperty('--bookmark-background-image-url', 'url(' + trimString(bookmarkData.link.background.image.url) + ')');
          };
          break;
      };
    };

    if (bookmarkData.link.shape.tall) {
      this.element.bookmark.classList.add('bookmark-tall');
    };

    if (bookmarkData.link.shape.wide) {
      this.element.bookmark.classList.add('bookmark-wide');
    };

  };

  this.assemble = () => {

    if (bookmarkData.link.display.visual.show || bookmarkData.link.display.name.show) {
      if (bookmarkData.link.display.visual.show) {
        switch (bookmarkData.link.display.visual.type) {
          case 'letter':
            if (isValidString(bookmarkData.link.display.visual.letter.text)) {
              this.element.content.display.visual.visual.appendChild(this.element.content.display.visual.letter);
              this.element.content.display.display.appendChild(this.element.content.display.visual.visual);
            };
            break;

          case 'icon':
            if (isValidString(bookmarkData.link.display.visual.icon.name)) {
              this.element.content.display.visual.icon.appendChild(this.element.content.display.visual.faIcon);
              this.element.content.display.visual.visual.appendChild(this.element.content.display.visual.icon);
              this.element.content.display.display.appendChild(this.element.content.display.visual.visual);
            };
            break;

          case 'image':
            if (isValidString(bookmarkData.link.display.visual.image.url)) {
              this.element.content.display.visual.visual.appendChild(this.element.content.display.visual.image);
              this.element.content.display.display.appendChild(this.element.content.display.visual.visual);
            };
            break;
        };
      };

      if (bookmarkData.link.display.name.show && isValidString(bookmarkData.link.display.name.text)) {
        this.element.content.display.name.name.appendChild(this.element.content.display.name.text);
        this.element.content.display.display.appendChild(this.element.content.display.name.name);
      };

      this.element.content.display.wrap.appendChild(this.element.content.display.display);

      this.element.content.link.appendChild(this.element.content.display.wrap);
    };

    if (bookmarkData.link.background.show) {

      switch (bookmarkData.link.background.type) {

        case 'image':

          this.element.content.background.wrap.appendChild(this.element.content.background.image);

          break;

        case 'video':

          this.element.content.background.wrap.appendChild(this.element.content.background.video);

          if (isValidString(bookmarkData.link.background.video.url)) {
            const backgroundVideoElement = new Video({
              url: bookmarkData.link.background.video.url
            });

            this.element.content.background.video.appendChild(backgroundVideoElement.video);
          };

          break;
      };

      this.element.content.link.appendChild(this.element.content.background.wrap);

    };

    this.element.bookmark.appendChild(this.element.front);

    this.element.bookmark.appendChild(this.element.back);

    this.element.front.appendChild(this.element.content.link);

    this.element.control.appendChild(this.control.button.left.button);

    this.element.control.appendChild(this.control.button.sort.button);

    this.element.control.appendChild(this.control.button.right.button);

    this.element.control.appendChild(this.control.button.edit.button);

    this.element.control.appendChild(this.control.button.remove.button);

    this.element.back.appendChild(this.element.control);

    if (isValidString(bookmarkData.link.url)) {

      this.element.url.text.textContent = trimString(bookmarkData.link.url).replace(/^https?\:\/\//i, '').replace(/\/+$/, '');

      this.element.url.text.title = trimString(bookmarkData.link.url);

      this.element.url.url.appendChild(this.element.url.text);

      this.element.back.appendChild(this.element.url.url);

    };

    if (state.get.current().bookmark.edit) {
      this.control.enable();
    } else {
      this.control.disable();
    };

  };

  this.tile = () => {

    return this.element.bookmark;

  };

  this.update = (newBookmarkData) => {

    this.style(newBookmarkData);

  };

  this.assemble();

  this.style();

};



;// CONCATENATED MODULE: ./src/utility/sortArrayOfObject.js


const sortArrayOfObject = (array, key) => {

  array.sort((a, b) => {

    let textA = get({
      object: a,
      path: key
    });

    if (typeof textA == 'string') {
      textA = textA.toLowerCase();
    };

    let textB = get({
      object: b,
      path: key
    });

    if (typeof textB == 'string') {
      textB = textB.toLowerCase();
    };

    if (textA < textB) {
      return -1;
    } else if (textA > textB) {
      return 1;
    } else {
      return 0;
    };

  });

  return array;

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/bookmark/index.css
var bookmark = __webpack_require__(5125);
;// CONCATENATED MODULE: ./src/component/bookmark/index.css

            

var bookmark_options = {};

bookmark_options.insert = "head";
bookmark_options.singleton = false;

var bookmark_update = injectStylesIntoStyleTag_default()(bookmark/* default */.Z, bookmark_options);



/* harmony default export */ const component_bookmark = (bookmark/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/bookmark/index.js





























const bookmark_bookmark = {};

bookmark_bookmark.element = {
  area: node('div|class:bookmark-area'),
  group: node('div|class:bookmark-group')
};

bookmark_bookmark.all = bookmarkPreset.get();

bookmark_bookmark.area = {
  render: () => {

    bookmark_bookmark.element.area.appendChild(bookmark_bookmark.element.group);

    layout_layout.element.bookmark.appendChild(bookmark_bookmark.element.area);

  }
};

bookmark_bookmark.tile = {
  current: []
};

bookmark_bookmark.item = {
  mod: {
    add: (bookmarkData) => {

      bookmark_bookmark.all[bookmarkData.position.destination.group].items.splice(bookmarkData.position.destination.item, 0, bookmarkData.link);

    },
    edit: (bookmarkData) => {

      bookmark_bookmark.all[bookmarkData.position.origin.group].items.splice(bookmarkData.position.origin.item, 1);

      bookmark_bookmark.all[bookmarkData.position.destination.group].items.splice(bookmarkData.position.destination.item, 0, bookmarkData.link);

    },
    move: (bookmarkData) => {

      bookmarkData.link = bookmark_bookmark.all[bookmarkData.position.origin.group].items.splice(bookmarkData.position.origin.item, 1)[0];

      bookmark_bookmark.all[bookmarkData.position.destination.group].items.splice(bookmarkData.position.destination.item, 0, bookmarkData.link);

    },
    remove: (bookmarkData) => {

      bookmark_bookmark.all[bookmarkData.position.origin.group].items.splice(bookmarkData.position.origin.item, 1);

    },
    propagate: (bookmarkData) => {

      if (bookmarkData.propagate.display || bookmarkData.propagate.layout || bookmarkData.propagate.theme) {

        bookmark_bookmark.all.forEach((item, i) => {

          item.items.forEach((item, i) => {

            if (bookmarkData.propagate.display) {
              item.display.visual.show = bookmarkData.link.display.visual.show;
              item.display.name.show = bookmarkData.link.display.name.show;
            };

            if (bookmarkData.propagate.layout) {
              item.display.visual.size = bookmarkData.link.display.visual.size;
              item.display.name.size = bookmarkData.link.display.name.size;
              item.display.gutter = bookmarkData.link.display.gutter;
              item.display.rotate = bookmarkData.link.display.rotate;
              item.display.translate = bookmarkData.link.display.translate;
              item.display.alignment = bookmarkData.link.display.alignment;
              item.display.direction = bookmarkData.link.display.direction;
              item.display.order = bookmarkData.link.display.order;
            };

            if (bookmarkData.propagate.theme) {
              item.accent = bookmarkData.link.accent;
              item.color = bookmarkData.link.color;
              item.border = bookmarkData.link.border;
              item.display.visual.shadow = bookmarkData.link.display.visual.shadow;
            };

          });

        });

      };

    },
    applyVar: (path, value) => {

      bookmark_bookmark.all.forEach((item, i) => {

        item.items.forEach((item, i) => {

          set({ object: item, path: path, value: value });

        });

      });

    },
    sort: {
      letter: () => {

        bookmark_bookmark.all.forEach((item, i) => {
          item.items = sortArrayOfObject(item.items, 'display.name.text');
        });

      },
      icon: () => {

        bookmark_bookmark.all.forEach((item, i) => {
          item.items = sortArrayOfObject(item.items, 'display.visual.letter.text');
        });

      },
      name: () => {

        bookmark_bookmark.all.forEach((item, i) => {
          item.items = sortArrayOfObject(item.items, 'display.visual.icon.name');
        });

      }
    }
  },
  render: (groupIndex) => {

    const addBookmarkToGroup = (bookmarkData, groupIndex, bookmarkIndex) => {

      const currentBookmarkData = new StagedBookmark(bookmarkData);

      currentBookmarkData.position.origin.group = groupIndex;

      currentBookmarkData.position.origin.item = bookmarkIndex;

      currentBookmarkData.position.destination.group = groupIndex;

      currentBookmarkData.position.destination.item = bookmarkIndex;

      const bookmarkTile = new BookmarkTile({ bookmarkData: currentBookmarkData });

      bookmarkTile.tile().groupIndex = groupIndex;

      bookmarkTile.tile().index = bookmarkIndex;

      component_group_group.area.current[groupIndex].element.body.appendChild(bookmarkTile.tile());

      bookmark_bookmark.tile.current.push(bookmarkTile);

    };

    const addEmptyGroup = (groupIndex) => {

      const emptyGroupItem = new GroupEmpty({ groupIndex: groupIndex });

      component_group_group.area.current[groupIndex].element.body.appendChild(emptyGroupItem.empty());

    };

    if (state.get.current().search) {

      // searching

      if (header_header.element.search.resultCount().total > 0) {

        bookmark_bookmark.all.forEach((item, i) => {

          const groupIndex = i;

          if (header_header.element.search.resultCount().group[groupIndex].searchMatch > 0) {

            item.items.forEach((item, i) => {

              const bookmarkIndex = i;

              if (item.searchMatch) {

                addBookmarkToGroup(item, groupIndex, bookmarkIndex);

              };

            });

          };

        });

      };


    } else {

      // not searching

      bookmark_bookmark.all.forEach((item, i) => {

        const groupIndex = i;

        if (item.items.length > 0) {

          item.items.forEach((item, i) => {

            const bookmarkIndex = i;

            addBookmarkToGroup(item, groupIndex, bookmarkIndex);

          });

        } else {

          addEmptyGroup(groupIndex);

        };

      });

    };

  },
  clear: () => {

    bookmark_bookmark.tile.current = [];

  }
};

bookmark_bookmark.edit = {
  open: () => {

    state.get.current().bookmark.edit = true;

    bookmark_bookmark.edit.render();

  },
  close: () => {

    state.get.current().bookmark.edit = false;

    bookmark_bookmark.edit.render();

  },
  toggle: () => {

    if (state.get.current().bookmark.edit) {
      bookmark_bookmark.edit.close();
    } else {
      bookmark_bookmark.edit.open();
    };

  },
  render: () => {

    applyCSSState('bookmark.edit');

    if (bookmark_bookmark.tile.current.length > 0) {

      bookmark_bookmark.tile.current.forEach((item, i) => {

        if (state.get.current().bookmark.edit) {
          item.control.enable();
        } else {
          item.control.disable();
        };

      });

    };

  }
};

bookmark_bookmark.direction = {
  mod: {
    vertical: () => {

      bookmark_bookmark.all.forEach((item, i) => {
        item.items.forEach((item, i) => {

          item.display.direction = 'vertical';

        });
      });

    },
    horizontal: () => {

      bookmark_bookmark.all.forEach((item, i) => {
        item.items.forEach((item, i) => {

          item.display.direction = 'horizontal';

        });
      });

    }
  }
};

bookmark_bookmark.add = {
  mod: {
    open: () => { state.get.current().bookmark.add = true; },
    close: () => { state.get.current().bookmark.add = false; }
  },
  render: ({
    groupIndex = false
  } = {}) => {

    const newBookmarkData = new StagedBookmark();

    newBookmarkData.type.new = true;

    newBookmarkData.position.destination.item = (bookmark_bookmark.all.length > 0) ? bookmark_bookmark.all[0].items.length : 0;

    if (groupIndex || groupIndex === 0) {
      newBookmarkData.position.destination.group = groupIndex;

      newBookmarkData.position.destination.item = bookmark_bookmark.all[groupIndex].items.length;
    };

    if (!bookmark_bookmark.all.length > 0) {
      newBookmarkData.group.destination = 'new';
    };

    const bookmarkForm = new BookmarkForm({ bookmarkData: newBookmarkData });

    const addModal = new Modal({
      heading: 'Add a new Bookmark',
      content: bookmarkForm.form(),
      successText: 'Add',
      width: 60,
      maxHeight: true,
      openAction: () => {

        bookmark_bookmark.add.mod.open();

        data.save();

      },
      closeAction: () => {

        bookmark_bookmark.add.mod.close();

        data.save();

      },
      successAction: () => {

        switch (newBookmarkData.group.destination) {
          case 'new':

            const newGroupData = new StagedGroup();

            newGroupData.group.name.text = newBookmarkData.group.name;

            newGroupData.newGroup();

            component_group_group.item.mod.add(newGroupData);

            newBookmarkData.position.destination.group = bookmark_bookmark.all.length - 1;

            layout_layout.area.assemble();

            break;

        };

        newBookmarkData.link.timestamp = new Date().getTime();

        bookmark_bookmark.item.mod.add(newBookmarkData);

        bookmark_bookmark.item.mod.propagate(newBookmarkData);

        bookmark_bookmark.add.mod.close();

        groupAndBookmark.render();

        data.save();

      },
      dismissAction: () => {

        bookmark_bookmark.add.mod.close();

        data.save();

      }
    });

    addModal.open();

  }
};

bookmark_bookmark.sort = {
  sortable: [],
  bind: () => {

    bookmark_bookmark.sort.sortable = [];

    component_group_group.area.current.forEach((item, i) => {

      bookmark_bookmark.sort.sortable.push(sortable_esm.create(item.element.body, {
        handle: '.bookmark-control-sort',
        group: 'bookmark-sort',
        ghostClass: 'bookmark-sort-placeholder',
        animation: 500,
        easing: 'cubic-bezier(0.8, 0.8, 0.4, 1.4)',
        filter: '.group-empty',
        onEnd: (event) => {

          // console.log('============ debug sort ============');
          // console.log(event);
          // console.log('group:', 'origin', event.from.position.origin, 'destination', event.to.position.origin);
          // console.log('item:', 'origin', event.oldIndex, 'destination', event.newIndex);

          const newBookmarkData = new StagedBookmark();

          newBookmarkData.position.origin.group = event.from.position.origin;

          newBookmarkData.position.origin.item = event.oldIndex;

          newBookmarkData.position.destination.group = event.to.position.origin;

          newBookmarkData.position.destination.item = event.newIndex;

          newBookmarkData.type.existing = true;

          bookmark_bookmark.item.mod.move(newBookmarkData);

          groupAndBookmark.render();

          data.save();

        }
      }));

    });

  }
};

bookmark_bookmark.count = () => {

  let count = 0;

  bookmark_bookmark.all.forEach((item, i) => { count = count + item.items.length });

  return count;

};

bookmark_bookmark.restore = (dataToRestore) => {
  bookmark_bookmark.all = dataToRestore.bookmark;
  console.log('bookmark restored');
};

bookmark_bookmark.init = () => {
  applyCSSVar([
    'bookmark.size'
  ]);
  applyCSSClass([
    'bookmark.item.justify',
    'bookmark.orientation',
    'bookmark.style'
  ]);
  applyCSSState([
    'bookmark.show',
    'bookmark.hoverScale.show',
    'bookmark.shadow.show',
    'bookmark.line.show',
    'bookmark.url.show'
  ]);
  bookmark_bookmark.area.render();
  bookmark_bookmark.add.mod.close();
  bookmark_bookmark.edit.render();
};



;// CONCATENATED MODULE: ./src/component/updateLegacy/index.js




const updateLegacy = {};

updateLegacy.get = () => {
  return {
    '1.0.0': function(data) {
      data.version = '1.0.0';
      return data;
    },
    '2.0.0': function(data) {
      // major state overhaul for version 2.0.0 and up
      data.state = {
        header: {
          date: {
            characterLength: 'short',
            show: {
              date: true,
              day: false,
              month: true,
              year: false,
              separator: true
            }
          },
          clock: {
            hour24: true,
            show: {
              seconds: true,
              minutes: true,
              hours: true,
              separator: true,
              meridiem: true
            }
          },
          editAdd: {
            active: true
          },
          accent: {
            active: true
          },
          search: {
            searching: false,
            active: true,
            grow: true,
            engine: {
              selected: 'google',
              google: {
                url: 'https://www.google.com/search'
              },
              duckduckgo: {
                url: 'https://duckduckgo.com/'
              },
              giphy: {
                url: 'https://giphy.com/search/'
              },
              custom: {
                url: ''
              }
            }
          },
          buttons: {
            show: true
          }
        },
        link: {
          editObject: null,
          action: null,
          newTab: false,
          style: 'block',
          sort: 'none'
        },
        layout: {
          alignment: 'left',
          container: 'wide',
          scrollPastEnd: true,
          theme: {
            current: {
              r: 255,
              g: 170,
              b: 51
            },
            random: false
          }
        },
        edit: {
          active: false
        },
        menu: {
          open: false,
          active: false
        },
        modal: {
          active: false
        }
      };
      // version 1.0.0 bookmarks are not compatible so need to be reset
      data.bookmarks = [];
      return data;
    },
    '2.1.0': function(data) {
      data.state.layout.theme = {
        current: data.state.layout.theme.current,
        random: false
      };
      return data;
    },
    '2.3.0': function(data) {
      data.state.layout.theme.random = {
        active: data.state.layout.theme.random,
        style: 'any'
      };
      return data;
    },
    '2.4.0': function(data) {
      data.state.link.show = {
        active: true,
        name: true,
        url: true
      };
      data.state.layout.alignment = {
        horizontal: 'left',
        vertical: 'top'
      };
      data.state.background = {
        image: {
          active: false,
          url: '../background/gray-steps.jpg',
          blur: 0,
          opacity: 1,
          grayscale: 0,
          accentOpacity: 0
        }
      };
      return data;
    },
    '2.5.0': function(data) {
      data.state.header.search.focus = false;
      return data;
    },
    '2.7.0': function(data) {
      // update date character length
      data.state.header.date.character = {
        length: data.state.header.date.characterLength
      };
      // change editAdd active to show
      data.state.header.editAdd.show = data.state.header.editAdd.active;
      delete data.state.header.editAdd.active;
      // change editAdd active to show
      data.state.header.accent.show = data.state.header.accent.active;
      delete data.state.header.accent.active;
      // move alignment into header
      data.state.header.alignment = {
        horizontal: data.state.layout.alignment.horizontal,
        vertical: data.state.layout.alignment.vertical
      };
      delete data.state.layout.alignment;
      // change header search
      data.state.header.search.show = data.state.header.search.active;
      delete data.state.header.search.active;
      // move searching
      data.state.search = {
        active: false
      };
      delete data.state.header.search.searching;
      // change links to bookmarks
      data.state.bookmarks = data.state.link;
      delete data.state.link;
      // change bookmarks show
      data.state.bookmarks.show.link = data.state.bookmarks.show.active;
      delete data.state.bookmarks.show.active;
      // move edit
      data.state.bookmarks.edit = false;
      delete data.state.edit;
      // change layout width
      data.state.layout.width = data.state.layout.container;
      delete data.state.layout.container;
      // change background active
      data.state.background.image.show = data.state.background.image.active;
      delete data.state.background.image.active;
      // change background accent
      data.state.background.image.accent = data.state.background.image.accentOpacity;
      delete data.state.background.image.accentOpacity;
      // change menu active
      data.state.menu.show = data.state.menu.active;
      delete data.state.menu.active;
      delete data.state.menu.open;
      data.state.menu = false;
      data.state.modal = false;
      return data;
    },
    '2.8.0': function(data) {
      data.state.layout.title = 'New Tab';
      return data;
    },
    '2.9.0': function(data) {
      data.state.header.shade = {
        show: true,
        padding: 4,
        style: 'scroll',
        opacity: 0.95,
        border: {
          top: false,
          bottom: false
        }
      };
      return data;
    },
    '2.10.0': function(data) {
      data.state.header.shade = {
        show: true,
        padding: 4,
        style: 'scroll',
        opacity: 0.95,
        border: {
          top: false,
          bottom: false
        }
      };
      return data;
    },
    '2.11.0': function(data) {
      data.state.header.greeting = {
        show: false,
        type: 'good',
        name: ''
      };
      return data;
    },
    '2.11.0': function(data) {
      data.state.header.greeting = {
        show: false,
        type: 'good',
        name: ''
      };
      return data;
    },
    '2.12.0': function(data) {
      data.state.bookmarks.link = {
        show: data.state.bookmarks.show.link
      };
      data.state.bookmarks.name = {
        show: data.state.bookmarks.show.name
      };
      data.state.bookmarks.url = {
        show: data.state.bookmarks.show.url,
        style: 'dark'
      };
      delete data.state.bookmarks.show;
      data.state.theme = {
        accent: {
          current: data.state.layout.theme.current,
          random: data.state.layout.theme.random
        },
        style: 'dark'
      };
      delete data.state.layout.theme;
      return data;
    },
    '2.14.0': function(data) {
      data.state.layout.width = 72;
      return data;
    },
    '2.16.0': function(data) {
      data.state.header.shade.padding = {
        top: data.state.header.shade.padding,
        bottom: data.state.header.shade.padding
      };
      data.state.header.shade.border = {
        top: {
          show: data.state.header.shade.border.top,
          width: 1
        },
        bottom: {
          show: data.state.header.shade.border.bottom,
          width: 1
        }
      };
      return data;
    },
    '2.17.0': function(data) {
      data.state.header.search.engine.google.name = 'Google';
      data.state.header.search.engine.duckduckgo.name = 'Duck Duck Go';
      data.state.header.search.engine.giphy.name = 'Giphy';
      return data;
    },
    '2.19.0': function(data) {
      data.state.header.search.engine.youtube = {
        url: 'https://www.youtube.com/results?search_query=',
        name: 'YouTube'
      };
      data.state.header.search.engine.custom.name = '';
      return data;
    },
    '2.20.0': function(data) {
      data.state.header.search.width = {
        style: 'auto',
        custom: 30
      };
      data.state.header.search.text = {
        align: 'left'
      };
      delete data.state.header.search.grow;
      return data;
    },
    '2.21.0': function(data) {
      data.state.header.clock = {
        hours: {
          show: data.state.header.clock.show.hours,
          display: 'number'
        },
        minutes: {
          show: data.state.header.clock.show.minutes,
          display: 'number'
        },
        seconds: {
          show: data.state.header.clock.show.seconds,
          display: 'number'
        },
        separator: {
          show: data.state.header.clock.show.separator
        },
        meridiem: {
          show: data.state.header.clock.show.meridiem
        },
        hour24: {
          show: data.state.header.clock.hour24
        }
      };
      data.state.header.date = {
        day: {
          show: data.state.header.date.show.day,
          display: 'word',
          weekStart: 'monday',
          length: data.state.header.date.character.length
        },
        date: {
          show: data.state.header.date.show.date,
          display: 'number',
          ordinal: true
        },
        month: {
          show: data.state.header.date.show.month,
          display: 'word',
          length: data.state.header.date.character.length,
          ordinal: true
        },
        year: {
          show: data.state.header.date.show.year,
          display: 'number'
        },
        separator: {
          show: data.state.header.date.show.separator
        },
        format: 'datemonth'
      };
      data.state.header.transitional = {
        show: false,
        type: 'timeanddate'
      };
      return data;
    },
    '2.22.0': function(data) {
      data.bookmarks.forEach(function(arrayItem, index) {
        arrayItem.accent = {
          override: false,
          color: {
            r: null,
            g: null,
            b: null
          }
        };
      });
      return data;
    },
    '3.0.0': function(data) {
      data.bookmarks.forEach(function(arrayItem, index) {
        arrayItem.display = 'letter';
        arrayItem.icon = {
          name: null,
          prefix: null,
          label: null
        };
      });
      return data;
    },
    '3.1.0': function(data) {
      data.state.header.area = {
        width: 90,
        alignment: {
          horizontal: 'center'
        }
      };
      data.state.header.items = {
        alignment: {
          horizontal: 'left'
        }
      };
      delete data.state.header.alignment;
      data.state.link = data.state.bookmarks;
      delete data.state.bookmarks;
      data.state.link.area = {
        width: 90,
        alignment: {
          horizontal: 'center'
        }
      };
      data.state.link.items = {
        width: 12,
        alignment: {
          horizontal: 'left'
        }
      };
      data.state.link.show = data.state.link.link.show;
      delete data.state.link.link;
      data.state.link.fit = 'best';
      delete data.state.link.editObject;
      data.state.layout.alignment = {
        horizontal: 'center',
        vertical: 'center'
      };
      data.state.edge = false;
      data.state.autoSuggest = false;
      return data;
    },
    '3.2.0': function(data) {
      data.state.link.display = {
        show: true,
        alignment: {
          horizontal: 'center',
          vertical: 'center'
        },
        letter: {
          size: 2
        },
        icon: {
          size: 2.5
        }
      };
      return data;
    },
    '3.4.0': function(data) {
      data.state.header.padding = data.state.header.shade.padding;
      delete data.state.header.shade.padding;
      data.state.header.border = data.state.header.shade.border;
      delete data.state.header.shade.border;
      return data;
    },
    '3.6.0': function(data) {
      data.state.header.item = data.state.header.items;
      delete data.state.header.items;
      data.state.link.area.gap = 2;
      delete data.state.link.items;
      data.state.link.item = {
        size: 1,
        display: data.state.link.display,
        name: data.state.link.name,
        url: data.state.link.url
      };
      data.state.link.item.name.size = 0.9;
      delete data.state.link.display;
      delete data.state.link.name;
      delete data.state.link.url;
      return data;
    },
    '3.7.0': function(data) {
      data.state.link.item.line = {
        show: true
      };
      return data;
    },
    '3.8.0': function(data) {
      data.state.header.clock.size = 1;
      data.state.header.date.size = 1;
      data.state.header.greeting.size = 1;
      data.state.header.transitional.size = 1;
      data.state.header.search.style = data.state.header.search.width.style;
      data.state.header.search.width = data.state.header.search.width.custom;
      data.state.header.search.size = 1;
      data.state.header.button = {
        editAdd: {
          show: data.state.header.editAdd.show
        },
        accent: {
          show: data.state.header.accent.show
        },
        size: 1
      };
      delete data.state.header.editAdd;
      data.state.theme.radius = 0.2;
      return data;
    },
    '3.9.0': function(data) {
      delete data.state.header.padding;
      data.state.header.radius = false;
      data.state.header.border = {
        top: 0,
        bottom: 0
      };
      data.state.layout.padding = 4;
      data.state.layout.gutter = 2;
      data.state.background.image.scale = 1;
      delete data.state.link.area.gap;
      return data;
    },
    '3.10.0': function(data) {
      data.state.header.button.style = 'box';
      return data;
    },
    '3.11.0': function(data) {
      data.state.link.item.line = data.state.link.item.line.show;
      data.state.link.item.hoverScale = true;
      return data;
    },
    '3.15.0': function(data) {
      delete data.state.link.sort;
      return data;
    },
    '3.18.0': function(data) {
      data.nighttab = true;
      return data;
    },
    '3.20.0': function(data) {
      data.state.link.item.url = data.state.link.item.url.show;
      return data;
    },
    '3.21.0': function(data) {
      data.state.layout.order = 'headerLink';
      return data;
    },
    '3.27.0': function(data) {
      // swicth to single values for alignment controls
      // no more horizontal or vertical keys in state object
      data.state.header.area.alignment = data.state.header.area.alignment.horizontal;
      data.state.header.item.alignment = data.state.header.item.alignment.horizontal;
      data.state.header.search.text.alignment = data.state.header.search.text.align;
      delete data.state.header.search.text.align;
      data.state.link.area.alignment = data.state.link.area.alignment.horizontal;
      data.state.link.item.display.alignment = data.state.link.item.display.alignment.vertical + data.state.link.item.display.alignment.horizontal;
      data.state.layout.alignment = data.state.layout.alignment.vertical + data.state.layout.alignment.horizontal;
      return data;
    },
    '3.28.0': function(data) {
      data.state.header.search.engine.bing = {
        url: 'https://www.bing.com/search?q=',
        name: 'Bing'
      };
      return data;
    },
    '3.29.0': function(data) {
      // move new tab into link
      data.state.link.item.newTab = data.state.link.newTab;
      delete data.state.link.newTab;
      // bring url and line inline with other show controls
      data.state.link.item.url = {
        show: data.state.link.item.url
      };
      data.state.link.item.line = {
        show: data.state.link.item.line
      };
      data.state.link.item.hoverScale = {
        show: data.state.link.item.hoverScale
      };
      data.state.layout.order = data.state.layout.order.toLowerCase();
      return data;
    },
    '3.30.0': function(data) {
      data.state.link.item.order = 'displayname';
      return data;
    },
    '3.32.0': function(data) {
      if (data.state.background.image.url == '') {
        data.state.background.image.from = 'file';
      } else {
        data.state.background.image.from = 'url';
      };
      data.state.background.image.file = {
        name: '',
        data: ''
      };
      return data;
    },
    '3.50.0': function(data) {
      data.state.pagelock = false;
      data.state.shade = false;
      return data;
    },
    '3.51.0': function(data) {
      data.state.link.add = false;
      return data;
    },
    '3.66.0': function(data) {
      data.state.background.color = {
        by: 'theme',
        custom: {
          r: 0,
          g: 0,
          b: 0
        }
      };
      return data;
    },
    '3.80.0': function(data) {
      delete data.state.link.item.newtab;
      data.state.link.item.border = 0;
      return data;
    },
    '3.81.0': function(data) {
      data.state.link.orientation = 'bottom';
      return data;
    },
    '3.82.0': function(data) {
      data.state.link.item.shadow = {
        show: true
      };
      return data;
    },
    '4.0.0': function(data) {
      data.bookmarks = [{
        name: 'Group 1',
        items: data.bookmarks
      }];
      data.state.layout.size = 1;
      data.state.header.position = 'sticky';
      data.state.link.item.display.rotate = 0;
      data.state.link.item.display.translate = {
        x: 0,
        y: 0
      };
      data.state.link.item.hoverScale = {
        show: true
      };
      data.state.group = {
        area: {
          alignment: 'left'
        },
        name: {
          show: true,
          size: 1
        },
        border: 0,
        order: 'headerbody',
        add: false
      };
      data.state.dropdown = false;
      delete data.state.link.item.display.size;
      data.state.link.item.display.name = data.state.link.item.name;
      delete data.state.link.item.name;
      data.state.link.item.display.letcon = {
        show: data.state.link.item.display.show,
        letter: {
          size: data.state.link.item.display.letter.size
        },
        icon: {
          size: data.state.link.item.display.icon.size
        }
      };
      delete data.state.link.item.display.show;
      delete data.state.link.item.display.letter;
      delete data.state.link.item.display.icon;
      data.state.link.item.display.rotate = 0;
      data.state.link.item.display.translate = {
        x: 0,
        y: 0
      };
      if (data.state.link.item.order == 'displayname') {
        data.state.link.item.display.order = 'letconname';
      } else if (data.state.link.item.order == 'namedisplay') {
        data.state.link.item.display.order = 'nameletcon';
      };
      delete data.state.link.item.order;
      if (data.state.link.style == 'block') {
        data.state.link.item.display.direction = 'vertical';
      } else if (data.state.link.style == 'list') {
        data.state.link.item.display.direction = 'horizontal';
      };
      delete data.state.link.fit;
      data.state.header.search.engine.duckduckgo.name = 'DuckDuckGo';
      return data;
    },
    '4.1.0': function(data) {
      data.state.link.item.display.gutter = 2;
      return data;
    },
    '4.2.0': function(data) {
      data.state.edit = false;
      data.state.link.edit = false;
      data.state.group.edit = false;
      return data;
    },
    '4.3.0': function(data) {
      data.state.theme.color = {
        hsl: {
          h: 222,
          s: 14,
          l: 56
        },
        rgb: {
          r: 129,
          g: 138,
          b: 160
        }
      };
      data.state.link.item.color = {
        by: 'theme',
        custom: {
          r: 0,
          g: 0,
          b: 0
        }
      };
      data.state.header.button.colorAccent = data.state.header.button.accent;
      delete data.state.header.button.accent;
      return data;
    },
    '4.4.0': function(data) {
      data.state.header.button.colorAccent.dot = {
        show: true
      };
      return data;
    },
    '4.6.0': function(data) {
      data.state.theme.font = {
        display: '',
        ui: ''
      };
      return data;
    },
    '4.7.0': function(data) {
      data.state.theme.font.display = {
        name: data.state.theme.font.display,
        weight: 400,
        style: 'normal'
      };
      data.state.theme.font.ui = {
        name: data.state.theme.font.ui,
        weight: 400,
        style: 'normal'
      };
      return data;
    },
    '4.8.0': function(data) {
      data.state.theme.custom = [];
      return data;
    },
    '4.9.0': function(data) {
      data.state.theme.color.contrast = {
        light: 4,
        dark: 4
      };
      return data;
    },
    '4.10.0': function(data) {
      data.state.theme.shadow = 1;
      return data;
    },
    '4.11.0': function(data) {
      data.state.theme.custom = {
        all: data.state.theme.custom,
        edit: false
      };
      return data;
    },
    '4.17.0': function(data) {
      data.state.theme.shade = {
        opacity: 0.4
      };
      return data;
    },
    '4.18.0': function(data) {
      data.state.theme.accent.rgb = data.state.theme.accent.current;
      delete data.state.theme.accent.current;
      return data;
    },
    '4.19.2': function(data) {
      data.bookmarks.forEach(function(arrayItem, index) {
        arrayItem.items.forEach(function(arrayItem, index) {
          arrayItem.searchMatch = false;
        });
      });
      return data;
    },
    '4.22.0': function(data) {
      data.state.link.item.color.rgb = data.state.link.item.color.custom;
      delete data.state.link.item.color.custom;
      data.state.background.color.rgb = data.state.background.color.custom;
      delete data.state.background.color.custom;
      return data;
    },
    '4.23.0': function(data) {
      data.state.header.color = data.state.header.shade;
      delete data.state.header.shade;
      data.state.header.color.by = 'theme';
      data.state.header.color.rgb = {
        r: 0,
        g: 0,
        b: 0
      };
      return data;
    },
    '4.33.0': function(data) {
      data.state.layout.scrollbars = 'auto';
      return data;
    },
    '4.37.0': function(data) {
      data.state.header.order = ['greeting', 'transitional', 'clock', 'date', 'search', 'editAdd', 'colorAccent', 'menu'];
      data.state.header.menu = {
        show: true,
        size: data.state.header.button.size,
        style: data.state.header.button.style
      };
      data.state.header.editAdd = {
        show: data.state.header.button.editAdd.show,
        size: data.state.header.button.size,
        style: data.state.header.button.style,
        newLine: false
      };
      data.state.header.colorAccent = {
        dot: {
          show: data.state.header.button.colorAccent.dot.show
        },
        show: data.state.header.button.colorAccent.show,
        size: data.state.header.button.size,
        style: data.state.header.button.style,
        newLine: false
      };
      data.state.header.greeting.newLine = false;
      data.state.header.clock.newLine = false;
      data.state.header.transitional.newLine = false;
      data.state.header.date.newLine = false;
      data.state.header.search.newLine = false;
      data.state.header.editAdd.newLine = false;
      data.state.header.colorAccent.newLine = false;
      data.state.header.menu.newLine = false;
      data.state.header.search.width = {
        by: data.state.header.search.style,
        size: data.state.header.search.width
      };
      data.state.header.search.style = 'box';
      delete data.state.header.button;
      return data;
    },
    '4.38.0': function(data) {
      data.state.theme.color.generated = {};
      return data;
    },
    '4.40.0': function(data) {
      data.state.header.area.justify = data.state.header.area.alignment;
      delete data.state.header.area.alignment;
      data.state.header.item.justify = data.state.header.item.alignment;
      delete data.state.header.item.alignment;
      data.state.header.search.text.justify = data.state.header.search.text.alignment;
      delete data.state.header.search.text.alignment;
      data.state.link.area.justify = data.state.link.area.alignment;
      delete data.state.link.area.alignment;
      data.state.group.area.justify = data.state.group.area.alignment;
      delete data.state.group.area.alignment;
      data.state.header.area.align = 'center';
      return data;
    },
    '4.41.0': function(data) {
      data.state.header.search.newTab = false;
      return data;
    },
    '4.42.0': function(data) {
      data.state.group.openAll = {
        show: true,
        size: 1,
        style: 'box'
      };
      return data;
    },
    '4.44.0': function(data) {
      if (!'newTab' in data.state.link.item && 'newTab' in data.state.link) {
        data.state.link.item.newTab = data.state.link.newTab;
        delete data.state.link.newTab;
      };
      return data;
    },
    '5.0.0': function(data) {
      data.state.layout.direction = 'vertical';
      data.state.link.area.direction = 'ltr';
      data.bookmarks.forEach(function(arrayItem, index) {
        arrayItem.name = {
          show: data.state.group.name.show,
          text: arrayItem.name
        };
        arrayItem.openAll = {
          show: data.state.group.openAll.show
        };
      });
      delete data.state.group.name.show;
      delete data.state.group.openAll.show;
      data.state.theme.accent.cycle = {
        active: false,
        speed: 300,
        step: 10
      };
      data.state.header.clock.separator.text = ':';
      data.state.header.date.separator.text = '/';
      return data;
    },
    '5.1.0': function(data) {
      data.state.link.item.opacity = 1;
      return data;
    },
    '5.2.0': function(data) {
      if (data.state.header.search.style == 'box') {
        data.state.header.search.opacity = 1;
      } else if (data.state.header.search.style == 'clear') {
        data.state.header.search.opacity = 0;
      };
      if (data.state.header.editAdd.style == 'box') {
        data.state.header.editAdd.opacity = 1;
      } else if (data.state.header.editAdd.style == 'clear') {
        data.state.header.editAdd.opacity = 0;
      };
      if (data.state.header.colorAccent.style == 'box') {
        data.state.header.colorAccent.opacity = 1;
      } else if (data.state.header.colorAccent.style == 'clear') {
        data.state.header.colorAccent.opacity = 0;
      };
      if (data.state.header.menu.style == 'box') {
        data.state.header.menu.opacity = 1;
      } else if (data.state.header.menu.style == 'clear') {
        data.state.header.menu.opacity = 0;
      };
      if (data.state.group.openAll.style == 'box') {
        data.state.group.openAll.opacity = 1;
      } else if (data.state.group.openAll.style == 'clear') {
        data.state.group.openAll.opacity = 0;
      };
      delete data.state.header.search.style;
      delete data.state.header.editAdd.style;
      delete data.state.header.colorAccent.style;
      delete data.state.header.menu.style;
      delete data.state.group.openAll.style;
      return data;
    },
    '5.3.0': function(data) {
      data.state.theme.accent.hsl = convertColor.rgb.hsl(data.state.theme.accent.rgb);
      data.state.theme.custom.all.forEach(function(arrayItem, index) {
        arrayItem.accent.rgb = {
          r: arrayItem.accent.r,
          g: arrayItem.accent.g,
          b: arrayItem.accent.b
        };
        arrayItem.accent.hsl = convertColor.rgb.hsl(arrayItem.accent.rgb);
        arrayItem.accent.hsl.h = Math.round(arrayItem.accent.hsl.h);
        arrayItem.accent.hsl.s = Math.round(arrayItem.accent.hsl.s);
        arrayItem.accent.hsl.l = Math.round(arrayItem.accent.hsl.l);
        delete arrayItem.accent.r;
        delete arrayItem.accent.g;
        delete arrayItem.accent.b;
      });
      return data;
    },
    '5.4.0': function(data) {
      data.state.background.image.vignette = {
        opacity: 0,
        start: 90,
        end: 70
      };
      return data;
    },
    '5.37.1': function(data) {
      data.bookmarks.forEach(function(arrayItem, index) {
        arrayItem.items.forEach(function(arrayItem, index) {

          if (arrayItem.name == null) {
            arrayItem.name = '';
          };
          if (arrayItem.url == null) {
            arrayItem.url = '';
          };
          for (var key in arrayItem.accent.color) {
            if (typeof arrayItem.accent.color[key] != 'number') {
              arrayItem.accent.color[key] = 0;
            };
          };
          arrayItem.accent.rgb = {
            r: arrayItem.accent.color.r,
            g: arrayItem.accent.color.g,
            b: arrayItem.accent.color.b
          };
          delete arrayItem.accent.color;
          arrayItem.accent.hsl = {
            h: 0,
            s: 0,
            l: 0
          };
          if (arrayItem.accent.override) {
            arrayItem.accent.by = 'custom';
          } else {
            arrayItem.accent.by = 'theme';
          };
          delete arrayItem.accent.override;
          arrayItem.color = {
            by: 'theme',
            hsl: {
              h: 0,
              s: 0,
              l: 0
            },
            rgb: {
              r: 0,
              g: 0,
              b: 0
            }
          };
          arrayItem.image = '';
          arrayItem.visual = {
            display: arrayItem.display,
            letter: arrayItem.letter,
            image: '',
            icon: arrayItem.icon
          };
          delete arrayItem.display;
          delete arrayItem.letter;
          delete arrayItem.icon;
          if (arrayItem.visual.letter == null) {
            arrayItem.visual.letter = '';
          };
          if (arrayItem.visual.icon.label == null) {
            arrayItem.visual.icon.label = '';
          };
          if (arrayItem.visual.icon.name == null) {
            arrayItem.visual.icon.name = '';
          };
          if (arrayItem.visual.icon.prefix == null) {
            arrayItem.visual.icon.prefix = '';
          };

        });
      });
      data.state.header.color.hsl = {
        h: 0,
        s: 0,
        l: 0
      };
      data.state.link.item.color = {
        hsl: {
          h: 0,
          s: 0,
          l: 0
        },
        rgb: {
          r: 0,
          g: 0,
          b: 0
        }
      };
      data.state.link.item.accent = {
        hsl: {
          h: 0,
          s: 0,
          l: 0
        },
        rgb: {
          r: 0,
          g: 0,
          b: 0
        }
      };
      data.state.link.item.display.visual = data.state.link.item.display.letcon;
      delete data.state.link.item.display.letcon;
      data.state.link.item.display.visual.image = {
        size: 3
      };
      if (data.state.link.item.display.order == 'letconname') {
        data.state.link.item.display.order = 'visualname';
      } else if (data.state.link.item.display.order == 'nameletcon') {
        data.state.link.item.display.order = 'namevisual';
      };
      data.state.background.color.hsl = {
        h: 0,
        s: 0,
        l: 0
      };
      data.state.header.search.engine.custom.queryName = '';
      data.state.link.item.display.visual.shadow = {
        size: 0
      };
      return data;
    },
    '5.42.1': function(data) {
      if (data.state.link.item.display.order == 'letconname') {
        data.state.link.item.display.order = 'visualname';
      } else if (data.state.link.item.display.order == 'nameletcon') {
        data.state.link.item.display.order = 'namevisual';
      };
      return data;
    },
    '5.44.0': function(data) {
      data.state.link.item.color.opacity = data.state.link.item.opacity;
      delete data.state.link.item.opacity;
      data.state.link.item.image = {
        opacity: 1
      };
      return data;
    },
    '5.46.0': function(data) {
      data.bookmarks.forEach(function(arrayItem, index) {
        arrayItem.items.forEach(function(arrayItem, index) {
          arrayItem.wide = false;
          arrayItem.tall = false;
        });
      });
      data.state.link.breakpoint = 'xs';
      return data;
    },
    '5.50.0': function(data) {
      data.bookmarks.forEach(function(group, index) {
        group.items.forEach(function(item, index) {
          var bookmarkData = {
            display: {
              direction: data.state.link.item.display.direction,
              order: data.state.link.item.display.order,
              alignment: data.state.link.item.display.alignment,
              gutter: data.state.link.item.display.gutter,
              rotate: data.state.link.item.display.rotate,
              translate: {
                x: data.state.link.item.display.translate.x,
                y: data.state.link.item.display.translate.y
              },
              visual: {
                show: data.state.link.item.display.visual.show,
                type: item.visual.display,
                letter: {
                  size: data.state.link.item.display.visual.letter.size,
                  text: item.visual.letter
                },
                image: {
                  size: data.state.link.item.display.visual.image.size,
                  url: item.visual.image
                },
                icon: {
                  size: data.state.link.item.display.visual.icon.size,
                  name: item.visual.icon.name,
                  prefix: item.visual.icon.prefix,
                  label: item.visual.icon.label
                },
                shadow: {
                  size: data.state.link.item.display.visual.shadow.size
                }
              },
              name: {
                show: data.state.link.item.display.name.show,
                text: item.name,
                size: data.state.link.item.display.name.size
              }
            },
            url: item.url,
            accent: {
              by: item.accent.by,
              hsl: {
                h: item.accent.hsl.h,
                s: item.accent.hsl.s,
                l: item.accent.hsl.l
              },
              rgb: {
                r: item.accent.rgb.r,
                g: item.accent.rgb.g,
                b: item.accent.rgb.b
              }
            },
            color: {
              by: item.color.by,
              hsl: {
                h: item.color.hsl.h,
                s: item.color.hsl.s,
                l: item.color.hsl.l
              },
              rgb: {
                r: item.color.rgb.r,
                g: item.color.rgb.g,
                b: item.color.rgb.b
              },
              opacity: data.state.link.item.color.opacity
            },
            image: {
              url: item.image,
              opacity: data.state.link.item.image.opacity
            },
            wide: item.wide,
            tall: item.tall,
            searchMatch: false,
            timeStamp: item.timeStamp
          };

          if ((bookmarkData.display.direction != 'vertical' && bookmarkData.display.direction != 'horizontal') || bookmarkData.display.direction == undefined) {
            bookmarkData.display.direction = 'vertical';
          };
          if ((bookmarkData.display.order != 'visualname' && bookmarkData.display.order != 'namevisual') || bookmarkData.display.order == undefined) {
            bookmarkData.display.order = 'visualname';
          };
          if ((bookmarkData.display.alignment != 'topleft' && bookmarkData.display.alignment != 'topcenter' && bookmarkData.display.alignment != 'topright' && bookmarkData.display.alignment != 'centerleft' && bookmarkData.display.alignment != 'centercenter' && bookmarkData.display.alignment != 'centerright' && bookmarkData.display.alignment != 'bottomleft' && bookmarkData.display.alignment != 'bottomcenter' && bookmarkData.display.alignment != 'bottomright') || bookmarkData.display.alignment == undefined) {
            bookmarkData.display.alignment = 'centercenter';
          };
          if (typeof bookmarkData.display.gutter != 'number' || bookmarkData.display.gutter == undefined) {
            bookmarkData.display.gutter = 2;
          };
          if (typeof bookmarkData.display.rotate != 'number' || bookmarkData.display.rotate == undefined) {
            bookmarkData.display.rotate = 0;
          };
          if (typeof bookmarkData.display.translate.x != 'number' || bookmarkData.display.translate.x == undefined) {
            bookmarkData.display.translate.x = 0;
          };
          if (typeof bookmarkData.display.translate.y != 'number' || bookmarkData.display.translate.y == undefined) {
            bookmarkData.display.translate.y = 0;
          };
          if (bookmarkData.display.visual.show == undefined) {
            bookmarkData.display.visual.show = true;
          };
          if ((bookmarkData.display.visual.type != 'letter' && bookmarkData.display.visual.type != 'icon' && bookmarkData.display.visual.type != 'image') || bookmarkData.display.visual.type == undefined) {
            bookmarkData.display.visual.type = 'letter';
          };
          if (typeof bookmarkData.display.visual.letter.size != 'number' || bookmarkData.display.visual.letter.size == undefined) {
            bookmarkData.display.visual.letter.size = 3;
          };
          if (bookmarkData.display.visual.letter.text == undefined) {
            bookmarkData.display.visual.letter.text = '';
          };
          if (typeof bookmarkData.display.visual.image.size != 'number' || bookmarkData.display.visual.image.size == undefined) {
            bookmarkData.display.visual.image.size = 3;
          };
          if (bookmarkData.display.visual.image.url == undefined) {
            bookmarkData.display.visual.image.url = '';
          };
          if (typeof bookmarkData.display.visual.icon.size != 'number' || bookmarkData.display.visual.icon.size == undefined) {
            bookmarkData.display.visual.icon.size = 3;
          };
          if (bookmarkData.display.visual.icon.name == undefined) {
            bookmarkData.display.visual.icon.name = '';
          };
          if (bookmarkData.display.visual.icon.prefix == undefined) {
            bookmarkData.display.visual.icon.prefix = '';
          };
          if (bookmarkData.display.visual.icon.label == undefined) {
            bookmarkData.display.visual.icon.label = '';
          };
          if (typeof bookmarkData.display.visual.shadow.size != 'number' || bookmarkData.display.visual.shadow.size == undefined) {
            bookmarkData.display.visual.shadow.size = 0;
          };
          if (bookmarkData.display.name.show == undefined) {
            bookmarkData.display.name.show = true;
          };
          if (bookmarkData.display.name.text == undefined) {
            bookmarkData.display.name.text = '';
          };
          if (typeof bookmarkData.display.name.size != 'number' || bookmarkData.display.name.size == undefined) {
            bookmarkData.display.name.size = 0.9;
          };
          if (bookmarkData.url == undefined) {
            bookmarkData.url = '';
          };
          if ((bookmarkData.accent.by != 'theme' && bookmarkData.accent.by != 'custom') || bookmarkData.accent.by == undefined) {
            bookmarkData.accent.by = 'theme';
          };
          if (typeof bookmarkData.accent.hsl.h != 'number' || bookmarkData.accent.hsl.h == undefined) {
            bookmarkData.accent.hsl.h = 0;
          };
          if (typeof bookmarkData.accent.hsl.s != 'number' || bookmarkData.accent.hsl.s == undefined) {
            bookmarkData.accent.hsl.s = 0;
          };
          if (typeof bookmarkData.accent.hsl.l != 'number' || bookmarkData.accent.hsl.l == undefined) {
            bookmarkData.accent.hsl.l = 0;
          };
          if (typeof bookmarkData.accent.rgb.r != 'number' || bookmarkData.accent.rgb.r == undefined) {
            bookmarkData.accent.rgb.r = 0;
          };
          if (typeof bookmarkData.accent.rgb.g != 'number' || bookmarkData.accent.rgb.g == undefined) {
            bookmarkData.accent.rgb.g = 0;
          };
          if (typeof bookmarkData.accent.rgb.b != 'number' || bookmarkData.accent.rgb.b == undefined) {
            bookmarkData.accent.rgb.b = 0;
          };
          if ((bookmarkData.color.by != 'theme' && bookmarkData.color.by != 'custom') || bookmarkData.color.by == undefined) {
            bookmarkData.color.by = 'theme';
          };
          if (typeof bookmarkData.color.hsl.h != 'number' || bookmarkData.color.hsl.h == undefined) {
            bookmarkData.color.hsl.h = 0;
          };
          if (typeof bookmarkData.color.hsl.s != 'number' || bookmarkData.color.hsl.s == undefined) {
            bookmarkData.color.hsl.s = 0;
          };
          if (typeof bookmarkData.color.hsl.l != 'number' || bookmarkData.color.hsl.l == undefined) {
            bookmarkData.color.hsl.l = 0;
          };
          if (typeof bookmarkData.color.rgb.r != 'number' || bookmarkData.color.rgb.r == undefined) {
            bookmarkData.color.rgb.r = 0;
          };
          if (typeof bookmarkData.color.rgb.g != 'number' || bookmarkData.color.rgb.g == undefined) {
            bookmarkData.color.rgb.g = 0;
          };
          if (typeof bookmarkData.color.rgb.b != 'number' || bookmarkData.color.rgb.b == undefined) {
            bookmarkData.color.rgb.b = 0;
          };
          if (typeof bookmarkData.color.opacity != 'number' || bookmarkData.color.opacity == undefined) {
            bookmarkData.color.opacity = 1;
          };
          if (bookmarkData.image.url == undefined) {
            bookmarkData.image.url = '';
          };
          if (typeof bookmarkData.image.opacity != 'number' || bookmarkData.image.opacity == undefined) {
            bookmarkData.image.opacity = 1;
          };
          if (bookmarkData.wide == undefined) {
            bookmarkData.wide = false;
          };
          if (bookmarkData.tall == undefined) {
            bookmarkData.tall = false;
          };
          if (bookmarkData.searchMatch == undefined) {
            bookmarkData.searchMatch = false;
          };

          group.items[index] = bookmarkData;
        });
      });
      data.state.link.item.color.by = 'theme';
      data.state.link.item.accent.by = 'theme';
      delete data.state.link.item.display.visual.show;
      return data;
    },
    '5.74.0': function(data) {
      data.bookmarks.forEach(function(group, index) {
        group.items.forEach(function(item, index) {
          item.background = {
            show: false,
            type: 'image',
            opacity: item.image.opacity,
            image: {
              url: item.image.url
            },
            video: {
              url: ''
            }
          };
          if (item.image.url != '') {
            item.background.show = true;
          };
          delete item.image;
        });
      });
      data.state.link.item.background = data.state.link.item.image;
      delete data.state.link.item.image;
      return data;
    },
    '5.78.0': function(data) {
      var backgroundData = {
        show: data.state.background.image.show,
        type: 'video',
        image: {
          type: data.state.background.image.from,
          file: {
            name: data.state.background.image.file.name,
            data: data.state.background.image.file.data
          },
          url: data.state.background.image.url,
        },
        video: {
          url: ''
        },
        blur: data.state.background.image.blur,
        scale: data.state.background.image.scale,
        opacity: data.state.background.image.opacity,
        grayscale: data.state.background.image.grayscale,
        accent: data.state.background.image.accent,
        vignette: {
          opacity: data.state.background.image.vignette.opacity,
          start: data.state.background.image.vignette.start,
          end: data.state.background.image.vignette.end
        }
      };
      if (data.state.background.image.show) {
        backgroundData.type = 'image';
      };
      data.state.background.visual = backgroundData;
      delete data.state.background.image;
      return data;
    },
    '6.5.0': function(data) {
      data.state.header.greeting.custom = '';
      return data;
    }
  };
};



;// CONCATENATED MODULE: ./src/component/update/index.js





const update_update = {};

update_update.mod = updateLegacy.get();

update_update.mod['7.0.0'] = function(data) {

  data.state.header.order.splice(data.state.header.order.indexOf('editAdd'), 1);
  data.state.header.order.splice(data.state.header.order.indexOf('colorAccent'), 1);
  data.state.header.order.splice(data.state.header.order.indexOf('menu'), 1);

  data.state.header.greeting.size = data.state.header.greeting.size * 100;
  data.state.header.clock.size = data.state.header.clock.size * 100;
  data.state.header.transitional.size = data.state.header.transitional.size * 100;
  data.state.header.date.size = data.state.header.date.size * 100;
  data.state.header.search.size = data.state.header.search.size * 100;

  delete data.state.header.search.engine.google;
  delete data.state.header.search.engine.duckduckgo;
  delete data.state.header.search.engine.youtube;
  delete data.state.header.search.engine.giphy;
  delete data.state.header.search.engine.bing;

  delete data.state.header.radius;
  delete data.state.header.position;

  switch (data.state.header.date.format) {

    case 'datemonth':
      data.state.header.date.format = 'date-month';
      break;

    case 'monthdate':
      data.state.header.date.format = 'month-date';
      break;

  };

  data.state.header.order.push('toolbar');

  data.state.layout.padding = data.state.layout.padding * 10;

  data.state.layout.gutter = data.state.layout.gutter * 10;

  data.state.layout.size = data.state.layout.size * 100;

  data.state.layout.scrollbar = data.state.layout.scrollbars;
  delete data.state.layout.scrollbars;

  data.state.layout.overscroll = data.state.layout.scrollPastEnd;
  delete data.state.layout.scrollPastEnd;

  data.state.layout.area = {
    header: {
      width: data.state.header.area.width,
      justify: data.state.header.area.justify
    },
    bookmark: {
      width: data.state.link.area.width,
      justify: data.state.link.area.justify
    }
  };

  data.state.header.clock.hour = data.state.header.clock.hours;
  delete data.state.header.clock.hours;

  data.state.header.clock.minute = data.state.header.clock.minutes;
  delete data.state.header.clock.minutes;

  data.state.header.clock.second = data.state.header.clock.seconds;
  delete data.state.header.clock.seconds;

  delete data.state.header.area;

  let toolbarSize = data.state.header.menu.size * 100;

  if (toolbarSize < state.get.minMax().toolbar.size.min) {
    toolbarSize = state.get.minMax().toolbar.size.min;
  };

  data.state.toolbar = {
    location: 'header',
    position: 'bottom-right',
    size: toolbarSize,
    accent: { show: true },
    add: { show: true },
    edit: { show: true },
    newLine: data.state.header.menu.newLine
  };

  delete data.state.header.menu;

  delete data.state.header.colorAccent;
  delete data.state.header.editAdd;

  switch (data.state.layout.alignment) {
    case 'topleft':
      data.state.layout.alignment = 'top-left';
      break;

    case 'topcenter':
      data.state.layout.alignment = 'top-center';
      break;

    case 'topright':
      data.state.layout.alignment = 'top-right';
      break;

    case 'centerleft':
      data.state.layout.alignment = 'center-left';
      break;

    case 'centercenter':
      data.state.layout.alignment = 'center-center';
      break;

    case 'centerright':
      data.state.layout.alignment = 'center-right';
      break;

    case 'bottomleft':
      data.state.layout.alignment = 'bottom-left';
      break;

    case 'bottomcenter':
      data.state.layout.alignment = 'bottom-center';
      break;

    case 'bottomright':
      data.state.layout.alignment = 'bottom-right';
      break;

  };

  switch (data.state.layout.order) {

    case 'headerlink':
      data.state.layout.order = 'header-bookmark';
      break;

    case 'linkheader':
      data.state.layout.order = 'bookmark-header';
      break;

  };

  data.state.theme.opacity = { general: 100 };

  data.state.theme.group = { openAll: { opacity: data.state.group.openAll.opacity * 100 } };

  delete data.state.group.openAll.opacity;

  data.state.theme.toolbar = { opacity: 100 };

  data.state.theme.layout = { divider: { size: 0 } };

  data.state.theme.header = { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } };

  if (data.state.theme.header.color.show) {

    data.state.theme.header.color.by = data.state.header.color.by;

  };

  data.state.theme.header.color.hsl = data.state.header.color.hsl;

  data.state.theme.header.color.rgb = data.state.header.color.rgb;

  data.state.theme.header.color.opacity = data.state.header.color.opacity * 100;

  data.state.theme.header.search.opacity = data.state.header.search.opacity * 100;

  delete data.state.header.search.opacity;

  delete data.state.header.color;

  data.state.theme.bookmark = { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } };

  data.state.theme.background = data.state.background;

  delete data.state.background;

  data.state.theme.background.gradient = {
    angle: 160,
    start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
    end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
  };

  if (data.state.theme.background.visual.show) {

    switch (data.state.theme.background.visual.type) {
      case 'image':
        data.state.theme.background.type = 'image';
        break;

      case 'video':
        data.state.theme.background.type = 'video';
        break;
    };

  } else {

    if (data.state.theme.background.color.by === 'custom') {
      data.state.theme.background.type = 'color';
    } else {
      data.state.theme.background.type = 'theme';
    };

  };

  delete data.state.theme.background.color.by;

  delete data.state.theme.background.visual.image.file;

  data.state.theme.background.visual.image.blur = data.state.theme.background.visual.blur;
  data.state.theme.background.visual.image.opacity = data.state.theme.background.visual.opacity * 100;
  data.state.theme.background.visual.image.scale = data.state.theme.background.visual.scale * 100;
  data.state.theme.background.visual.image.grayscale = data.state.theme.background.visual.grayscale * 100;
  data.state.theme.background.visual.image.accent = data.state.theme.background.visual.accent * 100;
  data.state.theme.background.visual.image.vignette = data.state.theme.background.visual.vignette;

  data.state.theme.background.visual.video.blur = data.state.theme.background.visual.blur;
  data.state.theme.background.visual.video.opacity = data.state.theme.background.visual.opacity * 100;
  data.state.theme.background.visual.video.scale = data.state.theme.background.visual.scale * 100;
  data.state.theme.background.visual.video.grayscale = data.state.theme.background.visual.grayscale * 100;
  data.state.theme.background.visual.video.accent = data.state.theme.background.visual.accent * 100;
  data.state.theme.background.visual.video.vignette = data.state.theme.background.visual.vignette;

  data.state.theme.background.image = data.state.theme.background.visual.image;
  data.state.theme.background.video = data.state.theme.background.visual.video;

  delete data.state.theme.background.visual;

  data.state.theme.radius = data.state.theme.radius * 100;
  data.state.theme.shadow = data.state.theme.shadow * 100;

  data.state.theme.color.shades = 14;

  data.state.theme.color.range = {
    primary: {
      h: data.state.theme.color.hsl.h,
      s: data.state.theme.color.hsl.s
    }
  };

  let l = data.state.theme.color.hsl.l;

  let contrastStart = l - (data.state.theme.color.contrast.dark * 10);

  let contrastEnd = l + (data.state.theme.color.contrast.light * 10);

  data.state.theme.color.contrast = {
    start: Math.round(contrastStart),
    end: Math.round(contrastEnd)
  };

  if (data.state.theme.color.contrast.end <= data.state.theme.color.contrast.start) {
    data.state.theme.color.contrast.end = data.state.theme.color.contrast.start + 10;
  };

  if (data.state.theme.color.contrast.start > state.get.minMax().theme.color.contrast.start.max) {

    data.state.theme.color.contrast.start = state.get.minMax().theme.color.contrast.start.max;

  } else if (data.state.theme.color.contrast.start < state.get.minMax().theme.color.contrast.start.min) {

    data.state.theme.color.contrast.start = state.get.minMax().theme.color.contrast.start.min;

  };

  if (data.state.theme.color.contrast.end > state.get.minMax().theme.color.contrast.end.max) {

    data.state.theme.color.contrast.end = state.get.minMax().theme.color.contrast.end.max;

  } else if (data.state.theme.color.contrast.end < state.get.minMax().theme.color.contrast.end.min) {

    data.state.theme.color.contrast.end = state.get.minMax().theme.color.contrast.end.min;

  };

  data.state.theme.shade.opacity = data.state.theme.shade.opacity * 100;
  data.state.theme.shade.blur = 0;

  delete data.state.theme.color.hsl;
  delete data.state.theme.color.rgb;
  delete data.state.theme.color.generated;

  data.state.theme.custom.all.forEach((item, i) => {

    item.color.range = {
      primary: {
        h: item.color.hsl.h,
        s: item.color.hsl.s
      }
    };

    if (item.color.contrast.light > item.color.contrast.dark) {

      item.color.contrast = {
        start: Math.ceil((item.color.hsl.l * item.color.contrast.dark) / 10),
        end: Math.ceil((item.color.hsl.l * item.color.contrast.light) / 3)
      };

    } else if (item.color.contrast.light < item.color.contrast.dark) {

      item.color.contrast = {
        start: Math.ceil((item.color.hsl.l * item.color.contrast.light) / 10),
        end: Math.ceil((item.color.hsl.l * item.color.contrast.dark) / 3)
      };

    } else {

      item.color.contrast = {
        start: Math.ceil((item.color.contrast.light) * 4),
        end: Math.ceil((item.color.contrast.dark) * 16)
      };

    };

    if (item.color.contrast.end <= item.color.contrast.start) {
      item.color.contrast.end = item.color.contrast.start + 1;
    };

    if (item.color.contrast.start > state.get.minMax().theme.color.contrast.start.max) {

      item.color.contrast.start = state.get.minMax().theme.color.contrast.start.max;

    } else if (item.color.contrast.start < state.get.minMax().theme.color.contrast.start.min) {

      item.color.contrast.start = state.get.minMax().theme.color.contrast.start.min;

    };

    if (item.color.contrast.end > state.get.minMax().theme.color.contrast.end.max) {

      item.color.contrast.end = state.get.minMax().theme.color.contrast.end.max;

    } else if (item.color.contrast.end < state.get.minMax().theme.color.contrast.end.min) {

      item.color.contrast.end = state.get.minMax().theme.color.contrast.end.min;

    };

    delete item.color.hsl;
    delete item.color.rgb;
    delete item.color.generated;

    item.radius = item.radius * 100;

    item.shadow = item.shadow * 100;

    if (item.shade) {
      item.shade.opacity = item.shade.opacity * 100;
    } else {
      item.shade = {
        opacity: 20
      };
    };

    item.shade.blur = 0;

    item.background = {
      type: 'theme',
      color: { hsl: { h: 221, s: 47, l: 17 }, rgb: { r: 23, g: 36, b: 64 } },
      gradient: {
        angle: 160,
        start: { hsl: { h: 206, s: 16, l: 40 }, rgb: { r: 86, g: 104, b: 118 } },
        end: { hsl: { h: 219, s: 28, l: 12 }, rgb: { r: 22, g: 28, b: 39 } }
      },
      image: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100 },
      video: { url: '', blur: 0, grayscale: 0, scale: 100, accent: 0, opacity: 100 }
    };

    item.layout = { divider: { size: 0 } };

    item.opacity = { general: 100 };

    item.group = { openAll: { opacity: 100 } };

    item.toolbar = { opacity: 100 };

    item.header = { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, search: { opacity: 100 } };

    item.bookmark = { color: { by: 'theme', opacity: 10, hsl: { h: 0, s: 0, l: 0 }, rgb: { r: 0, g: 0, b: 0 } }, item: { border: 0, opacity: 100 } };

  });

  data.state.theme.custom.all.push(JSON.parse(JSON.stringify({
    name: 'My custom theme',
    color: data.state.theme.color,
    accent: { hsl: data.state.theme.accent.hsl, rgb: data.state.theme.accent.rgb },
    font: data.state.theme.font,
    background: data.state.theme.background,
    radius: data.state.theme.radius,
    shadow: data.state.theme.shadow,
    style: data.state.theme.style,
    shade: data.state.theme.shade,
    opacity: data.state.theme.opacity,
    layout: data.state.theme.layout,
    header: data.state.theme.header,
    bookmark: data.state.theme.bookmark,
    group: data.state.theme.group,
    toolbar: data.state.theme.toolbar,
  })));

  switch (data.state.group.order) {

    case 'headerbody':
      data.state.group.order = 'header-body';
      break;

    case 'bodyheader':
      data.state.group.order = 'body-header';
      break;

  };

  data.state.group.name.size = data.state.group.name.size * 100;
  data.state.group.openAll.size = data.state.group.openAll.size * 100;

  delete data.state.group.border;

  data.state.bookmark = data.state.link;
  data.state.bookmark.url = data.state.link.item.url;
  data.state.bookmark.line = data.state.link.item.line;
  data.state.bookmark.shadow = data.state.link.item.shadow;
  data.state.bookmark.hoverScale = data.state.link.item.hoverScale;
  data.state.bookmark.size = data.state.link.item.size * 100;

  delete data.state.link;

  data.bookmark = data.bookmarks;

  delete data.bookmarks;

  data.bookmark.forEach((item, i) => {

    item.items.forEach((item, i) => {

      item.timestamp = item.timeStamp;

      delete item.timeStamp;

      item.border = data.state.bookmark.item.border;

      item.background.opacity = item.background.opacity * 100;

      switch (item.display.visual.type) {
        case 'letter':
          item.display.visual.size = item.display.visual.letter.size * 10;
          break;

        case 'icon':
          item.display.visual.size = item.display.visual.icon.size * 10;
          break;

        case 'image':
          item.display.visual.size = item.display.visual.image.size * 10;
          break;

      };

      delete item.display.visual.letter.size;
      delete item.display.visual.image.size;
      delete item.display.visual.icon.size;

      item.color.opacity = item.color.opacity * 100;

      item.display.name.size = item.display.name.size * 10;

      item.display.gutter = item.display.gutter * 10;

      switch (item.display.order) {
        case 'visualname':
          item.display.order = 'visual-name';
          break;

        case 'namevisual':
          item.display.order = 'name-visual';
          break;

      };

      switch (item.display.alignment) {
        case 'topleft':
          item.display.alignment = 'top-left';
          break;

        case 'topcenter':
          item.display.alignment = 'top-center';
          break;

        case 'topright':
          item.display.alignment = 'top-right';
          break;

        case 'centerleft':
          item.display.alignment = 'center-left';
          break;

        case 'centercenter':
          item.display.alignment = 'center-center';
          break;

        case 'centerright':
          item.display.alignment = 'center-right';
          break;

        case 'bottomleft':
          item.display.alignment = 'bottom-left';
          break;

        case 'bottomcenter':
          item.display.alignment = 'bottom-center';
          break;

        case 'bottomright':
          item.display.alignment = 'bottom-right';
          break;

      };

      item.shape = {
        wide: item.wide,
        tall: item.tall
      };

      delete item.wide;
      delete item.tall;

    });

  });

  delete data.state.bookmark.area;

  delete data.state.bookmark.item;

  delete data.state.bookmark.breakpoint;

  delete data.state.dropdown;

  return data;
};

update_update.run = (data) => {

  // loop over all updates in mod.all object
  for (var key in update_update.mod) {
    if (version.compare(data.version, key) == -1) {
      console.log('\t > running update', key);
      data = update_update.mod[key](data);
      data.version = key;
    };
  };

  // if no update is needed version bump
  if (version.compare(data.version, version.number) == -1) {
    console.log('\t > no state data to update, version bump to', version.number);
    data.version = version.number;
  };

  return data;

};



;// CONCATENATED MODULE: ./src/utility/dateTime.js
const dateTime = () => {

  const date = new Date();

  const month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

  return {
    // string: date.constructor(),
    // time: date.getTime(),
    date: date.getDate(),
    day: date.getDay(),
    year: date.getFullYear(),
    hours: date.getHours(),
    milliseconds: date.getMilliseconds(),
    minutes: date.getMinutes(),
    month: date.getMonth(),
    monthString: month[date.getMonth()],
    seconds: date.getSeconds()
  };

};

;// CONCATENATED MODULE: ./src/utility/isJson.js
const isJson = (string) => {

  try {
    JSON.parse(string);
  } catch (error) {
    return false;
  };

  return true;

};

;// CONCATENATED MODULE: ./src/component/data/index.js













const data = {};

data.set = (key, data) => {
  localStorage.setItem(key, data);
};

data.get = (key) => {
  return localStorage.getItem(key);
};

data.import = (input, feedback) => {
  const fileList = input.files;

  if (fileList.length > 0) {
    data.validateJsonFile(fileList, input, feedback);
  };
};

data.validateJsonFile = (fileList, input, feedback) => {

  // make new file reader
  var reader = new FileReader();

  // define the on load event for the reader
  reader.onload = (event) => {

    // is this a JSON file
    if (isJson(event.target.result)) {

      // is this JSON from this app
      if (JSON.parse(event.target.result)[appName] || JSON.parse(event.target.result)[appName.toLowerCase()]) {

        data.feedback.clear.render(feedback);

        data.feedback.success.render(feedback, fileList[0].name, () => {
          data.restore(JSON.parse(event.target.result));
          data.save();
          data.reload.render();
        });

        input.value = '';

      } else {

        data.feedback.clear.render(feedback);
        data.feedback.fail.notAppJson.render(feedback, fileList[0].name);
        input.value = '';

      };
    } else {

      // not a JSON file
      data.feedback.clear.render(feedback);
      data.feedback.fail.notJson.render(feedback, fileList[0].name);
      input.value = '';

    };

  };

  // invoke the reader
  reader.readAsText(fileList.item(0));

};

data.export = () => {
  let timestamp = dateTime();

  const leadingZero = (value) => {
    if (value < 10) {
      value = '0' + value;
    };
    return value;
  };

  timestamp.hours = leadingZero(timestamp.hours);
  timestamp.minutes = leadingZero(timestamp.minutes);
  timestamp.seconds = leadingZero(timestamp.seconds);
  timestamp.date = leadingZero(timestamp.date);
  timestamp.month = leadingZero(timestamp.month + 1);
  timestamp.year = leadingZero(timestamp.year);
  timestamp = timestamp.year + '.' + timestamp.month + '.' + timestamp.date + ' - ' + timestamp.hours + ' ' + timestamp.minutes + ' ' + timestamp.seconds;

  const fileName = appName + ' backup - ' + timestamp + '.json';

  const dataToExport = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(data.load()));

  const link = document.createElement('a');

  link.setAttribute('href', dataToExport);

  link.setAttribute('download', fileName);

  link.addEventListener('click', () => { link.remove(); });

  document.querySelector('body').appendChild(link);

  link.click();
};

data.remove = (key) => {
  localStorage.removeItem(key);
};

data.backup = (dataToBackup) => {
  if (dataToBackup) {
    console.log('data version ' + dataToBackup.version + ' backed up');
    data.set(appName + 'Backup', JSON.stringify(dataToBackup));
  };
};

data.restore = (dataToRestore) => {
  if (dataToRestore) {
    if (dataToRestore.version != version.number) {
      // backup save data before running update
      data.backup(dataToRestore);
      // run update on save data
      dataToRestore = update_update.run(dataToRestore);
      // save data
      data.set(appName, JSON.stringify(dataToRestore));
    } else {
      console.log('data version:', version.number, 'no need to run update');
    };
    // restore state and bookmarks from save data
    state.set.restore(dataToRestore);
    bookmark_bookmark.restore(dataToRestore);
  } else {
    console.log('no data found to load');
    state.set.default();
  };
};

data.save = () => {
  data.set(appName, JSON.stringify({
    [appName]: true,
    version: version.number,
    state: state.get.current(),
    bookmark: bookmark_bookmark.all
  }));
};

data.load = () => {
  if (data.get(appName) != null && data.get(appName) != undefined) {
    return JSON.parse(data.get(appName));
  } else {
    return false;
  };
};

data.wipe = () => {
  data.remove(appName);
  data.reload.render();
};

data.reload = {
  render: () => {
    location.reload();
  }
};

data.clear = {
  render: () => {

    const clearContent = node('div');

    const para1 = node('p:Are you sure you want to clear all ' + appName + ' Bookmarks and Settings? ' + appName + ' will be restore to the default state.');

    const para2 = node('p:This can not be undone.');

    clearContent.appendChild(para1);

    clearContent.appendChild(para2);

    const clearModal = new Modal({
      heading: 'Clear all ' + appName + ' data?',
      content: clearContent,
      successText: 'Clear all data',
      width: 'small',
      successAction: () => {
        data.wipe();
      }
    });

    clearModal.open();

  }
};

data.feedback = {};

data.feedback.empty = {
  render: (feedback) => {
    feedback.appendChild(node('p:No JSON file selected.|class:muted small'));
  }
};

data.feedback.clear = {
  render: (feedback) => {
    clearChildNode(feedback);
  }
};

data.feedback.success = {
  render: (feedback, filename, action) => {
    feedback.appendChild(node('p:Success! Restoring ' + appName + ' Bookmarks and Settings.|class:muted small'));
    feedback.appendChild(node('p:' + filename));
    if (action) {
      data.feedback.animation.set.render(feedback, 'is-pop', action);
    };
  }
};

data.feedback.fail = {
  notJson: {
    render: (feedback, filename) => {
      feedback.appendChild(node('p:Not a JSON file. Make sure the selected file came from ' + appName + '.|class:small muted'));
      feedback.appendChild(node('p:' + filename));
      data.feedback.animation.set.render(feedback, 'is-shake');
    }
  },
  notAppJson: {
    render: (feedback, filename) => {
      feedback.appendChild(node('p:Not the right kind of JSON file. Make sure the selected file came from ' + appName + '.|class:small muted'));
      feedback.appendChild(node('p:' + filename));
      data.feedback.animation.set.render(feedback, 'is-shake');
    }
  }
};

data.feedback.animation = {
  set: {
    render: (feedback, animationClass, action) => {
      feedback.classList.add(animationClass);

      const animationEndAction = () => {
        if (action) {
          action();
        };
        data.feedback.animation.reset.render(feedback);
      };

      feedback.addEventListener('animationend', animationEndAction);
    }
  },
  reset: {
    render: (feedback) => {
      feedback.classList.remove('is-shake');
      feedback.classList.remove('is-pop');
      feedback.classList.remove('is-jello');
      feedback.removeEventListener('animationend', data.feedback.animation.reset.render);
    }
  }
};

data.init = () => {
  data.restore(data.load());
};



// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/modal/index.css
var modal = __webpack_require__(4719);
;// CONCATENATED MODULE: ./src/component/modal/index.css

            

var modal_options = {};

modal_options.insert = "head";
modal_options.singleton = false;

var modal_update = injectStylesIntoStyleTag_default()(modal/* default */.Z, modal_options);



/* harmony default export */ const component_modal = (modal/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/modal/index.js















const Modal = function({
  heading = false,
  content = false,
  openAction = false,
  successText = 'OK',
  successAction = false,
  cancelText = 'Cancel',
  cancelAction = false,
  closeAction = false,
  size = 'medium',
  width = false,
  maxHeight = false,
  maxHeadingLength = 50
} = {}) {

  this.element = {
    modal: node('div|class:modal'),
    heading: {
      heading: node('div|class:modal-heading'),
      text: node('h1|class:modal-heading-text,tabindex:1')
    },
    content: {
      wrapper: node('div|class:modal-content-wrapper'),
      content: node('div|class:modal-content')
    },
    control: node('div|class:modal-control')
  };

  this.shade = new Shade();

  this.open = () => {

    state.get.current().modal = true;

    const body = document.querySelector('body');

    this.element.modal.classList.add('is-transparent');

    this.element.modal.addEventListener('transitionend', (event) => {

      if (event.propertyName === 'opacity' && getComputedStyle(this.element.modal).opacity == 0) {

        body.removeChild(this.element.modal);

      };

    });

    this.shade.open();

    this.style();

    this.assemble();

    body.appendChild(this.element.modal);

    getComputedStyle(this.element.modal).opacity;

    this.element.modal.classList.remove('is-transparent');

    this.element.modal.classList.add('is-opaque');

    this.bind.add();

    this.focus.set();

    if (openAction) {
      openAction();
    };

    pageLock.render();

  };

  this.close = () => {

    state.get.current().modal = false;

    this.element.modal.classList.remove('is-opaque');

    this.element.modal.classList.add('is-transparent');

    this.bind.remove();

    this.shade.close();

    if (closeAction) {
      closeAction();
    };

    clearTimeout(this.delayedForceRemove);

    this.delayedForceRemove = setTimeout(() => {

      const body = document.querySelector('body');

      if (body.contains(this.element.modal)) {
        body.removeChild(this.element.modal)
      };

    }, 6000);

    pageLock.render();

  };

  this.delayedForceRemove = null;

  this.bind = {
    add: () => {

      window.addEventListener('mouseup', this.clickOut);

      window.addEventListener('keydown', this.focus.loop);

      this.esc.add();

      this.ctrAltM.add();

      this.ctrAltG.add();

      this.ctrAltA.add();

    },
    remove: () => {

      window.removeEventListener('mouseup', this.clickOut);

      window.removeEventListener('keydown', this.focus.loop);

      this.esc.remove();

      this.ctrAltM.remove();

      this.ctrAltG.remove();

      this.ctrAltA.remove();

    }
  };

  this.esc = new KeyboardShortcut({ keycode: 27, action: () => { this.close(); } });

  this.ctrAltM = new KeyboardShortcut({ keycode: 77, ctrl: true, alt: true, action: () => { this.close(); } });

  this.ctrAltG = new KeyboardShortcut({ keycode: 71, ctrl: true, alt: true, action: () => { this.close(); } });

  this.ctrAltA = new KeyboardShortcut({ keycode: 65, ctrl: true, alt: true, action: () => { this.close(); } });

  this.clickOut = (event) => {

    const path = event.path || (event.composedPath && event.composedPath());

    const suggest = document.querySelector('.suggest');

    if (!path.includes(this.element.modal) && !path.includes(suggest)) {
      this.close();
    };

  };

  this.focus = {
    set: () => {
      this.element.heading.text.focus();
    },
    loop: (event) => {

      const allFocusElement = document.querySelector('.modal').querySelectorAll('[tabindex]');

      if (allFocusElement.length > 0) {

        const firstElement = allFocusElement[0];

        const lastElement = allFocusElement[allFocusElement.length - 1];

        if (event.keyCode == 9 && event.shiftKey) {

          if (document.activeElement === firstElement) {
            lastElement.focus();

            event.preventDefault();
          }

        } else if (event.keyCode == 9) {

          if (document.activeElement === lastElement) {
            firstElement.focus();

            event.preventDefault();
          }

        };

      };


    }
  };

  this.style = () => {
    if (typeof width === 'number') {

      this.element.modal.style.setProperty('--modal-width', width);

    } else {

      switch (width) {
        case 'small':
          this.element.modal.style.setProperty('--modal-width', 30);
          break;

        default:
        case 'medium':
          this.element.modal.style.setProperty('--modal-width', 50);
          break;

        case 'large':
          this.element.modal.style.setProperty('--modal-width', 70);
          break;

      };

    };
  };

  this.successButton = new Button({
    text: successText,
    block: false,
    style: ['line'],
    classList: ['modal-control-button'],
    func: () => {

      if (successAction) {
        successAction();
      };

      this.close();

    }
  });

  this.cancelButton = new Button({
    text: cancelText,
    block: false,
    style: ['line'],
    classList: ['modal-control-button'],
    func: () => {

      if (cancelAction) {
        cancelAction();
      };

      this.close();

    }
  });

  this.assemble = () => {

    if (heading && isValidString(heading)) {

      let headingString = heading;

      if (headingString.length > maxHeadingLength) {
        headingString = trimString(headingString.substring(0, maxHeadingLength)) + '...';
      };

      this.element.heading.text.innerHTML = headingString;

      this.element.heading.heading.appendChild(this.element.heading.text);

      this.element.content.content.appendChild(this.element.heading.heading);

    };

    if (content) {
      if (typeof content == 'string') {

        const para = complexNode({ tag: 'p', text: content });

        this.element.content.content.appendChild(para);

      } else {

        this.element.content.content.appendChild(content);

      };
    };

    this.element.content.wrapper.appendChild(this.element.content.content);

    this.element.modal.appendChild(this.element.content.wrapper);

    this.element.control.appendChild(this.cancelButton.button);

    this.element.control.appendChild(this.successButton.button);

    this.element.modal.appendChild(this.element.control);

    if (maxHeight) {
      this.element.modal.classList.add('modal-max-height');
    };

  };

  this.modal = () => {

    state.get.current().modal = false;

    return this.element.modal;

  };

};

// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/base/index.css
var base = __webpack_require__(8179);
;// CONCATENATED MODULE: ./src/component/base/base/index.css

            

var base_options = {};

base_options.insert = "head";
base_options.singleton = false;

var base_update = injectStylesIntoStyleTag_default()(base/* default */.Z, base_options);



/* harmony default export */ const base_base = (base/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/font/index.css
var font = __webpack_require__(4548);
;// CONCATENATED MODULE: ./src/component/base/font/index.css

            

var font_options = {};

font_options.insert = "head";
font_options.singleton = false;

var font_update = injectStylesIntoStyleTag_default()(font/* default */.Z, font_options);



/* harmony default export */ const base_font = (font/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/animation/index.css
var animation = __webpack_require__(7208);
;// CONCATENATED MODULE: ./src/component/base/animation/index.css

            

var animation_options = {};

animation_options.insert = "head";
animation_options.singleton = false;

var animation_update = injectStylesIntoStyleTag_default()(animation/* default */.Z, animation_options);



/* harmony default export */ const base_animation = (animation/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/spacing/index.css
var spacing = __webpack_require__(4325);
;// CONCATENATED MODULE: ./src/component/base/spacing/index.css

            

var spacing_options = {};

spacing_options.insert = "head";
spacing_options.singleton = false;

var spacing_update = injectStylesIntoStyleTag_default()(spacing/* default */.Z, spacing_options);



/* harmony default export */ const base_spacing = (spacing/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/state/index.css
var base_state = __webpack_require__(5000);
;// CONCATENATED MODULE: ./src/component/base/state/index.css

            

var state_options = {};

state_options.insert = "head";
state_options.singleton = false;

var state_update = injectStylesIntoStyleTag_default()(base_state/* default */.Z, state_options);



/* harmony default export */ const component_base_state = (base_state/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/typography/index.css
var typography = __webpack_require__(5327);
;// CONCATENATED MODULE: ./src/component/base/typography/index.css

            

var typography_options = {};

typography_options.insert = "head";
typography_options.singleton = false;

var typography_update = injectStylesIntoStyleTag_default()(typography/* default */.Z, typography_options);



/* harmony default export */ const base_typography = (typography/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/version/index.css
var base_version = __webpack_require__(4975);
;// CONCATENATED MODULE: ./src/component/base/version/index.css

            

var version_options = {};

version_options.insert = "head";
version_options.singleton = false;

var version_update = injectStylesIntoStyleTag_default()(base_version/* default */.Z, version_options);



/* harmony default export */ const component_base_version = (base_version/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/zindex/index.css
var zindex = __webpack_require__(710);
;// CONCATENATED MODULE: ./src/component/base/zindex/index.css

            

var zindex_options = {};

zindex_options.insert = "head";
zindex_options.singleton = false;

var zindex_update = injectStylesIntoStyleTag_default()(zindex/* default */.Z, zindex_options);



/* harmony default export */ const base_zindex = (zindex/* default.locals */.Z.locals || {});
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./src/component/base/utility/index.css
var utility = __webpack_require__(6368);
;// CONCATENATED MODULE: ./src/component/base/utility/index.css

            

var utility_options = {};

utility_options.insert = "head";
utility_options.singleton = false;

var utility_update = injectStylesIntoStyleTag_default()(utility/* default */.Z, utility_options);



/* harmony default export */ const base_utility = (utility/* default.locals */.Z.locals || {});
;// CONCATENATED MODULE: ./src/component/base/index.js










const component_base_base = {};

;// CONCATENATED MODULE: ./src/component/keyboard/index.js












const keyboard = {};

keyboard.esc = new KeyboardShortcut({
  keycode: 27,
  action: () => {
    if (state.get.current().bookmark.edit && !state.get.current().modal && !state.get.current().menu) {
      bookmark_bookmark.edit.close();
      toolbar.current.update.edit();
    };
    data.save();
  }
});

keyboard.ctrAltD = new KeyboardShortcut({
  keycode: 68,
  ctrl: true,
  alt: true,
  action: () => {
    theme_theme.style.toggle();
    if (themeSetting.control.style.update) {
      themeSetting.control.style.update();
    };
    data.save();
  }
});

keyboard.ctrAltA = new KeyboardShortcut({
  keycode: 65,
  ctrl: true,
  alt: true,
  action: () => {
    if (!state.get.current().bookmark.add) {
      bookmark_bookmark.add.render();
    };
  }
});

keyboard.ctrAltE = new KeyboardShortcut({
  keycode: 69,
  ctrl: true,
  alt: true,
  action: () => {
    bookmark_bookmark.edit.toggle();
    component_group_group.edit.toggle();
    header_header.edit.toggle();
    toolbar.current.update.edit();
    data.save();
  }
});

keyboard.ctrAltG = new KeyboardShortcut({
  keycode: 71,
  ctrl: true,
  alt: true,
  action: () => {
    if (!state.get.current().group.add) {
      component_group_group.add.render();
    };
    data.save();
  }
});

keyboard.ctrAltM = new KeyboardShortcut({
  keycode: 77,
  ctrl: true,
  alt: true,
  action: () => {
    menu.toggle();
  }
});

keyboard.init = () => {
  keyboard.esc.add();
  keyboard.ctrAltA.add();
  keyboard.ctrAltE.add();
  keyboard.ctrAltD.add();
  keyboard.ctrAltG.add();
  keyboard.ctrAltM.add();
};



;// CONCATENATED MODULE: ./src/component/index.js

















































const component = {
  appName: appName,
  base: component_base_base,
  state: state,
  data: data,
  version: version,
  fontawesome: fontawesome_fontawesome,
  icon: icon_icon,
  keyboard: keyboard,
  layout: layout_layout,
  link: link_link,
  logo: logo_logo,
  menu: menu,
  pageLock: pageLock,
  theme: theme_theme,
  update: update_update,
  bookmark: bookmark_bookmark,
  header: header_header,
  group: component_group_group,
  form: component_form_namespaceObject,
  toolbar: toolbar,
  groupAndBookmark: groupAndBookmark
};

;// CONCATENATED MODULE: ./src/index.js


console.log(component.appName + ' version:', component.version.number, component.version.name);

component.data.init();

component.theme.init();

component.layout.init();

component.toolbar.init();

component.header.init();

component.group.init();

component.bookmark.init();

component.groupAndBookmark.init();

component.pageLock.init();

component.keyboard.init();

component.menu.init();

// component.menu.open();

// document.addEventListener('focusin', () => { console.log('focused: ', document.activeElement); });

})();

/******/ })()
;